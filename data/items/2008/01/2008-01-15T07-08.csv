ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
98605,comment,98227,98227,0,0,nickb,,,"Try RLisp, <a href=""http://chaosforge.org/taw/rlisp/"" rel=""nofollow"">http://chaosforge.org/taw/rlisp/</a><p>""RLisp is a Lisp dialect naturally embedded in Ruby""",1200383988
98604,comment,98528,98575,0,0,eru,,,"Sorry.  What does 'HI' mean?",1200383777
98603,comment,98472,98472,0,0,eru,,,"I wonder where this would have lead had he been allowed to compete - and won.<p>Professional athletes are already crippling there bodies with drugs.  Would someone have deliberately and literaly crippled himself to get an edge (i.e. prosthetics)?<p>Professional sports make me sick.  They are selling their body.  I do have more understanding for prostitution than this.<p>(Nothing against double-amputee sprinter Oscar Pistorius - he just games the system - he surely did not set out to lose his legs in the first place.)",1200383614
98602,comment,98360,98586,0,0,soundsop,,,"BSD license allows you to re-use fixes of others (assuming they also release their fix under BSD), but it does not compel them them to reveal their fix if they distribute only a binary.<p>GPLv2 requires modified <i>public</i> distributions to also be under GPLv2, so you could both see the fix/change and use it (in the sense that you won't be infringing on copyright).<p>GPLv3 adds patent protection, so someone adding a fix/change that they have also patented explicitly grants a license for that patent.<p>I think GPLv3 is the most comprehensive way to keep fixes/changes of others available for reuse.",1200383160
98601,comment,98544,98544,0,0,eru,,,"Why use profanities - but then censor yourself in a transparent?",1200383018
98600,comment,98496,98496,0,0,eru,,,"Thanks for the update.  I briefly considered sending a mail.<p>But I guess sending something there to get notified will be a use of time if you already hang out on news.yc.",1200382967
98599,comment,98472,98523,0,0,eru,,,"Perhaps you had just bad timing, bad luck - or you should learn to write better titles?",1200382819
98598,comment,98516,98595,0,0,eru,,,"I guess computers will learn to bluff long before they learn to deceit.",1200382712
98597,comment,98360,98566,0,0,ivankirigin,,,"There is a difference between a language and its common idioms. ""Generator expressions"" is a good phrase to test how much people know. For example: <a href=""http://norvig.com/sudoku.html"" rel=""nofollow"">http://norvig.com/sudoku.html</a><p>Python can definitely fit in your head, as far as the language. Reading lots of code is a good way to learn the idioms.",1200382545
98596,comment,98158,98445,0,0,eru,,,"Yes.  And that is just the technical reason easily overcome.  There's also a 'common sense rule':<p>""The moderator has plenty of holes if you're acting in bad faith. But if you're doing that, why are you in the channel at all? Folks who persist in doing this anyway earn (like any spammers) a prompt manual ban.""",1200382429
98595,comment,98516,98516,0,0,ivankirigin,,,"Hype to get into the press is something that is really annoying about AI and robots. It would be great if people actually understood how most research just doesn't scale into the human analog. This line of research will NOT produce human-like robots that know the subtleties of deceit.<p>We're talking about ""robots with light sensors, rings of blue light, and wheels"". Ridiculous.",1200381979
98594,comment,98528,98528,0,0,reitzensteinm,,,"20x is ridiculous - it's far too <i>low</i>.<p>Look at the graph referenced - it describes, on a scale of hundreds of minutes, how long it took programmers to implement something to spec.<p>My biggest problem with this is the time scale. More advanced programmers build generalized solutions to problems and build on previous abstractions. There's no clear limit to how clever someone can be while building abstractions, so the gap between programmers will become greater over larger time periods.<p>Taking a sample of developers creating small, custom websites, better developers will have factored out a lot of functionality into a general purpose web development kit with metaprogramming by site #3 (i.e. created a Django, Rails).<p>Is it unreasonable to accept that:<p>1) Creating a site with a decent web tool kit is 20x faster than rolling your own with mod_python, and<p>2) Metaprogramming for creating an (elegant) web tool kit is beyond the abilities of a section of programmers?<p>Now, the barrier to picking up Django or Rails is much lower than writing one, so perhaps this advantage is somewhat less important in a world with open source and extensive libraries?<p>Well, I would argue that in a way, the efforts of the creators of Rails and Django have been multiplied so many times by all the users that they, in effect, have increased global productivity by a factor so large it dwarfs the productivity of a single programmer - so their 'productivity', as measured by the impact they have on the world, is a hell of a lot more than 20x the impact of Mr Blub programmer in the cubicle next door.<p>Why stop at frameworks? What about languages? What is Guido van Rossum's impact on global value delivered by programmers? What about the developers of the microchip? I'm pretty sure my personal productivity would be lower without that. The invention of the internet, which allowed for free sharing of knowledge? What would the productivity of a programmer who invents general purpose AI be? It really depends on how philosophical you want to get.<p>So, sure, the difference between developers creating an application to spec on the time scale of hundreds of minutes is unlikely to be 20x. But that's a garbage metric, and as always, GIGO.",1200381669
98593,comment,98528,98582,0,0,acgourley,,,"They would only be 20 times better or infinitely better at those particular tasks though.<p>That seems right to me, it seems like only really Hard problems allow people to show what they are made of, and the easier problems keep the pack more bunched together.<p>It's an important distinction, because a lot of programming is not of the demanding sort described above. It might even be that for some jobs, in some job markets, you don't want to try to hire the best. The cost in salary, recruitment, lost time and turn over might trump the 2-3x gain a top level programmer would offer in a non-challenging environment.",1200381023
98592,comment,98227,98435,0,0,chrisdone,,,"I am waiting to type:<p><pre><code>    darcs get http://ycombinator.com/arc</code></pre>",1200380417
