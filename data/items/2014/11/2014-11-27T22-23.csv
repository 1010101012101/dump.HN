ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
8669034,comment,8668680,8668890,0,0,Scramblejams,,,"Language wars in a nutshell. However, there is a significant contingent of C practitioners who delude themselves into thinking that they are good at writing secure code, when all the world&#x27;s evidence militates against them. Hopefully one day &quot;C Considered Harmful&quot; is a meme and we only use C, and its memory-unsafe friends, in hopefully increasingly rare places where absolutely nothing else will do.<p>We need to be realistic and admit C/C++ is part of the problem. The sooner everyone accepts that, the better.",1417129171
8669033,comment,8668680,8668963,0,0,pjmlp,,,"Historical accident. People choose C, because nowadays it happens to be everywhere, which eases porting but there are lots of languages that could be used instead, if people valued safety.",1417129166
8669032,comment,8668680,8668997,0,0,lincolnq,,,"Rust seems to me much more like Haskell than C or C++. Try thinking about it that way and see if it makes more sense.",1417129140
8669031,comment,8668271,8668397,0,0,ecspike,,,"VimOrganizer also REQUIRES a Emacs install for most interesting things.<p><a href=""https://github.com/hsitz/VimOrganizer/blob/master/INSTALL.txt#L51"" rel=""nofollow"">https://github.com/hsitz/VimOrganizer/blob/master/INSTALL.tx...</a>",1417129138
8669030,comment,8668680,8668897,0,0,Dewie,,,"> for some values of &quot;king&quot; perhaps - perhaps it&#x27;s faster to compile, but no arrays of varying ...<p>Well, let&#x27;s not change the goalpost - your initial assertion was that C has faster compile times. Then chances are that something&#x27;s got to give, whether that is in the grammar, declaration order, etc.",1417129095
8669029,comment,8668300,8668628,0,0,chriswarbo,,,"I agree. Not had chance to try eww yet.<p>One step up from Dillo is Netsurf, which seems to handle more CSS than Dillo but is still pretty snappy.",1417129090
8669027,comment,8668847,8668847,0,0,rwmj,,,"Nice - confuses XFCE as well: <a href=""http://oirase.annexia.org/tmp/hackernews.png"" rel=""nofollow"">http://oirase.annexia.org/tmp/hackernews.png</a>",1417129034
8669026,comment,8668680,8668680,0,0,byuu,,,"This last bit is so true:<p>> <i>I always have it in the back of my head that I want to make a slightly better C. Just to clean up some of the rough edges and fix some of the more egregious problems.</i><p>I&#x27;m always mulling over that. &quot;Maybe just namespaces, better macros, function overloading and member functions (eg this->) would work.&quot; Yet I&#x27;m sure Bjarne Stroustrup was thinking the same thing when he started on &quot;C with Classes.&quot; The power to add features must be so overwhelmingly corruptive. So justifiable in each and every case, in the moment. And then you just can&#x27;t stop. &quot;Closures would be helpful. I&#x27;d love to write generic containers. Inheritance would save so much typing.&quot;, and the next thing you know, you&#x27;re working on virtual inheritance, concepts and user-defined literals. :/<p>In my opinion, C really does need just a <i>bit</i> more to be great, but it would need someone with a will of steel to stop and leave things be after that.",1417129026
8669025,comment,8665865,8666900,0,0,jonawesomegreen,,,"This sounds very interesting. Any more details?",1417129020
8669024,comment,8668680,8668822,0,0,jeffreyrogers,,,"My impression of Rust is that it focuses too much on safety at the expense of making it hard to do what you want, especially when dealing with low level things.",1417129012
8669023,comment,8668300,8668912,0,0,chriswarbo,,,"> It&#x27;s always annoying when you attempt to click a link only to find it won&#x27;t work unless Javascript is enabled.<p>Ah, the number of times I&#x27;ve asked colleagues to stop doing this! If you want a JS-powered link/button/whatever on a page, insert it using JS; then you&#x27;re guaranteed that it will only show up for those who can use it.<p>Likewise, all togglable content should begin visible, and selectively-hidden by JS during page load; that way, it only gets hidden for those users capable of showing it again.<p>Also, although this is rarer, all work should be done in small, isolated event handlers. That way, when some unexpected situation arises (eg. the user is blocking your chosen spyware platform), that particular handler dies, but all of the rest keep working (eg. the button handlers, the slideshows, etc.).",1417129010
8669022,comment,8668271,8668398,0,0,ecspike,,,"I&#x27;ve written articles and scripts with it.<p>In grad school, its support for LaTeX was clutch in Algorithms class where all the assignments were laden with mathematical symbols.",1417128987
8669021,comment,8668680,8668947,0,0,Xorlev,,,"OCaml might be mainstream to armchair FP developers on HN and language theorists at Facebook, but it remains a fairly unpopular choice for developing software outside academia. Even Haskell is pretty unpopular relative to the amount of software developed daily.",1417128910
8669019,comment,8668680,8668991,0,0,jeffreyrogers,,,"Go is garbage collected though, and a lot of people using C don&#x27;t want a GC&#x27;d language. (It&#x27;s up for debate whether GC actually matters for most of them, but that&#x27;s the feeling nonetheless).<p>Edit: also, not sure why you were downvoted, since your question at least deserves a reasonable answer.",1417128869
8669018,comment,8668271,8668910,0,0,LiveTheDream,,,"You can export org mode files as HTML, PDF, LaTex, even iCalendar. Try C-c C-e to see options.",1417128865
8669016,comment,8668843,8668843,0,0,psgbg,,,"Relevant:<p>The Oracle: <i>We can never see past the choices we don&#x27;t understand.</i>",1417128845
8669015,comment,8665820,8667278,0,0,__luca,,,"Ya, me too. It&#x27;s also a very funny talk. :)",1417128801
8669014,comment,8664400,8666478,0,0,BrainInAJar,,,"They&#x27;re already accepting scams like bitcoin, why not accept the crytpocurrency that doesn&#x27;t try to pretend it isn&#x27;t a joke",1417128649
8669013,comment,8667689,8668562,0,0,diziet,,,"So your assessment is that 98% of the homeless have drug/alcohol problems or are homeless by &#x27;choice&#x27; ?",1417128631
8669012,comment,8664862,8666019,0,0,raquo,,,"> you are supposed to be paying tax to the US for any money earned from the US (even if you aren&#x27;t in the country)<p>Just note â€“ this can be overridden for some cases in US-<your_country> income tax treaty. For example certain kinds of remote work can often be taxed in the country where the remote worker is located, not US.",1417128613
8669011,comment,8668680,8668680,0,0,neutronicus,,,"Hmmm.  I work on a pretty large scientific computing project written in C++.  Complex numbers in C++ are much, much better than they are in C.  In general, I&#x27;m very happy it isn&#x27;t in C.",1417128604
8669010,comment,8668680,8668963,0,0,nl,,,"That&#x27;s so clearly false that it hardly deserves a response. I&#x27;m spending more time wondering if you are trolling that why you are wrong. But in case you aren&#x27;t trolling:<p>1) A <i>lot</i> of &quot;Python&quot; security vulnerabilities are caused by &quot;C&quot;-problems (overflow errors,  etc). [1] and [2] are a couple from this year.<p>2) You&#x27;d expect interpreting python to be more secure than C because the interpreter acts as a filter over input reducing the attack surface, meaning that potentially vulnerable paths are minimised are better tested than if an entire program was in C.<p>[1] <a href=""http://www.cvedetails.com/cve/CVE-2014-7185/"" rel=""nofollow"">http://www.cvedetails.com/cve/CVE-2014-7185/</a><p>[2] <a href=""http://www.cvedetails.com/cve/CVE-2014-1912/"" rel=""nofollow"">http://www.cvedetails.com/cve/CVE-2014-1912/</a>",1417128593
8669009,comment,8668680,8668680,0,0,arh68,,,"(2013)<p>First, I think the speed of C relies heavily on the compiler.  C is not fast, not if <i>I</i> wrote the compiler.  But GCC is very fast, and ICC at least as much.<p>I was a little confused by the Erlang wariness, but the reasoning seemed sound<p>> <i>At Couchbase we recently spent easily 2+ man/months dealing with a crash in the Erlang VM.  ... ...  it was a race condition bug in core Erlang. We only found the problem via code inspection of Erlang.</i><p>That does not sound like a fun time, but once the bug is fixed, what&#x27;s the big deal?  Is there good reason to believe more bugs will come?  It wasn&#x27;t my ass that got bitten but I&#x27;d forgive Linux even if it had a race condition bug. (or if it crashes touching 1000 files in /etc)",1417128514
8669008,comment,8666271,8668526,0,0,danieltillett,,,"Mattermark should not really worry about burn rate for this reason. It only has any revenue if the current funding party continues and if it does then they can continue to raise as much money as they like. If the market turns then their income will evaporate to nothing and burn rate will be the least of their worries.",1417128504
8669007,comment,8668680,8668963,0,0,Dewie,,,"What is the LOC for the CPython interpreter?<p>Now, what is the combined LOC for all Python code that uses the CPython interpreter (and those LOC are in a higher-level language).<p>Now compare that to the amount of C code that that would amount to if all of that code was written (or, tried to be written) in C instead.",1417128498
8669006,comment,8668787,8668787,0,0,maratd,,,"> console.log(x.size);<p>This is annoying. Is there some reason x.length wasn&#x27;t used?",1417128490
8669005,comment,8663349,8667492,0,0,kybernetikos,,,"The analogy is not chosen merely for being similar, but to fulfill a purpose.  It&#x27;s based on the idea that in the original puzzle what you are faced with is a choice between your original door, or all the other doors. That&#x27;s why you have a 1/3 or 2/3 chance of being right if you stick or switch respectively - because you are either choosing one door, or effectively two doors.  The host showing you whats behind a door is just an implementation detail that causes you to have a stick or switch decision that has that effect.  That&#x27;s why a nice analogy is one that gives you a choice between 1 door or 99 doors, i.e. a chance of 1/100 or 99/100 of winning.<p>Your variant is a valid analogy too, but the probabilities in your scenario between sticking and switching are so close to each other, it&#x27;s not going to trigger any new intuition in someone who is already confused.<p>Don&#x27;t think of the 100 door puzzle as an analogy with the 3 door puzzle, think of it as a class of puzzle where there are N doors, you can pick one, and then the host (who knows what&#x27;s behind the doors) reveals N-2 fails.  It&#x27;s clear that the 3 door puzzle is a specific instance of that, and if you have understood something intuitively about that puzzle class through considering N being a large number, that will still hold for N being a small number.<p>The class of puzzles that you describe is M doors, where you pick one and then the host (who knows what&#x27;s behind the doors) reveals one fail.  The three door puzzle is also a specific instance of that puzzle, but I doubt that you&#x27;ve learned anything from that, since examining M at other numbers probably hasn&#x27;t given you any insight (still, if it did, those insights are indeed applicable to 3 door Monty Hall).<p>I&#x27;ve tried a number of ways of explaining this problem to people, and empirically the 100 doors one is the way that seems to work best.  Interested to hear any versions you tell that seem to help people understand whats going on.",1417128488
8669004,comment,8668847,8668847,0,0,jakub_g,,,"You can exploit this trick to some extent to name a file in a way that spoofs its real extension. E.g. name an .exe file such that it looks like if it was .doc (and give the exe an icon associated often with .doc to be even more convincing).",1417128488
8669003,comment,8668300,8668300,0,0,diziet,,,"A great reason not to do this, if you are building anything that will ever be touched by end users (or are building anything that is an application on the web browser) is this isolates you from how real users consume internet content.",1417128455
8669002,comment,8667932,8667932,0,0,detaro,,,"Personal opinions about what you offer aside:<p>Link to your Privacy Policy doesn&#x27;t work.<p>The &quot;get notified when we launch&quot; buttons look odd (I don&#x27;t like the tab-like look, and the lines below them don&#x27;t always match the width of the tab). If I click on one the background of the page jumps around.<p>The first blocks are to short, making the page very busy. Try to combine their looks.",1417128422
8669000,comment,8668680,8668963,0,0,Scramblejams,,,"No, because writing a VM constitutes a reduction in attack surface. Implement a bytecode instruction properly once, and it&#x27;s good everywhere it&#x27;s used. Implement a correct garbage collector, and you don&#x27;t have to worry about use-after-free anywhere in your Python code. You still have to worry about it in your C, though, and you have to make sure it&#x27;s done correctly Every Single Place you do it. And if you think programmers are up to that task, go browse the CVEs for a while.<p>Look, I know lots of people like you think that C isn&#x27;t that hard to get secure code from. But if you were correct, we wouldn&#x27;t be living in the security cesspool of memory bugs we are now.",1417128372
8668999,comment,8664400,8668633,0,0,Mandatum,,,"My comment was out of genuine curiosity. I agree they&#x27;re not of much technical value and for HN it&#x27;s closer to &quot;trash&quot; material, however I don&#x27;t see why we must limit our comments to purely technical concepts.<p>I find the events surrounding Bitcoin, specifically the criminal aspects fascinating. I mean come on, who doesn&#x27;t love a good heist? Especially one that&#x27;s been committed anonymously and thus far turned up completely untraceable. No, the content of the discussion generally isn&#x27;t very intellectual, however it does incite and bring about thought-provoking and technically interesting arguments.<p>I never really put forth my thoughts on anything relating to Bitcoin when I posted that comment. I was merely asking if there&#x27;d been work done around tracing Bitcoin theft.. I don&#x27;t think I&#x27;m inciting FUD whilst asking a question. I understand that the talk of crime and theft in Bitcoin could become tiresome for you and other technically and academically interested parties, however my fascination with such topics isn&#x27;t limited to Bitcoin. I just don&#x27;t think you should accuse me of speculation or inciting FUD when all I posed was a question.<p>Also to be fair, I had labelled my comment offtopic.",1417128354
8668998,comment,8667087,8668554,0,0,digisign,,,"So, an executable you can just run?  Interesting that this is a feature to brag about.  Reminds me of apps for Mac OS, in the years following 1984.<p>Sounds a bit like static-linking plus sandbox.",1417128336
8668997,comment,8668680,8668822,0,0,byuu,,,"It&#x27;s somewhat higher level than C.<p>I&#x27;ve always liked to think of myself as a programming polyglot, able to pick up and reason about nearly any standard language. I&#x27;m not sure how Rust is doing it, but the more I read and learn about it, the more confused I am. The syntax is just so bizarre and counter-intuitive to me. And yet I seem to be the only person in the world who doesn&#x27;t &quot;get&quot; it. It&#x27;s as if the language is being explicitly developed to be my kryptonite.",1417128244
8668996,comment,8637186,8656002,0,0,daniel-levin,,,">> how many intro stats book, of the traditional kind, mention MLE, method of moments, biased vs unbiased estimators, etc...?  None that I&#x27;ve seen<p>Oh - there are quite a few. Here&#x27;s a small sample (no pun intended):<p>- Probability and Statistical Inference by Hogg & Tanis (we used this in my stats course)<p>- Modern Mathematical Statistics with Applications by Devore & Berk<p>- Probability and Statistics by DeGroot & Schervish",1417128226
8668995,comment,8668537,8668537,0,0,ars,,,"This would be a lot easier to take seriously without the idiotic image macros.",1417128225
8668994,comment,8667510,8667980,0,0,anonydsfsfs,,,"That&#x27;s a matter of personal preference. I have never been in a relationship and don&#x27;t currently have any friends, and I&#x27;m perfectly happy this way. Life is what you make it.",1417128224
8668993,story,,,12,0,Robadob,"Why Apple Failed to Make Sapphire iPhones",http://www.technologyreview.com/news/532636/why-apple-failed-to-make-sapphire-iphones/,,1417128170
8668992,comment,8668680,8668814,0,0,nkurz,,,"If tracking changes in the specs, you&#x27;d be right, but I&#x27;m referring more to the mindset.  And I don&#x27;t mean to imply this is anything sudden --- if pressed, I&#x27;d probably roughly gesture in the direction of 1998-2000, possibly related to a slow &quot;changing of the guard&quot;.   In this incredibly long but fantastic thread, Anton Ertl points to GCC 2.9.5 as the turning point. <a href=""http://compgroups.net/comp.arch/if-it-were-easy/2993157"" rel=""nofollow"">http://compgroups.net/comp.arch/if-it-were-easy/2993157</a> (search for Ertl).  His rhetoric might be excessive, but he makes a good point that in practical terms, his research on &quot;threaded interpreters&quot; went from being possible to do in C to impossible.<p>I&#x27;m also not referring to syntax --- I think many of the syntactical improvements are fantastic and have no downside.  And the reliability of modern compilers is much better, and by-and-large the optimizations produce smaller and faster code.  But what I think we&#x27;re losing is the transparency of being able to reason about code execution by looking at source code.  It&#x27;s still the norm for academic papers to offer source for two approaches to a problem, and use execution time to prove that one is faster than the other because &quot;it has more operations&quot; or &quot;it has more memory accesses&quot;, without ever looking at the generated assembling and noticing that one approach has been vectorized and unrolled, and the other has substituted a completely different algorithm that drops all the conditionals because the compiler realized they were never being exercised.<p>And I don&#x27;t think it&#x27;s simply a matter of programmers exploiting undefined behavior without properly considering the consequences.  The inclusion of the standard library into the spec for the language creates &quot;spooky actions at a distance&quot; that never existed before, where passing a variable to &quot;print_debug(a)&quot; allows the compiler to remove the later check for &quot;if (a == NULL)&quot; if print_debug() is observed to pass the variable to printf() and if whole program optimization is being used.   Whereas if print_debug() is in a compiled shared library, this won&#x27;t happen, and the null-check will work as intended.  I see the reasons compiler writers want this flexibility, but it sure makes development and debugging much harder than it used to be.",1417128167
8668991,comment,8668680,8668680,0,0,aosmith,,,"C is a great language but have you tried go?  Feels very c like with a lot of very nice conveniences.",1417128113
8668990,comment,8667320,8667320,0,0,javajosh,,,"And yet on OSX Yosemite:<p><pre><code>   $ git --version
   git version 1.9.3 (Apple Git-50)</code></pre>",1417128104
8668989,story,,,2,0,NickSarath,Thankful,http://techcrunch.com/2014/11/27/thankful/,,1417128091
8668988,comment,8668680,8668972,0,0,Kenji,,,"&quot;One could argue, easily, this is true for many of the popular garbage collected languages [...]  It is the unwanted delivery of the kitchen sink when all I want is a glass of water.&quot;
Exactly. It&#x27;s basically like forcing people to throw all their garbage on the ground and then forcing them to pay for the garbage men who collect said garbage. It would be easier for everyone to just go to a bin and dispose of the trash themselves.",1417128066
8668987,story,,,6,0,boy88,"Show HN: Skimming HN, PH, BetaList, AngelList, CrunchBase &Kickstarter Made Easy",http://central.watch,,1417127973
8668986,comment,8668680,8668680,0,0,bkeroack,,,"&quot;I always have it in the back of my head that I want to make a slightly better C. Just to clean up some of the rough edges and fix some of the more egregious problems.&quot;<p>This is called Go. Brought to you by the same people who gave you C.",1417127970
8668985,comment,8668680,8668804,0,0,SwellJoe,,,"go has a very, very fast build cycle, partly due to the language and partly due to conventions (the standard preprocessor in C is absent in go). But, that might not have been on Damien&#x27;s radar when he wrote this.<p>And, go is built by some of the same people who built C for some of the same purposes (plus some new ones, like concurrency and networks), so it&#x27;s arguably a &quot;better C&quot;, and probably prioritizes some of the same goals. Simplicity and small surface core language area, in particular, but removes some of the dangerous aspects of C (which might be a problem for something performance-oriented, since well-written C is still faster than well-written go for most tasks, and may always be).<p>But, as you note, if you don&#x27;t have to build, the cycle is even faster. I still consider a compile phase a slowdown over dynamic languages that don&#x27;t compile.<p>Then again, so many people have introduced &quot;compile&quot; like stages into their dynamic process (SASS, LESS, test coverage checks, etc.). It may be difficult to completely get away from a compile like stage in any app of significant size.<p>Anyway, a large project in go is faster to compile than a large project in C, in my experience, but my experience is exceedingly limited.",1417127931
8668984,story,,,3,0,pyeng,"Build a Reddit Bot Part 3: Automate Your Bot",http://pythonforengineers.com/build-a-reddit-bot-part-3-automate-your-bot/,,1417127878
8668983,story,,,3,0,nagriar,"7 Tips to Speed Up Eclipse",http://www.nicolasbize.com/blog/7-tips-to-speed-up-eclipse/#,,1417127876
8668982,comment,8667139,8667511,0,0,nickthemagicman,,,"You said you were just trying to finish up online.<p>Arizona state seems to have a good selection of programs.
<a href=""http://asuonline.asu.edu/online-degree-programs/graduate"" rel=""nofollow"">http://asuonline.asu.edu/online-degree-programs/graduate</a><p>NOTE: If you decide to go in for a tech degree ABET accreditation is the standard for tech accreditation, and will allow you to transfer courses between other ABET schools.",1417127866
8668981,comment,8666976,8666976,0,0,saganus,,,"Wow... programming in Lisp is already not that mainstream... and on top of it, for the NES?<p>Impressive.<p>I so want to start learning to program in NES now. Not really in Lisp as I would like to learning curve to be gentler, but this article definitely sparked my interest into learning one of the devices I used most during my childhood.<p>Great work!",1417127834
8668978,comment,8668680,8668680,0,0,Elrac,,,"&quot;C has the fastest development interactivity of any mainstream statically typed language.&quot;<p>I wonder if this statement is true since the invention of Go. A very fast compile was one of the design goals of Go, and its authors could afford luxuries (esp. In terms of memory use and object file size) that were unthinkable in the days of C. For example, IIRC object files contain the compiled code of their source plus the top hierarchy of modules called.<p>People have mentioned that changing a .h file in a large C project could trigger a lengthy recompile. AFAIK, Go minimizes this problem, so if the hype is correct there should be lots of projects where similar situations will be handled faster in Go.<p>My own empirical experience is very limited. I can confirm that Go compiles much faster than Java for my code, but that will surprise no one and it doesn&#x27;t help us compare with C.<p>Does anybody have more tangible data regarding Go&#x27;s alleged speed demon nature esp. as compared to C when compiled with e.g. VS or gcc?",1417127754
8668977,comment,8668537,8668734,0,0,zmmmmm,,,"I agree with this, but I also feel torn by it. A PhD is one of the few opportunities in academia to do true, unconstrained, open ended research. With no hard deadline, no constant &quot;publish or perish&quot; pressure, students can take a bit more risk and look a bit further over the event horizon than other researchers who have to make every bit of research count towards a publication.<p>Students don&#x27;t realise it because they are so focused on getting through, but this opportunity doesn&#x27;t come again. You are suggesting they should jump straight on to the slavish publication treadmill that academics already spend their lives on. In a pragmatic sense it&#x27;s good advice, but it&#x27;s also failing to make the most of the opportunity presented by a PhD.<p>Maybe I&#x27;m just idealistic.",1417127746
8668976,comment,8667087,8667087,0,0,ittan,,,"<a href=""http://sp.parallels.com/products/parallels-containers-windows/"" rel=""nofollow"">http://sp.parallels.com/products/parallels-containers-window...</a>, not free but around for a while",1417127745
8668975,comment,8666271,8668291,0,0,peterjancelis,,,"Yes that is what he is been saying.",1417127741
8668974,comment,8668680,8668804,0,0,zik,,,"Go has the fastest build/run cycle I&#x27;ve seen. You can usually compile compile to a binary and run it quicker than it takes a python runtime to start up. It&#x27;s totally viable to use Go as a scripting language while compiling to binaries from source.",1417127697
8668973,comment,8668680,8668814,0,0,alayne,,,"The best optimizing compilers are C and C++ compilers (as far as I know), perhaps Fortran but even that is getting more esoteric. I think that&#x27;s why the assembly idea persists.",1417127688
8668972,comment,8668680,8668680,0,0,101914,,,"&quot;You wanted a banana but what you got was a gorilla holding the banana and the entire jungle.&quot;<p>- Joe Armstrong<p>One could argue, easily, this is true for many of the popular garbage collected languages.  It is certainly why I do not care for them.  It is also why I do not care for some of the popular OS&#x27;s, or most of the popular &quot;software solutions&quot;.  It is the unwanted delivery of the kitchen sink when all I want is a glass of water.<p>The OP says he&#x27;s frustrated with C &quot;because it seems to be trying (with limited success) to move to being a higher level language. There are times when I really do want a &quot;thin layer
over assembly&quot;, and C seems to have evolved to a place where that is no longer possible.&quot;<p>&quot;seems to have evolved&quot;<p>Some of my favorite programs that continue to work reliably, year after year, are written in what I guess some would call &quot;primitive,&quot; K&R-like C and with little need for &quot;the&quot; standard libraries.  I am not an expert C programmer, but I have no complaints when reading and editing this &quot;primitive&quot; C.  I have seen others complain about it in forums.<p>One of my favorite source code comments is in the netcat source where the author says he&#x27;s going to write the program as if he&#x27;s writing in assembly.  In my mind C should be just a thin layer over assembly.  Essentially, to me, it should be a kind of &quot;shorthand&quot; for writing assembly.  (That implies the author should think as if he&#x27;s writing assembly.  And C just takes away the drudgery of actually typing out all those lines of assembly instructions.)  Now, that is just my opinion.  I am not an expert C programmer.  I know nothing.",1417127676
8668971,comment,8668271,8668910,0,0,lmedinas,,,"Org mode files are plain text so your friends will see beautifully organized text files.",1417127637
8668969,comment,8668680,8668680,0,0,dothebart,,,"one of the best things C has to offer was omitted herein - the preprocessor ;-)",1417127547
8668968,story,,,2,0,selimania,"Greentech center",http://www.greentech.center/,,1417127534
8668967,story,,,3,0,cleverjake,"Hapi Thanksgiving; It is about systems of nodes scaling, not node scaling",https://medium.com/ben-and-dion/hapi-thanksgiving-it-is-about-systems-of-nodes-scaling-not-node-scaling-5d96d900d904,,1417127513
8668966,comment,8665865,8665865,0,0,themoogle,,,"I want to take this and go further. Have a mini linux distro running on my drives :D",1417127489
8668965,comment,8666271,8668507,0,0,danieltillett,,,"<i>In short, the OP&#x27;s need for capital is the product of her decision to manage her vision based on &quot;bigger is better.&quot;</i><p>Are we sure this is her vision or that of her investors? The need for VC to generate &quot;outliers&quot; is wrecking a lot of really good businesses.",1417127449
8668963,comment,8668680,8668914,0,0,foxhill,,,"the python interpreter, CPython, is uh, written in C. CRuby, too.<p>if C was so insecure, you would expect that interpreting python would be just as &quot;insecure&quot; as writing C.",1417127426
8668962,comment,8668651,8668651,0,0,lkrubner,,,"They write:<p>&quot;It is the 2013th year in the Common Era at the moment of this writing and you might think that people should have came up with something better in terms of signal handling at this time. The truth is that they did. It is just not that well known yet due to a huge momentum of outdated information still overflowing the Internet.&quot;<p>Then they talk about kqueue.<p>The above paragraph emphasizes how much Unix programming still relies on old ideas.<p>Likewise, sockets are an old idea, and newer libraries, such as ZeroMQ, do a lot to fix the old problems. ZeroMQ is often described as &quot;Sockets on steroids&quot;. It implements a lot of patterns that Unix itself does not give us:<p>&quot;It gives you sockets that carry atomic messages across various transports like in-process, inter-process, TCP, and multicast. You can connect sockets N-to-N with patterns like fan-out, pub-sub, task distribution, and request-reply. &quot;<p>But I am left wondering, what would the world of programming be like if we had a new operating system that incorporated some of the new ideas and patterns that have developed over the last 25 years? Instead of depending on libraries, would we not be better off if we had an OS built around these newer ideas?",1417127412
8668960,comment,8668948,8668948,0,0,DigitalSea,,,"I highly recommend a coworking space without-a-doubt. I personally don&#x27;t find the same issues with working at home, but coworking spaces have a lot of benefits including; fast internet, access to printers/scanners/faxes, conference rooms, private booths, amenities (showers, mouthwash, razors), foosball/ping pong tables, coffee/tea, snacks, events and more.<p>I just did a two month stint at WeWork in Seattle and I must say, as far as coworking spaces go, WeWork was the most enjoyable. You got all of the aforementioned benefits and on-top of that, free beer. People from other startups and businesses would regularly socialise, play foosball together and events were happening all of the time.<p>If home life is getting you down, definitely consider a coworking space as they are not even that expensive considering the benefits and support that you get.",1417127349
8668959,comment,8668680,8668889,0,0,mansr,,,"Borland used to tout the virtues of their single-pass C/C++ compiler too, even as far back as version 2.0.<p>Most modern C compilers have used an integrated preprocessor for quite some time, and Clang/LLVM can emit machine code directly without going through a separate assembler.",1417127270
8668958,comment,8665820,8667894,0,0,ajuc,,,"Sorry, I realised I sounded negative. Nothing against you, it&#x27;s just my private opinion.<p>It&#x27;s not about performance, but about one more incidental step when reading the code. Small cost, but it&#x27;s there.",1417127263
8668957,comment,8668300,8668300,0,0,Tehnix,,,"From the other comments, I feel more alone in this camp than I thought. I&#x27;ve taken the stance to not even consider a user, browsing sites I develop, with javascript off. It&#x27;s such an integral part of the web by now, and without it, interactivity doesn&#x27;t really exist.<p>Is it really so prevalent to browse without JS (I doubt the casual user would do that, since they&#x27;re probably not even aware that JS exists)?<p>The only reason I&#x27;d care about displaying content without JS, is specifically for crawlers.",1417127260
8668955,comment,8668680,8668874,0,0,Scramblejams,,,"Strictly speaking, you are correct. But saying C is not at fault is like finding the trivial solution to a polynomial -- it is correct but not very useful.<p>No, C is not at fault. The programmers are at fault. But it is prudent to ask, when some of the world&#x27;s foremost programmers produce an apparently limitless number of CVEs as they do, whether they could use some help from the language. If the answer is yes, we should recognize that such help cannot come from C.",1417127225
8668954,comment,8668651,8668651,0,0,vezzy-fnord,,,"I think it&#x27;s a shame (and painful) how the major Unices have all significantly diverged on things like event handling, I/O multiplexing and file system watching.<p>I find the BSD kqueue(2) interface to be much more elegant than any of Linux&#x27;s *fd() functions or epoll(7). On the other hand, Linux&#x27;s inotify(7) is, I find, cleaner to use for file system event notifications than kqueue(2). But then there&#x27;s also fanotify(7) on Linux, which seems to have sort of been neglected since its initial hype. Then OS X has FSEvents.<p>I guess this is why one may need libraries like libevent and libuv.",1417127172
8668953,comment,8668680,8668897,0,0,astrodust,,,"It&#x27;s very restrictive, but the compiler is unbelievably fast because of that.<p>I&#x27;m not going to argue that Pascal is somehow superior to C, it&#x27;s far more limited, but there&#x27;s lessons here to be learned on how to make a compiler rip through code.",1417127146
8668952,comment,8668661,8668661,0,0,contingencies,,,"Nature and the opportunity to explore it.",1417127145
8668951,story,,,3,0,JohnHammersley,"A short history of typography [video]",http://vimeo.com/65353988,,1417127141
8668950,comment,8667118,8667118,0,0,mdaniel,,,"Thanks for a great document.<p>I think in the future all protocol diagrams should use colored lego blocks. That was fantastic.",1417127134
8668949,comment,8665820,8667629,0,0,kazinator,,,"Which means it could be done, but the relational operators (any one of which could be the leftmost constituent) have to all be defined as macros which analyze the rest of the expression with alternative evaluation rules.",1417127097
8668948,story,,,8,7,sown,"Ask HN: Have a hard time working at home. Co-working an alternative?",,"Hi, friends.<p>I&#x27;m funemployed at the moment and it feels like I can&#x27;t work at home at all. I either get super distracted or tired or just run-down and dejected.<p>Do others in similar situation ever experiment with co-working spaces? Do they work out?",1417127013
8668947,comment,8668680,8668934,0,0,sampo,,,"Well, we can debate how mainstream Haskell is, but especially if you mean ML in the sense that does not include also OCaml, then ML definitely is not a mainstream language.",1417127007
8668946,comment,8665865,8666701,0,0,themoogle,,,"This could be solved with a simple fuze or lockout bit that is set. &quot;if you enable this mode you void your warranty,  your drive will be marked as such&quot;",1417127007
8668945,comment,8665820,8668152,0,0,ajuc,,,"Why? It&#x27;s generalisation of binary operator <= to many arguments. Works as well with <, >, >=.",1417126968
8668943,story,,,1,0,p4bl0,"Hubble Uncovers a Baby Galaxy in a Grown-Up Universe (2004)",http://hubblesite.org/newscenter/archive/releases/2004/2004/35/image/a/,,1417126902
8668942,comment,8668680,8668874,0,0,nraynaud,,,"Let&#x27;s just say that it&#x27;s not C&#x27;s fault. It&#x27;s just that C is particularly well suited for creating security problems. The base semantics is dangerous, the undefined behaviors are lurking everywhere, and the compilers writers don&#x27;t care (&quot;it&#x27;s the user fault if they go in undefined behavior that we put everywhere, and they&#x27;d better says thank you that we didn&#x27;t ring their phone while they were in the bath the last time they did an integer multiplication without checking overflow, because the spec said we could have done it&quot;).<p>Sometimes I think the ebola crisis is created by a GCC developer. &quot;I&#x27;m sorry for those people, but I was entitled to it, that guy there dereferenced a wild pointer, I could have cured cancer instead, but no&quot;.",1417126897
8668940,comment,8667558,8667558,0,0,maxharris,,,"And what is the big picture? What is the effect on human beings? Fortunately, we have the data on this.<p>In the last 80 years, global deaths caused by climate (droughts, floods, hurricanes, cyclones, tornados, typhoons) have declined by 98%, all because people had cheap, reliable energy provided by fossil fuels.<p>Source: <a href=""http://www.emdat.be/advanced_search/index.html"" rel=""nofollow"">http://www.emdat.be/advanced_search/index.html</a> - click on &quot;Natural,&quot; and add subgroups &quot;Climatological,&quot; &quot;Meteorological,&quot; &quot;Hydrological.&quot;<p>Because I prefer being alive, I&#x27;d much rather live in a warmer world (or one with weather that has changed is some unnatural way) than to lose the cheap, plentiful sources of energy that serve to protect me from an inherently dangerous climate.",1417126847
8668939,comment,8668537,8668826,0,0,danieltillett,,,"It is hard to be a good supervisor. Almost no supervisors have received any training in how to be a good supervisor and usually their only frame of reference is their own experiences as a student.<p>One of the things that makes being a good supervisor so hard is there is no one right way to do it as what each student needs is different. Some students need a lot of guidance and micromanagement, while others flourish when just pointed in the right general direction.<p>The one thing I would like to see is a limit on the number of students a supervisor can have at anyone time. Students need more than an hour a month with their supervisor. I would try and always spend an hour a day for my students (a lot of that time was group discussion), and at least an hour a week one-on-one time. I have to say I did this mostly for selfish reasons (I really enjoyed talking with my students about what they were doing), but I like to think they benefited from it too.",1417126840
8668938,comment,8668680,8668680,0,0,andrewchambers,,,"C is a great language, for fun I&#x27;m slowly working on my own highly C like langage - <a href=""https://github.com/g-programming/glang"" rel=""nofollow"">https://github.com/g-programming/glang</a>.<p>Its basically C with Go like syntax, and a package system instead of headers. I aim to fully interop with existing C code and have no runtime requirements beyond what C has.<p>I&#x27;m not trying to go crazy with extra features over what C has though. An important part of what will make it work, is perfect interop with existing C code.<p>Yes I understand memory safety issues, but there is always a need for machine independent assembly languages. which C essentially is.",1417126829
8668936,comment,8668661,8668661,0,0,notduncansmith,,,"Thankful for the amazing friends I&#x27;ve made this year, and the opportunities the universe has given me.<p>Thankful for my son&#x27;s (and my) continued good health.<p>Thankful for all the resources I&#x27;ve come across, things that have made me better at what I do.",1417126809
8668935,comment,8668253,8668636,0,0,Argorak,,,"Rubinius has been traditionally lagging behind in features (e.g. for a long time didn&#x27;t implement 1.9 string encoding properly) and wasn&#x27;t necessarily _that_ much faster.<p>Also, people that do want to work at the core of a language usually have knowledge of multiple and don&#x27;t mind using C or any other implementation language.<p>Ruby stdlib is mostly written in Ruby, btw.<p>Still, with Rubinius 3.0 coming up, I&#x27;m very interested what is coming there.",1417126807
8668934,comment,8668680,8668933,0,0,htor,,,"Yes, I&#x27;d say Haskell and ML are mainstream languages by now.",1417126802
8668933,comment,8668680,8668899,0,0,sampo,,,"But he said &quot;mainstream statically typed language&quot;. Is there one such with a REPL?<p>Would Scala be mainstream? OCaml or Haskell probably not.",1417126751
8668932,comment,8668787,8668907,0,0,jonchang,,,"To clarify, these are fat arrow functions, which uses a lexical `this`.<p><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions"" rel=""nofollow"">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Refe...</a>",1417126686
8668931,comment,8668537,8668909,0,0,sjtrny,,,"Places that are self aware enough to realise that no one really cares about your thesis anymore. It&#x27;s all about your publication list.",1417126624
8668930,comment,8668537,8668855,0,0,pcrh,,,"&quot;Stapler theses&quot; are common in some European countries, e.g. Germany and the Netherlands.",1417126602
8668929,story,,,5,0,Thevet,"A Billion Here, a Billion There: The Cost of Making a Drug Revisited",http://www.forbes.com/sites/brucebooth/2014/11/21/a-billion-here-a-billion-there-the-cost-of-making-a-drug-revisited/,,1417126577
8668928,comment,8668253,8668703,0,0,Argorak,,,"Just because C++ is a superset of C doesn&#x27;t mean that all C++ features are in a way comparable to C (in compiling and at runtime).",1417126556
8668927,comment,8664989,8668480,0,0,frowaway001,,,"> yet another syntax to learn! ++: \ ~> and so on...<p>Syntax? Not seeing any syntax here.",1417126540
8668926,comment,8668680,8668848,0,0,sampo,,,"I don&#x27;t think he wanted safety, he wanted fast runtimes. Is there any way to achieve speed without sacrificing safety? Ada?",1417126498
8668925,comment,8668271,8668371,0,0,edwintorok,,,"There is also <a href=""https://github.com/vimwiki/vimwiki"" rel=""nofollow"">https://github.com/vimwiki/vimwiki</a> for writing notes and <a href=""https://github.com/vimoutliner/vimoutliner"" rel=""nofollow"">https://github.com/vimoutliner/vimoutliner</a> for outlining.",1417126479
8668924,comment,8668680,8668680,0,0,vezzy-fnord,,,"Honestly, sometimes I think that the best solution for fixing the security quagmire we&#x27;re in would have been not by creating a new system programming language like Go, Nim, Rust, D or even reviving one of the Wirthian languages (though having them on the table is very much a good thing), but by creating a memory safe dialect of ANSI C, and perhaps standardize on a better string handling library.<p>In fact, such an effort was started at AT&T back in 2001. The language was named Cyclone [1]. It met its 1.0 release in 2006. It has since been abandoned. Which is a damn shame, because it looked like it had real potential.<p>Is C a primitive language? Yes. In fact, it&#x27;s almost stupidly simple compared to most modern languages. But its greatest weakness also proves to be its greatest strength. The main cognitive overhead from using C is in its manual memory management model and certain gotchas in standard libraries. It being bare bones as it is (but not <i>too</i> much) also makes it surprisingly pleasant at times. I get the feeling that plenty of modern languages try too hard to be novel and, for all the freedom you get from not having to worry about anything below program logic itself, you still end up expending a lot of effort into complicated high-level patterns that are frequently interspersed with arcane PL theory.<p>But that&#x27;s not even the main reason why something like Cyclone is much needed. No. It&#x27;s that we&#x27;ve pretty much perfected a ton of our APIs, like POSIX, to work with C. It simply feels most natural to work with POSIX in plain C. FFIs and bindings vary, some of them like Nim&#x27;s actually feel quite clumsy (otherwise Nim makes it absolutely trivial to create FFIs, which is great).<p>Finally, refactoring 30 years worth of code into Cyclone sounds far more realistic than rewriting the world in Rust.<p>[1] <a href=""https://en.wikipedia.org/wiki/Cyclone_%28programming_language%29"" rel=""nofollow"">https://en.wikipedia.org/wiki/Cyclone_%28programming_languag...</a>",1417126479
8668923,comment,8665820,8667838,0,0,kazinator,,,"Anyone spot the bug? Of course<p><pre><code>  (AND ((...) (...) ...)))
</code></pre>
should be<p><pre><code>  (AND (...) (...) ...)
</code></pre>
I haven&#x27;t run the generated code once, yet I can debug it: such is the power of the HN development environment.<p>The fix, of course, is to splice the comparison expressions into the AND:<p><pre><code>  `(let ,lets
     (and
        ,@(loop for ... )))   ; comma splat, not comma</code></pre>",1417126466
8668922,comment,8668300,8668706,0,0,baddox,,,"Could it propagate from computer A with an infected Emacs to computer B with a clean Emacs, simply by opening a file saved by A on B? If so, I would be pretty surprised and impressed. If not, I don&#x27;t think I would consider it a virus.",1417126462
8668921,comment,8667558,8668344,0,0,rcthompson,,,"For starters, moving the majority of the world&#x27;s population uphill to escape the rising oceans is going to be kind of expensive.",1417126440
8668920,comment,8668472,8668472,0,0,shittyanalogy,,,"You run a farm in northern Vermont that raises turkeys. You can get a decent price for your birds by selling them locally but a much better price and can sell many more if you take them to the folk in Boston. There are no trucks to speak of, as they haven&#x27;t been invented yet, so you gotta walk the 200 miles with such a boisterous load. There&#x27;s no ice block big enough to keep your birds cold for that long of a journey and if there was, you couldn&#x27;t pull it. The birds gotta get there alive, and they can only do 10 - 12 miles a day. You get a few neighboring farms to come with so you can watch each-other&#x27;s birds and have some company on the 3 week on the road. Along the way you loose about 10% of your flock to foxes, rivers, robbers, and your own hunger. You arrive in Boston and get a fair price for your troubles, just enough to make the trip worth it. You spend a few days getting back to Vermont and by the time you get back it&#x27;ll have been about a month on the road. You settle in for a rough winter. You&#x27;re gonna do it all again next year. At least there&#x27;s plenty of maple syrup.",1417126430
8668919,comment,8668680,8668903,0,0,Scramblejams,,,"Distressingly true. I despair that 20 years from now, absent an utterly wrenching change, we will all still be playing whack-a-mole with a seemingly infinite number of security bugs, many of monumental severity, all because we are unable to move away from our memory unsafe foundations.<p>And the endless supply of ignorant C/C++ programmers (of which I am not suggesting Damien is a member) who profess to management that they can easily write secure code does not help.",1417126420
8668918,comment,8668680,8668899,0,0,dap,,,"> Using debuggers and crash dumps to reason about your running program is not fast or interactive at all.<p>Says you.  Using core dumps is a different kind of interactive.  Rather than testing out what a program would do or could do (as in a REPL), you&#x27;re iterating on theories of what it <i>did</i> do.  It definitely takes getting used to, but I&#x27;m often much faster debugging (even non-fatal problems) from a core file than iterating with a step-through debugger or rerunning the program.<p>It also helps a lot when the tools <i>within</i> the core dump debugger are good -- you should be able to quickly dump what&#x27;s relevant to your program (not just threads and stacks and individual objects).",1417126376
8668917,comment,8668537,8668736,0,0,stared,,,"To ensure a lot of creativity and passion I think the way to go is to add as little structure and hierarchy as possible.<p>So I suggest getting smart people in one place, with only informal ties (including informal mentorship, rather than a God-like status of advisor). And then degree based on publications (whether in one institute, or another). PhD thesis is an outdated thing from times, where people didn&#x27;t publish much and it was (often) their first publication. We should move one and update workflow not believe blind in old one only because it was there for more than a century.",1417126343
8668916,comment,8666976,8666976,0,0,PuercoPop,,,"If one likes the article, as do I, there are couple of cool lisp projects related to the 6502 chip.<p>Brit Butler has written a 6502 emulator[0] and is now writting a NES emulator in lisp[1]<p>Henry baker wrote a compiler for a simple lisp named &#x27;comfy&#x27; for the 6502 chip which intended to replace it&#x27;s assembly in emacs lisp[2] which has been ported to common lisp[3]<p>[0]: <a href=""https://github.com/redline6561/famiclom"" rel=""nofollow"">https://github.com/redline6561/famiclom</a><p>[1]: <a href=""https://github.com/redline6561/cl-6502"" rel=""nofollow"">https://github.com/redline6561/cl-6502</a><p>[2]: <a href=""http://home.pipeline.com/~hbaker1/sigplannotices/sigcol03.pdf"" rel=""nofollow"">http://home.pipeline.com/~hbaker1/sigplannotices/sigcol03.pd...</a><p>[3]: <a href=""https://github.com/jaoswald/cl-comfy-6502"" rel=""nofollow"">https://github.com/jaoswald/cl-comfy-6502</a>",1417126339
8668915,story,,,2,0,markmassie,"Startup Schadenfreude",https://www.cbinsights.com/blog/startup-schadenfreude/,,1417126327
8668914,comment,8668680,8668868,0,0,Scramblejams,,,"It&#x27;s not like higher level languages are significantly better? Seriously?<p>The last time I accidentally executed injected code due to a free error or buggy bounds check in the non-C parts of Python, or Ruby, or Lisp, or Erlang was ... well, never.<p>And no, the fact that C underlies all these languages isn&#x27;t a testimony to the adequacy of its security features.",1417126232
8668913,comment,8668651,8668651,0,0,majke,,,"I still don&#x27;t understand how queueing signals works.<p>For example, signalfd() is really cool, and you can indeed read() a signal from it, but only one of a kind.<p>If you get, say, two SIGINT&#x27;s you may as well just be able to read() one. I guess it&#x27;s an implementation detail that some signals aren&#x27;t queued while some others are, I guess. In practice it means that receiving a signal is an edge, and in signal handler you must check how many times the signal occurred. This for me sounds inherently racey.",1417126202
8668912,comment,8668300,8668542,0,0,chestnut-tree,,,"<i>&quot;I thought that disabling JS would make the internet unusable, but a vast majority of pages display their content just fine without it&quot;</i><p>I also browse the web with Javascript disabled (using Noscript), but have formed the opposite impression: more and more sites won&#x27;t display their content (or display their content incorrectly) if Javascript is disabled. Most of the sites I&#x27;m looking at are not &quot;web apps&quot; or SPAs (single page apps), they are sites with text articles or links so they have no real reason to break without Javascript. (It&#x27;s always annoying when you attempt to click a link only to find it won&#x27;t work unless Javascript is enabled.)<p>The rise of Javascript frameworks is only fuelling this trend of Javascript-dependent web sites. I&#x27;ve said this before, but Web developers pick the tools that make their lives easier (as you&#x27;d expect), but that doesn&#x27;t always mean that users get the best experience.",1417126201
8668911,comment,8668865,8668865,0,0,vsergiu,,,"Is it an app or a guide?",1417126161
8668910,comment,8668271,8668271,0,0,tomjen3,,,"I have always wanted to use org mode, but it comes down to that I use more than one computer and might want to share my todos with people who are not emacs geeks: how do you guys handle these things?",1417126149
8668909,comment,8668537,8668855,0,0,stared,,,"Only in _some_ places.",1417126129
8668908,comment,8667510,8668122,0,0,msvan,,,"I agree. Reading it, I felt there were quite a few inferences made with just a dash of artistic liberty. There is some value in adding flair to historical accounts, but not when it potentially distorts important details like, for instance, Newton&#x27;s character and how he related to people around him. I also doubt that our historical record can support conclusions like these, although I would gladly be disproven. All in all, the writing in this article doesn&#x27;t make me want to trust that the journalist is treating the topic fairly.",1417126099
8668907,comment,8668787,8668880,0,0,sehr,,,=>,1417126086
8668906,comment,8667984,8668278,0,0,lozf,,,"That&#x27;s the future that science fiction has been promising us for decades... Alas I fear the reality will be much harsher for the majority of people.",1417126041
8668905,story,,,2,0,nunobrito,"Java: Reading millions of text lines at top speed",http://nunobrito1981.blogspot.com/2014/11/java-reading-millions-of-text-lines-at.html,,1417126000
8668904,comment,8668300,8668782,0,0,aruggirello,,,"I used Lynx back in my glorious startup days (12-15 years ago :) it was a great tool to see what the various crawlers (which were Altavista, Lycos, Yahoo and Hotbot at the time) were actually &quot;seeing&quot; on the pages of my site. It helped solving issues with spacing, alt texts...",1417125971
8668903,comment,8668680,8668848,0,0,EliRivers,,,"One of the local Gods, &quot;the market&quot;, would seem to imply that it doesn&#x27;t matter much to most people.",1417125970
8668901,comment,8665303,8666865,0,0,general010,,,"After someone uses your tool, maybe a couple times â€” create some built in virility. ie) &#x27;Like this app? Help up grow. Click to  share.&#x27;",1417125922
8668899,comment,8668680,8668680,0,0,htor,,,"&quot;C has the fastest development interactivity of any mainstream statically typed language.&quot;<p>This is not true. Using debuggers and crash dumps to reason about your running program is not fast or interactive at all. It doesn&#x27;t matter how good the tools are. They interrupt the workflow.<p>Working in a REPL on the other hand, is real interaction with your program. You speak the language to the program and the program responds in the same language. This is fast.",1417125906
8668898,comment,8667603,8668123,0,0,ehm_may,,,"check out cedexis 
<a href=""http://www.cedexis.com/reports/#?report=cdn_response_time&country=US&date=2014-11-26"" rel=""nofollow"">http://www.cedexis.com/reports/#?report=cdn_response_time&co...</a>",1417125888
8668897,comment,8668680,8668881,0,0,foxhill,,,"> The biggest hold-up in the C world is rampant abuse of #include files.<p>true.<p>> Nope. Pascal is still king here.<p>for some values of &quot;king&quot; perhaps - perhaps it&#x27;s faster to compile, but no arrays of varying lengths in a function call? and if i&#x27;m not mistake, a function must be defined before use..? pascal is incredibly restrictive, and perhaps that&#x27;s why it&#x27;s so fast.",1417125858
8668895,comment,8668680,8668881,0,0,sika_grr,,,"Yea, change a certain .h file and you can go get a cup of coffee while waiting for the build to end. This can&#x27;t ever happen with Java/C#.",1417125813
8668894,comment,8666932,8667233,0,0,marak830,,,"Your right i didnt make myself clear sorry, i was referring to a post made by techdirt :<p><a href=""https://www.techdirt.com/articles/20141121/17314329218/eu-parliament-wants-to-break-up-google-because-its-big-american-something.shtml"" rel=""nofollow"">https://www.techdirt.com/articles/20141121/17314329218/eu-pa...</a><p>And also to the fact that i dont believe they are a monopoly(nor do i think their abusing their position), and as such dont think anyone has any right to demand anything from them - especially breaking the company up.",1417125808
8668893,comment,8667984,8667984,0,0,lozf,,,"Relevant, from earlier this year: [Humans Need Not Apply](<a href=""http://www.youtube.com/watch?v=7Pq-S557XQU"" rel=""nofollow"">http://www.youtube.com/watch?v=7Pq-S557XQU</a>) (15:00)",1417125768
8668892,comment,8668537,8668734,0,0,danieltillett,,,"I used this approach. My University would not allow me to just  put all my publications together and submit it, so I just added a general introduction at the front and a general conclusion on the end and then made each of my publications a chapter.<p>The only problem comes with the papers that are not solely your own work. I got around this by putting in the preface what I had done in each chapter. It did meant that my thesis was a bit longer than it might have been as it had work that was not mine, but the examiners didn&#x27;t seem to mind and it had the fortunate side effect of making my thesis a better doorstop.",1417125759
8668891,comment,8668537,8668765,0,0,JetSpiegel,,,"The Cathedral and the Bazaar strikes again.",1417125736
8668890,comment,8668680,8668803,0,0,kyberias,,,"What a horrible pissing contest that thread contains.",1417125729
8668889,comment,8668680,8668804,0,0,weinzierl,,,"I don&#x27;t think it&#x27;s true. Back in the day Pascal was known for a fast compile, single pass compile was a major selling point for Borland&#x27;s Turbo Pascal. 
I don&#x27;t know if a single pass C compiler ever existed but current C compilers use multiples passes (in addition to preprocessing).
As far as I remember C was always known for a slow turn around cycle compared to other languages.",1417125650
8668888,comment,8668341,8668341,0,0,ivancamilov,,,"I half expected to see the image in the article to slowly pan and zoom.",1417125634
8668887,comment,8667558,8668610,0,0,astrodust,,,"Melting polar ice is really screwing with the jetstream and that&#x27;s altering winter weather patterns pretty severely.",1417125632
8668886,comment,8666841,8668831,0,0,Gravityloss,,,"No, I assumed (in hindsight could have mentioned it) that you could use the hydrogen locally to generate electricity. The thing is connected to the the electricity network.<p>But I realized that is roughly the momentary day power of the panel. The real yearly average production is maybe 15% of that.<p>Forgot the panel efficiency with this
<a href=""http://en.wikipedia.org/wiki/Photovoltaic_system#mediaviewer/File:SolarGIS-Solar-map-World-map-en.png"" rel=""nofollow"">http://en.wikipedia.org/wiki/Photovoltaic_system#mediaviewer...</a>",1417125606
