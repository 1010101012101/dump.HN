ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
387896,comment,387789,387849,0,0,ajhaveri,,,"Dividend yielding stocks generate passive income. Some of the stocks which have been hit hard because of the downturn, IBM, for example, have more attractive dividend yields than before. So, sure, you may not become wealthy, but you can generate passive income. Building wealth is different then generate income from zero to very few hours of work.",1228543153
387895,comment,377212,377212,0,0,sysop073,,,"""If Apple is suggesting that the DMCA reaches people merely talking about technical protection measures, then they've got a serious First Amendment problem.""<p>The DMCA conflicting with the First Amendment? No!",1228543021
387894,comment,387789,387827,0,0,stanley,,,"It's no different from any other consulting business. If the client is aware of market prices, they are less likely to be ripped off.",1228543013
387893,comment,386493,386493,0,0,hardaway,,,"In Arizona, if we depended on Vc, we'd be dead.  We have a very vibrant startup community that works by collaboration,mentoring, and whatever it can scrape together.  Do we start Google? no. Do we innovate? yes.",1228542958
387890,comment,386183,386183,0,0,lallysingh,,,"There was a problem with this at an Apple World-Wide Developer Conference a few years ago (2001?).  Most people had the titanium (e.g Faraday Cage) powerbooks, and had terrible problems with the wireless.<p>So, when people couldn't connect to the wireless network, they would try to connect ""manually,"" which sometimes meant they'd accidentally create a new network with the same name.  The ad-hoc network grew pretty quickly from there.",1228542835
387889,comment,387495,387755,0,0,hs,,,"yes, i use vim and vi text editors for lisp\nparen matching is essential<p>it's not like i'm advocating writing code using cli or sed",1228542739
387888,comment,387297,387297,0,0,ojbyrne,,,"I guess the question I have to ask -- is this just people with no job prospects looking for a job? $1500 a month for 2 months is probably reasonably attractive right now, even if you just walk away at the end of it. As compared, to, oh, starving.",1228542663
387887,comment,387789,387823,0,0,jharrison,,,"If Gary Vaynerchuk doesn't answer this question perfectly, and in video form, I don't know who does.  Check it.<p><a href=""http://tinyurl.com/6lpckv"" rel=""nofollow"">http://tinyurl.com/6lpckv</a>",1228542607
387886,comment,387495,387691,0,0,hs,,,"i'm pointing to something deeper, because of high level abstractions, FP codes tend to be short -> can fit in one head; thus, IDE is less essential<p>no amount of popularity can change that",1228542475
387885,comment,386493,386493,0,0,robak,,,"This is so obvious. I think it has been for a few years now. I would push it one step further: if you need to borrow money, you are not efficient enough.",1228542130
387884,comment,387720,387720,0,0,ctingom,,,"Interesting that it doesn't have a stopwatch mode.",1228541993
387883,comment,387789,387789,0,0,iamelgringo,,,"From the 4 Hour Work Week: \n* Create a product worth $50-150\n* Advertise online and in niche magazines\n* Sell product online\n* Outsource order fulfillment (delivery)\n* Outsource customer support<p>Really, you want to read the 4 Hour Work Week.  It goes through how to do this step by step.",1228541834
387882,comment,387495,387831,0,0,azanar,,,">The real refactoring work is done in your head.<p>This has totally been my experience. Moving a method or variable up or down in the inheritance tree, extracting part of a method, inlining method calls: all of this is architectural refactoring. I've found the much of my refactoring time isn't spent in moving methods around and modifying signatures; it is spent in modifying the algorithms and data organization. Not organization in the sense of whether variable belongs in sub- or super-class, but in the sense of whether some subset of data should belong in a particular class, or some new delegate class I construct. That new delegate class might not be a subset of the class I'm splitting apart, so requires more than just some automated extraction process. I can't help but create a mental picture of all of this as a sort of architectural autopilot -- it can handle making minor course and altitude corrections, but still expects you to have thought about things before pressing the 'engage' button.",1228541543
387881,comment,387744,387871,0,0,ubernostrum,,,"A number of smallish changes, applied across multiple large codebases? Yeah, that's a lot of work. Our software won't have to be completely scrapped and started over, but we will have to spend quite a lot of time porting.<p>In other words, if you have five hundred instances of `print ""foo""` which all need to change to `print(""foo"")`, it's not that you have to ""completely rewrite"", but you _do_ have five hundred changes to make. And since applying a change is almost never as simple as a single search/replace/rename, it means work.",1228541420
387880,story,,,1,0,symptic,"Building brand equity with an accessible logo",http://stevenkovar.com/randomness/building-brand-equity-with-an-accessible-logo/,"A simple post about easy things you can do to make it easy for people to spread the love towards your company.",1228541401
387879,comment,387789,387876,0,0,critke,,,"Well, let me say that it's profitable. Can't live off of it 100% yet, but it looks like I will be able to soon. And I'm already building the next thingy. So again - it sure as heck isn't passive while you're building it - and only semi-passive while acquiring new users - but the churn is surprisingly low - so even though it probably wont ever turn into something that's 100% passive (gotta make sure those servers are happy!) - I'm pretty sure it'll get darn close.",1228541069
387878,comment,387495,387855,0,0,sofal,,,"It's about trying to find the best trade-off. Certainly automated rename/pull up/inline/extract operations help, but I've found that the navigation and text-editing power of vim outweighs the benefits coming from those IDE operations.<p>Vim is kind of like an IDE in some respects. I like it because it focuses on text editing and doesn't stick its nose into the actual programming decisions where it doesn't belong. If I wanted my editor to interfere with my programming logic then I'd probably take the jump to emacs, where I know it will obey me rather than forcing me to obey it, the latter accurately describing the experiences I've had with Visual Studio.<p>And, like I said, the act of performing the textual refactoring isn't where I spend most of my time anyway. Most of my programming time is spent thinking about how to proceed, placing those thoughts into the context of my program, and translating those thoughts into whatever language I'm using. The more I can speed up those bottlenecks the better.",1228540794
387877,comment,387495,387610,0,0,azanar,,,"Productivity is a difficult thing to measure, because the units people use aren't consistent. I'm going to try to respond using the metric of productivity I've become most comfortable with, which is quanta of robust functionality per unit time. By robust, I mean it is not fragile or rigid to future changes within both itself and dependencies.<p>In this sense of productive, IDEs can be quite detrimental in careless hands. IDE can make developers more prolific, generating very quickly blocks of code that perform particular tasks, but I've also found that it can cultivate a more manufacturing method of coding, where developers just bounce on the '.' and tab keys and glue bits of 'sensed' method calls together. It makes development fast, and that means any productivity metric based on providing code meeting specified requirements is satisfied swiftly. It also means that the developer spends far less time thinking about individual blocks of code; this can have very deleterious effects. A single line might consist of 12 method calls strung together, because the developer didn't take the time to go back and assess things like readability. A particular method might calculate the incorrect result when passed data it wasn't originally designed for, rather that throwing an exception or gracefully degrading its functionality. A method or class definition might likewise make unreasonable assumptions about dependencies, requiring a large amount of rewriting; rewriting which could have been avoided if the developer had taken a few minutes to step back and examine the implications of their work, and how the design could change to make the code clearer and simpler.<p>To be clear, I am not blaming IDEs for careless, fragile code. What I am saying is that IDEs can be a magnifier for carelessness, allowing a developer with a proclivity for banging out code as fast as possible without regard for quality to do so much faster. What time they spend reaching for the documentation for a particular class or framework would give their mind a chance to think about what they are working on, and possibly come up with a more long-term workable solution to what they are building. I'm not saying it's a panacea; I guess what I'm saying is that I'm not totally opposed to artificially slowing down developers who would otherwise write code faster than they can reason about it. I suppose the other solution is just to identify them as careless, and remove them from the project.<p>I also worry about your dismissive stance toward the “core stuff of programming.” I’ve found it is this core stuff that makes for the simpliest, future-proof code, because the core stuff allows for reasoning about design, not just about functionality.",1228540512
387876,comment,387789,387852,0,0,stillmotion,,,"Is the revenue substantial for something semi-passive?",1228540507
387875,comment,386779,387686,0,0,randomwalker,,,"Be happy to if you send me a private email.",1228540485
387873,comment,387789,387789,0,0,jordanf,,,www.kallow.com,1228540132
387872,comment,387789,387846,0,0,petercooper,,,"I didn't. I was approached in each case. I wasn't planning to sell. Unfortunately this doesn't help me give you any advice ;-)",1228540127
387871,comment,387744,387851,0,0,mechanical_fish,,,"From the original article:<p><i>I think Python 3.0 is and will be a good thing even though it’ll create a staggering amount of work for me, my co-workers and my friends and colleagues (since I deal with two large Python 2.x codebases on a daily basis, the migration is not going to be simple or short for me).</i><p>So. Not a complete rewrite, but merely ""a staggering amount of work""?",1228540080
387870,story,,,1,0,dkellner,"Landing Larger Web Projects",http://www.sofaemployed.com/?p=828,,1228539901
387869,comment,387789,387849,0,0,crystalarchives,,,"I think you might have a different idea of ""passive income"" than the rest of us here.<p>Passive income is money generated without requiring you to go to work, trading a set amount of hours for steady cash. Instead, it's spending the effort on building something (whether it be a book for royalties, a website for subscription payments, investments for interest / asset worth increase, or real estate for rental money) that generates a cash flow without requiring the 40 hour work week.<p>Granted, it's not ""passive"" in that you still need to spend the time and effort to get it up and running, but once your system in place there's usually much less time involved to keep it operating, which is why this type of income is much more attractive - you can scale this system to make much more money than you ever could through salary.<p>However, the risk is correspondingly higher; if your product doesn't do well, you don't get money, whereas you can get away with a reasonable amount of subpar performance at larger companies without too much problem.",1228539787
387868,story,,,3,0,nreece,"World's first personal supercomputer unveiled",http://www.telegraph.co.uk/scienceandtechnology/technology/3564435/Worlds-first-personal-supercomputer-unveiled.html,,1228539698
387867,comment,387789,387849,0,0,bemmu,,,"Sadly, I've come to realize this is true. On a positive note, I've also come to realize that you can get enjoyment from gardening your projects.<p>I had a Facebook app which was basically working well, generating thousands a month. I thought it was on autopilot. But always stuff would go wrong. An ad network would start paying less after they realize I'm not trying the competition, so I have to try to negotiate. Facebook would change their API in seemingly compatible ways, but necessitate changes if you want to stay in the game. Disk space would run out. Increasing popularity would require optimizing stuff and so on and so on.",1228539669
387866,comment,387789,387789,0,0,hbien,,,"Referrals - <a href=""http://djangohosting.org"" rel=""nofollow"">http://djangohosting.org</a>, it's very passive =]<p>I also make desktop software, but I think that's very active - <a href=""http://gearsquare.com/actiongear/"" rel=""nofollow"">http://gearsquare.com/actiongear/</a>",1228539648
