ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
80983,comment,80915,80941,0,0,qaexl,,,"There are other pieces of this puzzle besides before_filter.<p>In Rails, you don't necessarily have to have a monolithic view. On more complex sites, you use fragments, called partials. Sidebars can be easily created by having a ""shared""  view directory full of partials. Further, there is a content_for helper in Rails views. Views render late; you can set an instance variable in the subviews that will affect what gets rendered in the layout. Trying to keep track of that can get hairy, so content_for abstracts that for you. Combined with the partials and the before_filter in the controllers, you can get a view to produce a number of things without having to resort to pulling DB info inside the views -- that reminds me too much of the bad old days of PHP.<p>In the logged-in users example, in what is normally in the sidebar, you use a render :partial => 'shared/users'  if @users; then add a before_filter in the site-wide application layout to pull in the data if someone is logged in. A more complicated example is to render a ""sidebar"" partial, which renders more partials depending on some array of sidebars you want to display ... then use a before_filter to figure out what you want to populate the sidebars with. Any controller or actions can override or add to that sidebar array. <p>The main thing that sucks about this kind of organization is having the code scattered in a number of different files. This is where using an editor that knows the relationship between the files is important -- you can hit some key combination and jump between the different fragments without having to hunt them down in the file browser.\n",1195325908
80982,comment,80970,80970,0,0,JohnN,,,"cool with me",1195325892
80981,comment,80915,80915,0,0,yariv,,,"It seems like you've run into limitations in the frameworks you've used, not in the MVC pattern itself. In ErlyWeb (which I created, so I'm biased -- but not too biased), components are implmeneted by a controller module and a view module. Any component can include any other component. The controller decides which subcomponents to include, and the view decides where to put them after they've been rendered. This design makes it natural to separate a page into different controllers + views that can be reused in other pages. It also maintains the MVC philosophy that the controller should decide what should be rendered, and the view should decide how to render it.<p>MVC is an elegant design pattern, but I think an MVC framework must provide a simple way for components to include other components. Otherwise, I can see why you would find it frustrating that your main controller has to do all the work.",1195325360
80980,comment,80970,80970,0,0,dood,,,"Tayyabs == awesome",1195324991
80979,comment,80933,80965,0,0,boucher,,,"Perhaps, but it points out the often overlooked truth that using a garbage collected language is substituting one set of memory problems for another.  I can't tell you how much of my time at work is spent trying to work around the java garbage collector because I can't manually destroy objects.",1195324924
80978,comment,80845,80845,0,0,cellis,,,"VB.NET for Dummies. Maybe it was VB for Dummies...i can't remember, it was 4 years ago, and I threw it away, along with my Java, C++ and Technical Math book (I regretted throwing the math book away).",1195324677
80977,comment,80647,80852,0,0,breck,,,"Not if you use VDS or DS from an inexpensive host(ie GoDaddy).",1195324536
80976,comment,80951,80951,0,0,boucher,,,"I think the author is pretty off base.  I don't mean to say that testing isn't valuable, just yesterday I wrote some unit tests to help me work through a very specific problem.  But the assumptions are flawed.  <p>The main point of the author is that proving correctness is too difficult.  But the same can be said of testing in general.  If unit testing is designed to be applied only to the smallest of units, where testing should be obvious, I would argue that an informal correctness proof would be only trivially harder.  Take for example the function I often see as the starting point of test driven design presentations: fahrenheitToCelsius() or fToC()<p>Somebody writes the test assertTrue(fToC(32)==0).  Alright, well that fails.  So I go ahead and write the function:<p>fToC(f) { return 0; }<p>Test passes now.  So we write a new test: assertTrue(fToC(-40)==-40). Repeat:<p>fToC(f) { if(f==-40) return -40; return 0;} <p>Maybe that's enough special casing to get someone to finally write (in this presentation):<p>fToC(f) { return (5/9)*(f - 32); }<p>Congratulations, our tests pass.  But the presentation points out that fundamentally you start off with the assumption that passing tests is your goal, as opposed to writing verifiably correct code.  Proving that this function is correct is trivial, so just write it in the first place. <p>Obviously this is an incredibly contrived example, and perhaps the presentations I have seen on TDD have not been that great, but I think it accurately describes what I see as the main problem with TDD.  Tests should be there to idiot proof your code, so that once you've verified your algorithm is correct, and that your code matches that algorithm, the test sits there to decrease the likelihood of a regression through some silly or unrelated change.  But to start from the assumption that you will write all the correct tests and thus your code will be verified seems highly suspicious to me. ",1195324369
80975,comment,80967,80967,0,0,shayan,,,"this is also an interesting article in terms of how it compares the European culture and attitude with the American one",1195323746
80974,story,,,1,0,shayan,"How quickly things change",http://blog.broadbandmechanics.com/2007/11/how-quickly-things-change,,1195323665
80973,comment,80970,80970,0,0,rzwitserloot,,,"Don't forget barcamp london 3, next weekend, and geek dinners.",1195323494
80972,comment,80925,80925,0,0,zach,,,"Here's the NY Times article which is currently a broken link in the post:<p><a href=""http://www.nytimes.com/2007/11/17/us/17dna.html?pagewanted=all"" rel=""nofollow"">http://www.nytimes.com/2007/11/17/us/17dna.html?pagewanted=a...</a>",1195323401
80971,comment,80951,80963,0,0,boucher,,,"I too would want a proof, but its wrong to think that you can't test this.  It might be difficult, but you absolutely can.  Tracking down the order of things that causes the problem is where the troubles comes -- reproducing that order is easy using semaphores or something similar.  <p>Of course, for any moderately complex set of interactions, you won't be able to write tests to cover every possibility, which is exactly the point of the main detractor in this article. ",1195323064
80970,story,,,18,14,ian,"Ask YC: Meetup for UK based hackers",,"There's good interest in a meetup for UK based hackers (<a href=""http://news.ycombinator.com/item?id=79164"" rel=""nofollow"">http://news.ycombinator.com/item?id=79164</a>).<p>15 people have emailed me so far. A mix of start-ups, hackers working on cool research projects, people working on stuff around their day jobs and others. The mix you'd expect at News.yc.<p>We're happy to host at our offices in East London (near Livepool St).  We were part of the most recent yc class and got massive value from interacting with other teams at the dinners. We'd like to do something similar. If it goes well we'll make it a regular event.<p>It should be a good opportunity to share cool ideas, get some inspiration, get advice from other hackers, meet co-founders or meet start-ups who are hiring (we are, along with a few others).<p>7-830pm meet at Songkick hq in Shoreditch. We'll get a projector in case anyone wants to demo<p>830pm Curry at legendary local curryhouse (<a href=""http://www.tayyabs.co.uk"" rel=""nofollow"">http://www.tayyabs.co.uk</a>)<p>Proposed date: Friday 30th Nov.<p>Hit me at founders/at/songkick and let me know:<p>- if that date doesn't work when does<p>- if you've got a projector we could borrow!<p>I'll wait till next Wednesday (21st) to gauge numbers and then email with directions to our offices etc. I'll also post confirmed date on here. Hope that works.",1195323039
80969,comment,80845,80845,0,0,ochiba,,,"Sybex HTML Complete.\nWorst book ever. Not worth the paper it's printed on. Bought it when I was in elementary school though..\n",1195322762
