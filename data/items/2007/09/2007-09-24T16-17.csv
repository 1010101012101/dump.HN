ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
58958,comment,58558,58558,0,0,gml,,,"I recently did this, as in about a month ago, I became interested in learning Lisp.  I started with a bunch of things.  First I tried to get various working environments going like:<p>Emacs + Slime + SBCL<p>Emacs + Quack + PLT Scheme<p>
I also tried DrScheme (which is a great learning environment).  <p>Not knowing what i'd really need I also did some searching and discovered a few books:<p><a href=""http://mitpress.mit.edu/sicp/"" rel=""nofollow"">http://mitpress.mit.edu/sicp/</a><p><a href=""http://www.ccs.neu.edu/home/dorai/t-y-scheme/t-y-scheme.html"" rel=""nofollow"">http://www.ccs.neu.edu/home/dorai/t-y-scheme/t-y-scheme.html</a><p><a href=""http://www.gigamonkeys.com/book/"" rel=""nofollow"">http://www.gigamonkeys.com/book/</a><p>
i also purchased the little schemer.  I learned various interesting things from these different sources.<p>1. practical common lisp was essentially useless to me since i'd already been kind of feeling sold on using scheme and had very little interest in common lisp.  what it DID teach me was how datastructures in lisp are created under the hood (or how one might go about implementing them).  from this perspective it was very nice and helpful when understading, car, cdr and mapcar.  although i wish i'd had a nice example of implementing  a scheme in C.<p>2. reading The Little Schemer, has been the single most satisfying read of my entire computing life.  so much so
that i bought The Seasoned Schemer and The Reasoned Schemer
without hesitation at price.  this book will teach you to ""think lisp"" if you can just make it through the first book you will honestly know everything you need to about the lisp mindset and be ready to actually write useful code and no be shocked or surprised by anything.  i can't stress enough how useful this book is READ IT.<p>3. Teach Yourself Scheme in Fixnum days has been a powerful reference for me and I honestly hope that it grows and evolves, it's easy to reference and great for when you start actually hacking on projects.  It's just simple and obvious.<p>4. SICP is a mammoth work and also has a very nice video series.  If you're serious about Lisp and even more serious about Scheme and furthermore serious about computing.  You must read this.  My approach so far has  been to read top down (ie. cover to cover) and also use it as a reference.  I get sheer joy from reading it, but it's amazing how practical it can be as well.<p>Personally I've settled on scheme, i dont' really like common lisp i find it irritating and with projects like Chicken: <a href=""http://www.call-with-current-continuation.org"" rel=""nofollow"">http://www.call-with-current-continuation.org</a>
out there I feel really comfortable.  I re-wrote my entire
blog using nothing but chicken and the web-scheme egg.  I recently wrote an irc bot for fun during a huge bot writing session that broke out in a channel i frequent (don't ask we all just started writing bots for some reason).<p>If you're looking for good platforms the best I can recommend are:<p>SBCL (hands down nothing really compares so far)<p>PLT Scheme (aka DrScheme if you like GUI's)<p>Chicken (the absolute best imho BSD licensed scheme)<p>
Hope this helps everyone.  This is such an awesome thread i hope it continues for awhile.
",1190653096
58957,comment,58915,58915,0,0,joshwa,,,"An article posted to news.yc (<a href=""http://news.ycombinator.com/item?id=58522"" rel=""nofollow"">http://news.ycombinator.com/item?id=58522</a> ) mentioned working with an outsourcing/offshoring partner, and giving them equity in exchange for building the app. <p>Have yet to find a good example of that really working for someone...",1190653089
58956,comment,58915,58915,0,0,dorait,,,"There are several ways you can go about this:<p>1. Create a simple prototype that demonstrates the core ideas of the concept and show it to a few people (you trust). You may be able to attract some good developers if it appeals to them. <p>2. Start a blog and talk about how your idea may benefit some potential customers. See whether any one shows interest. <p>3. Go to one of the startup meet ups (www.meetup.com) in your area and informally discuss it or present it to the group.<p>4. You may not need to build the entire software. Most of the good developers know how to reuse existing software (libraries) to quickly build a version 1 of the product. <p>5. Try a few interns from your local computer school and let them build the first version of the product. Let a few friends try it out. If there is enough interest, you may be able to find some supporters in funding it or developers interested in developing it further.<p>6. You can start a project in one of the open source communities like sourceforge put some high level specs and see whether any one will be interested in joining you. <p>7. If you strongly believe in the idea and do not want to go open source, prepare a simple plan and approach some angels. Many angel investors may also have a good rolodex of development resources. <p>I think having a good idea for a great app is cool. But you need to go to the next step of prototyping or let others visualize it so that you can get some reactions. This will help improve the idea and also hear if such an idea is already implemented somewhere else.",1190652970
58955,comment,58915,58939,0,0,imsteve,,,"for sufficiently vague definitions of ""idea"".",1190652626
58954,comment,58953,58953,0,0,moorage,,,"I'd love to know what the (written or unwritten) philosophies of ViaWeb and YCombinator were/are!",1190652542
58953,story,,,7,5,moorage,"What are your startup's philosophies?",http://m3moore.wordpress.com/2007/09/22/what-are-your-startups-philosophies/,,1190652494
58952,story,,,1,0,joshwa,"Will Facebook tax the Platform?",http://www.insidefacebook.com/2007/09/24/will-facebook-tax-the-platform/,,1190652460
58951,story,,,2,0,jkush,"How moving your eyes in a specific way can help you solve a complex problem",http://scienceblogs.com/omnibrain/2007/09/how_moving_your_eyes_can_help.php,,1190652453
58950,comment,58915,58947,0,0,pbnaidu,,,"I would be interested in signing, please email me if you're interested.",1190652452
58949,story,,,43,15,brl,"The Genius is in the Details ",http://www.aaronsw.com/weblog/smartabstractions,,1190652323
58948,comment,58915,58915,0,0,neo,,,"Get an NDA with anyone you work with.  ""Ideas are easy, execution is hard"" is a cop-out excuse by people who don't have any patentable worthwhile ideas of their own!
",1190652232
58947,comment,58915,58943,0,0,thehigherlife,,,"so then i guess the next question is, anyone interested in signing a non-disclosure agreement and working on a pretty cool idea for a web app?",1190651902
58946,story,,,1,0,markpeterdavis,"Disruptive Technologies Can Shrink Addressable Markets ",http://getventure.typepad.com/markpeterdavis/2007/09/disruptive-tech.html,"The addressable market that you calculate for your business may be smaller than it was for the companies that you intend to displace.  Disruptive technologies often reduce prices offered to consumers as processes are often more cost effective.  If your company lowers prices, it will likely shrink the addressable market. ",1190651885
58945,comment,58915,58932,0,0,thehigherlife,,,nope.,1190651602
58944,comment,58852,58852,0,0,eusman,,,"donate one? donate money to manufacturers?",1190651576
58943,comment,58915,58918,0,0,queensnake,,,"Indeed. Google for 'Non-disclosure Agreements'. But, probably you're better off learning to code, even if you do get a partner. And I agree that Python is a good language to start with. ",1190651482
58942,comment,58690,58690,0,0,queensnake,,,"The possibilities for this thing could be huge, when it's understood and mature it could revolutionize the way we interact with computers, even coding (along the lines of subtextual.org). Too bad there's no stock to buy :) ",1190651329
58941,comment,58837,58837,0,0,jamongkad,,,"Man, I'm getting tired of seeing RoR fan boys peddle their framework as if it's the Second Coming. Why all the hate nowadays? Can't we all just get along....",1190651265
58940,story,,,2,0,drm237,"New version of Gmail being tested? (Does Paul Buchheit's recent comment help confirm it?)",http://blogs.zdnet.com/Google/?p=744,"Does Paul Buchheit's recent comment help confirm it?<p>""...Gmail is a big system with many components -- there is no reason that Google would ever need to do a ""complete"" rewrite. That said, the individual components are frequently rewritten, and it already supports at least 4 completely different interfaces (AJAX, plain HTML, XHTML mobile, Java MIDP mobile, POP3, and probably others that I'm forgetting or can't mention). Adding a new UI for Joel's magical library wouldn't be a big deal.""<p>Edit: Made title more interesting (but a little long).",1190651169
58939,comment,58915,58915,0,0,axod,,,"ideas are easy. Executing them is harder.",1190651153
58938,story,,,8,0,Goladus,Macrophobia,http://a-nickels-worth.blogspot.com/2007/08/macrophobia.html,,1190650724
58937,story,,,3,0,DanielBMarkham,"Lessons from Precimark",http://foundread.com/2007/09/24/what-my-short-lived-experiment-with-precimark-can-teach-you/,,1190650582
58936,story,,,2,0,nickb,"Smalltalk: Getting The Message - ""The Essentials of Message-Oriented Programming with Smalltalk""",http://www.chronos-st.org/Smalltalk-Getting-the-Message.html,,1190650577
58935,comment,58765,58847,0,0,kingnothing,,,"Like they say, no one ever got fired for buying IBM.<p>It's expensive because it's aimed at accounting drones who make the decisions about what to buy and who want software from a ""big name"" company like Borland. <p>On a related note, there is at least one other similarly expensive rails IDE, but the name escapes me right now.",1190650509
58934,story,,,4,0,byosko,"Top 16 Lies of Lawyers",http://blog.guykawasaki.com/2007/09/the-top-ten-six.html,"Guy Kawasaki lists the top sixteen lies lawyers will tell entrepreneurs.",1190650344
58933,comment,58915,58927,0,0,kyro,,,"Yeah.<p>
For Python: 
<a href=""http://www.freenetpages.co.uk/hp/alan.gauld/"" rel=""nofollow"">http://www.freenetpages.co.uk/hp/alan.gauld/</a><p><a href=""http://www.ibiblio.org/obp/thinkCSpy/"" rel=""nofollow"">http://www.ibiblio.org/obp/thinkCSpy/</a><p><a href=""http://www.diveintopython.org/"" rel=""nofollow"">http://www.diveintopython.org/</a><p>I also read the O'Reilly book on Python - 'Programming Python'<p>There's Python.org for all docs, of course.<p>For Django - <a href=""http://www.djangoproject.com"" rel=""nofollow"">http://www.djangoproject.com</a> - they have a cool tutorial on the front page, and <a href=""http://www.djangobook.com"" rel=""nofollow"">http://www.djangobook.com</a>, then move to the documentation from djangoproject.<p>
",1190650244
58932,comment,58915,58915,0,0,jgrahamc,,,"Is that you, Kevin Rose?<p>John.
",1190650225
58931,story,,,9,0,byosko,"VCs & Tech Lawyers: Innovate, Automate & Simplify",http://500hats.typepad.com/500blogs/2007/09/vcs-tech-lawyer.html,,1190650149
58930,comment,58043,58314,0,0,jkush,,,">Higher-order functions do entail a sacrifice to readability compared with plain loops.<p>I disagree with you there. If you understand that Map, Reduce and Filter (for example) are essentially loops, using them greatly increases code readability. Instead of having to read loop code, you're just reading code that describes what you're doing to the data.<p>EDIT: I know this is going to sound weird, but I recently implemented Map, Reduce and Filter in VB.NET. Aside from the fact that using .NET delegates is clumsy, the code portions that use those methods are much more concise (and readable).<p>
",1190650133
58929,comment,58825,58825,0,0,icey,,,"It'd be really great if PG would consider doing an alpha release of Arc sometime. To me, there appears to be a mini-Lisp revolution going on right now, largely thanks to PG & reddit. It'd be a shame to let that energy dissipate as people grow tired of waiting for it to come out. <p>I know the excitement that I have for Arc isn't as much the ""100 year language"" issue as much as the need to have strong leadership for a Lisp. I think that this is evident by the difficulties the various CLs have when introducing new functionality to the language vs. a package, or the whole R6RS fiasco that's been driving the Schemers mad. ",1190650047
58928,story,,,1,0,nickb,"Lisp Screencast - Episode 1 - A reddit clone in 20 minutes",http://video.google.com/videoplay?docid=5632573512646119509,,1190649957
58927,comment,58915,58926,0,0,thehigherlife,,,"Are there books you suggest i read, or tutorials to start with?",1190649865
58926,comment,58915,58915,0,0,kyro,,,"If you're not planning on paying, and want to create a team, you'd better learn how to program. I was in your same position several months ago. I tried looking for programmers, and those that I found were turned off by the fact that I had no programming knowledge/experience. So, I got fed up and decided to learn how to program. I started with Python, dabbled in some SQL, and am currently trying to refine my Django skills. Time, dedication, and documentation is all it really required. It's not that bad.",1190649790
58925,comment,58839,58916,0,0,icey,,,"I've tooled around with it in the past, but other than spending some time making little toys in LSL, I found that I didn't really fit in with the ""giant walking and talking penis"" crowd. ",1190649754
58924,story,,,8,2,nickb,"Immature developer attitudes revealed in flames regarding CDBaby   at  Pervasive Code",http://www.pervasivecode.com/blog/2007/09/23/immature-developer-attitudes-revealed-in-flames-regarding-cdbaby/,,1190649746
58923,comment,58839,58839,0,0,rrival,,,"Briefly in 2005 - they named it well, it eats your life, and it's not worth making $L unless you're Anshe Chung, queen of all SL real estate.",1190649718
58922,story,,,3,0,mqt,"Candid Camera: The cult of Leica",http://www.newyorker.com/reporting/2007/09/24/070924fa_fact_lane,,1190649711
58920,comment,58660,58660,0,0,kashif,,,"Quick Leaderboard - <a href=""http://news.ycombinator.com/best"" rel=""nofollow"">http://news.ycombinator.com/best</a>",1190649707
58919,story,,,13,3,nickb,"Rubinius is important - ""Rubinius will be the CRuby implementation of choice within 6 months""",http://ola-bini.blogspot.com/2007/09/rubinius-is-important.html,,1190649603
