ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
266156,comment,265136,265834,0,0,13ren,,,"You're right. In a sense, that's also true of comp sci academics and professionals. The field isn't a <i>disciplined</i> field (unlike mechanics). I think it's partly immaturity (mechanics is older); partly massive opportunity (everyone just reinvents everything); and partly the mathematical nature of comp sci...<p>In my research, I've seen mathematical models reinvented with different technologies a decade later: e.g. first SGML and OODBMS; now XML and Java. The later writers are unaware of the earlier writers.<p>There's very little knowledge of what's been published. It's hard to find, and hard to recognize because of different terminology. It can be very hard to recognize in a deeper sense, whether two domains (and algorithms operating on them) are actually equivalent (e.g. languages recognized by automata vs. languages generated by regular expressions).<p>BTW: Ken Thompson patented his method for searching with regular expressions (expired 1988).  <a href=""http://www.google.com/patents?id=Cx9xAAAAEBAJ&printsec=abstract&zoom=4&dq=3568156#PPA5,M1"" rel=""nofollow"">http://www.google.com/patents?id=Cx9xAAAAEBAJ&printsec=a...</a><p>As far as understanding the fundamentals of computer science, I think we are very poor at it - much of the mathematics is about very simple and basic stuff (though the mathematics itself is usually not so simple...).<p>Mechanics can also be described by mathematics - arguably, <i>is</i> mathematics in a sense.  I don't think that being mathematical is a killer for computer science patents.",1217843946
266155,comment,266056,266110,0,0,thamer,,,"I don't see many problems either, probably because I am a full-time GNU/Linux user, but another application that is often pointed out as difficult to use is The GIMP.\nI actually disagree with the premise that GIMP is hard to use, and find it quite intuitive for basic operations; most critiques actually complain that it doesn't have the Photoshop look&feel.<p>It often boils down to the difficult task of discerning usability, intuitiveness, efficiency, and familiarity.",1217843520
266154,comment,265937,265977,0,0,42flicks,,,"I like the interface of nowdothis.com - I like the idea too, well done!",1217843445
266153,comment,266101,266101,0,0,42flicks,,,"Very interesting, thanks for posting the link.<p>I'm also interested in what industries this language perfoms well.",1217843352
266152,comment,266040,266040,0,0,VinzO,,,"There is also Scilab",1217843126
266151,comment,266040,266040,0,0,ralphb,,,"I have been trying out Sage. Although it looks very attractive on paper, the browser-based interface seems very odd way to go about it, and I couldn't get over the hump of adapting to that.<p>Any suggestions as to how to think about that? Could someone explain the advantage?",1217843091
266150,comment,266101,266137,0,0,prakash,,,"do you work for a bank? where did you learn K?",1217843051
266149,story,,,4,0,jasonlbaptiste,"Techdirt: College Classes On Malware Writing Still Piss Off Anti-Virus Firms",http://techdirt.com/articles/20080803/1834441874.shtml,,1217842723
266145,comment,265897,266141,0,0,william42,,,"It handles lists that way because of the braindead idea of sigils which, in order to be semantically consistent, cannot have as an element of a list being a list.",1217842322
266141,comment,265897,266096,0,0,trominos,,,"The ugliest parts of Perl (in my admittedly not-exceptionally-well-informed opinion) are dereferencing variables and automatic list flattening.<p>I honestly don't know what kind of crazy design process could possibly lead to the way Perl handles nested lists. $a[0]->[0]? @{$a[0]}?<p>Why? God?",1217841983
266140,comment,265787,265985,0,0,borism,,,"could you explain how right to bear arms is of any help in such situation?",1217841697
266139,comment,266017,266111,0,0,rms,,,"here I'd give it a week between posts",1217841590
266137,comment,266101,266117,0,0,cousin_it,,,"I'm lucky to know a little K. The language basically takes this one idea: instead of processing objects one by one with lambdas and the like, use bulk high-level operations on whole datastructures at once. And really runs with it. For example, it has an SQL DBMS written without loops, using only bulk vector operations.",1217841159
266136,comment,266017,266017,0,0,ichverstehe,,,"And for Gods sake. Stop that 2.0-naming-bullshit. I -can- spell.",1217841154
266134,comment,265841,265841,0,0,jdoliner,,,"I'm presently doing research on Genetic Programming. I'm just an undergrad but I've read a fair amount on the subject and feel that I basically understand it at this point. However my understanding is largely academic and I'm curious as to how marketable the ideas are. Since YC is exactly the crowd that I should ask to find this out, I'm asking. Particularly has anyone used any sort of an evolutionary solution in their product, considered it? If the later why did you decide against it? Has anyone heard of it or is it a new idea? Most important question, who's intrigued and sees potential? Because I do.",1217840845
266133,comment,265560,266058,0,0,mleonhard,,,"The site makes it a <i>lot</i> easier.  There are thousands of counties in the United States.  This site lets you search all of them in a moment.",1217840738
