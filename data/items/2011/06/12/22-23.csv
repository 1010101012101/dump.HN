ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
2647608,comment,2647123,2647123,1,0,hristov,,,"Very interesting. It is interesting to compare the reviews of Great Expectations and Les Miz. They correctly called Great Expectations a masterpiece, but the Les Miz review was simply awful.<p>They spent half of the review complaining about how the author was paid too much for the book and how the poor publisher had to suffer so much trying to sell it. And then they attack the book for trying to replace the bible (!!!) for being too nice to the poor and unfortunate and being dangerous for the undeveloped minds of ordinary people. And then they say: ""The bigotries of virtue are better than the charities of vice."" Unfortunately, the author of that review probably did not live to see the second world war and realize how wrong he was about that.",1307919590
2647607,comment,2646571,2646571,2,0,matt912,,,"I must ask, why the name Gridless? Surely HTML/CSS frameworks and grid systems are completely different things? The name almost seems to suggest that the use of a grid is a bad thing. Just the way I perceived it :)",1307919523
2647606,comment,2632723,2632723,1,0,pasbesoin,,,"Kathy Sierra is always worth the read.  She stopped blogging regular a few years ago due to personal reasons.  If you're therefor not familiar with her writing, it's worth a look.",1307919469
2647605,comment,2646648,2647143,5,0,Swannie,,,"Especially for the people in the audience asking themselves ""is this like X, but with i and j?"" ... ""Ahhh, it IS like X with i, j AND k. Now I get it.""<p>Which you hope to lead on to ""Now why can't X just add these features? What makes /this/ company better than X?""",1307919438
2647604,comment,2647219,2647439,5,0,curtis,,,"Putting XML literals in the language just feels wrong.  On the other hand, they've turned out to be damn useful when you're writing the back end for a web application.",1307919380
2647603,story,,,2,0,rayvega,"Calculating PageRank with NumPy",http://mikej.st/2011/02/14/pagerank-with-numpy.html,,1307919334
2647602,comment,2646001,2646569,1,0,derleth,,,"You completely misstated your position and need to learn how to express yourself in English.",1307919261
2647601,comment,2647255,2647255,14,0,kylemaxwell,,,"<i>Passions such as art history are far easier to pursue in life by constantly reading books, going to museums, and attending lectures. Computer science is impossible to engage with on a casual basis. It requires a massive and highly focused investment of time and energy, ideally with the worlds best teachers guiding you at the same time.</i><p>First, I don't know that I agree with the first bit. One may certainly dabble in art history (or many other liberal arts-type majors), but one won't get quite as much out of it as someone else who dedicates hours and hours to it over months and years. This holds true for all deep, non-trivial subjects.<p>Further, one certainly /can/ 'engage with CS on a casual basis'. People do it all the time, and they certainly don't always have ""the world's best teachers"" to guide them. Mentors, teachers, and professors play an important role, but many people do quite well in their chosen fields without that extra boost.",1307919213
2647600,comment,2647191,2647402,7,0,SoftwareMaven,,,"Try <a href=""http://thestartupfoundry.com/"" rel=""nofollow"">http://thestartupfoundry.com/</a>",1307919168
2647599,comment,2647219,2647457,0,0,cageface,,,"Scala looks complex on paper, but my experience has been that in practice it's not that bad. If you're designing a library you need to think hard about types but you can put together an app very quickly in Scala and with a lot fewer initial bugs than in a dynamically typed language.",1307919066
2647598,comment,2647144,2647449,3,0,bumbledraven,,,"Agreed. It won't be long before Google can link up any writing you've done under your real name with all the things you thought you posted anonymously. A writer's <a href=""http://en.wikipedia.org/wiki/Writeprint"" rel=""nofollow"">http://en.wikipedia.org/wiki/Writeprint</a> is hard to disguise without ruining the message.",1307919034
2647597,comment,2647263,2647406,1,0,metageek,,,"Isn't AT&T dead? SBC bought the name, not the company.",1307919005
2647596,comment,2647198,2647198,4,0,gliese1337,,,"This immediately makes me think of David Brin's _Sundiver_.<p>Or X-men's Cyclops.",1307918995
2647595,comment,2646740,2647311,1,0,Swannie,,,"Doesn't surprise me if it's in a 20k loc program. Very easy to overlook the obvious.<p>That said, like the previous comments, if someone had seriously looked for this issue, you'd have hoped they'd have found this pretty quickly.",1307918985
2647594,comment,2647191,2647481,4,0,SoftwareMaven,,,"Those aren't even the important numbers. With 22x the number of articles and the ratio of small and mid stage startup to tech giant  articles half of what it used to be, even <i>finding</i> the articles in the noise is a joke.<p>Then, once found, we have to deal with the quality problem you mention.<p>TechCrunch left my reading list almost a year ago for these reasons.",1307918972
2647593,comment,2647198,2647198,4,0,athom,,,"Reminds me a little of a Mycon podship:<p><a href=""http://wiki.uqm.stack.nl/Podship"" rel=""nofollow"">http://wiki.uqm.stack.nl/Podship</a>",1307918965
2647592,comment,2646979,2647339,2,0,pnathan,,,"Well, it is pretty rude of them.<p>But yes, if you want to maintain a reliable presence, you have to pay for it.",1307918925
2647591,story,,,4,0,octopus,"Python 3.1.4 new release",http://www.python.org/download/releases/3.1.4/,,1307918923
2647590,comment,2647217,2647571,4,0,gwright,,,"You seem to be listing a variety of quality of life issues, which I don't think is quite the same as 'freedom'. I'm not suggesting that it wouldn't be worthwhile to investigate those issues, just that it seems to be a different focus than the linked report.  Your focus would seem to compliment rather than refute the goals of that report.",1307918919
2647589,comment,2647301,2647301,1,0,noduerme,,,"I'd just say, think of the cool big project you want to do first and just let that dictate which technology you use to solve it.",1307918897
2647588,comment,2647219,2647543,1,0,stonemetal,,,"Do they have actual plans though?  There has been talk  of .NET support since the beginning.  Basically I wouldn't hold my breath.",1307918847
2647587,comment,2647144,2647144,9,0,maeon3,,,"Many species in the animal kingdom camouflage themselves, so they won't be eaten by predators.  I wonder if you could convince one of these animals to stop camouflaging themselves with an argument that the predators won't hurt you so long as you stop doing anything that might attract the predator.",1307918847
2647586,story,,,4,0,octopus,"The Root of All Squares",http://drdobbs.com/blogs/embedded-systems/229402945,,1307918811
2647585,comment,2646602,2647497,1,0,berntb,,,"I am far from an expert on Romania, but would guess there are two more factors?<p>- Lack of trust in the society, which ought to generate a cynical attitude. It is the parameter which seems most different from [Edit: West European] countries. I assume this is both from the communist history (secret police etc) and that the present politicians are more or less the same thieves as before 1989.<p>- A Microsoft domination in the infrastructure. Open source seems more prevalent on Linux/BSD/et al.",1307918783
2647584,story,,,5,0,evincarofautumn,"How to Make a Living of Language Design",http://programmers.stackexchange.com/questions/83380/whats-the-business-in-developing-a-programming-language/83407#83407,,1307918679
2647583,comment,2647301,2647301,1,0,JBerlinsky,,,"Shoot me an email when you get the chance (in profile). I started young, too, and while I'm certainly not ""prodigy-aged"" at this point, I rather enjoy conversing about being a young programmer :)",1307918607
2647582,comment,2647219,2647439,5,0,fizx,,,"...because what scala needs is more api-breaking decisions...",1307918561
2647581,comment,2647302,2647302,2,0,shareme,,,Finally!,1307918558
2647580,comment,2647255,2647255,4,0,amichail,,,"I think the debate is more about self-learning vs a formal education.<p>Moreover, a CS degree is overkill for most of the programming people do.",1307918463
2647579,comment,2647390,2647390,1,0,swannodette,,,"Fascinating! Recently I've been falling in love with Prolog and it's possibilities particularly when it's fast and embedded in a Lisp.",1307918443
2647578,story,,,3,3,ubershmekel,"154 websites that store your password in plain text",http://www.reddit.com/r/netsec/comments/hy1n9/154_websites_that_store_your_password_in_plain/,,1307918437
2647577,comment,2647255,2647255,4,0,piinbinary,,,"Such essays should be included in the literature given to students who are choosing a major.",1307918426
2647576,comment,2647217,2647362,1,0,nickff,,,"It may also be interesting to study whether freedom is a leading (or lagging) indicator of prosperity, as it is likely that laws have a gradual impact, not an immediate one.",1307918411
2647575,comment,2647301,2647541,1,0,shadowpwner,,,"Google Summer of Code is only offered to college students.",1307918408
2647574,comment,2647003,2647103,1,0,MaysonL,,,"<i>It's unique in being far more than a language: once upon a time, it was an operating system</i><p>Well, it shares that distinction with Oberon, so, not unique.",1307918385
2647573,comment,2645329,2646015,1,0,radioact1ve,,,"Everything now is working... but it's a pain in the ass to get everything working. I've been using Linux since 2001-2002. I'm scared of updating anything because of what might break. I love Linux ideas and principles but shit man I wish it was easier. Easier != windows/mac",1307918311
2647572,comment,2645835,2646774,2,0,SamReidHughes,,,"Nope, kleiba correctly interpreted my comment :)",1307918287
2647571,comment,2647217,2647369,1,0,Steko,,,"""Government regulation of personal freedom is a fine gauge for overall freedom.""<p>Some of us disagree.<p>""How would you have done it? What issues would you have selected?""<p>The most important things I would look at are education outcomes of the first and second quartile (of household income) and the diversity of employment available.<p>I would also look at pollution levels, highway fatality rates, incarceration rates, certain crime rates, certain disease rates, services received for those dreaded taxes, entertainment and cuisine options, we could go on...<p>Big towns don't become cities and cities don't become big cities and big cities don't turn into metropolii through coercion. They're big because people run away from South Dakota and never go back.  Freely.",1307918257
2647570,comment,2646979,2647130,7,0,mryall,,,"Trademark is the normal legal foundation for protecting a name. But trademarks are limited by industry and geography, so attempting to enforce them on a single global namespace like Twitter or DNS is always going to end up with conflicts.<p>However, this is probably the best way to protect a name you use on Twitter: register a trademark and let them know that you're using your registered name as a Twitter handle and want it maintained for your business/organisation.",1307918240
2647569,comment,2647144,2647144,7,0,cduan,,,"I've always thought that the best response to ""Privacy is less important because I've got nothing to hide"" is what I call the ""privacy lets you pick your nose"" argument. There are plenty of things that we like to do in private, that are not illegal, but which, if revealed publicly, would cause substantial embarrassment. For example, picking your nose, watching porn, lip-syncing to cheesy music in the bathtub.<p>All of these things create individual pleasure, and thus overall societal utility and value. (That is, they make people happy.) To effectively deny people these individual pleasures by forcing them out into the open would be to reduce overall societal utility. Thus, privacy benefits society by enabling people to engage in legal, but potentially embarrassing, behavior.<p>(I happen to like Dan Solove's work a lot, and I think he is ultimately coming to the same conclusion as me, but his argument seems to rely on accepting his definition of privacy, while I think that the above argument simply attacks the ""I've got nothing to hide"" argument head on.)",1307918186
2647567,comment,2645329,2645774,1,0,radioact1ve,,,"Same excuses I've been reading since I first started using Linux around 2001.",1307918142
2647566,comment,2647301,2647301,2,0,btcoal,,,"Wow. I think you and I are in very similar positions. Although you've got a decade headstart on me: Win. I would say our interests and current set of skills overlap quite a bit, this is what I'm doing to get to the next level:<p>- Find a mentor. This is really important. IRC + StackOverflow is a good substitute, but you need somebody who you can go to with your dumbest questions and who has infinite patience.<p>- Pick something you think is cool and copy it. Wholesale. Don't even worry about doing it well, just get it to work. I made a couple HN clones for different domains just to see how it works.<p>- Take a break from programming and get a different hobby. Preferably something that makes you work with your hands (metal-working, cooking, painting (PG FTW) are good).<p>- Take a theoretical CS course at a local university. It will really help elevate your thinking about computation and problem solving.<p>Hope that was at all coherent/helpful. Good luck!",1307918113
2647565,comment,2647329,2647329,16,0,xbryanx,,,"My Git aha! moment was when I discovered ""git add -p"".<p>I use it all the time now to break my work apart into multiple atomic commits.",1307918019
2647564,comment,2647219,2647439,9,0,jorgeortiz85,,,"See my answer on Quora to ""Will Scala ever remove XML literals?"" <a href=""http://www.quora.com/Will-Scala-ever-remove-XML-literals"" rel=""nofollow"">http://www.quora.com/Will-Scala-ever-remove-XML-literals</a><p>Summary: No. At the time that Scala was started, built-in support for XML showcased one area were object-oriented decomposition failed and functional programming proved quite useful. Today the benefits of FP are more well known, and it's generally agreed that if Scala were starting from scratch it would not include XML literals. However, given that XML literals are in the language already, that large code bases have come to rely on them, and that they generally don't get in the way if you don't use them, it's unlikely that they will be removed.",1307918009
2647563,story,,,2,0,DanielRibeiro,"HTML5 vs Native: The Mobile App Debate",http://www.html5rocks.com/en/mobile/nativedebate.html,,1307917963
2647562,comment,2639315,2643009,2,0,lylejohnson,,,"I'm sorry if I was unclear. In their post, Sofa wrote, ""Were committed to securing a great future for [Versions and Kaleidoscope] outside Sofa"". I noted that they have not been particularly good stewards of Versions over the past two years, and that therefore the situation couldn't get much worse by handing it off to someone else.<p>I don't really disagree with the point you make below about software licenses, and that when you buy a license you're paying for the software as it exists <i>today</i>, right now. But I think my take is more along the lines of nestlequ1k's. When I bought a license for Versions, I went into that ""relationship"" (ugh) with the expectation that Sofa would continue to improve on it, and that I've have the opportunity to buy future upgrades. That's unlikely to happen at this point. So yeah, I got what I paid for, no argument there, but I can't deny that I'm disappointed with how things turned out.",1307917963
2647561,comment,2647219,2647457,3,0,kikibobo69,,,"Bill Venners, owner of Artima, is a co-author of the Staircase book, and author of ScalaTest. He has embraced Scala more than most.",1307917907
2647560,comment,2647219,2647219,6,0,rvasa,,,"one of the better written articles out there for some one new to the language. Also like the fact that some of the funamentals of functional programming are also briefly introduced in context.",1307917881
2647559,comment,2646907,2646907,1,0,tshauck,,,"really want to do this, I'm gonna get in the IRC chat",1307917877
2647558,comment,2647301,2647301,5,0,atakan_gurkan,,,"Did you consider learning biology?<p>You sound smart and comfortable with solving problems with a computer, yet you do not seem to be satisfied with developing applications for people to use in everyday life. Perhaps your calling is to develop computer programs to solve scientific problems. I am extrapolating from my experience here. I am an astrophysicist and do simulations for studying problems in stellar dynamics. It is really fun, but sometimes I wish I had the background in biology to have the option to switch to that field, since there seems to be tons of interesting problems and really smart guys there; in particular in molecular biology and in brain research. I think if I knew what I know now when I finished high school I would go for biology and not physics (this does not mean I regret my choice though, I do not), or at least take a few biology courses.<p>Unfortunately I cannot recommend many books. The only decent biology book I have is ""The Molecular Biology of the Cell"" by Alberts et al. It is really good. I have the feeling others here can make better/more recommendations if you ask. This is not necessarily an engaging book.<p>Good luck!",1307917860
2647557,comment,2647301,2647301,2,0,random42,,,"You are doing good. Dont over-complicate things, and keep having fun along the ride.<p>If you need any advice/opinion regarding programming or software development, feel free to e-mail.",1307917843
2647556,comment,2647451,2647451,1,0,decultured,,,"Your site seems to work well, and is a service I could have made use of a few months ago.  Finding reviews and scheduling local services like this often leads to a million dead ends using google and traditional search.<p>Right now, in Kansas City you have one provider with no reviews, so for me it has not yet solved the problem, but it is a great start!",1307917838
2647555,comment,2647219,2647439,5,0,kikibobo69,,,"I used to agree, until I ran into a bunch of inline StringBuilder Java XML where no schema existed, and simply converting it to Scala at least ensured it was well-formed while we reverse-engineered a schema.  I agree it's not something one should use much (well, maybe with Lift), but wow, is it ever useful when it's useful.  I agree, doesn't hurt much; helps massively when you need it.",1307917808
2647554,comment,2646979,2647239,2,0,evilpie,,,"Accurate data from <a href=""http://topsy.com/twitter/towerbridge"" rel=""nofollow"">http://topsy.com/twitter/towerbridge</a>, <a href=""http://pastebin.mozilla.org/1248326"" rel=""nofollow"">http://pastebin.mozilla.org/1248326</a>",1307917759
2647553,story,,,3,0,mathgladiator,"The sucky thing about being a CTO (or C*O) ",http://blog.mathgladiator.com/2011/06/sucky-thing-about-being-cto-or-co.html,,1307917757
2647552,comment,2647301,2647526,6,0,citricsquid,,,"> Also: get in touch with the Teens in Tech guys. They're awesome.<p>curious why you'd recommend this? As a casual observer and not at all familiar with what they've done beyond the ""public"" stuff, they just seem like a group of teenagers with some dumb luck. Their ""conferences"" seem surrounded by ""drama"" (he said she said whaa whaa stuff) that you'd <i>expect</i> from high school students, their actual products are pretty pointless (the blog gets 1 post every few days and it's either about some free product they got or their friends ~~application~~ startup and their apparent ""blogging platform"" thing died after a few months and was just a wp-mu install.<p>From what I've seen of ""them"" it seems he'd gain nothing from them. It's just a group of kids with connections doing nothing but making whatever is hip and happening and abandoning it for the next thing. See each of their twitter profiles, every few weeks they're the ""CEO"" of a new ""startup"".<p>The only ""high profile"" (in the HN esque scene) teenager I'd think of recommending is Mark Bao, he's actually <i>doing</i> things.",1307917755
2647551,comment,2646648,2646648,3,0,porter,,,"Probably a better distinction is that features are a short-term competitive advantage, which should not be mistaken for structural, long-term advantages that aren't easily copied.  Investor's are much more interested in the latter.",1307917697
2647550,comment,2647176,2647176,1,0,grimlck,,,"Am i the only one that went online shopping for the items mentioned after reading the article? :)",1307917658
2647549,comment,2647301,2647301,17,0,mechanical_fish,,,"The glory of being in your position is that you really can't make a mistake here. I'll dispense some random suggestions.<p>-- <i>it takes a ridiculous amount of time to do something that seems so easy.</i><p>Yes, this is a sign that you are doing it right. ;) Programming always takes a ridiculous amount of time. The only saving grace is that, once the program is done, a ridiculous number of people will be able to use it a ridiculous number of times. So, if you find that you're not motivated to finish stuff, you need customers. Customers are very motivational, and not just because they give you money. Happy customers are very morale-boosting.<p>-- The reason why you can know HTML, CSS, JS, and Python and still do not feel that you know web programming is that none of those things is a database. The database is the important part of web programming. Everything else is frosting. Try <i>SQL for Web Nerds</i>:<p><a href=""http://philip.greenspun.com/sql/"" rel=""nofollow"">http://philip.greenspun.com/sql/</a><p>It's getting more dated by the second, half the links are broken, and you will not want to actually use Oracle (try Postgres instead, or do what everyone else does and use MySQL with InnoDB) but I know of nothing more readable and certainly nothing cheaper; most published books on SQL are drier than dirt, and I fear that the online tutorials may be all syntax and no substance. Then maybe look at a framework or two. Other folks have recommended Django, or you could look at Rails. Nothing glues all the parts together like a framework.<p>-- There is nothing wrong with teaching yourself basic CS before you get to Stanford. You will not run out of potentially interesting things to study at Stanford -- either you can study more advanced CS, or you can (hint! hint!) study something that is not CS, like science or other branches of math. If you like reading SICP and CLRS for fun, by all means read SICP and CLRS for fun. Don't neglect other potentially fun things, though.<p>-- If you find that you know language syntax and simple statements but don't know how a whole app goes together, find someone else's app and tinker with that. Read other people's apps, take them apart, fix bugs in them, find bugs in them.<p>-- Find someone else to work with. Get some small but honest jobs on an online consulting site and fix other people's code. Join an open-source project and hack on stuff with a community. The Drupal project is always looking for people... (/shameless plug)",1307917642
2647548,story,,,1,0,littlemissdebbi,"Put it all on Jack?",http://www.iijiij.com/2011/06/11/put-it-all-on-jack-09429?news=123,,1307917507
2647547,story,,,2,0,helwr,"From Languages to Information (Dan Jurafsky)",http://www.stanford.edu/class/cs124/,,1307917493
2647546,comment,2647520,2647520,2,0,zdw,,,"Direct links to the primary source:<p><a href=""http://thetanktheory.squarespace.com/this-8-bit-life/2011/6/10/ubuntu-linux-pandabuilder.html"" rel=""nofollow"">http://thetanktheory.squarespace.com/this-8-bit-life/2011/6/...</a><p>and the build blog: <a href=""http://dmtechtalk.wordpress.com/"" rel=""nofollow"">http://dmtechtalk.wordpress.com/</a>",1307917438
2647545,comment,2645423,2645423,3,0,sparky,,,"The authors touch on the hardware benefits you get from doing away with pointers, but I think you could go much, much further.  Yes, you know which things are heap-allocated and which are stack-allocated, so you have some language-level disambiguation that way, but within a functional operation like map, reduce, fold, etc., you have perfect knowledge about which data is touched in what way, so you could potentially do something like use a compiler-managed scratchpad for it instead of a cache.  The compiler would have perfect timing, bank conflict, etc. information, so it should be able to an awesome job of scheduling and use much less energy than a hardware-managed cache.  Will be interesting to see how much of this kind of thing is done as we come up with ways to compile high-level languages directly down to performance- or efficiency-oriented hardware (not through C).  Most modern architectures are designed to do a good job when the compiler has very little idea what the code is doing; you can save a lot of area and power if you know more.",1307917411
2647544,story,,,66,21,zdw,"Canonical creates a custom 40-processor ARM build machine",http://thetanktheory.squarespace.com/this-8-bit-life/2011/6/10/ubuntu-linux-pandabuilder.html,,1307917353
2647543,comment,2647219,2647511,3,0,gaius,,,"The Scala team have plans afoot to target LLVM and .NET too.",1307917288
2647542,story,,,3,15,brianbreslin,"Ask HN: Any CS/MBA combined degree programs out there?",,"Have any of you ever heard of such a thing? A masters in computer science paired with an MBA? If so, any experience with them?",1307917215
2647541,comment,2647301,2647301,2,0,thisisnotmyname,,,"Sounds like you're doing great - you're miles ahead of where I was at 15, that's for sure.  I think you need a mentor.  Look to open source, local universities, etc.  I've heard good things about the google summer of code.",1307917184
2647540,comment,2645874,2647121,1,0,JulianMorrison,,,"<a href=""http://golang.org/doc/go_spec.html#The_zero_value"" rel=""nofollow"">http://golang.org/doc/go_spec.html#The_zero_value</a><p>Yes if you're using pointer-like things, but at least in Go it's an unsurprising thing, all uninitialized data is zeroed. And Go permits you to work with by-value structs and arrays if you want.",1307917134
2647539,comment,2647219,2647475,10,0,andrewflnr,,,"Perhaps by ""feels like a dynamic language"" he means ""is succinct"".",1307916880
2647538,comment,2647301,2647301,3,0,spc476,,,"First off, if you know C and C++, then you should realize that C is <i>not</i> C++ and really, the two should be considered completely different langauges (C99 has enough semantic differences from C++ that you no longer can compile C99 code under a C++ compiler).  With that said:<p>1. Learn C.  Pick up the K&R book and work through it.  C is the backbone for most everything these days (Unix, Perl, Python, Ruby, etc, all written in C).  It will give you a feel for how the computer works at the lowest level (unless you <i>really</i> want to learn Assembly, which I would recommend eventually).  Skip C++ for now.  It's very difficult to learn the entirety of the langauge and everybody uses different subsets of C++ (and C++ is a language you can pick up when you need it).<p>Also, learning C will give you a solid grounding in imperative (procedural) languages.<p>I would also recommend learning a functional language, either Haskel or Erlang (Haskel is a more ""pure"" functional language, but Erlang has probably more commercial use, even if it's a bit less ""pure"").  You don't have to learn this like C, but enough to be comfortable with thinking ""functional"".  It'll help you programming even in non-functional languages.<p>I would also recommend learning an object oriented language (but <i>not</i> C++)---either Java (more practical these days, if a bit verbose) or Smalltalk (not the original object oriented language (that distinction goes to Simula) but probably the first <i>pure</i> object oriented language).<p>Don't worry now about making money, nor about reinventing the wheel.  At this stage, you <i>should</i> be reinventing the wheel, if only to gain a deeper understanding of the trade-offs in programming.  This skill will also help you evaluate which libraries are useful under certain circumstances.<p>As for keeping your interest, have you thought of making a game?  Even a simple game like Space Invaders (even a text-only version is useful) or Tetris is simple enough to finish in a few days, yet significantly non-trivial enough to see how differences in implementation affect the resulting program.<p>But if you want a real mind-blowing experience, try implementing the language Forth.  There are useful implementations of Forth in a little of 2k worth of code (okay, written in Assembly) so it's not a difficult language to implement, but it's amazing just how powerful Forth is (think of it as the poor man's Lisp).",1307916879
2647537,comment,2646501,2646556,1,0,rospaya,,,"Very interesting. Makes me think if there is any knowledge or technology that we lost in the process? Is there something we knew but don't know anymore?",1307916865
2647536,comment,2646979,2647326,1,0,xsmasher,,,"Not yet. The original user should kindly ask for the account back.<p>EDIT: User, not owner.",1307916857
2647535,story,,,1,0,ajames1463,"Typhoon dodong",http://www.typhoondodong.net," A site that contains information about typhoon creation, latest weather condition, and safety precautions.",1307916816
2647534,comment,2646907,2647373,1,0,Josmas,,,"Hey there, the original idea is that each of us in the study group would have a github repo with their own solutions so we all can share and learn from each other. But I'm happy to go along with whatever works better for everybody.\nIf anyone wants to be added as an organiser/admin in the p2pu site or google group I'll be happy to add you guys!\ncheers,\nJos",1307916718
2647533,comment,2646979,2646979,3,0,jasonlotito,,,"<a href=""http://support.twitter.com/articles/18311-the-twitter-rules"" rel=""nofollow"">http://support.twitter.com/articles/18311-the-twitter-rules</a><p>""Trademark: We reserve the right to reclaim user names on behalf of businesses or individuals that hold legal claim or trademark on those user names. Accounts using business names and/or logos to mislead others will be permanently suspended.""<p>How they handled it might have sucked, but it was fairly clear what they would end up doing in situations like this.",1307916710
2647532,comment,2646596,2646596,1,0,jhuni,,,"This article states that well known functional programming languages includes the ML family.<p>What about the Lisp family (Scheme, Clojure, Qi)? They represent the dynamic side of functional programming.",1307916693
2647531,comment,2647427,2647427,2,0,ckuehne,,,"<a href=""http://news.ycombinator.com/item?id=96676"" rel=""nofollow"">http://news.ycombinator.com/item?id=96676</a><p><a href=""http://news.ycombinator.com/item?id=1900937"" rel=""nofollow"">http://news.ycombinator.com/item?id=1900937</a>",1307916689
2647530,comment,2647417,2647417,1,0,pistacchio,,,"none of them works... a friend of mine said! @:)",1307916685
2647529,comment,2647219,2647511,11,0,Lewisham,,,"Depends on what is suboptimal to you. If ""suboptimal"" is ""not optimal for the perfect programming language"", then sure. If ""suboptimal"" is ""not optimal for real world use"", then no.<p>Scala's interop with Java libraries has been a huge, huge boon, and undoubtedly drove take-up where there otherwise would have been none. Scala has come this far in a decade. Python is 20 years old. Ruby is 16. Scala came a long way in a short time, and was probably resigned to the dustbin of ""that would have been cool"" languages without that interop.",1307916680
2647528,story,,,2,0,KTamas,"Atkinson dithering (HyperDither) with Canvas+WebWorkers+FileReader API",http://gazs.github.com/canvas-atkinson-dither/,,1307916612
2647527,comment,2647390,2647390,6,0,catechu,,,"While I do not know whether or not Watson actually does this, the paper doesn't mention anything about parallelism -- I suspect that the exploitation of structured parallelism is another handy benefit to using Prolog on as many machines as Watson was using.<p>(For example: <a href=""http://lambda-the-ultimate.org/node/1867."" rel=""nofollow"">http://lambda-the-ultimate.org/node/1867.</a>)",1307916590
2647526,comment,2647301,2647301,11,0,puls,,,"Whoa there. Hold on just a minute and take a step back.<p>You're 15 years old, you made $21k making apps on webOS. You have four or five languages under your belt. By anybody's metrics, you're doing really really well. Awesomely, in fact. Even though ""awesomely"" really isn't a word.<p>Don't worry about it. Just keep exploring, and you'll run in to fun stuff that will continue to expand your horizons.<p>One thought that hasn't come up here yet is to get involved with the most intriguing open-source project of your choice. Get some experience programming on a team, and you'll not only have a chance to learn from others, but you'll also be able to expand your own portfolio without having to worry about validating ideas.<p>But the best thing you can give yourself is an open mind and a shot of confidence. Also: get in touch with the Teens in Tech guys. They're awesome.",1307916558
2647525,comment,2647301,2647301,4,0,mpk,,,"> Another option would be for me to learn about data structures and algorithms<p>I wouldn't call this an option, but it also doesn't mean you have to spend the next year doing nothing but this. I would recommend spending a few days getting the basics under your belt and figuring out the more advanced stuff when you encounter it (and trust me - you will, they're everywhere).<p>You already understand how apps work and how you build them so if you're unsure what project to tackle next I'd highly recommend picking up Django (because you already know python) and building some web app that just seems interesting to you. It'll give you some server-side experience, expose you to databases and the HTTP protocol (which everyone on the web should know - it's not that complicated but having worked with it really gives you a different picture of the web).<p>It'll also give you a working knowledge of browsers, AJAX, HTML5, etc which are always useful skills to have. You might even find yourself going back to apps this way by using Phonegap which allows you to write cross-device apps using web technologies (though the process isn't as easy as the website makes it appear).<p>Basically just work on expanding your knowledge until you find a project that fits and then dive deep into that.<p>Also, it's all hard work and everybody faces those problems, don't let it get you down.",1307916553
2647524,story,,,1,0,DanielRibeiro,"Turning the numbers into people",http://blogs.forbes.com/stevedenning/2011/06/12/leadership-more-on-saying-no-while-still-inspiring-people/,,1307916543
2647523,comment,2646445,2646509,1,0,rocamboleh,,,"Great. Thanks for the reply; I've been to a few of these, but will check out the others. \nHave you heard of this Word11 Blogging event? (<a href=""http://word11.com/"" rel=""nofollow"">http://word11.com/</a>) \nI'm thinking it might be a good place to meet some people; ever heard of it or have any idea what it's like?",1307916513
2647522,comment,2646501,2646501,1,0,DeanCollinsLCC,,,"wow!!! makes my weekend of doing stuff around the house look weak.",1307916434
2647521,comment,2647301,2647301,1,0,mcs,,,"I would say all successful engineers and aspiring entrepreneurs need to know the basis upon which we program today. Where we came from with assembly, why so many people wrote blocking code vs using event-driven programming, even though we've known that to be the most efficient way to handle IO for nearly 30 years, and the general human nature of technology and economics revolving around that. Working at a startup that is transparent about it's business relations is the most engaging and thrilling way to pick that up, of course. Knowing the broadest amount of relevant technology, and how to apply it to help people solve problems, is the most fulfilling (and coincidentally the fastest way to accumulate large amounts of money).<p>If you're familiar with some of the heavy hitting problems in computer science right now, such as vertically scalable architecture, garbage collection, how difficult it is to debug multithreaded applications, you might want to check out Node.JS, as it is my #1 bet for large adoption of engineers in the near future. It's the first project of it's kind, in the age of GitHub, that can really be called a trending software platform. It allows you to do very rapid iteration of development, without having the hassle of how to handle large amounts of IO and other problems that will make you bang your head against your desk with if you were using other systems.<p>Above all though, the most interesting projects for you to work are probably what you would learn the most from.",1307916309
2647520,story,,,6,1,unwantedLetters,"How Canonical automates Linux package compilation",http://hackaday.com/2011/06/12/how-canonical-automates-linux-package-compilation/,,1307916251
2647519,story,,,1,0,fosk,"Global Internet usage by 2015 [infographic]",http://holykaw.alltop.com/global-internet-usage-by-2015-infographic,,1307916233
2647518,comment,2647003,2647142,1,0,oomkiller,,,"Most of their job postings still mention Ruby, so I suspect a big portion is Ruby/Rails based.",1307916212
2647517,comment,2647123,2647123,2,0,hugh3,,,"Fascinating.<p>So far I'm only up to <i>Leaves of Grass</i>, but I'm struck by the prose style of the earlier reviewers. Even the most pompous and pedantic of today's book reviewers would never write like this:<p><i>But multitudinousness cannot make the spectacle of his morbidness any more acceptable. It cannot palliate the gross impropriety of which he is guilty, in publishing what is unfit for repetition; an impropriety doubled by the retention of this disgusting stuff in a new edition issued after many years, during which the author has had ample opportunity to free himself from his youthful crudities.</i><p>though whether this is an indication of the dumbing down of the audience or merely some restraint on the part of overeducated book reviewers is unclear.",1307916203
2647516,comment,2646477,2647483,1,0,kross,,,"Read ""It's Not Luck"", followed by ""The Critical Chain"", then pick up any Agile Methodology book.<p>You might be amazed at the new insights you may have.",1307916027
