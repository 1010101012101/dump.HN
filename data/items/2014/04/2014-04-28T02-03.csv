ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
7658014,story,,,1,0,spking,"The End of One-Doctor Medicine",http://www.utsandiego.com/news/2014/apr/26/obamacare-deals-blow-to-one-doctor-medicine/,,1398653987
7658013,comment,7657394,7657956,12,0,riobard,,,"Shared state is bad because it breaks local reasoning. Without enforcing certain disciplines (i.e. always sharing by passing messages via Go channels) it&#x27;s hard, if not impossible, to reason about local behaviors without considering other parts of the code. Immutable vs shared mutable state is a design choice. Erlang chose immutability for safety, while Go chose shared mutable state for practical reasons, but as a remedy Go recommends best practices to avoid the drawbacks caused by it.<p>Pre-emptive scheduling is bad because you can have a goroutine running a tight loop starves other goroutines. To address that problem, you should manually call runtime.Gosched() to yield control and allow the scheduler to run other goroutines. Erlang&#x27;s reduction-based scheduling does not have this problem and can be very fair.<p>Goroutine lacking identity is a major design difference from Erlang. In Go, channels have identity, but goroutines don&#x27;t. In Erlang, it&#x27;s the other way around: processes have identity, and channels are implicit a.l.a mailboxes. In theory you can simulate one style in the other, but the implication of this design choice is very proud. I&#x27;m a Go fan, but personally I think Erlang&#x27;s model is easier to reason about in scale, and it has this nice symmetry with OS threads/processes (you can kill them easily. Good luck killing a goroutine).",1398653911
7658012,comment,7657394,7657940,27,0,rdtsc,,,"> but this article just shows that you don&#x27;t even have to try hard to create a biased comparison.<p>So, let&#x27;s see you detailed unbiased analysis...<p>> * Go is fast. Erlang isn&#x27;t.<p>Hmm. Given that you accused the author of making biased comparisons, I would expect some more detailed information there. &quot;Faster&quot; doing what? Assembly is faster, Go isn&#x27;t. Ok, let&#x27;s use assembly then.<p>> * Go has a non-surprising, mainstream syntax. You can pick it up in hours. Erlang - not so much.<p>I think Erlang syntax is small and self consistent. If ; and . are the biggest stumbling blocks to learning a new system. Ok, maybe Erlang is not for you.<p>> Go is good at strings. Erlang - not so much<p>Erlang is very good at binaries. It can even do pattern matching on them. Decoding an IPv4 packet is 2 or 3 lines of code only.<p>> Go has the obvious data structures: structs and hash tables. Erlang - no.<p>Erlang has obvious data structures --  maps, lists and tuples?<p>> * Go has shared memory. Yes, that&#x27;s a feature. It allows things to go fast. Purity of not sharing state between threads sounds good in theory until you need concurrency<p>Quite the opposite. You can get easy concurrency if you don&#x27;t share thing between concurrency contexts. You also get low latency response and non-blocking behavior.<p>Erlang shares binary objects above a certain size behind the scenes as well so those don&#x27;t get copied during message passing.<p>It also has Mnesia, a built-in distributed database. It is used heavily by WhatsApp to share data between primary and back-up instances of processes running on different machines.<p>> You just have to overlook ugly syntax, lack of string type, lack of structs, lack of hash tables, slow execution time. Other than those fundamental things, Erlang is great.<p>Ok it looks like we only have to overlook syntax. Sound good to me then, I can handle . instead of ; and I will also learn and use Go because both are very cool and interesting tools.",1398653862
7658011,comment,7657987,7657987,1,0,larakerns,,,"We use CouchDB for distributed instances, using Digital Ocean droplets with backups there as well…might not be best practice.",1398653853
7658010,comment,7657894,7657997,2,0,ggreer,,,"I just noticed that the plugin was last modified a year ago, but your story was written last week. It makes sense that the exact issue would be forgotten with time. I&#x27;ve had similar instances where I&#x27;ve forgotten the exact issue but remembered the general lesson.",1398653823
7658009,comment,7656084,7657452,6,0,cardiffspaceman,,,"You have written this several times but the empirical evidence is that you don&#x27;t accept them, you seem to have vehemently and repeatedly refused to accept this client&#x27;s drivers license. Do you not acknowledge that the client&#x27;s DL was refused? Do you not see how saying &quot;we accept DL&#x27;s&quot; several times has not helped your reputation at all?",1398653800
7658008,comment,7657894,7657894,11,0,crazcarl,,,"This reminds me of the George Bernard Shaw quote: &quot;The reasonable man adapts himself to the world; the unreasonable one persists in trying to adapt the world to himself. Therefore all progress depends on the unreasonable man.&quot;",1398653788
7658007,comment,7657394,7657976,6,0,thinkpad20,,,"I hope that wasn&#x27;t the actual reason why they decided against a REPL or other tools, because unfortunately, most of us aren&#x27;t as smart as Ken.",1398653770
7658006,comment,7656496,7657158,2,0,thetwiceler,,,"> The concept of &quot;compactness&quot; is the technical solution that lets you formulate calculus without them -- it&#x27;s typically only taught to math majors because infinitesimals are less awkward to do algebra with: we can now prove that the shortcut works, so why bother with the long way unless you have good reason?<p>I don&#x27;t know where you got the idea that compactness is in any way relevant to the formulation of calculus. Compactness is a property of topological spaces that, to an approximation, is a generalization of sets being finite or infinite. For example, with the discrete topology, a set is compact iff it is finite. There are many related notions of compactness. In R^n, a set is compact (and sequentially compact) iff it is closed and bounded.<p>Compactness is important for some ideas related to calculus, but it&#x27;s not related to formulating calculus. For example, if a continuous function maps from a compact space to R, then it achieves a maximum/minimum (this can be seen of a generalization that there is always a maximum/minimum of a finite set of real numbers, but not necessarily for an infinite set).<p>The word <i>infinitesimals</i> is also a tricky word to use. To a mathematician, an infinitesimal would probably mean an algebraic object that formalizes the idea of a number smaller than any positive real number. This is <i>not</i> what is taught in calculus or analysis classes, and is only relevant for non-standard developments of calculus.<p>The winner in the modern formulation in calculus is the &quot;epsilon-delta&quot; formulation of limits; that&#x27;s what&#x27;s taught in both calculus classes (at least to an extent) and analysis classes. The weird thing is that calculus is stuck with Leibniz&#x27;s notation, which does, in a sense, refer to infinitesimals. I think that&#x27;s what you&#x27;re really thinking of (rather than compactness) as how you can formulate calculus without infinitesimals. The thing is that, save notation, this <i>is</i> how calculus is taught today.",1398653758
7658005,comment,7657804,7658001,2,0,judk,,,"Funny this mistake rarely goes the other direction. Probably because &#x27;curry&#x27; is a fin word.<p>I propose &#x27;parry&#x27; for &quot;partial application&quot;, to  satisfy the punsters without compromising accuracy.",1398653749
7658004,comment,7656084,7657650,0,0,mattbarrie,,,"Both my site (Freelancer.com) and Paypal have similar issues. Both are subject to fraud on a daily basis, and we have to weigh up the security of our marketplace and the protection of our users versus customer support issues that become public very quickly in today&#x27;s world.",1398653702
7658002,comment,7657961,7657961,9,0,tel,,,"I think Haskell has been growing a lot fueled by having a really great base language finally getting a pretty comprehensive standard library. This was a highly intentional group effort that began probably 10 years ago and pushed the Haskell libraries to a level of maturity.<p>I can&#x27;t truly claim this has driven the adoption of other languages, but Haskell&#x27;s (or pick some language from the ML roulette) influence on Clojure and Scala is undeniable. Clojure&#x27;s commitment to immutability pales in comparison to Haskell&#x27;s, while the latter demonstrates the advantages of such programming in spades. Scala&#x27;s type system is a novel extension of the HM system which forms the basis of Haskell&#x27;s.<p>So am I claiming that the increased availability and &quot;practicality&quot; of Haskell has driven a renaissance in functional programming?<p>Sort of, yes, but I don&#x27;t feel it&#x27;s the core underlying cause. More a symptom in its own right. These ideas are the leading edge of programming language research. They&#x27;re smart to learn and to integrate into our next generation of tools. This evidence has long resounded from finding them at the center of the &quot;Holy Trinity&quot; of category theory, logic, and type theory. It&#x27;s &quot;practical&quot; significance is still growing, however.",1398653605
7658001,comment,7657804,7657967,1,0,ephemeralgomi,,,Yup.,1398653586
7658000,comment,7654392,7655289,2,0,rsmaniak,,,"Interesting...would you be able to give an example of the state machines you built and how you used them?",1398653574
7657999,comment,7657394,7657940,4,0,thinkpad20,,,"I don&#x27;t know that much about Erlang, or Go for that matter, but there are a couple of things that seem to be at issue:<p>* From what I can tell the times I&#x27;ve looked at it, Erlang&#x27;s syntax is pretty standard if you&#x27;re used to functional programming. Sure, if your background is in C and Java, you might have a hard time picking up Erlang syntax, but if you have experience with Haskell or ML, it will be nothing new, except for (that I can tell) its syntax for bit-level operations.<p>* Structs are not data structures. They are a way to represent objects. Erlang has these as well, in the form of Records, which as far as I can tell are pretty much exactly the same thing as structs.<p>* Hash tables are only really useful with mutable data, which has its own set of issues and which Erlang does not have (much). Erlang does have maps, which act much the same way but are immutable.<p>I think it really comes down to that Erlang was designed for a restricted set of uses, which makes it really excel there but seems to hamper it in other areas.",1398653564
7657998,comment,7656084,7656200,2,0,mattbarrie,,,"Hello campuscodi<p>With 11 million users you are bound to get a few complaints about something, however we are very proactive about finding these issues and resolving them. I personally am dealing with this issue and I have looked at the circumstances and I stand 100% behind my anti-fraud team.<p>Regards\nMatt",1398653560
7657997,comment,7657894,7657989,3,0,hswolff,,,"author here: I couldn&#x27;t remember clearly if the issue that was fixed was the block cursor one or something else.  It would prove logical that the only one I can remember is the actual issue discussed, but I can&#x27;t be sure.<p>Aside the focus was on the act and impulse rather than the actual issue.<p>Aside number two, I had a few glasses of red wine while writing this.  I find it helps get the words flowing, but the memory fuzzy.  ;)",1398653534
7657996,comment,7655468,7656316,2,0,nycticorax,,,"I apologize for the snark.<p>But I thought that your first statement was questionable, and that therefore your second statement was rather facile.<p>> Knuth&#x27;s definition of &#x27;bug&#x27; is a limited one, that seems to be mainly about logic errors. Allowing a user to incorporate bitmap fonts in a document (which very few users actually wish to do in 2014) would be considered a bug in other typesetting software.<p>Certainly, people sometimes use &quot;bug&quot; loosely, but it seems to me there is a strict sense in which a &quot;bug&quot; means something that was not intended by the writer of the code.  And the issue you describe clearly does not fit this description.<p>I would call what you describe a &quot;design flaw&quot;, at best.  But as I alluded to, it wasn&#x27;t even a design flaw at the time it was introduced.  So it&#x27;s really more of an anachronism than anything else.<p>And again, it&#x27;s not really clear that it&#x27;s even an anachronism in TeX, since it&#x27;s more of an issue with the DVI-to-PS (or DVI-to-PDF) transformation.<p>And then you went on to conclude, from this highly questionable chain of reasoning, that this &quot;bug&quot; is &quot;a fantastic illustration of the gap between academic and industry concepts of computing&quot;.  Which I just find galling.  Here you&#x27;re talking about one of the most celebrated computer scientists of all time, someone who is almost certainly a lot smarter than you (or I), and you chalk up a difference between what you and he call a bug to the difference between industry and academia.  As if Knuth is just some kind of ivory-tower crackpot who wouldn&#x27;t understand the real-world exigencies of industry.<p>So: I think your definition of &quot;bug&quot; is highly questionable, and I think that in the future, when you find yourself in disagreement with some celebrated academic computer scientist, you should perhaps linger a bit longer on the possibility that you might be mistaken, rather than chalking it all up to the difference between industry and academia.",1398653532
7657995,comment,7656858,7657813,0,0,georgewfraser,,,"Definitely true in general though angular in particular is SO GREAT that it is worth it. But it certainly doesn&#x27;t need MORE layers like the one in this post.",1398653521
7657994,comment,7657394,7657956,7,0,pcwalton,,,"> Why? Why shared state is so bad? Isn&#x27;t it taken care by Go&#x27;s channel anyway?<p>Because you can have data races and memory safety issues.",1398653507
7657993,comment,7655487,7656039,1,0,judk,,,"<a href=""http://en.m.wikipedia.org/wiki/Zorn&#x27;s_lemma"" rel=""nofollow"">http://en.m.wikipedia.org/wiki/Zorn&#x27;s_lemma</a><p>Minor major nitpick: Axiom of (Uncountable) Choice (AUC) is controversial. It isn&#x27;t intuitive, but it is independent from the intuitive axioms, which means that you don&#x27;t have to accept it, and if all you care about is things that might ever be computable during the existence of the Universe, you never need AUC, and AUC never tells you anything useful since it is nonconstructive in the worst way. (It doesn&#x27;t even say, like NP does in computing, that if you brute-force, you can solve any problem to any desired level of accuracy). AUC just asserts an answer exists. The interestingness is in knowing what other statements are equivalent to it , but it is and forever will be confined to purely abstract math (really! Unlike RSA, there will provably NEVER be a computational or physical application in the accessible world of countable infinities.)",1398653438
7657992,comment,7656084,7656332,2,0,mattbarrie,,,"All funds have been returned to the employer&#x27;s credit card and the employer has been called to inform them to pay directly.",1398653378
7657991,comment,7657894,7657894,3,0,larakerns,,,"Thinking like a designer is so important in coding. Designers spend most of their time observing a problem then deriving a simple, efficient patch. I&#x27;m always looking for ways to patch, by observing closely and listening to what others are frustrated with.",1398653358
7657990,comment,7656806,7656806,1,0,bennyg,,,"I work as a software engineer at a mid-size ad agency in Birmingham, AL. Send me your resume (brgordon at ua.edu) and I&#x27;ll see what I can do in the organization.<p>I also graduated with an advertising degree, but started coding my senior year of college. I just started with this company so I can&#x27;t make any promises but I&#x27;ll see what I can do. You have an online portfolio too, correct?",1398653338
7657989,comment,7657894,7657894,4,0,ggreer,,,"I had to do some digging, but I found the issue he was talking about and the plugin to fix it. The problem with Sublime Text 2 is that the cursor is very thin and hard to see. The plugin to fix it is <a href=""https://github.com/netpro2k/SublimeBlockCursor"" rel=""nofollow"">https://github.com/netpro2k/SublimeBlockCursor</a><p>If you don&#x27;t want to install that plugin, you can get a more visible cursor by adding &quot;caret_style&quot;: &quot;wide&quot; and &quot;highlight_line&quot;: true to your Sublime preferences.<p>I&#x27;m not sure why the author avoided mentioning the specific issue. If it affected him and his friend, it seems like he would want to err on the side of telling others about it.",1398653321
7657988,comment,7656084,7657816,2,0,mattbarrie,,,"Hi Angilly<p>1) I cannot comment on the specifics as I hope you can understand.\n2) We don&#x27;t ID check all the accounts at signup. That would be logistically impossible. We have 11 million users.<p>Regards\nMatt",1398653314
7657987,story,,,2,2,ethyl66,"Ask HN: What does your startup do for data backup/disaster recovery?",,,1398653286
7657986,comment,7656300,7656300,2,0,read,,,"> The Muen Separation Kernel is the world’s first Open Source microkernel that has been formally proven to contain no runtime errors at the source code level.<p>I had the impression seL4 was the first microkernel formally proven to be secure.",1398653273
7657985,comment,7657804,7657930,1,0,_ZeD_,,,"well, it depends on the console.log implementation :)<p>On firefox I get<p><pre><code>    >>> console.log.call(undefined, &quot;Hi&quot;)\n    Hi</code></pre>",1398653232
7657983,comment,7655281,7656456,2,0,unclesaamm,,,"I use Vim normally but I actually downloaded Sublime Text just to use Floobits. There&#x27;s something really intimidating about using Vim with Floobits, and there&#x27;s the lack of the nice visual cues like circling around highlighted text.",1398653182
7657982,comment,7657394,7657944,8,0,rdtsc,,,"Good questions.<p>> To replicate erlang, is easier if used the Actor model? Or can be done with CSP?<p>There is overlap between then two. CSP is _usually_ synchronous and Actor model is asyncronous. CSP is focused on channels. As in you send messages to a channel and the other side receives them. Channel has an identity. In Erlang you send a message to a process (its main concurrency context). A process has a process ID used to identify it. Like say you have an address at your house and and I send a letter to you.<p>Goroutines don&#x27;t have identity. You can&#x27;t easily send a message to a goroutine. Kill a goroutine, see if it died to start another one and so on.<p>> Also, what is need to made a soft realtime language/runtime?<p>Quite simply you need one part of the system to not block other parts from making progress (returning a result). Imagine your serve a page to one user but because some other user is sent some input that take a long time to process, the first user doesn&#x27;t get a response, he has to wait.<p>Or say you have some data structures and a common heap between concurrency contexts. A garbage collector might have to stop all goroutines in order to check if it can collect any garbage. So that introduces a pause.  Java Azul JVM the only VM with shared that that has concurrent and pauseles garbage collector. It is very impressive, look it up how it works.  In Erlang it is easy. Processes heaps are private to each process so they can be collected independently without getting in the way.",1398653178
7657981,comment,7656858,7656858,1,0,grumblestumble,,,"There&#x27;s a lot of conversation about the redundant injector syntax in this thread. This is something that ngmin takes care of completely transparently. There&#x27;s really no need to worry about it in raw, uncompressed source code. Other than that, this provides a nice way to enforce a certain set of conventions, but I&#x27;m not completely sold on the quality of those conventions - the most glaring thing being losing references to your watches. Reverse-binding controllers to views through DOM selectors also has a bad code smell IMO, feels a bit like reverting to jQuery madness. I prefer to do this through routing or directives wherever possible.",1398653123
7657980,comment,7657004,7657004,2,0,groovy2shoes,,,"I started programming when I was 10 and I was instantly hooked. Two years later, my parents got a divorce and my dad took the computer.  I only saw him on weekends, but I had to get my programming fix.  During the week, I&#x27;d write Qbasic programs in a notebook, then type and test on weekends.  Eventually I graduated to assembly and C.  It was a great way to pass the time in high school health class.<p>To this day, I still prefer to do a lot of writing before I start typing, though I don&#x27;t often write the entire program ahead of time.  Instead, I&#x27;ll write the &quot;interesting&quot; bits -- the stuff that&#x27;s algorithmically complex or otherwise kind of tricky.  I find that with nothing but a pencil and a sheet of paper, there are fewer distractions and fewer limitations (comments can readily contain drawings, for example).",1398653113
7657979,comment,7657394,7657940,9,0,pcwalton,,,"> Go has shared memory. Yes, that&#x27;s a feature. It allows things to go fast. Purity of not sharing state between threads sounds good in theory until you need concurrency and get bitten by the cost of awkwardness of having to copy values between concurrent processes<p>There are approaches that allow the flexibility of shared state without the possibility of lurking data races or, worse (in Go&#x27;s case) lack of memory safety. Even JavaScript has such a solution now (Transferable Objects). In fact, Erlang itself has one such approach: ETS.<p>To be honest, I don&#x27;t think unrestricted shared state is the right thing in a programming language. It just invites too many bugs (and race detectors don&#x27;t catch enough of them).",1398653113
7657978,comment,7656858,7657690,1,0,larakerns,,,"I would go with writing directives over using global scope in general, though it&#x27;s more time consuming to me.",1398653063
7657977,comment,7657502,7657502,1,0,perrygeo,,,"I disagree with the fundamental idea that time spent on meetings can only be productive for the team but not for you. In fact meetings can (should) be a time to share ideas, learn new things and ultimately make your work more focused. If you&#x27;re doing meetings right, they prevent you from wasting time on inconsequential details and keep you focused on what matters. If you are bored and the details of your work are not even addressed, you&#x27;re probably just doing meetings wrong.",1398653054
7657976,comment,7657394,7657394,2,0,natural219,,,"The biggest turn-off about Go, for me, is that the community seems to be incredibly unfriendly to newcomers.  He touched on the lack of REPL, but it goes further than that.<p>For instance, there is very little in the toolchain about debugging other than &quot;use GDB&quot;.  For someone very familiar with the workflow of typing &quot;debugger&quot; in Javascript code, being able to stop the world at any state, examine variables, and having a fully-functional REPL to test expressions, Go&#x27;s way of &quot;debugging&quot; code is...well.  I don&#x27;t really know how to do it in Go.  The general answer seems to be something along the lines of &quot;think about the code you wrote and then write it correctly you idiot.&quot;<p>Seriously, this is the canonical debugging advice, from Rob Pike himself:<p><i>&quot;When something went wrong, I&#x27;d reflexively start to dig in to the problem, examining stack traces, sticking in print statements, invoking a debugger, and so on. But Ken would just stand and think, ignoring me and the code we&#x27;d just written. After a while I noticed a pattern: Ken would often understand the problem before I would, and would suddenly announce, &quot;I know what&#x27;s wrong.&quot; He was usually correct. I realized that Ken was building a mental model of the code and when something broke it was an error in the model. By thinking about </i>how* that problem could happen, he&#x27;d intuit where the model was wrong or where our code must not be satisfying the model.&quot;*[1]<p>[1] <a href=""http://www.informit.com/articles/article.aspx?p=1941206"" rel=""nofollow"">http://www.informit.com/articles/article.aspx?p=1941206</a>",1398653035
7657975,comment,7657518,7657518,3,0,elliottcarlson,,,"As kijin mentions in their comment, maintaining your blog was a labor of love - personally I miss the old internet - the early days, when it was a wild wild west, when my internet time was still divided with my BBS time. Everything grows up, and as things become more popular, they become more mainstream and open up to wider audiences. I know those old days are gone (and very fondly remembered) but I also know that what was my favorite past time has become a great career - one I can wake up to every morning, eager to do my job. There is a lot more noise out there now as all of this has become common, and there are millions of blogs - but there are still great ones out there, worth following and consuming - and hopefully the noise learns to not be uniform and figure out their own identities, and appeal properly to the consumers. I am thankful for how things have evolved, even when wistful.",1398653022
7657974,comment,7652925,7655007,1,0,DannoHung,,,"When people on HN stop using the fallacy of &quot;Appeal to the Free Market&quot;, I&#x27;ll give a shit about making cogent arguments.",1398652979
7657973,comment,7656154,7657729,1,0,scottydelta,,,"any better editor which supports markdown aswell?",1398652954
7657972,comment,7656858,7656858,1,0,whalesalad,,,"The fact that you can flip the entire page into Coffeescript mode is BRILLIANT. Also, love the tooltips that come out of the code blocks.",1398652873
7657971,comment,7651968,7651968,1,0,lazylizard,,,"eh. a joke among friends. efficient is the enemy of economic growth. if you take 30min to write a script yourself to automate some file transfers, it contributes ~$0 to the GDP. otoh, if you hired some consultants to do it for $5k, taking a month to complete the project, thats economic growth..",1398652865
7657970,comment,7656154,7656653,1,0,laoba,,,"Typed in Walmart, got an instance crash:<p>IndexError at /<p>list index out of range<p>Request Method: \tPOST\nRequest URL: \t<a href=""http://www.moredrunk.com/"" rel=""nofollow"">http://www.moredrunk.com/</a>\nDjango Version: \t1.3.1\nException Type: \tIndexError\nException Value:<p>list index out of range<p>Exception Location: \t/home/moredrunk/../moredrunk/views.py in PlacesList, line 117\nPython Executable: \t/usr/bin/python\nPython Version: \t2.7.1\nPython Path:<p>[&#x27;/home/moredrunk&#x27;,\n &#x27;/usr/lib/python2.7&#x27;,\n &#x27;/usr/lib/python2.7/plat-linux2&#x27;,\n &#x27;/usr/lib/python2.7/lib-tk&#x27;,\n &#x27;/usr/lib/python2.7/lib-old&#x27;,\n &#x27;/usr/lib/python2.7/lib-dynload&#x27;,\n &#x27;/usr/local/lib/python2.7/dist-packages&#x27;,\n &#x27;/usr/lib/python2.7/dist-packages&#x27;,\n &#x27;/usr/lib/pymodules/python2.7/gtk-2.0&#x27;,\n &#x27;/usr/lib/python2.7/dist-packages/gtk-2.0&#x27;,\n &#x27;/usr/lib/pymodules/python2.7&#x27;]<p>Server time: \tSun, 27 Apr 2014 22:56:14 -0400",1398652863
7657969,comment,7657502,7657886,3,0,pedalpete,,,"I completely agree with a lot of what you&#x27;re saying, but I feel there is a difference between what I &#x27;produce&#x27; and what I&#x27;m paid for. As you say, I&#x27;m paid to solve business problems, so any time that I dedicate to not solving those business problems or improving the business is essentially not productive.<p>I&#x27;m not suggesting we count lines of code, but I&#x27;m only actually producing when the code I write makes it into a final product. If I spend 5 hours writing code, and then throw it all away, I&#x27;m not productive. When I re-write a bit of code, was I productive the first time and not the second? Was I productive both times? Does it matter what has changed between the time I wrote them both, or why I&#x27;m making the change?<p>Using your example of refactoring 1000 lines of code, if the 1000 lines ends up doing the same as the 100 lines, how have I added value to the business? I may not have, and therefore, that time was unproductive, or I may have added value, and therefore the time was productive.<p>Interestingly, it seems the definition of productive may be up for debate itself.",1398652854
7657968,comment,7656890,7657470,8,0,qeorge,,,"Thank you for including the original URL in a comment. I love the policy of updating the submission to the best URL, but its also nice to know what the original URL was. This is a great solution.",1398652847
7657967,comment,7657804,7657930,3,0,gonzoisme,,,"Yeah, the example couldn&#x27;t work.  Also, isn&#x27;t this an example of partial application, not currying?",1398652831
7657966,comment,7651059,7651059,1,0,chidevguy,,,"Failure Before Success - <a href=""http://youtu.be/PJKz0JbEZcw"" rel=""nofollow"">http://youtu.be/PJKz0JbEZcw</a><p>I find this motivating, especially when I&#x27;m feeling down.",1398652772
7657965,comment,7654601,7657339,2,0,seanmcdirmid,,,"Not really. What Backus is advocating is applicative-style programming (what we know as FP today); what Glitch is advocating is anything but! Some of the code looks similar (indeed, we are inspired by FRP and earlier reactive languages like Esterel), but Glitch keeps everything in the world of explicit control flow rather than bury everything in data flow.",1398652771
7657964,comment,7657251,7657921,5,0,Pxtl,,,"Other carriers aren&#x27;t shared flying hypodermic needles.",1398652616
7657963,comment,7647958,7653887,1,0,mapt,,,"See this thread for estimates on the dV of the different stages of these launch platforms for a full-capacity payload:\n<a href=""http://forum.nasaspaceflight.com/index.php?topic=30685.0;all"" rel=""nofollow"">http://forum.nasaspaceflight.com/index.php?topic=30685.0;all</a><p>It costs about 8km/s to get into low orbit from an atmosphere-less Earth.  From our planet it costs about 9.4-1.0km/s because of aerodynamic and gravity losses.  Those aerodynamic and gravity costs, and the Hohmann Transfer from groundlevel to orbit (trivial for LEO, more for GTO) are the only parts of the equation one can address while burning vertically to stay over the launch site.<p>Assuming 10, If the first stage only has to contribute 2km/s, it can address aerodynamic and gravity losses (while thrusting vertically), and then leave the second stage to boost for the horizon and achieve full orbit all on its own.<p>At 4-5km/s first stage contribution, it doesn&#x27;t look like this is possible unless the payload is very undersized, leaving the second stage with enough dV to go from &#x27;rising out of the upper atmosphere vertically&#x27; to &#x27;circular orbit&#x27; all on its own.<p>The mass is a free variable, a greater vertical component is practical in GTO (and I don&#x27;t have the modelling skills to say how much), and the second stage may launch fully fueled for F9R contra to the existing pattern, so I can&#x27;t be 100% sure whether F9R will be a practical return-to-launchsite option for lightweight GTO payloads.",1398652586
7657962,comment,7657251,7657931,2,0,qeorge,,,"I agree with you, and its hard for me to view carpet bombing a city with pesticides as somehow interfering <i>less</i> with the environment.",1398652584
7657961,story,,,88,91,fizwhiz,"Ask HN: Reasons behind renaissance of functional programming languages",,"I&#x27;ve been curious about the renaissance of functional programming languages like Scala and Clojure in the software community. Is this a byproduct of our evolving hardware where instead of clock speeds the focus has been on pushing out more cores, so to reap the benefits software developers need better abstractions to make their code easily parallelizable? Is there some erlang-esque promise of pervasive immutability which is vaulting these languages into more popularity? Or is it simply the fact that these newer programming languages have simply learned from other languages&#x27; paint points and amplified the good parts by bundling them together neatly? I don&#x27;t have anything against these languages, I&#x27;m just trying to get a deeper understanding of what appears to be a trend in the programming language space.",1398652578
7657959,comment,7657251,7657716,1,0,Carioca,,,"Coincidentally, the Africanized honey bee fiasco started in Brazil.",1398652515
7657957,story,,,7,2,osiris679,"Browse and build geo-fenced data bubbles in physical places and specific times",http://interfacefoundry.com,,1398652480
7657956,comment,7657394,7657394,8,0,cnbuff410,,,"Is it just me or the author fail to explain all the Go&#x27;s detrimental design clearly? Most of the points he listed there are pretty much personal taste thing and basically what he was saying is &quot;Go has so many problems because Go is not designed as Erlang&quot;.<p>For example, he said<p>&quot;But when it comes to complex backends that need to be fault-tolerant Go is as broken as any other language with shared state.&quot;<p>Why? Why shared state is so bad in Go? Isn&#x27;t it taken care by Go&#x27;s channel anyway?<p>Also, why Pre-emptive Scheduling is bad? Isn&#x27;t Error Handling still pretty much just a matter of personal preference?<p>Why Introspection makes Erlang so much better? What&#x27;s the practical key problem for Go that can not be tackled without instrospection?<p>And I completely failed to understand the point of &quot;Static Linking&quot;.<p>I&#x27;m not trolling. I don&#x27;t have Erlang experience, and most of the problem the author pointed out was not bothering me, so I honestly want to see WHY they are problematic in Go",1398652467
7657955,comment,7654361,7655998,1,0,pjscott,,,"This is usually a small price to pay for guaranteed O(n) matching speed. (Kudos to the author for doing the Right Thing here.)",1398652464
7657954,story,,,1,0,dulse,"Homejoy, Uber, and the Marketplace of Labor",http://cosmic.posthaven.com/homejoy-uber-and-the-marketplace-of-labor,,1398652454
7657953,comment,7656496,7657926,3,0,pdonis,,,"See the Wikipedia page on infinitesimals:<p><a href=""http://en.wikipedia.org/wiki/Infinitesimal"" rel=""nofollow"">http://en.wikipedia.org/wiki/Infinitesimal</a><p>In particular the first paragraph in the section &quot;History of the infinitesimal&quot; and footnote 4 there.",1398652442
7657952,comment,7656496,7657814,1,0,pdonis,,,"Yes, but do you need the modern definition to do calculus, in a practical sense? I don&#x27;t think so. The way things actually went, practical computations using calculus, by Newton and others, came a couple of centuries, at least, before the modern rigorous foundations were developed.<p>So if some other development had intervened, in the sort of alternate history postulated in the article, to prevent the practical computations from being taken further, that could have prevented the modern rigorous foundations of calculus from being developed. To put it another way, if other developments had <i>not</i> intervened, the next couple of centuries after Archimedes could possibly have seen something like our modern rigorous foundations for calculus being developed.",1398652351
7657951,comment,7653274,7654568,1,0,kohanz,,,"I don&#x27;t care how fit you are, almost no one is running a 10k in 45 minutes at 60% of max HR.<p>I&#x27;m sure in many cases more strenuous exercise is not detrimental, but of course the public health recommendations are going to play it safe.",1398652289
7657950,comment,7657171,7657171,2,0,partisan,,,"for work: asp.net mvc, jquery, bootstrap, wcf services, ms sql server, C#.<p>for play: play (scala), jquery, postgresql.",1398652241
7657949,comment,7655018,7655486,1,0,judk,,,"If your checklist says &quot;memcpy is forbidden&quot;, and you encode that in a static analyer (test), heardbleed would be prevented.",1398652229
7657948,comment,7656154,7656289,1,0,premjg,,,"Have you tried selling these on <a href=""http://flippa.com"" rel=""nofollow"">http://flippa.com</a>",1398652207
7657947,comment,7657251,7657533,3,0,lovemenot,,,">> If this outbreak was happening in your country, hurting your family, killing your friends, I doubt you&#x27;d be so loath to support GM solutions.<p>That&#x27;s an appeal to shame. It&#x27;s true that people are generally selfish. And not only those in the developed world. It&#x27;s also true that, when under physical duress, people can be made to support just about any immoral, illegal or just plain bad idea. Just because the majority of those opposing it are not the same people as those who most stand to benefit directly it does not follow that, in this case, using GM is fine.",1398652200
7657946,comment,7657571,7657571,13,0,ballard,,,"Does &quot;ultimatum&quot; and &quot;raft of complicated last-minute changes&quot; not raise anyone else&#x27;s tinfoil paranoia alarms?<p>Those commits should get significant scrutiny, because it sounds like US/CA govt were given an indirect opportunity to push whatever changes it wanted AND rushed code isn&#x27;t necessarily the best either.<p>(Also I&#x27;m glad FIPS mode is dead in LibreSSL.)",1398652168
7657945,comment,7656154,7656952,1,0,viiralvx,,,"Cody, I&#x27;m still sorry I couldn&#x27;t have maintained the Android app for you. :/ I loved working on it but just balancing that out with school kicked my ass.",1398652164
7657944,comment,7657394,7657873,4,0,mamcx,,,"To replicate erlang, is easier if used the Actor model? Or can be done with CSP?<p>Also, what is need to made a soft realtime language/runtime?",1398652138
7657943,comment,7656154,7657530,1,0,scottydelta,,,"but they charge an upfront fees of min $9, any free alternative to flippa?",1398652075
7657942,comment,7656084,7657566,1,0,qeorge,,,"Update: I&#x27;ve emailed several times now with Matt, and he&#x27;s definitely on top of the situation. I get the impression that he&#x27;s being vague in his responses to respect OP&#x27;s privacy (and the others involved). I appreciate that, and he&#x27;s done a stellar job of responding in general.<p>Anyway, I think there is more than meets the eye here, and I should have given Freelancer.com a bit more benefit of the doubt. I do hope that eventually more information will become available, as this is a serious issue.",1398652069
7657941,story,,,1,0,mnemonik,"In Praise of EitherT",http://ocharles.org.uk/blog/posts/2012-07-24-in-praise-of-EitherT.html,,1398651996
7657940,comment,7657394,7657394,1,0,kkowalczyk,,,"I write it fully acknowledging that programming language flamewars are pointless, but this article just shows that you don&#x27;t even have to try hard to create a biased comparison.<p>Here&#x27;s the essential difference between Go and Erlang: Go gets most of the things right, Erlang gets way too much wrong.<p>So what does Go gets right but Erlang doesn&#x27;t:<p>* Go is fast. Erlang isn&#x27;t<p>* Go has a non-surprising, mainstream syntax. You can pick it up in hours. Erlang - not so much.<p>* Go has a great, consistent, modern, bug-free standard library. Erlang - not so much.<p>* Go is good at strings. Erlang - not so much.<p>* Go has the obvious data structures: structs and hash tables. Erlang - no.<p>* Go is a general purpose language. Erlang was designed for a specific notion of fault tolerance - one that isn&#x27;t actually needed or useful for 90% of the software but every program has to pay the costs<p>* Go has shared memory. Yes, that&#x27;s a feature. It allows things to go fast. Purity of not sharing state between threads sounds good in theory until you need concurrency and get bitten by the cost of awkwardness of having to copy values between concurrent processes<p>So sure, if you ignore all the major faults of Erlang (<a href=""http://damienkatz.net/2008/03/what_sucks_abou.html"" rel=""nofollow"">http://damienkatz.net/2008/03/what_sucks_abou.html</a>, <a href=""http://www.unlimitednovelty.com/2011/07/trouble-with-erlang-or-erlang-is-ghetto.html"" rel=""nofollow"">http://www.unlimitednovelty.com/2011/07/trouble-with-erlang-...</a>, <a href=""http://ferd.ca/an-open-letter-to-the-erlang-beginner-or-onlooker.html"" rel=""nofollow"">http://ferd.ca/an-open-letter-to-the-erlang-beginner-or-onlo...</a>, <a href=""http://sacharya.com/tag/erlang-sucks/"" rel=""nofollow"">http://sacharya.com/tag/erlang-sucks/</a>) it compares very favorably to Go.<p>You just have to overlook ugly syntax, lack of string type, lack of structs, lack of hash tables, slow execution time. Other than those fundamental things, Erlang is great.",1398651972
7657939,comment,7656858,7657830,1,0,sanderjd,,,"It&#x27;s the &quot;in most cases&quot; that&#x27;ll get ya!",1398651968
7657938,comment,7656370,7657209,1,0,apapli,,,Thanks!,1398651965
7657937,comment,7655018,7655703,1,0,vinceguidry,,,"Probably Ruby. No other language makes testing that easy or fun.",1398651963
7657936,comment,7657596,7657906,1,0,tomasien,,,"Accused of beating GF? I don&#x27;t know. Depends on whether I believed it and other factors. Plead guilty + police say he&#x27;s on tape doing it worse than he plead to? Fired. Every time.<p>Political donations would never have an effect on my employees. If any of them are reading this, consider this my word. CEOs are different.",1398651946
7657935,comment,7654392,7656167,1,0,maccard,,,"Normally very scripted, but getting better recently.",1398651945
7657934,comment,7657596,7657887,1,0,RadiumTwo,,,"It&#x27;s a little late, and I&#x27;m not able to put time into looking into it tonight, but I imagine that towards the end of slavery, Northern business owners who claimed that paying free men to work would put their businesses under and that those same owners were looked down upon in their community. We may be looking at the same phenomenon occuring.<p>And, yes, the spectrum is huge. This covers everything from speeding tickets to domestic violence, and beyond.",1398651944
7657933,comment,7656879,7657111,3,0,yummyfajitas,,,"People don&#x27;t understand monads because they don&#x27;t write code with monads. Instead, they read abstract tutorials about how a monad is like a burrito full of kittens, get scared, and then don&#x27;t actually reach the stage of learning by doing.",1398651915
7657931,comment,7657251,7657659,5,0,eqdw,,,"Where I&#x27;m from, the city routinely carpet-bombs the city with pesticides (<a href=""http://en.wikipedia.org/wiki/Malathion"" rel=""nofollow"">http://en.wikipedia.org/wiki/Malathion</a>). This is pretty contentious, especially since it&#x27;s primarily for pest control and not actually for health reasons.<p>GMO tech that lets us stop breathing in all that delicious malathion is a good thing, in my books",1398651915
7657930,comment,7657804,7657804,3,0,gberger,,,"<p><pre><code>    //here&#x27;s an AJAX request and a chain of promises\n    m.request({method: &quot;GET&quot;, url: &quot;/api/projects&quot;})\n        .then(console.log) // log all projects\n        .then(pastItems) // filter past projects\n        .then(console.log) // log past projects only\n</code></pre>\nThe calls to console.log will not work.<p>You need to do this:<p><pre><code>    .then(function() { console.log(arguments); })\n\n</code></pre>\nOr this:<p><pre><code>    .then(console.log.bind(console))</code></pre>",1398651860
7657929,comment,7656003,7657715,2,0,gberger,,,"Nice! :)",1398651854
7657928,comment,7657004,7657439,1,0,foobarian,,,"I was lucky that one of the first issues of Compute! I got my hands on had a listing for a proofreader[1], a utility that checksummed each typed line of BASIC and displayed the checksum in the left margin.  All listings in the magazine had these checksums printed to the left of the line numbers, so it was easy to catch typing errors.<p>This was especially useful without any kind of permanent storage.  I had to type in my games every time. :-)<p>[1] Compute! November 1986 issue, page 94.  <a href=""https://ia600700.us.archive.org/6/items/1986-11-compute-magazine/Compute_Issue_078_1986_Nov.pdf"" rel=""nofollow"">https://ia600700.us.archive.org/6/items/1986-11-compute-maga...</a>",1398651846
7657927,comment,7656858,7657746,1,0,sanderjd,,,"I disagree that ngmin is a full <i>solution</i> to the problem. It is a good and very helpful tool, but it&#x27;s a hack and a pretty leaky one - I think it&#x27;s often less of a hassle to just write all the explicit injection syntax myself than to fiddle with formatting to get ngmin to work and track down issues when it doesn&#x27;t. Classy&#x27;s solution seems much nicer to me.",1398651828
7657926,comment,7656496,7657679,2,0,JadeNB,,,"> However, I&#x27;m not sure what you say is correct; didn&#x27;t Archimedes give a rigorous definition of infinite numbers as numbers that are greater than all natural numbers? (I.e., a number I is infinite if I > n for all natural numbers n.) And then didn&#x27;t he define infinitesimals as numbers x such that x is not zero and 1 / x is infinite?<p>Without disagreeing, since I am not qualified to do so, I am surprised by this claim, which I had never heard before.  Do you have a reference?",1398651787
7657925,comment,7656154,7657035,1,0,ashbrahma,,,"Could you post your contact info please?",1398651772
7657924,comment,7657251,7657727,7,0,eqdw,,,"My girlfriend is diabetic. Her mom is pretty stereotypical anti-GMO hippie type. To me, the irony is delicious.<p>Course, then I realize that my girlfriend&#x27;s mom is essentially anti- her living and it stops being funny",1398651767
7657923,comment,7656496,7657158,3,0,JadeNB,,,"> Modern calculus doesn&#x27;t depend on infinitesimals. The concept of &quot;compactness&quot; is the technical solution that lets you formulate calculus without them -- it&#x27;s typically only taught to math majors because infinitesimals are less awkward to do algebra with: we can now prove that the shortcut works, so why bother with the long way unless you have good reason? They allude to this fact:<p>This seems to be an unusual claim, especially since the real numbers, the traditional domain of calculus, are <i>not</i> compact.  To be sure, they are <i>locally</i> compact, but I&#x27;m not sure that I would say that this is &quot;what makes calculus work&quot;.  That honour seems better to belong to <i>completeness</i>.",1398651715
7657922,comment,7657251,7657473,1,0,PhasmaFelis,,,"> <i>What about everything that relies on these mosquitoes as a food source?</i><p>Nothing in the world relies on mosquitoes as a food source. Some insectivores will happily eat mosquitoes if they can get them, but mainly feed on other species.<p>Mosquitoes also play a role in pollination in some areas, but, again, all mosquito-pollinated plants are more reliably pollinated by other local insects.",1398651709
7657921,comment,7657251,7657662,2,0,hrjet,,,"> those animals (birds) which do eat them could just switch to other insects<p>If those animals can switch, so can bacteria and virii switch their carriers.",1398651669
7657920,comment,7657596,7657791,1,0,RadiumTwo,,,"So, we agree on the accountability aspect.<p>Another part of my question, again without any position put forth on my part, is this: Was the method used acceptable, publically speaking out against them, and would that same method be acceptable if it was used on a rank-and-file or low-to-middle manager?",1398651643
7657918,comment,7652260,7655273,2,0,ryanobjc,,,"I suspect there is the confusion between what appears to be &#x27;childish&#x27; and what is sophisticated.  Things can be &quot;childish&quot; but also sophisticated, a la Adventure Time.<p>Ultimately, I have met a number of people who are so incredibly serious (and usually fairly young) that if it isnt a math paper, it&#x27;s a waste of humanity.  If only our brains worked like that!<p>Embrace neurally diverse experiences!",1398651626
7657917,comment,7656263,7657881,1,0,ryannevius,,,"Of course it does. I&#x27;m trying to make the point that one shouldn&#x27;t even have to dig that minuscule amount to find out. It&#x27;s as simple as adding a line to their landing page: Wagtail supports Python 2.7 and Django 1.6.2.",1398651598
7657916,comment,7657571,7657571,2,0,pmorici,,,"&quot;Marquess, a consultant for the Department of Defense&quot;<p>Maybe I haven&#x27;t been following this close enough but has anyone questioned whether or not it is perhaps a conflict of interest to be a consultant for the &quot;Department of Defense&quot; while also being a principal contributor to a project like OpenSSL?",1398651592
7657915,comment,7656496,7656496,0,0,GregBuchholz,,,"Here&#x27;s another treatment:<p><a href=""http://web.maths.unsw.edu.au/~norman/papers/Ordinals.pdf"" rel=""nofollow"">http://web.maths.unsw.edu.au/~norman/papers/Ordinals.pdf</a>",1398651552
7657914,comment,7657596,7657853,2,0,001sky,,,"This is blog-spam of the re/code piece.Some other links have more context on the allegations and the response. EG,<p><a href=""http://time.com/78572/radiumone-ceo-fired/"" rel=""nofollow"">http://time.com/78572/radiumone-ceo-fired/</a><p><i>The now-former CEO defended himself in a blog post Sunday, saying that he merely had a “normal argument” with his girlfriend after he discovered she was having “unprotected sex for money with other people.” Chahal denied injuring his girlfriend in the argument.</i><p>The whole thing seems bizarre. If the counter-allegations are true (and not just a smear) it may foreshadow credibility issues in any open-court prosecution. It may also explain a delay in seeking medical attention or documentary proof of injury.<p>Maybe someone can chime in if the victim or the police was on the hook for the evidentiary issue.<p>The BOD at some level may have been forced into a position to act simply because, no matter who was right, this looks like a bizzare and potentially compromising situation. Although I guess it would just be tabloid fodder if the injuries were truly non-existent.",1398651533
7657913,comment,7656056,7657669,2,0,Exenith,,,"Let&#x27;s put that straw man logic more realistically:<p><pre><code>  P1. If you want to have a good degree of health without requiring modern medicine, you should eat food that gives you a good degree of health without requiring modern medicine\n  P2. Successfully reproducing in an environment without modern medicine requires food that supports or does not tarnish a good degree of health\n  P3. Paleolithic humans successfully reproduced in an environment without modern medicine\n  C. If you want to have a good degree of health without requiring modern medicine, eating what paleolithic humans ate will support or not tarnish that goal\n</code></pre>\nOf course the problems with your reasoning are numerous. That&#x27;s why intelligent people who eat the paleo diet don&#x27;t make them. And they likely wouldn&#x27;t propose the logic I did here. That&#x27;s why they use studies comparing the health of hunter-gatherers to neolithic farmers. That&#x27;s why they discuss scientific studies in support of meat/fat, and in opposition to grains. That&#x27;s why they get angry at people who misappropriate their views.",1398651526
7657912,comment,7657521,7657612,1,0,userbinator,,,"Agreed, the title is a bit misleading since it&#x27;s assuming you get a smartphone for free, or that it&#x27;s something everyone has (not <i>too</i> far from the truth.) It&#x27;s a £1 microscope accessory for a smartphone.<p>(If the process is commercialised, we&#x27;ll probably start seeing lenses of this construction showing up in various toys...)",1398651511
7657911,comment,7657502,7657699,1,0,read,,,"A more valuable question is: how do you make yourself more productive?",1398651495
7657910,comment,7657596,7657838,0,0,RadiumTwo,,,"The presentation was off. It does look like an analogy. It&#x27;s intented as a question of how you&#x27;d respond if this happened with one of your coworkers.",1398651464
7657909,comment,7656879,7657111,1,0,chm,,,"A thought that keeps me motivated when studying is this:<p>&quot;Somebody somewhere figured this out. If I sweat it, I can too.&quot;<p>Of course, it won&#x27;t work all the time[1] but the attitude serves me well I think.<p>[1]: I will never become a great painter because of: physical capacity, interest and willingness to devote my time to this.",1398651459
7657908,comment,7656879,7657111,3,0,jfarmer,,,"Having taught ~200 adults to program, a teacher should avoid the &quot;difficult/easy&quot; dichotomy entirely, which is closely related to the &quot;stupid/smart&quot; dichotomy.  SQL is &quot;easy&quot; if you come from a job where you&#x27;ve used Excel all the time, but hard if you&#x27;ve never had to think that way.<p>Much more valuable is giving people the tools to (1) understand why something exists, (2) what problems it was designed to solve, (3) why it is designed the way it is vs. other possible ways, and so on. Everything is &quot;easy&quot; once you&#x27;ve viscerally experienced the problem yourself and spent some time tinkering with possible solutions.<p>Monads are &quot;hard,&quot; for example, not because they&#x27;re technically complicated.  Their definition is not so much abstract as austere, as you point out.  Rather, they&#x27;re hard because the beginner doesn&#x27;t see how they are an attempt to solve certain problems with side effects in a purely functional language which prioritizes referential transparency.<p>Both &quot;easy&quot; and &quot;difficult&quot; are dangerous words because the student quietly elevates them to statements about their own intellect.  If this &quot;easy&quot; but I can&#x27;t do it, I am stupid.  If this is &quot;difficult&quot; but easy for me, I am smart — smarter than those other students who are having a hard time.<p>IMO, it&#x27;s really the fixed mindsets we need to combat, not one particular axis of fixed thinking.",1398651413
7657906,comment,7657596,7657799,0,0,RadiumTwo,,,"Logically, if an employee was fired for either of these reasons, would it be acceptable?<p>I&#x27;m neither defending nor attacking the position.  If, say, a coworker was accused of beating his girlfriend then returned to work, would you a) doubt his character, but accept his skill as required, b) do nithing, or c) demand he be fired?<p>If you found out at lunch that your coworker put $1000 into a political campaign to ban gay marriage, would you ask your office mates to start a twitter campaign to request his resignation?",1398651395
7657905,comment,7653013,7657163,1,0,wyager,,,"Static typing can save a lot of time otherwise debugging later, and really isn&#x27;t that much of a time investment.",1398651385
7657904,story,,,2,0,recycle,"Spark Core and the battle for IoT ""platform""",http://hackaday.io/project/883/log/1805,,1398651366
7657903,comment,7657596,7657843,1,0,tomasien,,,"Yeah my comment isn&#x27;t clear on that at all, thanks for the clarification.",1398651331
7657902,story,,,2,0,sinned,"San Francisco's Bait Bike Campaign",http://www.outsideonline.com/news-from-the-field/SFPD-Launches-Bait-Bike-Campaign.html,,1398651290
7657901,comment,7657004,7657841,2,0,NhanH,,,"Out of curiosity, wouldn&#x27;t print statement go along with reading and rereading code methods? I switched from using debugger to mainly using print statement (and log, but they&#x27;re functionally similar) because the feedback loop for using debugger is significantly longer. If you have the code in your mind and a &quot;sense&quot; of what could go wrong, seeing the state of program when it failed is generally sufficient for me.",1398651288
7657900,comment,7657596,7657855,1,0,flocial,,,"However, video evidence isn&#x27;t the only admissible type. If the victim has injuries these can be corroborated by photographs and medical examinations. Otherwise, no cases would see the light of day. She didn&#x27;t seem to get any medical attention despite police being on the scene. Also, the woman submitted &quot;photographic proof of an unblemished complexion to the SFPD and filed an affidavit requesting the investigation be terminated.&quot;<p><a href=""http://en.m.wikipedia.org/wiki/Gurbaksh_Chahal"" rel=""nofollow"">http://en.m.wikipedia.org/wiki/Gurbaksh_Chahal</a>",1398651254
7657899,story,,,88,62,tim_sw,"Ask HN: Do you own a 3d printer? What has been your experience?",,,1398651221
7657898,comment,7654392,7657389,1,0,generic_brian,,,"hah thanks.  I&#x27;ve still technically never finished it, but maybe something will happen in the months to come, we&#x27;ll see I guess.<p>Thanks again for the kind words, they made me smile :)",1398651219
7657897,comment,7653013,7654166,1,0,mgsloan1,,,"One problem is that these users do not necessarily understand the semantics.  I helped a friend of mine, a reasonably competent programmer, debug his javascript once.  He had no idea that you needed to use &quot;var&quot; in order to make a variable local!  He&#x27;d written quite a lot of javascript without triggering any funny behavior until this bug.<p>So, instead, imho, the argument gets stronger.  Why is the first programming language encountered by beginners these days full of traps?  How cruel!  What a poor impression of programming they must get.",1398651136
7657895,comment,7655468,7655585,4,0,userbinator,,,"The core of TeX (written by Knuth) is actually quite small for what it does - approximately 24kLOC when translated from Pascal to C. The &quot;TeX systems&quot; that are around today are huge because of all the other things that dwarf it,  and honestly I don&#x27;t think everyone needs all or even a majority of that - I know that the parts of TeX that I use to turn a .tex into a .ps can fit on a single floppy.<p>There&#x27;s also the fact that LaTeX is often bundled in, and that is another &quot;monstrosity&quot; in itself. (I exclusively use plain TeX, so I have no need for that either.)",1398651105
7657894,story,,,42,21,hswolff,"Don't Deal With It, Fix It",http://blog.harrywolff.com/dont-deal-with-it-fix-it/,,1398651091
7657892,comment,7656496,7657401,1,0,judk,,,"Are you thinking perhaps of Scott Aaronson&#x27;s Quantum Computing since Democritus? Even if not, that&#x27;s a great book, free online.",1398650994
7657891,comment,7657596,7657720,2,0,beedogs,,,"Uh, they always have been.  Fantastic straw-man, though!!",1398650979
7657890,comment,7656154,7656878,1,0,brc,,,"Or RV Swaps, like house swaps.  For either other side of the country or another country altogether.  I&#x27;ve had that idea for a long time hoping someone would do it.<p>Insurance and others is a minor sticking point I think, but should be workable.  On the plus side, unlike house swaps, they don&#x27;t have to be simultaneous.",1398650978
7657889,story,,,2,0,sendos,"Net neutrality opponents make little sense",http://andrewoneverything.com/post/43837168021/net-neutrality-opponents-make-little-sense,,1398650971
7657888,comment,7657648,7657648,1,0,dulse,,,"I currently have a mentor that&#x27;s been instrumental in my development. I feel incredibly lucky to have them in my professional life, and think it&#x27;s invaluable. I wouldn&#x27;t be where I am without their help.<p>I met them at work on a project (I was in a different part of the company at the time). They were the more senior person running the project, and saw my interest and started helping me toward my goals. It was a pretty organic process.<p>I wish there was a more organized process to get a mentor, especially in areas outside of your current job. It&#x27;s difficult to meet people in general, and the kind of person that is open to mentor is a small, special group.<p>I&#x27;ve never mentored anyone but given my experience I look forward to doing it one day very much.",1398650958
7657887,comment,7657596,7657720,1,0,MaulingMonkey,,,"I think it&#x27;s reasonable for a professional driver to be fired over speeding tickets, even when they don&#x27;t reach the severity of a misdemeanor.<p>I think it&#x27;s reasonable for employees doing public relations (say, &quot;community managers&quot;) to be fired over bigotry and hateful speech, even though these can be cast as &quot;political opinions&quot;.<p>I&#x27;m sure we can both find examples in the other direction too, however - there&#x27;s a huge spectrum of circumstances under those umbrellas.  &quot;It&#x27;s complicated&quot; -- and likely not as simple as &quot;yes&quot; or &quot;no&quot;.",1398650956
7657886,comment,7657502,7657689,15,0,greenyoda,,,"<i>&quot;When I&#x27;m setting up my environment, I&#x27;m not being productive. When I&#x27;m researching a bug I&#x27;m fixing, I&#x27;m not being productive. When I try a fix and it doesn&#x27;t work, I&#x27;m not being productive. When I&#x27;m looking up the most efficient way to write a method, I&#x27;m not being productive.&quot;</i><p>All the activities you mentioned are part of what you&#x27;re being paid for as a developer, so you should consider yourself to be productive while doing them. If your employer thought that setting up your environment wasn&#x27;t an essential part of your job, they&#x27;d be paying someone else to do it for you. And if they don&#x27;t want you to write crap code, then finding an efficient way to write a method is also an essential part of your job, and thus productive. And how can you possibly fix a bug without first researching it to figure out the exact conditions that cause it to occur? Even meetings are productive, provided that they allow people to come to an agreement on how to solve a problem (rather just being for status reporting that could be done better with an automated tracking system).<p><i>&quot;When I&#x27;m completely focused on coding, I&#x27;m at my most productive.&quot;</i><p>What if that code turned out to be the solution to a problem that didn&#x27;t actually exist? Would you still think you were productive just because you were completely focused on coding at the time?<p>Now, look at the other side: Let&#x27;s say that during a meeting, you figured out that some piece of code that your company wanted you to write was completely unnecessary, and it saved them hundreds of hours and thousands of dollars. Wouldn&#x27;t that be productive?<p>And if you refactor 1000 lines of code to do everything it did before with just 100 lines of code, is your productivity negative because you threw lines of code away?<p>As developers, we&#x27;re paid to solve business problems, not just to generate lines of code.",1398650910
7657885,comment,7654601,7655822,1,0,Uncompetative,,,"Donald Knuth uses GOTO. It is perfectly safe if kept within a function: invoke a function, jump around like crazy inside it, exit to caller with return value. No problem.",1398650879
7657884,comment,7657502,7657689,7,0,joshlegs,,,"as a former journalist, I have to disagree that editing is unproductive time. Saying exactly what you mean to say is extremely valuable, well-invested time. &quot;I would have written you a shorter letter, but I didn&#x27;t have the time.&quot;<p>Concise emails really ease the workload by reducing inefficiencies.",1398650816
7657883,comment,7657502,7657502,1,0,bobfirestone,,,"Averaged out I get about 6 hours of productive time a day at work. The project I am on I am one of the lucky ones. A couple of people on my team regularly spend all day in meetings and get maybe an hour to work on code.",1398650750
7657881,comment,7656263,7657860,1,0,JelteF,,,"The setup.py makes clear that Django 1.7 is not supported. 1.6.2 or higher should be used.",1398650710
7657879,comment,7657876,7657876,8,0,js2,,,"The link is to &quot;Part I : Manned Spacecraft Computers&quot;<p>There are three parts total:<p><a href=""http://history.nasa.gov/computers/Part2.html"" rel=""nofollow"">http://history.nasa.gov/computers/Part2.html</a> (Part II : Computers On Board Unmanned Spacecraft)<p><a href=""http://history.nasa.gov/computers/Part3.html"" rel=""nofollow"">http://history.nasa.gov/computers/Part3.html</a> (Part III : Ground Based Computers for Space Flight Operations)",1398650693
7657878,comment,7654601,7657765,3,0,coolsunglasses,,,"You don&#x27;t appear to be here to share ideas or learn, so lets get concrete rather than posture.<p>When you say &quot;uninstantiable existentially typed monads&quot; you&#x27;re showing off your knowledge and being verbose when you actually mean &quot;ST&quot;. There&#x27;s no actual problem here, you&#x27;re using big words to seem impressive despite the fact that by being obscure you&#x27;re condescending to them and to me. ST works the way it does so you can&#x27;t accidentally leak mutable references. There&#x27;s nothing particularly limiting about it beyond that. ST is like a generic transients that works for any data type instead of the blessed ones.<p>You don&#x27;t need to care that ST is existentially typed in order to use it at all. That&#x27;s like complaining about how difficult it is to weld steel so you live in a mud hut instead. Division of labor applies here because abstractions and types <i>work</i> in Haskell.<p>There&#x27;s nothing wrong with twiddling bits in Haskell. I do it all the time. You&#x27;re complaining that the type system won&#x27;t let you lie to your users and say a side effect is<p><pre><code>    a -> ()\n    -- instead of\n    a -> IO ()\n</code></pre>\nI happen to think knowing which functions are pure and which are actions is a plus.<p>&quot;Can&#x27;t produce DSLs that live outside the type straitjacket&quot; What? You can build a DSL on hash-maps and symbols in Haskell the same as Clojure users do. Haskell users <i>don&#x27;t</i> do that because it sucks. ADTs and free monads are nicer.<p>Name-dropping lens as if it&#x27;s a negative to Haskell is nuts. You&#x27;re not obligated to use lens if you&#x27;re still learning Haskell, but finding it difficult to use is a sign you miscalculated your knowledge.<p>The foundational building block of writing one&#x27;s first lens is scrubbing out the (fmap . fmap) pattern, which is a use-case even Clojurians can relate to. There&#x27;s no &quot;there&quot; there to complain about.<p>Your library \n&#x27;clearley&#x27; would be easier to understand if it had types.<p>Have you considered a book like Joy of Clojure? <a href=""http://www.manning.com/fogus2/"" rel=""nofollow"">http://www.manning.com/fogus2/</a> I found the first edition of Joy of Clojure improved and clarified my Clojure. Also, back off the defprotocol/defrecord in Clojure until your design is cleaner and more firmed up.<p>You&#x27;re not here to be learn or share anything so I&#x27;m backing out of the conversation. Provided some clarity on the obtusity before parting.<p>tl;dr nonsense, intentionally obscure appeals to things that are &quot;too complicated&quot; which are comparable to refusing to drive a car you couldn&#x27;t build yourself.<p>You can learn how to build the car later after you understand why it was engineered that way.",1398650667
7657877,comment,7655530,7656899,1,0,qrohlf,,,"We filled 18 orders in our first day or so, amidst trying to write the app and advertise.",1398650651
7657876,story,,,87,16,js2,"Computers in Spaceflight: The NASA Experience",http://history.nasa.gov/computers/Part1.html?,,1398650616
7657875,comment,7657596,7657851,5,0,pmorici,,,"&quot;I&#x27;m glad they made the right decision.&quot;<p>How could you or any of us sitting here reading the article know what the right decision was when as presented it is just one party&#x27;s word against the other?  Based on the article there seems to be video and photo documentation of what actually happened but it doesn&#x27;t sound like that is available to any impartial party to review.",1398650596
7657874,comment,7654771,7657600,1,0,swah,,,"A neat everyday little tool that isn&#x27;t Mac only.<p>(and since you&#x27;re on the web, might as well save notebooks, share, edit concurrently in realtime, etc)",1398650581
7657873,comment,7657394,7657394,24,0,rdtsc,,,"Very good comparison, stuff that most other blogs don&#x27;t talk much about -- scheduling, fault isolation, garbage collection strategies. I guess they don&#x27;t because other frameworks/languages don&#x27;t provide that. It usually stays at syntax level with obligatory mention of generics.<p>Fault isolation and pauseless garbage collection is something that is very important in some contexts. Often the need for it becomes apparent the second time around, after one version of the system has been plagued by large mutable shared state bugs, or strange, un-predictable response times in a highly concurrent system.<p>Do you pay in terms of raw CPU performance by copying messages and keeping private heaps per lightweight process? Yes you do. There are no magic unicorns behind the scene.  That is the trade-off you get for getting fault isolation and soft realtime properties.  But keep this in mind, one of the biggest slowdowns a system incurs is when it goes from working to crashing and not working.<p>Also, no matter how strong the static compile checking is, your system will still crash in production. It is usually a hard bug that has been lurking around not a simple &quot;I thought it was an int but got a string&quot;, those are caught early on. It will probably be something subtle and hard to reproduce. Can your system tolerate that kind of a crash in a graceful way? Sometimes you need that.<p>In the end, it is good for both systems to be around. If you need fault tolerance, optimization for low latency responses, supervision strategies, built-in inter-node clustering(node = OS process or instance of running Erlang BEAM VM) you cannot get that in any other way easily.<p>Now, one could think of trying to replicate some of the things Erlang provides. Like say build tools static analysis tools to check if go-routines end up accessing shared state. Or say, devise a strategy to use channels-based supervision tree. Heck, if you don&#x27;t have too many concurrency contexts (processes, go-routines) you can always fall back on OS process-based isolation and use IPC (+ ZMQ for example), as a mailbox. But then again Erlang provides that in one package.",1398650565
7657872,comment,7656154,7657622,1,0,dylanwenzlau,,,"Well hello! I must stay I&#x27;ve stumbled on your site a few times, being in the GIF business. Cool to see so many of these site owners on HN. I also left a reply on a site I run, imgflip.com, somewhere on the page here.<p>NSFW content is definitely one of the harder challenges when it comes to advertising on user-generated GIFs...",1398650552
7657868,comment,7652777,7655581,1,0,NamTaf,,,"Could you hack some sort of karaoke system? I mean, it ties word display to time, so you could then use that alongisde tying time to beats (DJ tools do this already) to link the words with the beats of the song. I would expect it to be manually generated but it&#x27;d give you a data set to work with for more popular stuff?<p>That said, I&#x27;m not sure how fine-grained karaoke systems get - whether they just display the lyrics for a whole bar of the song and linearly interpolate between the start and end, or whether they are a bit more intelligent than that.<p>Just a thought!",1398650496
7657867,story,,,3,0,dmbass,"Active 0day attack hijacking IE users threatens a quarter of browser market",http://arstechnica.com/security/2014/04/active-0day-attack-hijacking-ie-users-threatens-a-quarter-of-browser-market/,,1398650472
7657866,comment,7654601,7657519,1,0,saryant,,,"He&#x27;s probably referring to for-comprehensions.",1398650462
7657865,comment,7657571,7657836,3,0,wbl,,,"It is possible: open-source code can be exported freely. See <a href=""http://www.bis.doc.gov/index.php/forms-documents/doc_view/328-flowchart-2"" rel=""nofollow"">http://www.bis.doc.gov/index.php/forms-documents/doc_view/32...</a> for details. You just need to tell them where it is.",1398650445
