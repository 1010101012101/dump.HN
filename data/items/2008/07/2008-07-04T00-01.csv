ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
235831,comment,235408,235408,0,0,mtw,,,"we did the same thing earlier this year but with 11 different teams, who were challenged to make a working product in 48 hours.<p>great experience.<p>of course, we don't have a real company at the end of the event, but the goal is more about getting together, maybe find co-founders -- and well just hack things",1215133181
235830,comment,235673,235825,0,0,xlnt,,,"Evolution does not create features by accident. I'm not proposing a trait. I'm proposing a <i>lack of a trait</i> (built-in long term life extension feature in humans), which is very different than proposing a trait, and wins by the default unless someone has an argument to the contrary.",1215133175
235829,comment,235556,235622,0,0,Xichekolas,,,"I dunno, I thought the thing looked pretty awesome. I'd feel like Maverick showing up to work in that!",1215133112
235828,comment,235706,235706,0,0,tx,,,"He could have just said ""I only use stuff well-supported on OSX"". This isn't about Lisp, really. He'll face this dilemma ""X vs OSX"" over and over and over again, where X can be anything, from latest vim goodies to some arbitrary libraries.<p>I was in the same situation and I simply ditched OSX: it just can't rival Linux as an ultimate programmers' world exploration vehicle. Ironically, it was Python and some Python libraries that drove me to Linux.<p>I have a Mac too, of course, as an ultimate Safari+Photoshop machine.",1215132996
235827,comment,235706,235706,0,0,ken,,,"I know it's 2 years old, but it's fun to look back and see where we were, not too long ago.<p>His #1 need is ""Outstanding Unicode support"", and he's switching to Python for this.  Just today there was a blog post that made the rounds, ""The Truth About Unicode In Python"" (<a href=""http://www.cmlenz.net/archives/2008/07/the-truth-about-unicode-in-python"" rel=""nofollow"">http://www.cmlenz.net/archives/2008/07/the-truth-about-unico...</a>) that gripes about Unicode in Python!<p>One of the gripes about Python was that its internal representation is UCS-2 by default.  In comparison, SBCL uses 21 bits internally, and his Python example works fine in SBCL (on the Mac, no less):<p><pre><code>    * (characterp #\MUSICAL_SYMBOL_G_CLEF)
    T
    * (char-name #\MUSICAL_SYMBOL_G_CLEF)
    ""MUSICAL_SYMBOL_G_CLEF""
</code></pre>
I wonder if he had to make the choice again on a fresh project today which he would choose.  Things change fast.",1215132621
235826,comment,235390,235736,0,0,st3fan,,,"""""""I've been hearing how obsolete C is ever since high school""""""<p>C will not be obsolete for a very long time. It is however completely silly to compare it with Java. Completely different and created for different purposes.",1215132608
235825,comment,235673,235721,0,0,gregwebs,,,"Be wary of evolutionary arguments.  It is possible to rationalize any current behavior/biological trait based on a made up evolutionary theory.  It is also easy to forget that the human body is a very imperfect system (and therefore should be open to hacking).<p>If he has data, that is another thing, but so far it seems the research really isn't good enough (on humans) to do anything more than conjecture.",1215132240
235824,comment,235287,235287,0,0,edb,,,"""proclaiming the death of patterns due to closures and dynamic typing.""<p>Can somebody explain that?",1215131973
235823,comment,235706,235807,0,0,xlnt,,,"More powerful language -> shorter, DRYer code -> less maintenance.<p>(Plus a few other reasons. See PG's essays, PG's Lisp books, and SICP if you don't know the other reasons.)<p>If you don't believe this, don't use Lisp. The guy writing the article does seem to believe it. He likes and respects Lisp. So he ought to analyze in the way I said.",1215131931
235822,comment,235390,235756,0,0,tx,,,"jrockway: you misunderstood my intentions. I don't code C nor Java, I was merely pointing out that it is way too early to declare C obsolete, since so much C-derived development is going on.<p>In case you're familiar with gcj, what's the status of that project? Their page hasn't been updating lately, is it being actively maintained? It looks like the most painless way to integrate some Java code I have with Ruby... and I don't wan to bet on a dying horse :)<p>And as a side note, regarding ""Beating the Averages"": there are many ways to beat the averages, and beating them ONLY by using a higher level language is like beating them with Aeron chairs: yes, some languages give you productivity boost over others, but I disagree with Paul on magnitude of that effect - in fact I'd say that availability of certain libraries beats any boost provided by language alone.<p>And, to conclude, here's a little example from real life: a group of programmers I know were working on some nifty AI stuff for automated document processing, and they were doing it in C++, which I disliked. They just discovered a totally different market in the embedded space, which allows them to grow and make money. Thanks for their language of choice (C++), they were able to beat an average Java/Python/Lisp-powered startup that doesn't have access to that segment.<p>Just saying... :)",1215131812
235821,comment,235706,235810,0,0,pg,,,"I think the point is that the problem isn't in the language core, but in more superficial things like libraries.",1215131578
235820,comment,235265,235563,0,0,st3fan,,,"The only reason for recommending spawning processes is if you live in a non-threaded environment like Python, Ruby, Perl or Common Lisp. In a C/C++/Java world it is the normal thing to do and it generally makes communication between those threaded tasks 10x simpler.<p>Don't get me wrong, I love languages like Python or Ruby and I hack stuff with it daily. I would just <i>never</i> do high performance stuff with them.<p>It's my observation that the 'threads are evil' mantra only seems to be sung by people who have never really experienced working with a really thread safe environment. It's like being stuck in the early Linux/BSD days.<p>We live in the multi-core era. Today 8 cores are not unusual, many-more-cores are coming. I seriously think that we're going to see some fallout with regards to programming environments that can't keep up.",1215131567
235819,comment,235705,235705,0,0,zacharye,,,"I'm sure you'll find many a great solution here but for what it's worth, I've dealt with the Strands guys and they have a terrific team. I'm sure they'll try to work out your issues with you if they see potential...",1215131558
235818,story,,,24,6,parker,"Y Combinator Diaries: Installment #4",http://www.socialbias.com/y-combinator-diaries-installment-4/,,1215131445
235817,comment,235390,235751,0,0,cstejerean,,,"> I don't think it's very valuable to know<p>I'd actually claim that C is very valuable to know, and while I'm at it, so is assembly. Pretty much all high level languages are written in C (or in a language that is itself written in C). Anyone that doesn't understand enough about how a modern CPU operates and cannot implement a compiler/interpreter for a higher level language in C should not claim to be a hacker.",1215131231
235816,comment,235251,235425,0,0,aswanson,,,"How in the world did you stumble upon this one?  I have to know the whole process.",1215131003
235815,comment,234677,234677,0,0,docpepin,,,Serverbeach,1215130974
235814,story,,,8,0,rob,"Google adds 'Privacy' link to front page",http://googleblog.blogspot.com/2008/07/what-comes-next-in-this-series-13-33-53.html,,1215130912
235811,comment,235706,235788,0,0,cstejerean,,,"Might be considered outstanding when compared to no support at all. You're right though, Unicode in Python could be much better, but on the other hand I've never had Python's Unicode support get in my way.",1215130255
235810,comment,235706,235732,0,0,cstejerean,,,"Why is that good news? Are you still waiting for Lisp to get popular and to make all these problems go away?",1215130160
235809,comment,235206,235520,0,0,randallsquared,,,"I'll agree that coders, writers, and artists are all in the same position: what we produce is easily copied, so relying on difficulty of copying for our revenue stream is a bad idea.<p>I'm not sure why you make a distinction between coders and those other groups, here.<p>Also, while I appreciate that this is ultimately the same issue as the death of privacy, there seem to be a lot of people who want to both strengthen privacy laws and abolish copyright.  In this sense, you're less confused than that group, anyway. :)",1215130095
235808,comment,235706,235706,0,0,sellout,,,"The article is over two years old at this point. SBCL works fine on Macs now, and OpenMCL (now called Clozure CL) supports Unicode.<p>(NB: I am employed by Clozure)",1215130074
235807,comment,235706,235739,0,0,cstejerean,,,"Why are you automatically assuming that the maintenance costs of a Lisp app are lower than of a Python app?<p>Lisp as a concept is very powerful. The current dialects, their implementations, respective libraries and package management systems on the other hand have often gotten in my way. For example take a look at <a href=""http://article.gmane.org/gmane.lisp.cclan.general/807"" rel=""nofollow"">http://article.gmane.org/gmane.lisp.cclan.general/807</a>",1215130047
235806,comment,235390,235756,0,0,jey,,,"""<i>Sure, but their programs usually leak memory (ever use Firefox?), and their libraries handle errors by terminating the whole program (see PulseAudio; any error condition immediately calls exit(1)).</i>""<p>That's a poorly written program. You can just as easily System.exit(1) in Java, or to do it a more Javaesque way, throw new Error(""im too lazy to do this right"").",1215129730
