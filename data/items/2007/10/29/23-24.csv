ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
74018,comment,73953,73953,0,0,nostrademons,,,"#1 sounds almost exactly like my last employer, while #2 could be one of several places I interviewed or had friends work at.  I won't give you advice - there's no conceivable way I could know enough about your situation - but I'll give you some additional questions to ask:<p>For #1:<p>1.) How many customers do they have?  An enterprise software company hasn't achieved ""product-market fit"" until customers come to them.  Since enterprise sales often run $100K+, it's possible to be profitable without actually having a viable product: you simply agree to customize the product until it exactly fits the potential customer's needs.  A company like this is effectively a consulting company, not a product company, though.<p>2.) How easy is it for a customer to stop using the product, and if possible, who are the customers?  When I interviewed, I heard ""We're profitable"" and ""Our software is a critical part of our customer's infrastructure.""  But I completely missed that ""We sell to hedge funds"" means ""Our customers can blow up and disappear totally"", because I had no idea how the financial industry worked.  Then I read an article in BusinessWeek that named one of our customers as potentially impacted by the subprime collapse.  (FWIW, none of their customers has blown up yet.  But it was enough to make me nervous...)<p>3.) Does ""a steep learning curve to understand their system"" mean that they have an intricate platform that nobody understands?  This will slow you down, particularly if they haven't attained product-market fit, and probably cause you a lot of frustration.  Also, home-grown systems are not transferable knowledge; it's worthless to a future employer.<p>For #2:<p>1.) How good are their technical skills?  Some founders are lax because they're great hackers and don't have time to spend on mundane formal procedures.  Some founders are lax because they're just sloppy.  In my experience, the latter are far more common.  However, if you can work with the former, it'll probably be one of the most rewarding experiences of your life.<p>2.) Are they a product company or a consulting company, and are they planning to become a product company in the future?  I don't know anyone who has been happy working for someone else's consulting company: basically, you can expect them to take 50-90% of your billable wages, give you very little support, and make you put up with their bullshit.  However, you do get to see a lot of other people's problems, and it's a decent jumping-off point for later jobs.<p>For both:<p>1.) How focused are each of them?  In my experience, the best predictor of success is focus.  When I interviewed at a #1-like company, I heard ""We have 4 products, so we don't need to score a home run or go bust.  We can make a succession of base hits and grow the company incrementally.""  It sounded logical to me.  After contributing 2 years and 2 products (out of their now 7, only 2 of which have paying customers), I'm not so convinced.  Problem is, all those dead projects imposed requirements upon the core platform, which made it much more complicated than if it only supported one product.  Complexity slows you down, and a startup really doesn't have resources to promote 7 products anyway.<p>Really, if I have any advice, it'd be to learn as much as you can about both companies <i>and where the founders are planning to go with them</i>, and then sleep on it.  Go with your gut.  You have more information than anyone here.<p>But understand that you'll probably be wrong.  In my case, I went for #1 instead of an unprofitable VC-funded #2.  In the intervening 2 years, the profitable enterprise startup is basically where it was when I joined (well, except that its existing customers like it better, it has 3 new products - only one of which has paying customers, and its technology platform is even more complicated).  The unprofitable startup (where I played Foozball against the CEO during my interview) has since attained profitability on its one product, and has added a second product that's been doing very well.<p>BTW, I think people tend to overestimate the amount of knowledge they'll gain from hacking on enterprise software.  Much of it is incredibly poorly written, and much of the rest isn't much more complex than what you'll learn from reading through the LiveJournal source code.  Enterprise software is complex because every customer has these arcane little quirks in their requirements, and then the product accumulates all these little special cases for all its cuomers.  This isn't the type of complexity that expands your mind, though: it's death by thousand papercuts.  <p>If you want mind-expanding complexity, read SICP, learn Haskell, buy <i>Building Scalable Web Sites</i> by Cal Henderson and read through the LiveJournal source code, learn JQuery and read through the source code, and pick a fast open-source webserver like Lighttpd or Nginx and read through its source code.",1193702392
74017,comment,73505,73610,0,0,mnemonicsloth,,,"Because understanding is almost always easier than data collection and tool-building.<p>Pure lack of understanding -- having all the data and having no idea what it means -- can keep a problem open for a generation or two.  Einstein is famous because he solved a problem in EM physics that was at most 30 years old.<p>Lack of data or meaningful investigative techniques can keep a subject crippled for centuries.  Physics went from rolling marbles to detecting radio waves in the two hundred fifty years since Galileo, while biology was pretty much stagnant.  Without organic chemistry, even scientists were willing to believe that living organisms were made of some special God-stuff.  Contrast that to the last 20 years.  The human genome has been sequenced by biologists on their way to designing new organisms while physicists have been stuck throwing models around since the 1970s.  Petri dishes are cheaper than supercolliders.<p>Now let's look at AI and machine vision.  Our primary tools, brain imaging and computer simulation, are getting better every year.  Maybe new ideas in algorithms or parallel architecture will bring ""real"" computer vision closer.  In fact, they probably will.  But even if they don't, this approach will <i>definitely</i> succeed eventually:<p><a href=""http://news.bbc.co.uk/2/hi/technology/6600965.stm"" rel=""nofollow"">http://news.bbc.co.uk/2/hi/technology/6600965.stm</a>",1193702060
74015,comment,73850,73990,0,0,wastedbrains,,,"For most users it will simply be a place to find new things or peoples' opinions on things, much like people go to Wikipedia for facts. I would also like to point out that we are working to help users that create lists to be able to use that information to help them discover new things. If you have a list on your favorite movies, we could suggest users' lists with similar movie tastes. This would help you to find movies on other people's lists that have similar interests to your own. Along these same lines we plan to eventually add features letting you view merged lists other than the entire community, allowing you to view merged lists on groups like your friends, people from your state, or other groupings that users might find interesting.<p>In that way the site will be rewarding to users who build up communities to express opinions on any common shared interest.\n",1193702039
74014,comment,73824,73824,0,0,andrewfong,,,"Privacy issues aside, this would be awesome. If I'm reading this properly, this isn't just Orkut 2.0 -- it's essentially building a ""social networking"" API for every part of Google. I dunno about you, but an app that integrates with GMail somehow sounds more useful than your typical Facebook app.",1193702030
74013,comment,73854,73923,0,0,joshwa,,,"> The interesting thing is that Kaiser probably bought the software at the lowest possible price, choosing the crappiest company to develop it. <p>More likely, the software dates back to 1984, and they've been trying to upgrade it for 10 years, but since it now has 25 years worth of cruft in it, it will <i>still</i> take another 5-7 years to completely migrate all their internal and external partners to the new system.<p>See the comment from Jason Schulz on the original article. He's nailed it.",1193701657
74012,comment,73824,73945,0,0,nkohari,,,"I wasn't necessarily saying that it would be an AdSense killer, just that it could be an equally interesting take on targeted ads. I definitely agree that it'll take time.",1193701621
74011,comment,73612,73612,0,0,uuilly,,,"I'm really psyched for x-ray / Instruments (built on dtrace:)<p><a href=""http://arstechnica.com/reviews/os/mac-os-x-10-5.ars/5"" rel=""nofollow"">http://arstechnica.com/reviews/os/mac-os-x-10-5.ars/5</a>\n",1193701243
74010,comment,73582,73635,0,0,rnesh,,,"Thanks for offering to help.",1193701091
74009,comment,73929,73929,0,0,queensnake,,,"Yeah; it takes time for /everyone/ to see something for what it is, what it can be. ",1193700973
74008,comment,73582,73772,0,0,rnesh,,,"Thanks for the support.",1193700869
74007,comment,73582,73617,0,0,rnesh,,,"No URL yet, but I should have something up by next week. I'll be sure to post about it.",1193700793
74006,comment,73941,73941,0,0,german,,,"Said that, I love this image for my desktop.<p><a href=""http://developer.mozilla.org/en/docs/Promote_MDC"" rel=""nofollow"">http://developer.mozilla.org/en/docs/Promote_MDC</a>",1193700753
74005,comment,73840,73936,0,0,jsjenkins168,,,"The problem is even when you discount future earnings (accounting for this growth rate), GOOG is <i>still</i> overpriced.  So then you start trying to justify the value on other lofty factors which are more difficult to quantify. This practice is totally deja vu from 2000...",1193700537
74004,comment,73972,73972,0,0,jey,,,"OODBs sound like a great idea in theory, but I've yet to meet a good OODB in practice.<p>Just use an RDBMS and in your application use a layer which abstracts away the ""relational"" part of the RDBMS and exposes it as objects to the rest of the application. This /can/ get a bit tricky with transactions and etc, but your internal data layer can be designed with some notion of transactions.",1193700411
74003,comment,73674,73711,0,0,sbraford,,,"true but what about the falling value of the chutzpah relative to the maka-maka?",1193700058
74002,comment,73284,73475,0,0,breck,,,"Thanks. I'm installing Firebug now.",1193699843
74001,comment,73674,73892,0,0,sbraford,,,"brk - while it's sometimes nice to have varied opinions here on News.YC, I can tell yours will be modded down quite a bit.<p>This isn't ""Suits News"" or ""B-school Guy News"", it's Hacker News.  I would view reading this as more of a learning experience to see how hackers view the world of startups, than trying to convert us to your viewpoint.  Just my $.02, and welcome to News.YC!",1193699814
74000,comment,73972,73991,0,0,corentin,,,"That is, until the 70s call to get their hierarchical model back.",1193699584
73998,comment,73953,73953,0,0,mrtron,,,"As a young programmer, the most important thing you need is someone to learn from.<p>Someone to show you what obvious stupid mistakes you are making, and how you can reach the next level in writing good code.<p>The first place looks like it will be a bit of a hassle because it is so strict, but it will be meaningful to get that under your belt.\nThe second place sounds sloppy, like you mentioned.",1193699429
73997,comment,73824,73898,0,0,sbraford,,,"When you say ""internal Google project"", do you mean hired a guy who used code from his previous company and slapped the name ""Orkut"" on it?<p>Via Wikipedia:\n<a href=""http://en.wikipedia.org/wiki/Orkut"" rel=""nofollow"">http://en.wikipedia.org/wiki/Orkut</a><p>""In late June 2004, Affinity Engines filed suit against Google, claiming that Orkut Buyukkokten and Google based Orkut on inCircle code.[ambiguous] Originally the Orkut community was felt to be elitist, because its membership was by invitation only. At the end of July 2004 Orkut surpassed the 1,000,000 member mark and by the following September it had surpassed 2,000,000. As of August 2007, the number of members equated to over 67,000,000 users.""",1193699281
73996,comment,73967,73988,0,0,amichail,,,"Anyone can contribute to the payment.  When it's high enough for you, you would release your code as open source.",1193699112
73995,comment,73972,73972,0,0,pfedor,,,"There's one approach to OO databases which is seems interesting to me. It's called SBA (Stack Based Approach) and the corresponding query language is called SBQL. It's been a subject of academic research in Poland for quite a while now, they've published a number of papers and a book on the subject, but only recently they actually got to implementing the thing. The project's web page is <a href=""http://loxim.mimuw.edu.pl/"" rel=""nofollow"">http://loxim.mimuw.edu.pl/</a> It is still rather immature and the English documentation is definitely incomplete, but in my opinion there is a (small) chance that this could grow into something big and useful.",1193699097
73994,comment,73824,73901,0,0,sbraford,,,"It took Google what, 4-5 years to finally come out with AdWords and begin their powerhouse ascent?<p>Give FB time, they'll get there.",1193699086
73993,comment,73953,73957,0,0,german,,,"I'd go with that option too, except you love cats :P",1193698960
