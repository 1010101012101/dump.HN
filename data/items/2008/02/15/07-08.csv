ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
116365,comment,116365,74448,0,0,h34t,,,"This is 107 days old, but I can't help but mention how ridiculous it was for me to have said that I worked in Guatemala and China ""extensively."" I don't know what got in to my tea...",1203062341
116364,story,,,1,0,tomh,"LiveUniverse rumored to purchase video site Revver",http://venturebeat.com/2008/02/14/liveuniverse-rumored-to-purchase-video-site-revver/,,1203061899
116363,comment,115444,115444,0,0,aneesh,,,"Yeah, definitely a must-read.  I'd just open up the book randomly and start reading wherever I was.  The particularly memorable ones were Max Levchin, Sabeer Bhatia, Josh Schachter, and TripAdvisor .",1203061605
116362,comment,116204,116336,0,0,lsb,,,"It's a very traditional OO situation: you want a value that know how to handle its error case.  Haskell makes it easy to implement that with types.  Either you can check the integer return value (which your compiler can't verify), you can hack something up similar to it (return all the values in a list, say, and check how long that it), or you can see that a list is also a Monad, and Nothing looks like [] and Just x looks like [x].<p>In Rails, there's a file whiny_nil.rb, whose sole job is to report errors about people accessing a nil object when they shouldn't be.  Using Maybe with pattern matching, coming from Haskell, makes as much sense as implementing Iterator with first-class functions.  It looks weird, coming from Visual Basic, but it makes your code readable and short.",1203061211
116361,story,,,1,0,neilc,"Brad Feld: Learning to Sell at a Young Age",http://www.feld.com/blog/archives/2008/02/learning_to_sel.html,,1203060343
116360,comment,109984,110570,0,0,josephs,,,"Absolutely, it's not going to be easy and we are aware of the legal problems with privacy. But yes, the facebook app is just our first product. We are working on off facebook stuff as well.",1203060047
