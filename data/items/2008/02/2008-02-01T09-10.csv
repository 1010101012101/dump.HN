ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
107750,comment,107683,107742,0,0,greendestiny,,,"Most people find infix easier to read. I really think the idea that lisp's advantage comes from having operators in the same group as parameters is ridiculous. To me lisp's power is in the orthogonality of statements, functions (and anonymous functions), data and lists.<p>You could make a language that had very lisp like syntax but didn't support things like lists and lamda functions and it would equally clearly define a tree. That language would be just about completely useless.",1201859890
107749,story,,,9,0,jamiequint,"Everything you ever wanted to know about advisors: Part 1.",http://venturehacks.com/articles/advisors,,1201859165
107748,comment,107678,107678,0,0,olefoo,,,"Anybody here been to one of these dos?<p>Is it worth doing?",1201859019
107747,story,,,4,1,jamiequint,"Guy Kawasaki: Entrepreneurship is a crapshoot",http://www.clubenetwork.com/index.php?option=com_seyret&task=videodirectlink&id=55&Itemid=220,,1201858895
107746,comment,107683,107743,0,0,curi,,,"nothing about s-expressions is bad for using state and little nesting.<p>something about C/etc is bad for nesting heavily.<p>Edit: example. <i>both</i> lisp-style versions are nicer. if C has advantages, it isn't in making state work better.<p><pre><code>  (def avg (numbers)
    (/ (sum numbers) (count numbers)))
  
  (def avg (numbers)
    (= total-number (sum numbers))
    (= total-count (count numbers))
    (= result (/ total-number total-count))
    result)
  
  function avg (numbers) {
    /(sum(numbers) count(numbers))
  }

  function avg(numbers) {
    =(total-number sum(numbers))
    =(total-count count(numbers))
    =(result /(total-number(total-count))
    result
  }</code></pre>",1201858447
107745,story,,,15,15,inovica,"Ask YC: Who's pushing their data to 'the cloud'",,"Just ordered a new laptop and I've decided to try to push as much of my data online as I can to make life more flexible.  I'm just curious to see who here does this and what do you use if so? I am thinking my regular work files, my photos etc.  I'd like to keep some files locally as well, but thinking that anything older than 30 days could be stored online - especially if its over a replicated system like Amazon S3.",1201858189
107744,comment,107666,107666,0,0,derefr,,,"In other words, we can't make C++ programmers directly into Lisp programmers, but we can make them into C# programmers and then slowly turn C# into Lisp.",1201858045
107743,comment,107683,107739,0,0,greendestiny,,,"I think people tend to think in terms of explicit state as a default rather than being forced to by poor syntax. I've had experience teaching amateurs and this really tends to be bourne out in what I've seen. Students tend to find functional languages very easy to use until the problems start to involve things that need to change over time and then they can't get past the idea of storage.",1201857966
107742,comment,107683,107739,0,0,curi,,,"BTW, tell me which of these makes more sense:<p>(+ 3 4 (- 1 (/ 3 4)) (* (- 9 2) 8 3))<p>+(3 4 -(1 /(3 4)) *(-(9 2) 8 3))<p>why oh why would you want a function to be in the same grouping (set of paren) with arguments to another function, instead of grouped with its own arguments?<p>the less you nest, the less it matters. but it is not a matter of taste which way makes more sense and scales better.",1201857834
107741,comment,107683,107723,0,0,asdflkj,,,"Where is the evidence that ""Python is written to be easily parsed and manipulated by humans"", as opposed to a subset of humans with certain (changeable) habits of mind?<p>It seems silly to demand science in a discussion of programming languages, but you're making some big assumptions about how human mind works. Considering how recent the discipline of programming is, and how fast it's evolving, what makes you think the designers of Python have discovered some immutable laws of the mind--ones that go against common sense, no less? (Common sense being that fewer tokens is better.)",1201857818
107740,story,,,1,0,cawel,"Domainer companies: from underground to Nasdaq",http://www.iht.com/articles/2008/01/31/technology/domain.php,,1201857334
107739,comment,107683,107736,0,0,curi,,,"the reason people put so much state and local variables in their program is that non-lisp languages get hard to read if you nest a lot, so they have to.<p>and that is basically what i mean about lisp being objectively easier to read: the notation actually works better. so you can nest a lot and it doesn't get horrible. but also, you don't have to, and then it's about the same.",1201857228
107738,comment,107695,107695,0,0,grandalf,,,"Maybe the reason Google is getting the most mobile traffic from the iPhone is b/c gmail for mobile is still not as good as the built-in Blackberry email client!",1201856917
107737,comment,107461,107461,0,0,rms,,,"I think that this thread is great.<p>But the last time there was a similar thread, there was a harshly negative reaction. <a href=""http://news.ycombinator.com/item?id=60433"" rel=""nofollow"">http://news.ycombinator.com/item?id=60433</a> Have we as a community grown to accept lightweight, funny stuff?<p>I hope we have. It seems unlikely to ever take over the front page, so let's try and avoid taking over threads with complaints.",1201856658
