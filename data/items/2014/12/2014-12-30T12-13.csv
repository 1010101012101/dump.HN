ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
8814378,comment,8813484,8813577,0,0,amund,,,"Perhaps of interest - <a href=""http://deeplearning.university"" rel=""nofollow"">http://deeplearning.university</a> - provides a bibliography of recent publications. See also <a href=""https://news.ycombinator.com/item?id=8334875"" rel=""nofollow"">https://news.ycombinator.com/item?id=8334875</a>",1419944392
8814377,comment,8814202,8814327,0,0,friendly_chap,,,"Author here. I think that is a very valid point. However, a lot of features I mentioned are present in other imperative languages, like Rust. The Go authors however picked other solutions I consider inferior, hence the article.",1419944384
8814376,comment,8814253,8814253,0,0,digital-rubber,,,"Nice read Jacques :-)<p>Though typical story of any company/person that assumes a framework are great for their problem, product, not realising what and what not happens in the background. One has to perfectly understand which cogs, axis and wheels turn when an operation is done. Know which wheels always do the exact same thing (apply caches) etcetc.<p>But more important, best wishes for 2015 from nearby your office,<p>RB",1419944294
8814375,comment,8813883,8814175,0,0,mike-cardwell,,,"A T420 with no heat issues whatsoever.<p>[edit] Not a great image but you can see where the vents are on the back and the left hand side on this image:<p><a href=""https://t3.gstatic.com/images?q=tbn:ANd9GcSpIDoMt_OkYzjIF9E6HRSEJ0dMcaAVqUEgAurzsRjaF6kzLNKYGg"" rel=""nofollow"">https://t3.gstatic.com/images?q=tbn:ANd9GcSpIDoMt_OkYzjIF9E6...</a><p>Doesn&#x27;t matter how far I fold the screen back, the vents aren&#x27;t blocked by it.",1419944261
8814374,comment,8814253,8814253,0,0,faragon,,,"Just 10,000 visitors per <i>day</i> on a 64 core machine with 256GB of RAM? If were per <i>minute</i> (or even <i>hour</i>) it would make sense, otherwise, it seems poorly designed.",1419944240
8814373,comment,8801587,8813949,0,0,deadgrey19,,,"Less than 1us, RTT to software (<a href=""http://exablaze.com/exanic-x4"" rel=""nofollow"">http://exablaze.com/exanic-x4</a>)<p>Less than 400ns per switch hop (<a href=""http://www.arista.com/en/products/7150-series"" rel=""nofollow"">http://www.arista.com/en/products/7150-series</a>) excluding congestion.",1419944225
8814372,comment,8814202,8814332,0,0,NateDad,,,"Yeah, it seems like a lot of the criticisms of go boil down to &quot;I don&#x27;t like writing simple loops&quot;.",1419944170
8814371,story,,,4,0,raju,"The Node.js REPL of My Dreams",https://swannodette.github.io/2014/12/29/nodejs-of-my-dreams/,,1419944164
8814370,story,,,1,1,Astralik,"German builds a house out of plastic bottles",http://joinfo.com/tech/1000966_German-builds-a-house-out-of-plastic-bottles.html,,1419944138
8814369,comment,8813883,8814199,0,0,Morphling,,,"&quot;But they are ugly and now everyone is teasing me about them. I want a refund&quot;",1419944115
8814368,story,,,3,0,artribou,"What I Learned About Life After Interviewing 80 Highly Successful People",http://www.businessinsider.com/life-lessons-from-highly-successful-people-2014-12,,1419944112
8814367,comment,8813208,8813208,0,0,ZanyProgrammer,,,"I gave up on Swift when I couldn&#x27;t just do an import CommonCrypto, and had to do hackish bridging workarounds. For a language that was supposed to be much higher level and just work, it really didn&#x27;t.",1419944110
8814365,story,,,2,0,Astralik,"Microsoft develops text input technology using eyes",http://joinfo.com/tech/1000963_Microsoft-develops-text-input-technology-using.html,,1419944090
8814364,comment,8808490,8809825,0,0,buro9,,,"I acted like it was an adventure because it was the only way to deal with what I was doing. I left home, to sleep on the street, without any money or possessions, until such a time (for as far as I could see into the future) that I could get my life to a better place.<p>If I hadn&#x27;t walked around a little in make-believe and &quot;Scout on a quest&quot; type mode, well... maybe I wouldn&#x27;t be here.<p>During the darkest days on the street I thought I wouldn&#x27;t live to be 20. It still haunts a little today: perhaps I should have been dead (many times over)?<p>By pretending it was an adventure then, and revising my personal history of it now to sound more adventurous (and less dull, traipsing on my own around cities), helps me to survive now.",1419944077
8814363,comment,8813098,8813972,0,0,kefka,,,"You are very correct. I&#x27;m also running a MT6589 (Haipai Noble N7889) on my own nodded android install.<p>I&#x27;m not worried.",1419944018
8814362,comment,8814202,8814285,0,0,ufo,,,"> Is that a function call, A type declaration?<p>If its following a &quot;::&quot; then its part of a type signature and its a type constructor application. Otherwise, its part of an expression and its a regular function call.<p>BTW, Haskell capitalization is significant in Haskell. Identifiers starting with lower case are always regular functions. Types and type constructors always start with upper case.<p>> What&#x27;s a parameter to what?<p>Application in Haskell is left associative so its<p><pre><code>    ((Map String) Any)
</code></pre>
Haskell is a functional language and programs are filled with function applications so using spaces for function application avoids a lot or syntactic noise. The only time I find this really bites me is that, due to automatic currying, passing the wrong number of arguments to a function can lead to hairy type errors. This is not a big deal if you use add a healthy amount of type annotations to your code though.",1419944007
8814361,story,,,4,1,CapitalistCartr,"Can Iceland become the 'Switzerland of data'?",http://www.aljazeera.com/indepth/features/2014/12/can-iceland-become-switzerland-data-20141228113345770287.html,,1419943978
8814360,comment,8813208,8813513,0,0,tomelders,,,"When I saw how quickly playgrounds compile and run, this was my very first thought. The fact that Apple announced FTL compiling for javascript just prior to announcing swift makes me wonder wether Apple has plans to make swift the new lingua Franca.",1419943973
8814359,comment,8814202,8814311,0,0,bojo,,,"Go is the most boring language I have ever coded in, and that is why I love it.  Sure, it doesn&#x27;t have some fancy bells and whistles people seem to want, but when you can sit down and write something functional, portable, and readable fairly quickly, I&#x27;d say that is a huge win.",1419943942
8814358,comment,8813847,8813847,0,0,TheLoneWolfling,,,"These all seem like simple peephole optimizations to me. So why doesn&#x27;t the Python compiler (and yes, Python has a compiler) do these optimizations?<p>(I am aware that some of these are not in fact equivalent, but at least some of them are)<p>On an unrelated note, the website would be easier to grok if it did diff-like highlighting of changed lines.",1419943941
8814357,comment,8813479,8814258,0,0,brakl,,,"I&#x27;d be fine with the swearing if it&#x27;d be backed up by some knowledge and experience, but that smug attitude is just incredibly irritating when coupled with such level of ignorance.
First decide what are you going to bash. Some libraries, some applications, the entire programming environment ?
Using induction from DBI->quote/CGI and a few old apps to bash the entire Perl ecosystem is just boringly stupid.
It is fine and useful to patch those old apps, but to give an arrogant lecture as if all programmers use the same broken approaches in 2014 is just ignorant.<p>It is extensively documented to prefer placeholders when working with DBI, that is, if you even use DBI directly and not via an OO mapper.
CGI as an approach is entirely deprecated on all languages/platforms not just Perl.
List expansion ? It <i>is</i> a feature, use it or leave it. You have the option to use references.
If you prefer Python, just use Python. It&#x27;s like bashing C for having pointers.
So, what else ? Try PHP with those examples. Find some Ruby apps prone to sql injection. Bash some NodeJS libraries.
If Perl is dead already, be a rockstar bashing the new stuff, why even bother with the ghosts ?
I think it is because deep down all Pythonistas know that Perl is a far superior platform and they all carry a deep ancestral envy.
Otherwise they&#x27;d just be happy with their choice already. :)",1419943908
8814356,comment,8814202,8814327,0,0,erglkjahlkh,,,"While I understand your comment, I have to disagree.<p>Programming languages should be kind of boring, and support the average developers&#x27; work. That is why Haskell will ultimate fail and fade away - most of the developers on this planet are simply not skilled enough to touch any of that stuff. Attempting to add all Ninja concepts to a language will just lead to a massive failure.<p>Go does a very good job on forcing even the most average developers to reach surprisingly succinct and elegant solutions. However, the lack of generics really forces in some situations to either use the reflection or stop being very DRY or elegant. Go wouldn&#x27;t have to implement full generics to fix that. Just adding something similar to what interfaces are to methods for variables would do, without the rest of the moving parts.",1419943879
8814355,comment,8813883,8814262,0,0,gnarbarian,,,"Not in time for the OP it would seem.",1419943879
8814354,comment,8814202,8814202,0,0,nhaehnle,,,"<i>> For those who are bothered about the exponential algorithmic complexity of nub</i><p>There is nothing exponential about nub. Given only equality comparisons, detecting and eliminating duplicate elements requires quadratic running time.",1419943877
8814353,comment,8814202,8814312,0,0,sbergot,,,"I understand this feeling, but it goes away after a bit of practice.<p>In java/go/c#, there are lots of statement and small expressions. In haskell expressions tends to be longer and are broken down in multiple local definitions (with let or where).<p>You learn to recognize important words (fmap, forM_, $, etc). You also learn to recognize how those words are associated, and how data is passed around.<p>Granted, there are people who abuse point-free notation to build complex and hard to read expressions. However I find that a codebase with rich informative types and a reasonable coding rule set is very pleasant to read.",1419943844
8814352,comment,8813479,8813479,0,0,ceronman,,,"When he explains how Perl handles an array passed as an argument to a function:<p><pre><code>    my @list = (&#x27;b&#x27;, &#x27;c&#x27;);
    test(&#x27;a&#x27;, @list, &#x27;d&#x27;);
</code></pre>
Which ends up flatting the @list array into the argument list and printing <i>&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;</i>, most Perl programmers defend the language saying that the author just doesn&#x27;t understand Perl, and that&#x27;s how things are done in the language since forever. The response is basically a RTFM.<p>If you really wanted to send the whole list as single argument to the function, you should have sent an array reference, like this:<p><pre><code>    test(&#x27;a&#x27;, \@list, &#x27;d&#x27;);
</code></pre>
Perl programmers say that if you took a minute to understand the language, you should have known this. However, what they don&#x27;t realize is that Perl gives you ambiguous hints about this all the time. For example, the built in <i>push</i> function doesn&#x27;t seem to follow this logic:<p><pre><code>    push(@list, &quot;item2&quot;, &quot;item2&quot;);
</code></pre>
This function knows perfectly that the list is a single argument and the other ones are the items to push into the list. You don&#x27;t have to pass a reference to the array to make it work.<p>The <i>push</i> function works like this because it uses an obscure feature called function prototypes. Which is rarely mentioned in any tutorial.<p>When a Perl newbie sees the push function, it&#x27;s more than reasonable to think that passing arrays as function arguments will work as in any other language. When they find what really happens, it can be very frustrating, specially because Perl won&#x27;t give you any error whatsoever. This is one of the reasons why Perl is so difficult to learn.",1419943823
8814351,comment,8813208,8814117,0,0,nailer,,,"I don&#x27;t think anyone is advocating for abbreviations.",1419943805
8814350,comment,8813098,8813709,0,0,kefka,,,"The tool is available on the Google play store: Mobileuncle Tools.",1419943803
8814349,comment,8813847,8813847,0,0,Tobu,,,"Those are the quirks of CPython 2.7.
The best optimisation is to run with PyPy — those benchmarks run about 10 times faster.<p>After that, if you want to optimise, you need an applicative benchmark.
A microbenchmark won&#x27;t work because type specialisation runs for (traces of) the program as a whole.",1419943799
8814348,story,,,5,1,dpflan,"10 Technologies Compete for a Trip to Mars (Mars One)",http://www.mars-one.com/news/press-releases/mars-one-announces-ten-potential-university-payloads-to-fly-to-mars-in-2018,,1419943791
8814347,story,,,1,0,bozho,"Skype Support gives a “solution” to non-deliverable messages",https://twitter.com/SkypeSupport/status/535382174586118144,,1419943773
8814346,comment,8813784,8813784,0,0,Donch,,,"Has the fork author discussed with Mikio the implications of forking and the need for a commercial license for proprietary applications?
It&#x27;s a shame that development stopped on Kyoto Cabinet and Tycoon. I personally learned a lot about efficiently using on disk storage from the source code.",1419943771
8814345,comment,8813208,8814053,0,0,nailer,,,"> This is perfectly reasonable because valid JSON can also be an array<p>Are arrays (and primitives which can be boxed) not considered objects in every OO language ever?<p>Agreed re: usls ctrctns. That&#x27;s the other extreme. One wants to convey the required meaning in the minimum amount possible - no more, no less.<p>Edit: thinking about it, you probably mean that the top level object is a hashtable, since ObjC is strongly typed. If I was going to do that I&#x27;d rather check the whole structure (rather than just the top) with an interface.",1419943746
8814344,comment,8813208,8813830,0,0,tomelders,,,"I would imagine there would be a javascript transpiler so the browser can request .js or .swift file depending on its own capabilities.<p>As a web dev myself, I&#x27;d love this solution.",1419943708
8814343,story,,,3,0,haytjes,"Enable Google inbox on mozilla Firefox",http://onlinedev.blogspot.com/2014/12/enable-google-inbox-on-mozilla-firefox.html,,1419943704
8814342,comment,8814156,8814156,0,0,radmuzom,,,"One of the best algorithm books in existence. The only bad thing about this book is that it might be a bit boring to read as the author just presents the algorithm and then the implementation. The best thing about this book is it provides complete implementation of all the algorithms - while it is important to prove big-O properties of a particular algorithm, it is equally important for practicing programmers to understand the underlying machine to implement it well.",1419943680
8814341,comment,8813208,8814021,0,0,archagon,,,"I&#x27;m really loving Swift, but Xcode has gotten <i>atrocious</i>. I have a keyboard app with 8 different sub-keyboards, and 80% of the time, when I open my project, Xcode gets stuck in indexing. You can&#x27;t build, you can&#x27;t close Xcode, you can&#x27;t do anything but force-quit and hope it doesn&#x27;t happen next time. There are also frequent SourceKit crashes, random crashes to the desktop, and incredibly laggy typing and auto-completion. WTF?<p>&quot;I guess I like the strict handling of nils in principle but in practice I&#x27;ve found this often means the user gets a crashed app instead of a more tolerable bug.&quot;<p>How are you using optionals in such a way that it crashes your app? I&#x27;ve found that using optional chaining and the &quot;if let&quot; block guards your code against accidental nilling even more. My rule of thumb so far is to never ever use the &quot;!&quot; operator except for initialization. I&#x27;ve found that whenever I get a crash — which is rare these days — it&#x27;s usually because I forced an optional, or possibly used &quot;as&quot; instead of &quot;as?&quot;.<p>&quot;All the strictness of the language is just a facade when you&#x27;re manually casting every time you deal with a collection, for example.&quot;<p>I dunno, I kind of like the explicitness of (cocoaArray[i] as? ABMyObject). It&#x27;s no more work than you&#x27;d be doing with a generic NSArray anyway, and you get type checking for free. (And, of course, all your Swift native arrays and maps don&#x27;t have to follow this pattern.)",1419943673
8814340,story,,,2,0,austenallred,"Linguistic analysis of leaked Sony emails indicates hackers are Russian",http://www.dailymail.co.uk/news/article-2888890/Security-experts-analyzed-leaked-Sony-emails-say-hackers-responsible-actually-RUSSIAN.html,,1419943648
8814339,story,,,4,0,kdrakon,"Top Trends in Tech for 2015 by Jonas Bonér",http://insights.wired.com/m/blogpost?id=6544125%3ABlogPost%3A131250,,1419943646
8814338,comment,8810382,8814209,0,0,josephlord,,,"It often seems like most use on Hacker News gets this wrong (so it isn&#x27;t surprising people pick up bad habits when learning English) and I regularly have to resist my inner pedant.<p>If the screw is too loose it could fall off and you might lose it.",1419943632
8814337,story,,,1,0,restalis,"Plans for increasing electric car motorway charging stations in Germany",http://www.reuters.com/article/2014/12/27/us-germany-electric-cars-idUSKBN0K50FI20141227,,1419943623
8814336,comment,8814202,8814312,0,0,dons,,,"> There are no visual handles to latch onto<p>Haskell uses syntax and context to distinguish identifiers as follows:<p>- variables, lower case initial letter<p>- constructors, upper case initial letter<p>- type variables, lower case initial letter<p>- type constructor, upper case initial letter<p>and similarly for classes and modules. And of course, white space is function application.<p>So you know if it is a variable or a constructor by looking at the first letter. And you know if it is a value-level variable or a type-level variable (or constructor) by context (types can only appear in certain places, e.g. on the right hand side of `::`).<p>But, yes, they all look like words. They&#x27;re not ambiguous though. :)",1419943598
8814335,comment,8810366,8811133,0,0,jwandborg,,,"Here&#x27;s a dump of an Elasticsearch database with 7573 of them in it and whois information attached to each document: <a href=""https://shining-inferno-2609.firebaseio.com/.json"" rel=""nofollow"">https://shining-inferno-2609.firebaseio.com/.json</a><p>Here&#x27;s an `asn_country_code`-based aggregation of countries:<p><pre><code>  {
    &quot;took&quot; : 2,
    &quot;timed_out&quot; : false,
    &quot;_shards&quot; : {
      &quot;total&quot; : 5,
      &quot;successful&quot; : 5,
      &quot;failed&quot; : 0
    },
    &quot;hits&quot; : {
      &quot;total&quot; : 7612,
      &quot;max_score&quot; : 0.0,
      &quot;hits&quot; : [ ]
    },
    &quot;aggregations&quot; : {
      &quot;countries&quot; : {
        &quot;doc_count_error_upper_bound&quot; : 5,
        &quot;sum_other_doc_count&quot; : 1894,
        &quot;buckets&quot; : [ {
          &quot;key&quot; : &quot;cn&quot;,
          &quot;doc_count&quot; : 1891
        }, {
          &quot;key&quot; : &quot;us&quot;,
          &quot;doc_count&quot; : 1155
        }, {
          &quot;key&quot; : &quot;de&quot;,
          &quot;doc_count&quot; : 894
        }, {
          &quot;key&quot; : &quot;kr&quot;,
          &quot;doc_count&quot; : 457
        }, {
          &quot;key&quot; : &quot;ch&quot;,
          &quot;doc_count&quot; : 398
        }, {
          &quot;key&quot; : &quot;mx&quot;,
          &quot;doc_count&quot; : 244
        }, {
          &quot;key&quot; : &quot;ru&quot;,
          &quot;doc_count&quot; : 178
        }, {
          &quot;key&quot; : &quot;ca&quot;,
          &quot;doc_count&quot; : 171
        }, {
          &quot;key&quot; : &quot;it&quot;,
          &quot;doc_count&quot; : 167
        }, {
          &quot;key&quot; : &quot;gb&quot;,
          &quot;doc_count&quot; : 163
        } ]
      }
    }
  }</code></pre>",1419943595
8814334,comment,8813018,8813018,0,0,bjelkeman-again,,,"Some redirect/ad on this page sends me to spam/porn sites on an iPad.",1419943590
8814333,comment,8812618,8812618,0,0,astletron,,,"I&#x27;ve always thought about this as heap and stack people - those that are good at managing ideas with random access and those that prioritize the recent.  A discussion between mismatched memory models can be difficult.  An old (and revered) team leader described himself as a translator between these different storage approaches.",1419943589
8814332,comment,8814202,8814202,0,0,pothibo,,,"One thing that is perhaps counter intuitive is how you do a lot of for loops compared to other languages (Compiled/Statically typed included). Once you let go your previous expectations, Go gets a lot nicer to use.<p>The amount of for loops you will write will also makes it obvious when you start doing O(n^2) operations in your methods. Same can be said with variables declaration and error verifications in Go. They are annoying at first, but then you understand by reading your code the places where error can occur or where you decided to ignore errors (By using _).<p>It&#x27;s a different approach and it&#x27;s refreshing.",1419943497
8814331,comment,8809138,8811442,0,0,lancewiggs,,,"The dramatic lowering of the number of people living in poverty in China is one of the world&#x27;s greatest recent achievements. The rise of China has delivered a lot to the world, and even more to China. It&#x27;s not without problems, but those in turn are solveable in time.",1419943490
8814330,comment,8813029,8813954,0,0,morganvachon,,,"> My first thought was that it seems increasingly clear that Stallman has been right all along.<p>The problem is that being philosophically right doesn&#x27;t always mean being practically right. In order to create the perfect Stallman-esque machine, one would have to design everything from the logic chips up from scratch, because in the end, no third party can be trusted. He says this himself about the Loongson system he uses daily; he considers it a compromise but one heavily weighted in his favor.<p>In short, Stallman has been right all along, but there&#x27;s little we can do about it from a practical standpoint.",1419943431
8814329,comment,8812724,8814052,0,0,faragon,,,"&quot;Build systems&quot;, like the GNU one (autoconf/automake/libtool/etc), cmake, or others, theoretically &quot;solve&quot; the need of your project build in a newer/different platforms. However, in practice, in a newer OS &quot;version&quot; or newer platform, you have to &quot;fix&quot; things, again.<p>In my opinion, when possible, it is better to stuck to standards, and use just a Makefile for POSIX targets (it allows context detection) and a custom scripts or Makefiles for exotic platforms.<p>In the end, the reason for e.g. Autoconf, is the mess of different non-standard crazy stuff. Why not to agree a build standard base, at least for the C language and library handling?",1419943398
8814328,story,,,4,0,andr,"The Mother of All Demos, Wolfram Edition",https://www.youtube.com/watch?v=_P9HqHVPeik#t=1m02.5s,,1419943360
8814327,comment,8814202,8814202,0,0,NateDad,,,"&quot;Why Go is not Haskell&quot;",1419943351
8814326,comment,8813883,8814155,0,0,rimantas,,,"Your &quot;F is better&quot; is nothing more than &quot;I am used to it&quot;. I am used to C and it is just good: 25 is warm, 0 - water is freezing, -10 - getting cold.",1419943301
8814325,story,,,3,0,jaoued,"Computationally Modeling Human Emotion",http://cacm.acm.org/magazines/2014/12/180787-computationally-modeling-human-emotion/fulltext,,1419943288
8814324,story,,,1,0,Mithrandir,"Yahoo Directory Closes, Five Days Early",http://searchengineland.com/yahoo-directory-closes-211784,,1419943278
8814323,comment,8809710,8812097,0,0,danneu,,,"Over the past year, I&#x27;ve restarted the book I&#x27;m trying to read three times because too much time will elapse.<p>The thought of ever finishing it at all is beginning to feel satisfying.",1419943249
8814322,comment,8814315,8814315,0,0,SwellJoe,,,"I found this interesting in light of recent discussions about non-violent civil disobedience and protest here at HN in response to the Eric Garner killing, the events in Ferguson, etc. No one would likely argue that we have a dictatorship to overthrow (or, at least, most would not argue that), but there is a long history of cultural and political shifts in the US due to non-violent resistance.",1419943220
8814321,comment,8814202,8814285,0,0,sbergot,,,"I disagree. You are merely used to different conventions. In haskell, symbols starting with an uppercase are types (or Constructors). You can think about Map as a type constructor which takes two other types as its arguments. So Map Foo Bar is a Map with Foo as keys and Bar as values.<p>In the go version [] is used for both indexing and type definition.",1419943205
8814320,story,,,3,0,jonathansizz,"You can put the next stock-market crash on your 2016 calendar now",http://www.marketwatch.com/story/you-can-put-the-next-stock-market-crash-on-your-2016-calendar-now-2014-12-27,,1419943191
8814319,comment,8812724,8814201,0,0,phkamp,,,"What we need is not AutoCrapNG™, but sensible convergence of platforms so that we don&#x27;t need to guess or go hunting for if <stdlib.h> exists or not.",1419943152
8814318,comment,8813883,8814224,0,0,PuffinBlue,,,"Right...except for the tens of thousands of people with the 2011 machine experiencing heat related damage to the GPU.<p>Your study size of one doesn&#x27;t &#x27;go to show&#x27; anything at all regarding the MacBooks thermal performance. It shows that you yourself haven&#x27;t experienced any issues but that&#x27;s where it ends.<p>I for instance have a 2010 i7 MacBook Pro and it will spin up and get ridiculously hot (too hot to touch) simply watching a 1080p flash video on YouTube. Not the greatest thermal design there with my study size of one :-)<p>What I will say though is that Apple seems to use the Aluminium case as a heat transfer device, so it purposefully gets hot to disapate heat. That&#x27;s great until there is a fault with the solder being too thin to withstand the planned temperatures like is happening to the 2011 MacBooks with the discrete GPU.",1419943151
8814317,comment,8813883,8814135,0,0,ekianjo,,,"> In general, Apple makes quality hardware. If it were otherwise, they wouldn&#x27;t be able to charge so much.<p>Oh, so you have never heard of the power of Marketing and branding ?",1419943134
8814316,comment,8814015,8814287,0,0,peterjancelis,,,"You read that right. The author is part of a movement known as the &quot;dark enlightenment&quot;.",1419943123
8814315,story,,,1,2,SwellJoe,"Peaceful protest is much more effective than violence for toppling dictators",http://www.washingtonpost.com/blogs/worldviews/wp/2013/11/05/peaceful-protest-is-much-more-effective-than-violence-in-toppling-dictators/,,1419943050
8814314,comment,8813370,8813962,0,0,arno_v,,,"Neverwet? Soylent?",1419943039
8814313,comment,8813883,8814175,0,0,ekianjo,,,"My x220 has air vents at the back, on the left side and several at the bottom of its base. Even when it heats up the temperature stays very much controlled.",1419943026
8814312,comment,8814202,8814300,0,0,lmm,,,"Sure. But many languages have a standard way of defining what&#x27;s a function declaration, what&#x27;s a function definition, what&#x27;s a type definition, what&#x27;s a function parameter, what&#x27;s a type parameter, what&#x27;s a function call, what&#x27;s a type instantiation; it doesn&#x27;t really matter what the specifics are, what matters is that there are standard indicators that stand out from the code (and I think there is a sense in which []{} are a priori more visible in the middle of a paragraph than letters are).<p>Haskell doesn&#x27;t seem to have that; any piece of Haskell code tends to look like a smooth surface of words separated by spaces. Function? Words separated by spaces. Type? Words separated by spaces. Instance? Words separated by spaces. There are no visual handles to latch onto, nothing to help you realise how this stream of words separated by spaces forms a tree structure (AST).",1419943002
8814311,comment,8814202,8814277,0,0,vegabook,,,"I have to say that I am tempted by Go precisely because I see a lot of comments like yours, namely, it seems just to &quot;work&quot; in a very simple way. I find myself somewhat overwhelmed by the avalanche of new language opportunities I am supposed to invest time in. Most seem to have this huge kitbag of functionality and they seem to merge into each other making it quite confusing which I should go to, and with technologies such as the LLVM it seems to me we&#x27;re only at the beginning of the new language storm, where every CS postgrad wants to create a new language that does everything. Go seems to have a very clear and unique proposition in this environment: sparsity. This seems to me to be a very good differentiator, and to the extent that the language were to move towards all the other languages and try to add features, I personally would be disappointed. This is not spoken at all as an expert in Golang, quite the opposite. I simply love the clean imperative aspect which Golang seems to have and is why I am very tempted to learn it.",1419942991
8814310,comment,8813098,8813764,0,0,kefka,,,"Its a modified 4.2.1 android with a Chinese patched Google Play install.<p>I didn&#x27;t like the samsung-esque install of their base, so I recompiled to what I liked.",1419942923
8814309,comment,8813847,8813847,0,0,jdimov,,,"Here are my annotations for how I&#x27;m reading these. Feel free to correct or update:<p>1. Faster to use dict literals than the `dict()` constructor<p>2. Faster to sort a list in-place than to use `sorted()`<p>3. Faster to use multiple assignment than multiple individual assignments<p>4. Faster to evaluate multiple individual conditions than a single multi-comparison condition<p>5. Faster to use idiomatic implied truth value than to compare to `True`<p>6. Faster to use `!=` than `is not`<p>7. Fastest way to check for empty list `a` is the idiomatic `if not a`<p>8. Fastest way to check that an object is not null is `if a`<p>9. `enumerate` is faster than doing it yourself<p>10. Constructing strings with `+=` is faster than string surgery<p>11. Fastest way to place a number in a string is &quot;%s&quot; (not &quot;%d&quot;)<p>12. For built-in types, using built-in functions (e.g. `len`) is faster than calling methods (e.g. `a.__len__`)<p>13. For built-in types, using built-in operators (e.g. `+`) is faster than calling methods (e.g. `a.__add__(b)`)<p>14. But for custom-defined classes, the opposite of #13 is true.<p>15. Adding up a bunch of numbers using `+` is faster than using `sum`<p>16. When initializing a large list, it is faster to use list comprehensions than to append each element individually<p>17. The fastest way to build a large dict is to use a dictionary comprehension<p>18. Same as #17<p>19. Not sure what the author is trying to demonstrate here. That `bool(a)` is faster when `a` is an empty list?<p>20. Faster to use implied truth value of an expression than to compare explicitly to `True` or `False`<p>21. The fastest way to refer to a list is to use the list literal (duh...)<p>22. It is faster to perform individual comparisons than to check for membership with `in`<p>23. Faster to `map` the `str` function to a list of values and join, than to manually build up the string. Also, when doing this, faster to use `xrange` than `range`<p>24. Faster to unpack than to access each list element individually. Also, as in #1, faster to use dict literal than the `dict()` constructor.<p>25. Faster to just return the boolean value of an expression than to check for it and then decide what to return.<p>26. Faster to give explicit values to keyword arguments than to expand a dict with kwargs.<p>27. To switch the values of `a` and `b`, it is faster to use a third variable than to do it in-place using unpacking.<p>28. Multiple assignment is faster than unpacking, which is faster than multiple individual assignments.<p>29. Fastest way to get integer part of a real is to use `math.floor`<p>30. Similar to #26 - it is faster to give explicit values to positional arguments than to expand a list of args.<p>31. Faster to access local vars than globals.<p>32. When trying to safely access a key in a dictionary, it is faster to use the idiomatic `D[k] if k in D` than to use the `get` method.",1419942913
8814308,story,,,3,0,soroushjp,"No ICANN transition until 2017, and probably not then either",http://jl.ly/ICANN/trans2017.html,,1419942906
8814307,story,,,3,0,jaoued,"Hundreds of Portuguese Buses and Taxis Are Also Wi-Fi Routers",http://www.technologyreview.com/news/533176/hundreds-of-portuguese-buses-and-taxis-are-also-wi-fi-routers/,,1419942899
8814306,comment,8813883,8814254,0,0,gnarbarian,,,"Without them it doesn&#x27;t run at all, so I still think they qualify.",1419942872
8814305,comment,8813208,8813689,0,0,gilgoomesh,,,"Simply: I don&#x27;t think Apple are going to suddenly replace Foundation (or any other Cocoa framework) with a Swift only version. They&#x27;ll just iterate the frameworks they currently have.<p>Not that they could anyway: according to Chris Lattner, Swift is currently 1-2 years away from including a language &quot;resilience model&quot; that would allow safe linking to frameworks built with a different version of Swift. Until then, the Swift standard library needs to remain as small as possible because it is statically linked into every Swift app (it can&#x27;t be shipped separately with the OS).",1419942842
8814303,comment,8812618,8814282,0,0,Someone,,,"The idea is that you cannot get the first car out of the garage if the second one still is there because that garage, with its single door, is a single-lane dead end street.<p>A queue would be a single-lane one-way street, like in a car wash.",1419942792
8814302,comment,8814202,8814277,0,0,lmm,,,"I don&#x27;t think Java will get many defenders here. But try that in Scala, with Spray. There&#x27;re a couple of lines of boilerplate to create the actor system, but that&#x27;s about all. And you get a system that&#x27;s flexible enough to let you write route definitions that look like a config file, but everything&#x27;s typesafe. Your routes are just functions, you can refactor them like ordinary code. So too are the kind of &quot;cross-cutting concerns&quot; like authentication or async calls that you&#x27;d have to either have built into your framework, or use some kind of &quot;magic&quot; (AOP, monkeypatching) to add to all the methods where they were needed. <a href=""https://github.com/spray/spray/tree/release/1.1/examples/spray-can/simple-http-server/src/main/scala/spray/examples"" rel=""nofollow"">https://github.com/spray/spray/tree/release/1.1/examples/spr...</a>",1419942743
8814301,comment,8813958,8814139,0,0,gnarbarian,,,"If you could be a little more specific regarding the problems you see with the argument/perspective we might be able to have a discussion.<p>Heres my perspective on how the issues are related:<p>I&#x27;ve never met a hacker who believes a particular line of code should be illegal. This is because code is just a tool which can be put to any number of uses. Even blatantly malicious and infectious code should be legal in and of itself because we can learn from it and put that knowledge to use. You know our adversaries are doing the same. Using that code in a way that causes harm is what should be illegal.  Writing the virus or a proof of concept for an exploit is how we become more resilient.  This same line of reasoning applies to firearms.",1419942731
8814300,comment,8814202,8814285,0,0,dons,,,"There&#x27;s nothing a priori clear about punctuation like [ ] { }, you&#x27;re just used to seeing lots of syntactic markers.",1419942705
8814299,comment,8813883,8813883,0,0,berkut,,,"I&#x27;ve got an early 2011 MBP which has exactly the same issue - I&#x27;m on the third logic board (GPU and a chipset both went on separate occasions within 3-year warranty) and second battery (battery wasn&#x27;t due to heat though, just capacity), I use it heavily for programming (compiling) and rendering, so CPUs are often maxed out.<p>I try and make sure it&#x27;s ventilated properly (when I use it on my lap I often hold it in the air when the CPUs are busy and the temp is rising), but I&#x27;m not convinced the design is good for cooling in general.",1419942686
8814298,comment,8813138,8813891,0,0,sjwright,,,"I&#x27;ve read your better analogy three times and still don&#x27;t understand it. Is the crust the extraneous leg of the flight?",1419942654
8814297,comment,8814202,8814285,0,0,friendly_chap,,,"The reason Map String Any does not contain any special symbols specific to that certain type is because it is not a built in special type like the Go map[string]interface{}.<p>It is just a regular type parametrized over two other types.
And kinda that is the point - being expressive enough to describe a map type without explicit support.",1419942651
8814296,story,,,7,1,xvirk,"Male Programmer Privilege Checklist",http://getpocket.com/redirect?url=http%3A%2F%2Fgeekfeminism.wikia.com%2Fwiki%2FMale_Programmer_Privilege_Checklist,,1419942644
8814295,comment,8813847,8813847,0,0,vanderZwan,,,"I&#x27;m more surprised that the disassemblies differ <i>at all</i> with half of these tests.",1419942639
8814294,comment,8810348,8813362,0,0,patrickk,,,"Julian Assange has some interesting things to say about Jared Cohen:<p><i>Later that year the two co-wrote a policy piece for the Council on Foreign Relations’ journal Foreign Affairs, praising the reformative potential of Silicon Valley technologies as an instrument of US foreign policy. Describing what they called “coalitions of the connected,” Schmidt and Cohen claimed that</i><p><i>Democratic states that have built coalitions of their militaries have the capacity to do the same with their connection technologies. . . . They offer a new way to exercise the duty to protect citizens around the world.</i><p><i>In the same piece they argued that “this technology is overwhelmingly provided by the private sector.” Shortly afterwards, Tunisia. then Egypt, and then the rest of the Middle East, erupted in revolution.</i><p>Of course, you have to take Assange&#x27;s word with a pinch of salt, but he does a good job of explaining how Cohen links the State Department to Google senior management. So much for &quot;Don&#x27;t be evil.&quot;<p><a href=""https://wikileaks.org/google-is-not-what-it-seems/"" rel=""nofollow"">https://wikileaks.org/google-is-not-what-it-seems/</a>",1419942616
8814293,comment,8813883,8814193,0,0,kybernetyk,,,"Any that fits in your budget.<p>I&#x27;ve been running on MBPs since 2008 and never had one give up. (My oldest one still is running as a test device).",1419942556
8814292,comment,8814202,8814278,0,0,dons,,,"Languages may not be perfect, but language features can be compared, and some features are strictly more powerful than others.<p>There is scope for legitimate criticism of language design based on the expressive power^1 of their features.<p>In this case, generics would make Go strictly more expressive, as, without it you must write O(n) more code or perform a global refactoring to simulate it.<p>1. <a href=""http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.51.4656"" rel=""nofollow"">http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.51.4...</a>",1419942554
8814291,comment,8812618,8812618,0,0,liotier,,,"I&#x27;m a heap person.<p>Am I a heapster ?",1419942537
8814290,comment,8813883,8814207,0,0,sjwright,,,"> I&#x27;ve always hoped we&#x27;d move to a 0-100 scale where the scale is the temperatures people can relate to.<p>That&#x27;s exactly what Celsius is, except it pegs 0 and 100 at non-arbitrary temperatures that are both scientifically precise and exceptionally relevant to everyday use.",1419942486
8814289,comment,8794276,8795237,0,0,arun_sriniv,,,"Unfortunately the datasets in that benchmark less than 3MB each in size - it fits entirely in cache. It doesn&#x27;t give a good indication of how well the function/implementation scales on bigger data sizes that really matter (in terms of computation time, memory, how cache efficient it is etc..). How much does one really care about 0.018 vs 0.023 seconds?",1419942466
8814287,comment,8814015,8814182,0,0,lumberjack,,,"<a href=""http://unqualified-reservations.blogspot.nl/2010/02/from-mises-to-carlyle-my-sick-journey.html"" rel=""nofollow"">http://unqualified-reservations.blogspot.nl/2010/02/from-mis...</a><p>I&#x27;m not sure I read this right but if I did this guy advocates monarchy over democracy.",1419942455
8814286,story,,,2,1,liz_062,"3 things you must know about Facebook ads in 2015",http://www.insidefacebook.com/2014/12/29/dennis-yu-reveals-the-3-thing-you-must-know-about-facebook-ads-in-2015/,,1419942428
8814285,comment,8814202,8814202,0,0,lmm,,,"Agree with a lot of this, but I find the lack of any punctuation one of the most confusing things about Haskell code.<p><pre><code>    Map String Any
</code></pre>
Is that a function call? A type declaration? What&#x27;s a parameter to what? The go style<p><pre><code>    map[string]interface{}
</code></pre>
is, much as I love to hate on all things go, much clearer.",1419942409
8814284,story,,,1,0,mojsilo,"Mail Chimp Review: How to Create Perfect Email Templates – Yanado Blog",https://yanado.com/blog/mail-chimp-review-how-to-create-perfect-email-templates/,,1419942403
8814283,story,,,2,0,jaoued,"Hello, Quotas the 2015 Diversity Imperative",https://medium.com/thelist/hello-quotas-d69a4107474e,,1419942395
8814282,comment,8812618,8812618,0,0,_RPM,,,"> If you have a long, narrow, single-door, multi-car garage that fits a single-file line of cars… that’s a stack: last in, first out.<p>That seems to represent a queue as well. If we assume the last car in is at the end of the line, then, well, we have a queue, not a stack. A stack is hard to represent in real life everyday events. At least it is harder to represent than a queue.<p>The way I think of a stack is a singly linked list. A linked list where insertion time is O(1).",1419942335
8814281,comment,8813883,8814059,0,0,berkut,,,"The problem is that as you push the screen back from vertical, the area for air to escape gets reduced.",1419942330
8814280,comment,8813847,8814267,0,0,mcsalgado,,,"You mean test 6?",1419942285
8814278,comment,8814202,8814202,0,0,kator,,,"&quot;Every computer language is an imperfect way of describing a potential solution 
to a poorly understood problem&quot; -- Me<p>I find it interesting when people wax poetic about how one language is better than another and how if we just did x, y or z then we&#x27;d have this perfect solution.<p>That said I appreciate the author&#x27;s write-up of some challenges with Go.  In the end the reality of any &quot;product&quot; is building what the user&#x27;s need not what they ask for.  That said I do worry that the Generics argument seems to be slowly approaching a religious war that will distract people from the other enjoyable aspects of Go.  Worse yet it may calcify the Go development team in a way that will keep them from addressing the basic issues that generics might help solve. Either way Go is just another computer language and I&#x27;m happy to use it often to solve problems I&#x27;m working on.  That said I use a lot of computer languages every week when I&#x27;m working on stuff, none of them are perfect and my solutions to the underlying problems are fragile and constantly evolving as the problems unfold.  This is the nature of our business, to constantly do battle with poorly understood problems using imperfect tools in a world where we are fooled into thinking everything is black and white because at the core of our technology everything is a 0 or a 1.<p>&quot;One Computer Language to bring them all and in the darkness bind them&quot;.. LOL",1419942250
8814277,comment,8814202,8814202,0,0,bsaul,,,"Although i&#x27;m still very unsure about rob pike&#x27;s argument that go don&#x27;t need generics since it has interface, a recent experience :<p>After having implemented a mini web services in go and being fed up with its limited type system, i decided to stop coding in go and start recoding my project in java using what is often advertized here as the most minimal framework : dropwizard.<p>Well, i downloaded the framework, configured maven, started the hello world tutorial, and quickly found myself dealing with 2 xml files, 1 yaml file, multiple classe files ecerywhere, and couldn&#x27;t get the whole stuff work immediately.<p>Then i realized that my golang implementation was already working, and that i completely understood my code and its potential performance characteristic, without having to have deep knowledge about the jvm internals, things like sevlet containers, or how the whole stack would deal with my global variables in a multi-threaded context. All my code was just one simple program.<p>My temporary conclusion right now is that golang type system is indeed extremely shite, but that if what you need is to develop simple yet efficient web services, it doesn&#x27;t matter that much.",1419942226
8814276,comment,8813847,8814267,0,0,im3w1l,,,"The first has<p><pre><code>    12 COMPARE_OP               8 (is)
</code></pre>
while the second has<p><pre><code>    12 COMPARE_OP               2 (==)</code></pre>",1419942221
8814275,story,,,6,0,ingrida,"New year tree as a single div styled with css3",http://thewebblend.com/contents/100668/new-year-tree-as-a-single-div-styled-with-css3,,1419942217
8814274,comment,8813867,8813867,0,0,dosh,,,"We&#x27;ve been making something during our internal hackathon with a similar goal in mind, but perhaps a different approach. Hopefully I can get some feedbacks: <a href=""http://jiver.co/startup"" rel=""nofollow"">http://jiver.co/startup</a><p>It&#x27;s a rough alpha (desktop web-only, mobile support in January).",1419942215
8814273,story,,,1,0,locusm,"The case for building immersive environments",http://visualized.com/2014/presents/jeff-noris/,,1419942166
8814272,story,,,3,3,abdelhadikhiati,"Ask HN: How to get started with open source contributions?",,"I am a  computer science student and every time i go o Github and look for a project to contribute to , i find myself with a big code base that i am not able to understand how it works , neither what every piece of code means , how do you manage to understand those projects ?",1419942154
8814270,comment,8810382,8814197,0,0,edpichler,,,"Oh, this is the problem when you do not have the vocabulary and use Google Translate to help.<p>&quot;Cogitated&quot; is very similar with the Portuguese translation &quot;Cogitado&quot;, broadly used. And on Google Translate it appears as the first option.<p>I think that literature and travel are the keys to improve on this.",1419942061
8814269,comment,8813883,8813883,0,0,jfroma,,,"I think the picture in the header says it all, on one side I can see very dirty fans and on the other side the improved design.<p>The first thing I would have tried is to replace the fans. I had to do this with other laptops I have had in the past (HP mostly) but never with the two models of MBP (and I run  pretty hard too), so I guess it has to do with the model as he mentioned.<p>While I sympathise with the idea of improving the design of  a product massively consumed, I first try to think that the engineers did a well design and try to look for the malfunctioning component to replace.",1419942033
8814268,comment,8810348,8814229,0,0,DanBC,,,"> Self driving cars just have to be safer than Humans -- probably not that difficult.<p>Sadly, this probably is not true.<p>TERRORISTS are the reason we go through ridiculous security theatre at airports - costig many millions of dollars - when the drive to the airport is very much more risky that flying.<p>People are not rational about risk.  They will drive a car because they thinkthey are safe drivers.  Giving up control is tricky.",1419942015
8814267,comment,8813847,8813847,0,0,eveningcoffee,,,"I am wondering what is exactly measured here (by timeit). For example for test 5, there is noticeable difference between timings of variants b and c despite them evaluating to the same list of instructions (and I did tests by myself).",1419942015
8814266,comment,8810758,8813188,0,0,jacques_chester,,,"It&#x27;s hyperbole, fine. But the marginal value of the same million dollars to the pro investor and the founder are wildly different. To one it&#x27;s a shrug, to another it&#x27;s a life-changing amount of money.<p>I&#x27;d also be interested in seeing the expected lifetime outcomes. Taking a hit for several years, every few years, is probably not as wonderful as you&#x27;re making it out to be on the average.",1419941983
8814265,comment,8809659,8813771,0,0,abique,,,"You don&#x27;t need to remove the plugin and add it again. Just change the config in the plugin, and then when you get back to the daw, you should already see the new outputs.",1419941974
8814264,comment,8812313,8812313,0,0,AlyssaRowan,,,"Snowden pretty much had <i>root</i> - he had access to more or less everything that wasn&#x27;t airgapped, including things the NSA wasn&#x27;t supposed to have direct access to as part of their data-sharing agreements. (Of course, some ECIs presumably <i>are</i> airgapped - but <i>much</i> less than you probably expect these days.)<p>Not everything is being published, however. There are details from GCHQ STRAP3 (location of individual listening sites) but only STRAP2 documents, and all details of personnel and telephone numbers has been redacted by the journalists (perhaps a little too broadly - for example as in the GCHQ &quot;refer requests for disclosure to&quot; telephone number, you could actually Google it! I think they know by now, however <g>). Snowden wanted to end mass surveillance and sabotage of public security products; not reveal their cryptanalytic advantage to targets. It&#x27;s the journalists who are doing most of the selection, I gather - but they&#x27;ve seen the whole haul, including what is <i>not</i> being published, and the picture is consistent, though (yes) incomplete.<p>My impression has been for some time that their cryptanalytic advantage is not actually vast, but their operational resources truly are. Throwing money at things doesn&#x27;t magically give you breaks to the DLP - but it totally can buy you computing resources that can break 1024-bit Diffie-Hellman. (It mentions Cavium cores - suggesting large, parallel RSA/DH-optimised multipliers were on their HPC shopping list. They are much faster at 1024-bit than higher.) It can buy you insiders, or let you conduct operations that threaten or coerce insiders, or conduct astroturfing campaigns to frighten people away from encryption you can&#x27;t break, or further the goals of your agency (which do not necessarily align with the government paying your way - it&#x27;s not so much &quot;oversight&quot; as &quot;don&#x27;t get caught doing anything you shouldn&#x27;t&quot;). You can throw (a lot of) money at military contractors and hope some malware-by-committee comes out that you can use to hack anyone that looks interesting, grab intelligence or keys, or any of the above. And they typically attack from <i>every</i> angle at once.<p>My take on the HPC resources is that they&#x27;re mostly used as brute force CPU/GPU power for low-entropy situations - anything where passwords are involved may be vulnerable. Email an encrypted DOC, ZIP or RAR file to someone? They&#x27;re going to at least <i>try</i> it as a matter of course, even <i>en masse</i>, but they&#x27;re not going to give it much juice unless you&#x27;re tasked.<p>Money can&#x27;t give you magic. However you very, very rarely need magic.",1419941970
8814263,comment,8813958,8813958,0,0,b6,,,"I think the author&#x27;s statement was too strident, but I think I understood immediately what he meant.<p>I was born in Oklahoma (what some might consider flyover country headquarters), and raised from an early age to use guns. One idea my family and I repeatedly discussed was that gun ownership was an essential safeguard against government overreach, an essential part of keeping power in the hands of the people. Without it, we said, government might voluntarily restrain itself, but there would be little to actually prevent it from doing whatever it wanted.<p>Putting aside whether that is actually true or not, the parallels with the open source movement are really obvious to me.",1419941943
8814262,comment,8813883,8814073,0,0,hmottestad,,,"They did. The retina macbook pro has vents on the sides.",1419941817
8814260,comment,8813847,8813847,0,0,thu,,,"I met someone who was specifically using `dict()` instead of `{}` because, he told me, the CPython parser was much slower on the later than on the former and that it was noticeable on larger code base.<p>(That being said I think using Python should be about writing maintainable code, not about micro-optimization.<p>I don&#x27;t claim the purpose of that site is to push you to use those micro-optimizations, even if the title seems to suggest so. Including the disassembly makes for a nice visualization.)",1419941772
8814259,comment,8810297,8813795,0,0,lukedegruchy,,,"Java interop is way better with Ceylon 1.1.   For example, use-site variance for generics was introduced and overloading bugs have been resolved.  Ceylon 1.2 will have constructors (to support DI frameworks) and I believe Java EE integration.  The Ceylon guys have been very careful about adding new features, considering the pros and cons. Strict Java interoperability would have resulted in a much less elegant language (ex public/protected/private instead of shared and allowing an escape hatch for null, as Swift and Kotlin have done).",1419941770
8814258,comment,8813479,8814081,0,0,gondo,,,"is it just me, or does he think that swearing makes him look cool?",1419941738
8814257,comment,8813883,8813883,0,0,dimitris99,,,"What a fantastic way to deal with the problem. Whereas most people would have gone and paid money to some repair place, you took matters into your own hands. I love the iFixit approach to problems. (although I do understand why many people may find this a bit too much). What else can you hack?",1419941718
8814256,comment,8812618,8812618,0,0,kabouseng,,,"The question is, for a product, which approach is best? Do you solve the low hanging fruit, and are responsive to clients but with high risk of breaking something else, or do you work methodologically through your product road map but are less responsive to clients.<p>The Agile movement&#x27;s aim can be said, is to reduce the feedback loop of software development, so favouring a stack approach (echo&#x27;ed in facebooks &quot;move fast and break things&quot; approach), but I have also seen situations where there is no strategic planning, and the team can churn for a year like a dog chasing its own tail. Methodologically working through your roadmap can again be seen echo&#x27;d in Steve Jobs approach of saying the client doesn&#x27;t know what he wants, its your job to give it to him.",1419941603
8814255,story,,,2,0,jaoued,"Technologies that have stood the test of time: in pictures",http://www.telegraph.co.uk/technology/picture-galleries/11303109/12-technologies-that-have-stood-the-test-of-time-in-pictures.html,,1419941590
8814254,comment,8813883,8814104,0,0,veb,,,"They&#x27;re really not. &quot;Speed holes&quot; by definition make something go faster. In this case, it was done to help the temperature. Not to overclock.",1419941561
8814253,story,,,425,130,andrewaylett,"Saving a Project and a Company",http://jacquesmattheij.com/saving-a-project-and-a-company,,1419941444
8814251,comment,8814203,8814203,0,0,byoung2,,,"<i>In the US, the FAA tracks storms six to eight hours in advance, and assigns routes to avoid them</i><p>Is this not true in other countries?",1419941370
8814249,comment,8812313,8814176,0,0,commentereleven,,,"Snowden was low-level, but he was basically an admin doing migration to a new system. His job description required the access he was given.<p>Additionally, one of the lessons learned from the 9/11 attacks was that keeping data too &quot;Need to Know&quot; might prevent people who actually need to know information from knowing about it.",1419941293
8814248,comment,8810857,8810857,0,0,noonespecial,,,"At first, I thought this was just going to be another person discovering that analog TV sets were really just oscilloscopes with predetermined sync; and then setting up a sync for the scope to turn it into a little TV...<p>How nice to be wrong! Hats off on this one. Nice hack indeed.",1419941286
8814247,comment,8813370,8813962,0,0,JanezStupar,,,"Everything &quot;nano&quot; methinks.",1419941261
8814245,comment,8814015,8814015,0,0,pron,,,"To those who might think this article contains some novel analysis of the financial system: it doesn&#x27;t. This is your run-of-the-mill libertarian politics, but at least the writer is completely upfront about it (inflation is taxation meant to serve the goals of the government -> I think the government is too big -> we should take away this form of taxation by switching to gold).",1419941159
8814244,comment,8813883,8814224,0,0,grandalf,,,"I just use them on my lap and have never had heat problems with any of my macbooks.<p>Before I bought my first macbook air I wrote a program on the console that slammed the CPU and left it running at the apple store.  When I came back a few hours later the program was still running (100% CPU on all cores) and the machine was still cool to the touch. I then purchased the laptop.",1419941145
8814243,comment,8813883,8813883,0,0,jokoon,,,"I have a mid 2009, 13&quot; macbook pro, and when I use it in my bed, I make sure to put it on something that doesnt bend, like a slim large book with a hard cover, or a plastic tray.<p>I don&#x27;t really know why it gets hotter over the year. I guess fine dust end up clogging it, and since laptops are very slim, everything is packed, so it might be pretty hard to remove that dust. Some dust can stick to some surfaces, but I&#x27;m not sure.<p>One thing for sure is that I wont use it for gaming or anything that might get it hot.",1419941097
8814242,comment,8813847,8814036,0,0,nikital,,,"I looked at the source of 2.7:<p>The function PyString_Format (Objects/stringobject.c) does the formatting for the % operator. For %s it calls _PyObject_Str which in turn calls &quot;str()&quot; on the object. For %d it calls formatint (located in the same file).<p>The str() implementation for ints is in int_to_decimal_string (Objects/intobject.c) and it&#x27;s incredibly simple:<p><pre><code>    do {
        *--p = &#x27;0&#x27; + (char)(absn % 10);
        absn /= 10;
    } while (absn);
</code></pre>
The code for formatint is way more complex, and it contains two call to the native snprintf:<p><pre><code>        PyOS_snprintf(fmt, sizeof(fmt), &quot;%s%%%s.%dl%c&quot;,
                      sign, (flags&F_ALT) ? &quot;#&quot; : &quot;&quot;,
                      prec, type);
        // ...
        PyOS_snprintf(buf, buflen, fmt, -x);
</code></pre>
The native snprintf is heavier because it handles precision, zero-padding and stuff like that.<p>I believe this is why %d is slower. %s is a straight &quot;devide-by-10-and-subtract&quot; loop while %d are two library calls to the full-blown sprintf. However I didn&#x27;t actually profile the code because I don&#x27;t have a debug build, so I might be completely wrong.<p>Edit: Link to code: <a href=""https://github.com/python/cpython/blob/a5c7a4257507a77699a1ab8ec079f41d505b9eee/Objects/stringobject.c#L4444"" rel=""nofollow"">https://github.com/python/cpython/blob/a5c7a4257507a77699a1a...</a>",1419941095
8814241,story,,,3,0,xvirk,"Converting from Joda-Time to java.time",http://blog.joda.org/2014/11/converting-from-joda-time-to-javatime.html,,1419941083
8814240,comment,8810348,8814229,0,0,nl,,,"<i>Self driving cars just have to be safer than Humans -- probably not that difficult.</i><p>Perhaps, on average. But (for example) should someone in the Netherlands trust car trained on US road rules? Or someone in Japan (where they drive on the left hand side of the road) trust software trained in India (where lane discipline is fairly.. loose).<p>Also, saying a system should be permitted because it kills less than humans seems a bit post-hoc. What happens if a bug is introduced that makes it worse in a specific circumstance?<p>Licensing seems a good way to deal with this, though I&#x27;m interested in alternatives.",1419941082
8814239,comment,8813883,8814029,0,0,grandalf,,,"I&#x27;m sure Apple has done some pretty exhaustive (no pun intended) thermodynamic analysis of the case design.<p>I have three macbooks, two airs and a 13&quot; mpbr, and none have had any thermal issues at all, even in the heat of summer.<p>If you are using a laptop in a way that generates that much heat, you probably get about 1 hour of battery life, which sort of defeats the purpose of having a laptop in the first place.  A larger fan or heavier case material would also make the laptop less user-friendly for the vast majority of users.",1419941017
8814238,comment,8813847,8813959,0,0,beaumartinez,,,"Agreed, although it&#x27;s interesting to see the disassemblies.<p>Python is a language about readability and conciseness first, performance second.<p>I would have liked to have seen `map` used in the list comp examples, as well as seeing the tests run on Python 3.",1419941010
8814236,comment,8813883,8813883,0,0,marincounty,,,"I had the same problem with a HP laptop a few years ago.  HP 
denied their was a problem.  Long story short; I will never 
give that company any more money.  As to reballing a graphics chip, I would buy a kit off ebay, if made, and do 
it right.  You are still taking a chance because you most 
likely don&#x27;t have a proper heating station?  I really like the additional holes.  I would like to know exactly where 
my fans are and make a proper  template. I would then use a
very small gauge drill, and put in hundreds of holes.  I would try to make it look like it came from Apple that way? 
I use &quot;I would&quot; too much.  I probally won&#x27;t likely do anything 
until mine goes dark?   (I think the correct way of drilling 
holes is dismantling the MacBook Pro, which has always scared me.)",1419940954
8814235,comment,8813883,8813883,0,0,enigami,,,"You are kidding rite? I don&#x27;t think you really did that to your MacBook, interesting story though",1419940823
8814234,comment,8813847,8813847,0,0,perlgeek,,,"And this, ladies and gentlemen, is how you <i>not</i> make speed comparisons.<p>#7 surprised me: why would &#x27;if a:&#x27; be slower than &#x27;if not a:&#x27;? So I ran the code myself, and ran it a few times. And lo and behold, the third digit varies greatly between runs. And the timing between the first and second variant only differ in the third digit.<p>I ran the first and second variant ten times, and got these values:<p>first: 0.138 +- 0.05<p>second: 0.137 +- 0.04<p>So there is no significant difference in my timings, though individual runs differed as much as 0.132 vs. 0.150.<p>Though kudos for providing the full code and the raw output. It made quite easy to reproduce!<p>These are the timings I measured, in octave/matlab syntax:<p><pre><code>    t1 = [0.132781028748, 0.140866041183, 0.13587808609, 0.138177871704, 0.137129068375, 0.150414943695, 0.138676166534, 0.137069940567, 0.13484787941, 0.136043071747];
    mean(t1)
    std(t1)

    t2 = [ 0.134783983231, 0.143576860428, 0.138277769089, 0.142880916595, 0.140572071075, 0.136868000031, 0.131128787994, 0.134744167328, 0.132730007172, 0.137500047684];

    mean(t2)
    std(t2)</code></pre>",1419940812
