ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
51519,story,,,4,4,steffon,"The Art, Science and Business of Recommendation Engines",http://www.readwriteweb.com/archives/recommendation_engines.php,"Is this really the best that's out there?",1189141060
51518,story,,,15,46,hhm,"What's your autism quotient? (link updated)",http://www.isle-of-avalon.co.uk/cgi-bin/aq.cgi,,1189141015
51517,comment,51451,51451,0,0,uuilly,,,"I stopped listening to linus after he layed into gnome.\n",1189140911
51516,comment,51451,51493,0,0,Zak,,,"That's not what he said. He said ""I wrote it in C because C was the best language for the job. It's also nice that C discourages idiots from trying to contribute."".<p>He's right on both counts. I've always found using tools designed for smart people to be an effective way to cut down on the number of stupid people attempting to work on a project, but the main advantage is getting to use a good tool instead of a bad one.",1189140883
51515,comment,51390,51390,0,0,bharath,,,"A lot of the comments seem to focus on influencing the lives of lots of users. That would pretty much cut out the entire Enterprise startup category wherein a few 1000 IT admins are enough to take a company to profitability. Of course, employees of the company end up becoming indirect users. As to what defines success, the following quote works well for me:<p>""When all is said and done, the journey is the reward.""\n- Randy Komisar",1189140690
51514,comment,51351,51351,0,0,lupin_sansei,,,"These ranters never actually show you any perl code that is particularly ugly and compare it against some lisp/python/ruby code that solves the problem more cleanly. <p>I'm sure that there are areas where other languages' solutions are much cleaner than an equivalent perl one, but can anybody actually show us one? Especially a lisp one.",1189140680
51513,story,,,4,0,steffon,"Four Concentric Circles of a Web 2.0 Name",http://www.firewheeldesign.com/sparkplug/2005/December/four_concentric_circles_of_a_web_20_name.php,,1189140611
51512,comment,51390,51413,0,0,rokhayakebe,,,"Set a goal. Reach it. You are successful at that. That is the broadest def you can get. ",1189140245
51511,story,,,3,1,rainsill,"What's A Good Name?",http://fishtrain.com/2007/08/13/whats-a-good-name/,"5 Suggestions on naming your business or organization.",1189140236
51510,comment,51351,51488,0,0,omouse,,,"It's funny because they're all accurate. XML is an ugly beast, regular expressions can be amazingly obfuscated. I don't know about AWK, but I'm guessing that it's as ugly as Perl.",1189140198
51509,comment,51390,51486,0,0,falsestprophet,,,"As far as I can tell if a warm and fuzzy feeling pays your bills, you are probably going to jail. ",1189140190
51508,comment,51351,51499,0,0,omouse,,,"The assertation is backed up by a quote from the original post by Naggum. I said ""wrong"" because you somehow missed that part of his post. He was not saying that Perl is wrong because it has some of Lisp's features. He was saying that it is wrong because it allows shitty work. In fact, it encourages it by making it harder to write good solutions.<p>Someone (Perl) can be beautiful (Lisp features), but that doesn't change the fact that they wear dirty clothing (ugly syntax) and they smell kind of funny (ugly solutions).",1189140081
51507,comment,49266,49523,0,0,forgotmylastone,,,yeah,1189139818
51506,comment,51451,51451,0,0,marketer,,,"Linus basically says that C++ has ""inefficient abstracted programming models"". Looking at the STL, you only see some very basic abstractions: vectors, lists, hash tables, sets, and others. These are very well tested, and extremely optimized. Anyone writing a decent amount of code will undoubtedly run into a situation where they need such structures. ",1189139642
51505,comment,51451,51477,0,0,timr,,,"<i>""pick one that has true high-level features like garbage collection or a good system integration, rather than something that lacks both the sparseness and straightforwardness of C, and doesn't even have the high-level bindings to important concepts.""</i><p>That's a straw man.  There are garbage collectors and ""system integration"" libraries for C++.  The language doesn't lack for high-level bindings, but it also doesn't <i>force</i> you to adopt a paradigm.  This flexibility is C++'s greatest strength, as well as its greatest weakness.<p>Personally, I find it more than a little ironic that a huge amount of the complexity of C++ comes from its insistence on remaining backwards-compatible with C.  Linus may love the ""lean system programming language"", but it sure does bring a lot of ugly baggage to the C++ party....\n",1189139467
51504,comment,51422,51496,0,0,jsjenkins168,,,"I actually assumed the same thing. The computational load is intense in the handshake process, but then not really much more so afterwards. But if every user is re-authenticating each time they log into the site, the server can fall flat on its face very quickly. The issue is compounded if the client has a connection timeout. As the server load increases and response time starts to exceed the defined timeout, the client sends more connection requests, increasing server load exponentially. Its like a snowball effect. Check out the graphs in the paper from my previous reply and you'll see what I'm talking about.<p>I like mdakin's proposed solution b/c it apparently alleviates the need for a connection request each time the user logs in. At least until the cookie expires.",1189139376
51503,comment,51001,51497,0,0,nostrademons,,,"Actually, I went with web.py after all.  I blame temporary insanity.  That, and web.py was easily understandable without a whole lot of docs to go through, and I wanted to get <i>something</i> up quickly.  We may yet rewrite in Pylons, but it's low priority, as web.py is working for us.  (We also have practically zero traffic though.)<p>For templates, we use Mako after having previously used Cheetah, same as the rewritten Reddit.  Mako is a very well-done, well-thought-out library.  There were some things that Cheetah had a lot of trouble with (like unicode support and fragment libraries) that Mako handles without breaking a sweat.<p>For JS lib, we eventually settled on jQuery after having tried out Prototype, YUI, and Mootools (never used Mochikit, sorry).  This was largely because that seems to be where the momentum is these days.  Also, jQuery has a very elegant selector + plugin architecture and a growing collection of plugins.  And it's the first JavaScript library I've seen that's intimately aware of namespace issues and tries to balance ease-of-use (no silly YAHOO.widgets.slider.SliderThumb chains here) and not-breaking-anything.  This has been a major issue at my day job  - we use several Prototype-dependent libraries and they <i>all</i> seem to be incompatible with each other, along with any other JS libraries.<p>On the downside, jQuery is still fairly immature, so you may have to write some widgets yourself that are provided with other libraries.  That's changing quickly though, since many people are writing plugins now.",1189138853
51502,comment,51397,51397,0,0,rfrey,,,"There are ways to get rich without working hard: most of them are all about taking a big risk.  Gambling, robbing banks, that sort of thing.<p>But as pg said, working hard is necessary for doing something great.<p>Greatness seems to require a very focussed hard work, though.  You not only have to work very hard, but on exactly the right things.  Simply putting in long hours coding probably isn't enough.",1189138476
51501,story,,,2,0,nsimpson,"When is the right time to ""light the bulb""?",http://fridayreflections.typepad.com/weblog/2007/09/when-is-the-rig.html,,1189138309
51500,comment,51422,51446,0,0,mdakin,,,"You're welcome!<p>Forgive me if this is obvious but there is one corner case worth mentioning with the Fu Cookie approach.  The Fu Cookie authenticator expires.  Be sure to consider what happens if this expiration happens in the middle of some complex user-operation.  Ideally you will save the user's state, reauthenticate and then automatically resume the interrupted operation.  It is possible to do this all using cookies or hidden form fields rather than maintaining a data-structure (or closure ;) ) on the server-side.  If you do use cookies/form fields consider HMACing the operation-state data in the same manner that you HMAC the Fu Cookie authenticator.",1189138241
51499,comment,51351,51482,0,0,SwellJoe,,,"""Wrong.""<p>Very concise.  And it's always good to back it up with the assertions of some random dude on Reddit.",1189137998
51498,comment,51226,51487,0,0,epi0Bauqu,,,"I also put this on the features page, but I think separating submission karma from comments karma would also be a useful expansion.  Perhaps a few columns of leaders using different metrics would work.  For example, top leaders, top submission leaders, top comment leaders, and then maybe some time ones, like upcoming comment leaders, etc.",1189137942
51497,comment,51001,51494,0,0,kirubakaran,,,"Thanks nos`. Are you still using Pylons? And templates? Would you recommend MochiKit for js lib?",1189137890
51496,comment,51422,51484,0,0,epi0Bauqu,,,"Sorry to suggest that you were biased.  Bad diction on my part.  I didn't mean it like that.<p>That link isn't working for me, but, from experience, I really don't think using SSL just for authentication will hamper your server resources that much.",1189137709
51495,comment,51109,51109,0,0,merrick33,,,"No earth shattering news here, but discussions have comments and news links don't have as much. When someone asks for help understanding something by asking a question, the community lends it expertise. If more questions were asked, more discussion would proceed. <p>- my 2 cents",1189137688
