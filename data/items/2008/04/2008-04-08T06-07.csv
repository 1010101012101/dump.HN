ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
157664,comment,157450,157450,0,0,doubleplus,,,"<a href=""http://wiki.w4py.org/python-vs-php.html"" rel=""nofollow"">http://wiki.w4py.org/python-vs-php.html</a>",1207637777
157663,comment,157269,157496,0,0,tonystubblebine,,,"People make this claim all the time but I never hear anyone talk about actual examples where they were bitten by this.<p>People especially like to harp on the speed of ruby as a knock on ruby on rails. However I have not once run into a real life situation where the performance problem was directly related to the raw performance of Ruby. I have though run into plenty of performance problems:<p>* At Odeo (RoR circa 2005) we had plenty of problems with memory leaks in our FCGI (this was 2005!) processes and in feed_tools (well known to be slow)<p>* At my next company we quickly ran into situations where pages were slow to load due to the sheer number of database calls. When I started doing web apps I can remember never having more than three queries behind any given page. Some of our pages were doing 500 queries. This was easily fixed but Rails definitely tempts you to put up scaffolding which you then have to rework once it starts getting real use. In my experience this is a good thing. I'm twice as likely to throw away the scaffolding than I am to have to rewrite it.<p>* Twitter, which is the poster child for RoR scaling issues, actually actually has had almost all their problems on the backend, having to rapidly change their database and message queue architectures and deal with flaky service providers (AOL and phone companies). Again nothing to do with the architecture they launched with.<p>So, in the lab Ruby is a slow language, but in the real world how is this biting people?",1207637590
157662,comment,156683,157054,0,0,jacobolus,,,"You have the shittiest “convert to grayscale” I’ve ever seen: it doesn’t come close to preserving the value of the colors.  Convert the image to Lab, and look at the L channel, and you will see that the “ugly” combinations have very little value contrast, while the “nice” ones have a great deal more.<p>To see who is “exactly wrong” more graphically: <a href=""http://img246.imageshack.us/img246/7098/grayfxbetternp7.png"" rel=""nofollow"">http://img246.imageshack.us/img246/7098/grayfxbetternp7.png</a><p>Notice that in the bottom row, where we take the value from ugly and nice combinations and reverse them, the combinations with the “nice” choices of hue are now looking ugly as sin, while those with the “ugly” choices of hue no longer look so bad.<p>Also, in your second image, the green stripe on the left is quite a bit brighter than red or blue stripes, which is  the dominant reason that the combination on the left looks “better”, while the three stripes on the right side are of quite similar value.<p>Image showing this: <a href=""http://img503.imageshack.us/img503/2456/vomitev5betteryu5.png"" rel=""nofollow"">http://img503.imageshack.us/img503/2456/vomitev5betteryu5.pn...</a><p>I didn’t really have the half hour to spend on this (paper due tomorrow; blargh), so hopefully someone finds it edifying.<p>(Edit: None of this is to say that there isn’t some real truth to the link’s author’s claims about commonly preferred color combinations based on hue.  It’s just that the graphics he uses to demonstrate it [and also the one you made] are horribly misleading, and mostly reflect a completely unrelated effect)<p>----<p>Another edit to add: the hang-up may be that the “value” of the HSV model has almost nothing to do with the term “value” as used by artists or color scientists.  So that may be the source of your confusion.  HSL and HSV were designed for the 1970s and are nearly useless in an age of fast computers.",1207637548
157661,comment,157494,157494,0,0,SwellJoe,,,"We use Google Analytics, Webalizer, and AWStats, plus some custom Perl bits.  Clicky looks pretty swish, but I haven't taken the time to try it.",1207637489
157659,comment,157602,157602,0,0,hcho,,,"I came across two things:<p>1)Depending on the size of your swf, initial loading might take some time.<p>2)Not everybody has the latest player on their browsers. If your users are not tech literate. This might be an obstacle.",1207637171
157658,comment,157494,157494,0,0,dangrossman,,,"I'm using W3Counter (<a href=""http://www.w3counter.com"" rel=""nofollow"">http://www.w3counter.com</a>). It's like Google Analytics minus the 1-24 hour delay, and all the goodness that comes from realtime reporting. But I keep GA installed as well for some of the more detailed back-reporting it doesn't have.",1207637016
157657,comment,157212,157601,0,0,ardit33,,,"simple scenario: when you join your company gives you 1000 options valued at $1 per share (at the time of issuing), vesting in 4 years.<p>Assuming after 2 years, you decide you want to exercise the options that are vested,  so you pay your company $500 to get your 500 shares.<p>Company start going down the tube, and folds out, or is selled at fire price.  You end up with basically worthless paper on your hands.  So, instead of earning money, you lost.
Imagine, that instead of $500 that was 5000, 50000.  It is a lot of money.<p>There are also tax implication, depending what kind of taxing schedule you choose.  You can find yourself actually paying taxes, for those shares at the time of excercising, yet when you want to sell, they are worthless.<p>Double ouch.
Also, one thing to consider is that when you exercise options, you have buy those shares.  If your company is iliquid (not gone ipo), it might take a long time when (if) you are able to sale them  (either it goes IPO, or the company is sold).  So, you are tying a chunk of your money, in these shares.<p>So, as always, buyer beware.  Do your own math when it comes in cases like this.",1207636912
157656,comment,157450,157450,0,0,andreyf,,,"Learn it and find out ;)<p><a href=""http://docs.python.org/tut/"" rel=""nofollow"">http://docs.python.org/tut/</a>",1207636909
157655,comment,157450,157619,0,0,wheels,,,"Given your comparison of PHP and C I assume you think of an aircraft carrier as a canoe with more guns and metal and stuff.  ;-)",1207636866
157654,comment,157450,157450,0,0,paulgb,,,"I know Python's indentation is a big turn off to most people coming from another language; it seems almost invasive of the interpreter to pay attention to whitespace. But you get used to it, and it becomes quite nice.",1207636782
157653,comment,157578,157578,0,0,timcederman,,,Skittles.,1207636597
157652,story,,,8,0,jmorin007,"The Challenge of Staying Focused in a Startup",http://www.instigatorblog.com/the-challenge-of-staying-focused-in-a-startup/2008/04/08/,,1207636568
157651,comment,157443,157458,0,0,bootload,,,"<i>""... I wonder if this -- coupled with Django going 1.0 soon -- will create even more buzz for Django? ...""</i><p>Prophetic suggestion ~ <a href=""http://code.google.com/appengine/articles/django.html"" rel=""nofollow"">http://code.google.com/appengine/articles/django.html</a> & <a href=""http://news.ycombinator.com/item?id=157648"" rel=""nofollow"">http://news.ycombinator.com/item?id=157648</a>",1207636563
157650,comment,157238,157377,0,0,SwellJoe,,,"You should check with Netcraft's reliability rankings next time.  2 hours is an awfully long time for a ""big guy"".<p>Sure, downtime happens.  Routers are upgraded and power bounced (30 seconds of downtime if the admins are good), UPS infrastructure is kept up-to-date and in working order (minutes of downtime), and server components break.  The last one is possibly a lot of downtime...but hopefully MTBF works for you and the server that you keep for the average lifecycle of hosting servers (about 30 months) never fails catastrophically.",1207636515
157649,comment,157591,157591,0,0,timcederman,,,"I can't say I ever expected those two concepts to be put together, but after reading the article I can see the connection - not sure I really agree with it though.",1207636358
157648,story,,,11,3,bootload,"Running Django on Google App Engine",http://code.google.com/appengine/articles/django.html,,1207636261
157647,comment,157114,157114,0,0,dkokelley,,,"There's one part of the article that states:<p>""Instead of getting caught up on the idea of creating the perfect product, settle for an okay one.""<p>As hackers and creators here, I think we'll have a hard time getting over that point. The suggestion to release early can sort of apply here, but the goal is to build something better and better - perpetual improvement, and settling into the mindset of ""why make it perfect when I can make it cool"" is probably not the best startup advice.<p>Still, the moral of the story is still a great take away. When doing any sort of sales, be it to customers or investors, sell the benefit, not the features. People don't  don't want A/C, they want comfort.<p>I loved the marketing thought put into this article. It really makes it easier to get into a consumer's mind.",1207635984
157645,comment,157443,157443,0,0,gcv,,,"Interesting that this lets apps integrate with Google user accounts. It's pretty cool, but I don't know how I'd feel about typing my Google user name and password into a site which isn't obviously owned by Google.",1207635649
157643,comment,157450,157619,0,0,cstejerean,,,"I'm a bit surprised you don't find any big differences between Ruby and PHP. But then again it might be that I haven't looked at PHP in the last 4 years.",1207635309
157642,comment,157608,157608,0,0,enomar,,,"Why add another post?  You could have commented on either of these...<p><a href=""http://news.ycombinator.com/item?id=157443"" rel=""nofollow"">http://news.ycombinator.com/item?id=157443</a>
<a href=""http://news.ycombinator.com/item?id=157451"" rel=""nofollow"">http://news.ycombinator.com/item?id=157451</a>",1207635252
157641,comment,157443,157443,0,0,andreyf,,,"Looks like this will put a lot of web hosts out of business...",1207635080
157640,comment,157586,157586,0,0,mullr,,,"I don't quite understand how hyperthreading saves power.  Is it better than doing OOO execution because there's less hardware required?  I could imagine that instructions targeted at two virtual CPUs could be interleaved more simply and flexibly.",1207635049
157639,story,,,2,1,dangrossman,"Open Calais PHP Class (Semantic Tagging)",http://www.dangrossman.info/open-calais-tags,,1207634866
157638,comment,157608,157623,0,0,aofstad,,,"I did too, but I got an invite email about an hour later.  Maybe I just got lucky.",1207634858
157637,comment,157443,157443,0,0,andreyf,,,"<i>The service is completely free during the beta period, but there are ceilings on usage.</i><p>I understand these articles are written in a rush, but this is plain wrong. From Google's site, it seems pretty clear to me that this will be true out of beta:<p><i>Every Google App Engine application can use up to 500MB of persistent storage and enough bandwidth and CPU for 5 million monthly page views.</i><p>I'm surprised nobody has mentioned this - does this mean the tech cost of a web-based startup is now $0?",1207634830
157636,comment,157443,157624,0,0,apathy,,,"<i>But they aren't about to open-source their infrastructure.</i><p>Wouldn't matter if they did -- you can't open-source a bunch of contracts with trucking companies, nor would any sane company want to open-source their testing routines for the hardware they build in house to manage the mess.  Parts of the infrastructure are, however, published as patents :-)<p>Google's operational efficiency in deploying new capacity is the crushing advantage they possess over 99.999% of the companies on the planet.",1207634742
157635,comment,157443,157443,0,0,aschobel,,,"Has anybody been able to put their app online?<p>I keep getting Application Identifier: App already exists. Even when I pick random App names. Odd.",1207634741
157634,comment,157198,157432,0,0,paul,,,"Actually, the ""two more weeks"" attitude can hurt a lot.",1207634662
157633,comment,157450,157450,0,0,jskinner,,,"Also, consider that Python has a lot more non-web uses that PHP does. You'll derive more benefit from Python proficiency than PHP.",1207634604
157632,comment,157443,157515,0,0,apathy,,,"fat fucking chance at present.  Processes must return data within a few seconds, so unless I can take up an arbitrary amount of CPU-hours in those few seconds, there won't be an awful lot of simulation or analysis going on until the TOS changes.<p>Not that I expected otherwise -- there are plenty of people (like, say, my officemate) who would pay a few bucks to run a few million simulations on Google's infrastructure.  (I would too, but it'd have to be a lot of nodes, since I have my own farm of client machines due to the way I arrange consulting)<p>I hear they are actually CPU starved these days, which quite literally boggles my mind... if Google can run out of cycles, anyone can.  But that informs the current deployment and limitations if it is true.",1207634558
157631,story,,,7,0,spencerfry,"Developing and deploying an application on Google App Engine",http://www.youtube.com/watch?v=bfgO-LXGpTM,,1207634503
157630,comment,157450,157450,0,0,dmpayton,,,"As someone whos only significant experience is in PHP and Python, I hope I can be of some help. I started with PHP when  was 13 or so. When I was about 18, I discovered Python, and haven't looked back since.<p>PHP is designed primarily as a web language. As such, it's pretty simple to get it up and running which is great for new web developers. The language itself, however, is pretty bad and programming concepts beyond syntax are better left to other languages. That said, I learned a lot with PHP and I think that dealing with it's idiosyncrasies and pitfalls has made me a better programmer overall.<p>Python, OTOH, is a general-purpose language that has recently gained popularity as a web language. It has greater applicability, but it's a little more difficult to get up and running on a web server. It's great for a new programmer, but not necessarily a new web developer. Since you already have a bunch of experience developing web apps, this is probably a non-issue.<p>We can debate advantages and disadvantages of the two languages all day. In the end, everyone is different and everyone has their own preferred language. Obviously, my language of choice is Python, Paul Graham is a LISPer, and I know someone who swears by PHP, even though he's used Python and Ruby/Rails. It doesn't matter. I say go ahead and give Python a shot. The worst that will happen is that you've added another tool to your toolbox.",1207634489
157629,story,,,3,0,bootload,"Small U.S. firms make big global sales",http://www.usatoday.com/money/smallbusiness/2008-04-07-small-business-exports_N.htm?csp=34,,1207634482
157628,comment,157443,157443,0,0,chaostheory,,,"this is good news for heroku - Amazon will probably be interested in them",1207634466
157627,comment,157443,157559,0,0,andreyf,,,"Arc's goal is to be a language used by people 100 years from now, and only as a side-effect, something neat for you to build your web app in.",1207634431
