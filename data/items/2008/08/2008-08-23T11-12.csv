ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
284580,comment,283639,284363,0,0,shevy,,,"Also I would like you to name which library specifically causes this problem :)<p>Whenever I read it, people seem to make up contrived problems - and do not give any example.<p>I would like specific examples please where this interferes with your code.<p>So far it simply did not interfere with my own ruby code, and I have written really a lot over the 5 years here, including my own bigger ""alternative"" to gems. (I wanted to release it, but I was lazy and always felt it is easier to use my own idioms. The problem with this approach is that, while it really makes creating something super fast, I would either have to unbundle everything again so I can distribute it, or bundle everything. Both things have huge problems, because if i unbundle everything it will take quite some time to rewrite things really ""cleanly"" enough for _other_ people. For my personal needs it is totally fine. And if I would distribute things ""bundled"" together, which means I could release today, then people would simply complain that there are so many things ""bundled"" together they simply wont need.<p>Complaining people are annoying.<p>i know because I am one of them)",1219492767
284579,comment,284460,284560,0,0,asjo,,,"I think you are not alone. But then again, there are also many people who look forward to get to use Perl6 for real.<p>It has been underway for a long time, since 2000. Do notice though, that Perl6 isn't just a revision up for Perl5, it is a thorough redesign.<p>As for all the kids - well, if they are going for the (percieved) latest and greatest language all the time, they will be quick to try Perl6 when the right christmas comes around.<p>I think Perl6 will hit a sweet spot, but we'll see. Maybe your dire predictions will be fullfilled; maybe not.<p>I don't think age necessarily is a bad thing for a language - I bet a lot of programs you use are written in C, for instance.",1219492690
284578,comment,283639,284363,0,0,shevy,,,"You can use ruby without gems. I think you confuse gems with ""pure"" ruby as such. I have seen horribly code in gems and I think the whole gems idea is the wrong solution. But I am in a minority here.<p>I also do not know why cpan is mentiond FIRST as perl's greatest assets. To me i think a language should easily provide the capabilities to the programmer without addons, AND I also think that there SHOULD BE ONLY ONE ""CPAN"" FOR ALL THE SCRIPTING LANGUAGES OUT THERE.<p>I find it totally silly that there are any distinctions at all.<p>But back to gems:<p>I for example am using Ruby since almost 5 years without gems. Others seem to like it that you can simply do ""gem install rails"" and thats it (unless the debian package manager starts to hate it again... which is btw another thing that sucks.)<p>I agree that there are people who are concerned with ""namespace"" pollution, but I simply think so many people are trying to overemphasize. The worst was when I talked to a C# hardcore guy. He basically claimed that being flexible like Ruby is ALWAYS bad (C# does not allow you to change core methods. You <i>must</i> subclass and change that new class then. This is not a smart solution, it simply binds and restricts the developer, and claims that this will be better in the long run. My question is - why not allow being flexible AT THE CHOOSING OF THE DEVELOPER IN QUESTION? The reason is simple. C# is a typical language that is developed from the top-down.<p>It would be so much better if creating good languages would be a lot easier, so noone has to cater to arrogant developers who try to impose their thinking pattern onto your brain.",1219492552
284577,comment,283716,283716,0,0,hs,,,"OpenBSD + dwm + vnc here<p>alt+1: my main coding using vim (no mouse, no arrow key)
alt+2: vncviewer to my mac mini for safari, ff3 (mouse)
alt+3 ... alt+9: almost never used<p>i 1-1-map ~/www/pages/webapp{1,...,n) to my OpenBSD colo
hg push/pull/update<p>i'm reconsidering attach/detach screen session between servers, but i can't stand emacs/GNU key-binding (even after xmodmap my caps to ctrl) ... anyone knows screen-like program that uses vi-keybinding?",1219492404
284576,comment,283639,284575,0,0,shevy,,,"This comment field is not very good, it killed my newlines! :(<p>I demand the pre tag or a ""code"" tag or something that allows us to add code nicely formatted :P",1219492237
284575,comment,283639,284446,0,0,shevy,,,"Looks contrived, because I dont know many ruby users who would write fun1 for a method. Why? Because in ruby there are methods. You dont find many people doing ""fun"" for a method - the intent clearly was a ""function"". But where are they? ;)<p>Anyway, here is the one that comes to my brain flow naturally. It seems python writers need () in order to feel happy, otherwise they think they get confused about things (hopefully they dont have a small brain):<p><pre><code>  fun1 x

  fun1 x + y

  fun1 x + y.foo

  fun1 x + y.foo bar
</code></pre>
What will happen in this perfectly valid Ruby code? Where do the parentheses belong? Do you know off the top of your head?<p>fun1(x)
fun1(x + y)
fun1(x + y.foo())
fun1(x + y.foo(bar))<p>Btw you omitted what x and y are. My first assumption is that these must be variables that allow the + method<p>It does not really make a lot of sense though, give the last example:<p>class Cat
  def initialize(name)
    @name = name
  end
  def foo(how = :h)
    case how
    when :h
      how = 'happily'
    when :u
      how = 'unhappily'
    end
    puts @name+' meows '+how+'.'
  end
end<p>y = Cat.new 'Tom'<p>y.foo # ""Tom meows happily.""
bar = :u
y.foo bar # ""Tom meows unhappily.""<p>x = '""At the end of the day ""<p>x + y.foo bar  # ""At the end of the day Tom meows unhappily.""<p>etc.. I simply have no idea what fun1 should do. Maybe it will involve Jerry mouse and return a conditional story where it is explained why Tom the cat is unhappy.<p>Btw this is a really contrived example because I tried to model your stipulation of the above code into this. It really makes no sense at all to use variables without any real idea why one should use that.<p>Why do people WANT to be complex when simplicity is so much more elegant?",1219492166
284574,comment,283661,283943,0,0,Alcides,,,"1. The example of the working syntax right now would be:<p>a = App(""test"", width=200, height=400)
a.insert(Button(""close"",a.quit))
a.run()<p>Should give you an idea of what I am thinking of.<p>I actually have working with wxGlade for a while, and it generates wxPython code, but I am not happy with that.<p>Another solution is to make windows like Django models.<p>2. this a python module that you can include with your app, that just calls the specific gui binginds on real time.<p>3. No relation with Clutter. The idea is to be gui tookit agnostic.",1219491770
284573,comment,283639,284564,0,0,shevy,,,"One thing I dont understand is<p>print word<p>where does ""word"" come from?<p>Anyway, this setup is in no way different to ruby's super<p>super(""foo"")
super(""bar"")<p>I really fail to see the point here. What is different?
I simply do not see what the python example shows ""a bit more clearly"" here. I dont even get where ""word"" comes from.<p>Besides, ""monkeypatching"" is a deragotary term invented by pythonistas who do not understand Ruby or think that by adding complexity you can feel ""meta"" programming so clearly. In my opinion the metaprogramming demanding people are wanking hippos that continually feel a need to add needless and useless complexity on top of problems and in situations where there simply should not be any of that.<p>Both ruby and python are way to complicated. Can you believe this? At the same time, both are a LOT more elegant than languages like perl or php. Perl 6 still has not managed to get rid of the useless ; at line ends. They managed to eliminate () around if's.<p>Wow. I am soooo impressed. In 100 more years Perl 7 will be THE best language arrr!!!<p>But it is a shame that there are not more good languagesl ike ruby or python, because in fact there simply are not that many good languages existing anyway. It takes so much effort to grow a language....<p>And yes - both ruby and python are very good languages. The fact that there are idiots using the language who have a loud mouth badmouthing either of these two decent languages is annoying, but one can not do much about it.<p>For everyone else I recommend reading the ""why it does not matter"" blog. It really summarizes a lot of why ruby and python fill a very similar ecosystem, behaving like rivals who continually try to point out how incredibly stupid the other language is.<p>Grow up. Use what you prefer, and end this stupid war.",1219491692
284572,comment,284503,284530,0,0,astrec,,,"Talk about porting: The Little Schemer was The Little Lisper when I was in school.",1219491467
284571,comment,283919,284381,0,0,netcan,,,"disposable cameras.",1219491288
284570,comment,283639,284362,0,0,shevy,,,"No it is not. You dodged the question again, by throwing a hardly related blog of someone else at it.<p>How many people will use yield _AND_ self.send in the same method please?! That seems like an awfully complicated and contrived example. Who the heck does this?",1219491071
284569,comment,284541,284541,0,0,davidw,,,"You could try implementing a network based on RFC 1149.",1219491069
284568,comment,284417,284521,0,0,prakash,,,"True, that's the story I would love to hear.",1219490986
284566,comment,284565,284565,0,0,froo,,,"The first reaction I had when I read this was ""This would be fantastic on a much larger scale to power electric cars"".<p>I believe that this kind of technology would eliminate the range debate between pure electric cars and those that rely on petroleum.<p>That being said, the only downside I can come up with off the cuff is environmental, as in what impact would a large scale magnetic field network have on migrating birds and the associated environmental consequences that would happen as a result.<p>Anyone have any insight?",1219489970
284565,story,,,5,4,froo,"Intel cuts electric cords with wireless power system",http://news.yahoo.com/s/afp/20080821/ts_afp/usitinternetenergychipcompanyintel,,1219489556
