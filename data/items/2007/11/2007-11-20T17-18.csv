ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
81995,comment,81976,81976,0,0,sbarbour,,,"I'm using it, basically because I'm extremely familiar with it. No ramp up time trying to suss out new language and framework specific work-arounds.
",1195581535
81994,comment,81890,81890,0,0,marcus,,,"I think that this is/will be the direction of every industry which hires people to do creative work, whether writing/hacking/design.<p>And the only way big companies will be able to persist is to create a mechanism for launching offshoots of themselves by investing in co-ventures between current/former employees/entrepreneurs and the company.",1195581397
81993,comment,81707,81863,0,0,nevinera,,,"unless your application is very unusual, you could've just ported your < 10 bottlenecks and made the same gain. (and x60? right..)",1195581163
81992,comment,81823,81943,0,0,mencius,,,"No, the browser is definitely not just an application in Android.  It is WebKit, which is in the framework layer.<p>Android can run any language that can compile to the JVM.  On the other hand, compiling to Java bytecode really isn't much different from a source-to-source translation to Java text - at least not from the programmer's point of view.  And have you ever programmed in an S2S environment?  Sucko.<p>As for (2), you are absolutely right.  The basic problem is that if the Web had been designed as an application platform from the start, the installable application would be dead.<p>But is the way to fix this to build a new installable application environment?  Or a new network application environment?",1195581110
81991,comment,81976,81976,0,0,cellis,,,"I plan on using it.
",1195581061
81990,comment,81846,81926,0,0,ivankirigin,,,"You didn't hear?! Hit 20K karma and get invited to a one minute YC interview. Get started!",1195580940
81989,comment,81976,81980,0,0,ivankirigin,,,"What are the benefits? What is bad about it?",1195580669
81988,comment,81932,81940,0,0,qaexl,,,"To split some technical hairs, According to Peepcode's Rails 2.0 pdf, Rails then uses OpenSSL::HMAC hashing. According to the source code cited by the article, <a href=""http://dev.rubyonrails.org/browser/trunk/actionpack/lib/action_controller/session/cookie_store.rb?rev=6184"" rel=""nofollow"">http://dev.rubyonrails.org/browser/trunk/actionpack/lib/acti...</a> it generates a SHA512 digest with the secret key. The marshal() method includes both an encoded cleartext and the SHA512 digest for ""integrity checks"". Note that the HEAD revision is r6424, not r6184; r6424 uses the HMAC digest, but still includes both the plaintext and the hashed version with an integrity check.<p>I don't know enough about the relative merits of HMAC vs. SHA512 hashing. I do know it still depends on the developer remembering to change the secret key into something harder to crack.<p>This isn't exactly a Rails 2.0 thing, though. Cookie-based session store was merged in in Rails 1.2.x, but enabled by default in Rails 2.0. You can still use memcached or ""ActiveStore"".<p>This security vulnerability is probably going to be one of the biggest gotcha for a newbie developer, as there is a wave of inexperienced or irresponsible Rails developers getting in on the action. Newcomers are still looking at the old, ""write a blog in 15 minute"" video made during the Rails 0.3 days, or the O'Reilly ""Write a cookbook Rails app, parts one of three"". Or Agile Web Development with Rails, 2nd Ed., which does not mention this gotcha.<p>One solution to this problem is not to depend on the developer to think up or generate a password. Rails 2.0 allows you to write ""initializer"" snippets that automatically load when placed in the appropriate directory. It would be almost trivially easy to write such a snippet that loads the secret key from an configuration file, and if one does not exist, automatically generate it. Such a setup would not depend on saving the secret key into the version control system, and can be refreshed every time the app gets deployed using an automation tool such as Capistrano. Though it would (should) invalidate all the current user sessions once redeployed.<p>Under this setup, you definitely don't want to serialize objects into the session. That's a surprisingly popular practice among a small minority of Rails developers. ",1195580540
81987,comment,81976,81976,0,0,run4yourlives,,,"plentyoffish.com
",1195580224
81986,comment,81923,81923,0,0,gills,,,"I read most books on paper.  Simply put, the kindle won't change that, and will probably reinforce it.<p>This could be useful if it were given freely to students and loaded with required reading by the school, but the cost would have to come in significantly below OLPC.<p>Even then, I feel like Amazon is late to the party, and at the wrong address anyway.  The trend is moving away from stovepiped single-purpose devices and towards multi-function mobile devices.  I'll wait for the next round of phone-camera-media-browser-dishwasher-espresso-cart-robot-lackey to include an eBook plugin.  Speaking of that, which reader of this site is already at work building an eBook reader for Android?",1195580177
81985,story,,,31,17,jorgeortiz85,"Skittr, a Twitter clone that scales easily, written in 170 lines of Scala and lift","http://blog.lostlake.org/index.php?/archives/55-Prance-with-the-Horses,-Skittr-with-the-Mice.html",,1195580089
81984,comment,81722,81958,0,0,marcus,,,"When large companies say something like ""I'm hiring them for their wide-ranging intelligence.."" they are usually lying their ass off but in startups that usually is true.<p>From my experience in startups, most of them care just as much about your 2 cents as about your LOC.<p>Because startups are much more malleable and prone to change their direction, strategy, market & product every input matters and sometimes you can recoup your entire hiring cost for an engineer from a single sentence he says offhand in some discussion.",1195579945
81983,comment,81711,81852,0,0,jorgeortiz85,,,"Scala also compiles down to CLR (.NET) bytecode, though granted the support for CLR is not nearly as good as the support for JVM.<p>I think the comparison to F#/ocaml is only skin-deep. Scala does have type inference, which saves a lot of typing compared to Java. For example, in Java one might write:<p><pre><code>  IWidgetClassFactory factory = new WidgetClassFactory();
</code></pre>
In Scala one can get away with:<p><pre><code>  val factory = new WidgetClassFactory
</code></pre>
The parens are optional. There as no type declaration for ""factory"", yet the language is still strongly typed, so the type of ""factory"" is inferred at compile-time. In many ways Scala code ""feels"" like Ruby (in the brevity and expressivity of its syntax), but strong type-checking means you avoid bugs (at compile-time) that in Ruby you'd have to catch with extensive unit tests or total system failure every now and then.<p>Scala also has a sophisticated Actor library based on Erlang's actors. Scala's extensible syntax means that the following is valid Scala code (and was implemented as a -library-, it's not part of the language specification).<p><pre><code>  val response = myActor !? request
</code></pre>
Actors are lightweight, so you can spawn hundreds of thousands of them on a single JVM, yet (unlike Ruby) they run on top of system threads, so you get real concurrency. This is unbelievably awesome for web development. Imagine keeping an actor thread alive for every logged in user to your site. Combine this with Ajax/Comet and you can ""push"" any updates out to the user as they become available.<p>Anyway, I'll stop raving, but check out Scala by Example (link elsewhere in the comments) and the lift web framework written in Scala (link elsewhere in the comments).",1195579802
81982,comment,81932,81932,0,0,cglee,,,"Remember 2.0 isn't even out yet.",1195579704
81981,comment,81883,81883,0,0,jey,,,"I try to go read a book whenever I catch myself wasting too much time on the web. My book queue is way too long and too interesting to be wasting my time looking at cat macros.<p>I also have reddit, slashdot, cnn, kuro5hin, and fark pointing to 127.0.0.1 in my /etc/hosts file. The only sites I allow myself to check now are news.yc and nytimes.com",1195579495
81980,comment,81976,81976,0,0,dbrush,,,Splashup.com,1195579434
81979,story,,,3,1,razorburn,"Why Kindle Is No iPod",http://www.roughtype.com/archives/2007/11/why_kindle_is_n.php,,1195579351
81978,comment,81923,81974,0,0,iamwil,,,"For some, it's a status symbol.  A full brain usually has a full bookshelf, but the converse isn't necessarily true.  People will pretend to have a full brain by showing off a full bookshelf.  In fact, The Great Gatsby has a library full of books with uncut pages.  It use to be that the printer printed books by folding them like an accordion and just binding one side.  Therefore, every pair of pages in the book would be bound together, and you had to cut them apart as you read it for the first time.<p>You can see some books nowadays emulating this sort of thing with the ragged edges, sometimes.<p>Gatsby didn't read books--he never cut them.  He just had them to show off to Daisy.",1195579234
81977,story,,,1,0,drm237,"Making the transition from corporate to startup",http://www.employeeevolution.com/archives/2007/11/20/making-the-transition-from-corporate-to-startup/,,1195579002
81976,story,,,24,106,kilik,"Ask YC: Are there *any* startups using ASP.NET?",,"Seems like the number is small...but I'm still curious. Bonus Question: Why did you pick the web framework that you are currently using?",1195578913
81975,comment,81923,81956,0,0,iamwil,,,"Having connected and electronic books gives you possibilities that weren't available when they're in print.  They might lose some of the advantages of print (like bragging rights of having a full bookshelf), but the advantages it confers outweighs it in other ways that you can't imagine if you frame it in terms of the old.<p>As with any new technology, it's hard to think of it in terms of the old technology.  The often quoted quip about radio is:<p>""The wireless music box has no imaginable commercial value. Who would pay for a message sent to no one in particular?"" -- Associates of David Sarnoff responding to the latter's call for investment in the radio in 1921.<p>What's funny is that later, a radio pioneer says this about television:<p>""While theoretically and technically television may be feasible, commercially and financially it is an impossibility, a development of which we need waste little time dreaming."" -- Lee DeForest, American radio pioneer and inventor of the vacuum tube, 1926<p>While TV might have killed the radio star, it hasn't completely supplanted it.  By the same token, paper books won't go away any time soon, but you'll soon see advantages to having electronic and sharable books.  You can search it, annotate it (as a group!), and cross reference it.  You can discuss it and you can get it instantly, and licenses pending, we might get a new market of people that slice and dice excerpts from different sources--not just blogs and feeds, but from classics (Caterbury tales, Catch-22, etc)...like reader digest, but a proliferation of it based on different niches and interests.",1195578749
81974,comment,81923,81971,0,0,JulianMorrison,,,"Personally I really don't see much value in paper at all. Beyond romanticizing the medium, what do you gain? Every objection I've heard of (readability, battery life, etc) is just a transient technological phase. DRM is horrid, but it's no more a natural feature of e-books than NDAs are a natural feature of paper.<p>The whole romance of paper thing reminds me of the romance of film. Didn't slow the digital camera one iota.",1195578711
81973,comment,81711,81711,0,0,jorgeortiz85,,,"Also check out the lift web framework, written in Scala<p><a href=""http://liftweb.net/"" rel=""nofollow"">http://liftweb.net/</a><p>Highlights (from link):<p><i>Advanced Framework</i><p>Lift has a number of great features for web developers. Many inspired from existing frameworks like Seaside, Rails, Django, TurboGears, and Wicket:<p><pre><code>    * Comet support is easy to add and scalable
    * Mapping between databases and code is easy (Rails)
    * Content and code are well separated (Wicket, TurboGears)
    * Forms are secure by default (Seaside)
    * Convention over configuration is emphasized, no xml hell (Rails)
    * Component model makes pages elements easier to create and maintain (Wicket)
    * Prebuilt classes are provided for standard functions, e.g. User (Django)
    * Semantic information carries from model to enable smart display. e.g. postal code, social security number, email address
    * State machine support for model objects, including timeouts. e.g. after 3 days w/o confirmation, delete this new account
    * Site Map provides site wide navigation and access control support </code></pre>",1195578254
81972,comment,81883,81883,0,0,robmnl,,,"Thanks, those educational recommendations are nice.<p>Joining an open source project, or helping people out in a technical forum is honorable, but not what I'm looking for, since coding is what I usually do. Love citeseer and damninteresting.<p>I guess I'll go pick up some old books of mine too.<p>
Thanks, keep stuff coming.",1195578249
