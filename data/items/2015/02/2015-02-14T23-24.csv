ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
9051214,comment,9049467,9051150,0,0,jordwalke,,,"I believe they are slightly beyond &quot;syntax sugar&quot;. If I&#x27;m mistaken, I&#x27;d love to see the equivalent of what they desugar to. Some of the nuances that I believe OCaml&#x27;s named arguments get right (and what greatly distinguishes them from passing a record) may require additional work in the type system beyond simple desugaring to something like records. Someone please correct me if I&#x27;m wrong.<p>- Partially applying arguments. You can apply one named argument, and get a function that expects the remaining named arguments. This is pretty great though confusing when you see it for the first time.<p>- Defaults for omitted arguments. If the caller doesn&#x27;t specify an argument, you can define what should be used instead. This is kind of like the opposite of subtyping on record arguments. With structurally subtyped record arguments, you can pass a record that has <i>more</i> information than a certain <i>minimum set of labeled fields</i>. But with named optional arguments with defaults, you can pass <i>less than</i> a certain <i>maximum number of labeled fields</i>.",1423958347
9051213,comment,9051199,9051199,0,0,getdavidhiggins,,,"Seems to only work on HTTP pages. Make sure to inspect the code of bookmarklets like this. It could be slurping cookies and sending it to a remote server.",1423958338
9051212,comment,9050970,9051194,0,0,asergeyev,,,"Pretty much. Good example is Joe&#x27;s vmstats <a href=""https://github.com/joewalnes/web-vmstats"" rel=""nofollow"">https://github.com/joewalnes/web-vmstats</a>",1423958327
9051211,comment,9051041,9051192,0,0,kasey_junk,,,"The simplest reason is if what I was contributing was done on my employers time and they have strict IP restrictions.  It is much, much easier to vet a single changeset than it is to a) verify a whole repo history and b) coordinate around my public/private github identities.",1423958320
9051210,comment,9045305,9050975,0,0,asuffield,,,"That bit is about Chrome OS (ie, a chromebook), not Chrome itself. The bit about it being &quot;non-unique&quot; means it&#x27;s not a GUID - other people&#x27;s devices will send the same tag. It does not identify you.<p>> To clarify, my point was that Google has a GUID (your Google account, and likely other forms of ID) that identify you pretty clearly across devices/Chrome instances.<p>I think the privacy policy is quite clear that Chrome does nothing here that other browsers don&#x27;t do. Obviously if you have a Google cookie from signing in to the website then that&#x27;s going to identify you pretty clearly, but that&#x27;s just how cookies work, and would be exactly the same in any other browser. I&#x27;d like to specifically direct your attention to the first three paragraphs of the policy, and in particular:<p>&quot;If you use Chrome to access other Google services, such as using the search engine on the Google homepage or checking Gmail, the fact that you are using Chrome does not mean that Google will receive any special or additional personally identifiable information about you.&quot;<p>>  I saw nothing in the policy you linked that said Google AdSense and other Google ad services (DoubleClick tags, GA, etc.) do not use that information to link identities across devices for purposes of tracking.<p>I wouldn&#x27;t expect to find any information about how AdSense works in the Chrome policy. The privacy policy for ads is over here and discusses this topic: <a href=""http://www.google.co.uk/policies/technologies/ads/"" rel=""nofollow"">http://www.google.co.uk/policies/technologies/ads/</a>",1423958279
9051209,story,,,1,0,meatcompute,"A Gentle Intro to Unit Testing in Clojure",https://www.youtube.com/watch?v=pEIeJOZCu_A,,1423958270
9051208,comment,9050343,9051182,0,0,codexon,,,"1. The pages actually gives you geographical information even if there are no comments.<p>2. Knowing that you are the first person to complain about a number is also informative.<p>If I google a number that no one has complained about, is it better to return 0 results, or at least some of these phone number websites without any comments? I would argue the latter is better.<p>3. Is it really appropriate for Google to ban an entire domain like this? They can arbitrarily decide that you can&#x27;t have pages organized in a particular manner and have your whole domain banned?",1423958252
9051207,comment,9050933,9051078,0,0,krick,,,"Exactly, but this word is used to address specific recipe: <a href=""http://www.japanesecooking101.com/tamagoyaki-recipe/"" rel=""nofollow"">http://www.japanesecooking101.com/tamagoyaki-recipe/</a>",1423958247
9051206,comment,9049630,9051158,0,0,nitrogen,,,"Apps that make requests to other services are network bound.",1423958246
9051205,comment,9050970,9051089,0,0,asergeyev,,,"Also websocketd is multiplatform and does not require python. Neither good or bad, just another difference :)<p>Also, not sure if websocketify can but websocketd also has --dir argument and can supervise and route many sockets to many different programs.",1423958217
9051204,comment,9051041,9051155,0,0,lmm,,,"Linearized histories are much harder to find bugs in. You end up looking through revisions that never existed; in SVN you merge the remote history into your local history without it ever showing up as a merge. The explicit git approach tells you something much closer to the truth.<p>Your condescension is only hurting yourself.",1423958189
9051203,comment,9027743,9039592,0,0,ukigumo,,,"I&#x27;ll be reading more into unikernels because it does seem like an interesting topic.<p>However, I strongly advise you to read up on how production environments are done in security conscious enterprises (banks, payment providers, etc) as you seem to make some assumptions in your comment. To give you some idea of the environments I&#x27;ve designed in the past:<p>A WAF worth it&#x27;s name won&#x27;t pass any request back to a webserver if it matches a known signature, method, payload, etc. This is a functionality commonly called virtual patching. SSH is usually only allowed on internal vlans and often requires some sort of external authentication mechanism like a centralised jumpserver or ldap.<p>Also, if using Solaris with OVM for SPARC you wouldn&#x27;t boot up a new server but a non-global zone (think Docker but 2 years from now) which can be started in ~1 second and offer full isolation from the host system. AIX also does something similar and I&#x27;ve seen several different approaches used on Linux from LXC to VMware + F5 irule based auto-scaling groups.",1423958171
9051202,comment,9050793,9051190,0,0,ori_b,,,"Java is also compiled to native code, but only after it runs for a bit.",1423958168
9051201,comment,9050793,9051105,0,0,tylertreat,,,"I don&#x27;t know if I completely agree with this. To write truly performance-critical Go, you end up throwing away many of the language&#x27;s qualities. Channels are slow, defers add overhead, interfaces add overhead (e.g. I2T), etc.<p>Don&#x27;t get me wrong, I like Go, but in my (and others I work with) experience, it&#x27;s not the right choice for performance-critical systems.",1423958132
9051200,comment,9050970,9050970,0,0,lordlarm,,,"For simple one-directional communication (Server to client(s)) as shown in the example, it may for many people be simpler to use EventSource [1]<p>I&#x27;ve used this for UI&#x27;s where the server continuously sends/pushes updates to the clients. Really handy, and multiple implementations and libraries available in most languages.<p>Of interest is perhaps also the spec [2]<p>[1]: <a href=""https://developer.mozilla.org/en-US/docs/Web/API/EventSource"" rel=""nofollow"">https://developer.mozilla.org/en-US/docs/Web/API/EventSource</a><p>[2]: <a href=""https://html.spec.whatwg.org/multipage/comms.html#the-eventsource-interface"" rel=""nofollow"">https://html.spec.whatwg.org/multipage/comms.html#the-events...</a>",1423958088
9051199,story,,,1,1,getdavidhiggins,"OmNomNomify It Cookie Monster Bookmarklet",http://www.omnomnomify.com/,,1423958078
9051198,comment,9048772,9050665,0,0,chipotle_coyote,,,"Every phrase you wrote has an implicit conditional in it:<p>> Children <i>may</i> take care of their parents, families <i>may</i> take care of each other, friends <i>might</i> offer housing and food to their friends.<p>At least one theoretical advantage to the state system that rarely gets talked about is that while its assistance also has the same conditionals, at least in principle, the conditionals are dependent on objective criteria. The state of your relationship to friends and family is immaterial; you don&#x27;t have to accept terms imposed by religious charities or other organizations that will attach moralistic strings.",1423958076
9051197,comment,9050343,9051185,0,0,skybrian,,,"I am refuted!",1423958060
9051196,comment,9050054,9050054,0,0,ChikkaChiChi,,,"Blog post decrying bullying tactics blissfully unaware of its own hypocrisy:<p>&quot;I seriously don&#x27;t get why this guy has not been fired from the SPI organization immediately, this sort of bullying behaviour should not be allowed and, at least in my book, an apology means nothing. Someone like that does not belong to an organization that is supposed to help free software thrive and protect its communities.&quot;<p>People make mistakes and their lives and reputation do not need to be ruined for them.",1423958034
9051195,comment,9050970,9050970,0,0,elierotenberg,,,"Unless you need to handle a very small number of concurrent connections, using 1 process per connection seems to be a huge overhead, although I can think of some use cases.<p>However, I can imagine a similar tool doing multi/demultiplexing, eg the handler process would take input text lines prepended with a connection identifier (eg. &quot;$socketID $message&quot;) and output using a similar formatting. Pretty much like websocketd but with multiplexing and unixy/pipe-friendly (eg. you can apply grep/awk/etc before and after).<p>How would this fit compared to websocketd?",1423958001
9051194,comment,9050970,9050970,0,0,minimax,,,"The thing with WebSockets is that they are message oriented. WebSockets endpoints are presented with a series of distinct messages, whereas stdin/stdout are stream based and you have to build messaging on top, if that&#x27;s what you want. I guess the idea here is that you are just using &#x27;\n&#x27; as the message delimiter?",1423957953
9051193,story,,,1,3,mwcampbell,"Ask HN: Which stick computers are the most hackable?",,"I&#x27;ve recently grown interested in stick computers, those devices, usually based on ARM processors, that have roughly the dimensions of a USB stick and run a general-purpose OS. Which of these computers are most amenable to hacking, by either replacing the image in internal flash storage or booting an alternate image from a microSD card? Bonus points if one can rebuild the Android image from source. Extra bonus points for my current intended use if the stick has a headphone jack.",1423957921
9051192,comment,9051041,9051177,0,0,Mithaldu,,,"Honest curiosity here. Given that there&#x27;s nothing stopping you from deleting your fork after the PR is done, what reasons can you name for this:<p><pre><code>    There are lots of reasons why I may not want my github
    fork to be public or I don&#x27;t want to have a github fork
    at all</code></pre>",1423957919
9051191,comment,9049467,9050883,0,0,wyager,,,"I am also a commercial developer; I work full-time during the summer to pay for college. My expectations don&#x27;t really change much. Of course, everyone has different expectations.",1423957918
9051190,comment,9050793,9051077,0,0,perturbation,,,"Doesn&#x27;t Go have the potential to be faster than Java since it&#x27;s compiled to native code (rather than compiled to byte code)?",1423957912
9051189,story,,,15,5,cmikec,"Show HN: I made this to stay in better touch with my mom during Y Combinator",http://www.writemom.net,,1423957908
9051188,comment,9051041,9051155,0,0,kasey_junk,,,"git bisect is a great tool for automating this sort of debugging in non-linear histories.  That said I agree in general linear histories are much easier to deal with.",1423957880
9051187,comment,9050793,9051136,0,0,mholt,,,"> The lesser one is why does it need reflection to print a string.<p>It doesn&#x27;t print just strings. It can print anything. <a href=""http://golang.org/src/fmt/print.go?s=6420:6467#L221"" rel=""nofollow"">http://golang.org/src/fmt/print.go?s=6420:6467#L221</a><p>After doing your research, you&#x27;re welcome to submit a magical CL and PR that brings down the binary sizes, then you won&#x27;t need to argue anymore.",1423957878
9051186,comment,9045305,9047729,0,0,shmerl,,,"As others said, their contract with Google is over - now they use Yahoo (and some others) which you can easily switch to DuckDuckGo if you want. And also you can switch off new tab ads trivially.",1423957860
9051185,comment,9050343,9050661,0,0,whocalledus,,,"I chose not to list any page without at least 1 reported phonecall or comment. Competitors instead listed empty pages, and that is why they beat whocalled.us to the top results in Google, and gained much more traffic.<p>I thought it was spammy to list empty pages, and could not bring myself to do it. But the sites that do that are still indexed, and whocalled.us is not.<p><pre><code>    mysql whocalled -e &#x27;select count(*) as empty 
    from sitemap s 
    left join comment c using(phonenumber) 
    left join phonecall p using(phonenumber) 
    where c.id is null and p.id is null&#x27;

    +-------+
    | empty |
    +-------+
    |     0 |
    +-------+</code></pre>",1423957859
9051184,comment,9050436,9051055,0,0,DangerousPie,,,"Private banks can&#x27;t &quot;create money&quot;. Are you maybe confusing them with central banks?",1423957812
9051183,comment,9049467,9050919,0,0,wyager,,,"That&#x27;s fair. But I don&#x27;t think it&#x27;s reasonable to lump learning about lenses (or other abstractions that aren&#x27;t part of the prelude) into learning Haskell.",1423957764
9051182,comment,9050343,9050894,0,0,skybrian,,,"What it comes down to is that you can&#x27;t rely on Google for that, any more than Wikipedia could spam Google with a bunch of blank pages as a strategy to get passers-by to fill them in. People who already know about whocalled.us and use it regularly will have to seed it.<p>(Disclaimer: personal opinion; no actual knowledge.)",1423957761
9051181,comment,9038613,9043994,0,0,getsat,,,"The problem is that it doesn&#x27;t scale linearly.  There&#x27;s some O(n<i></i>4) algorithm being used in netstat or some kernel syscalls or something.  Once you go over 250k, things get _really_ weird.",1423957760
9051180,comment,9050793,9051153,0,0,hueving,,,"It&#x27;s essentially rewriting history. As a contributor it&#x27;s nice to know a commit went in exactly as you wrote it, which is not the case when the commit hash changes.<p>Git is powerful because it was written with the ability to merge trees. The cherry pick workflow is throwing all of that in the trash. Why not use SVN at that point?<p>Because of cherry picking in Gerrit, dependent patches are a nightmare to maintain. Say patch c depends on b, which depends on a. Now say that patch c requires a change that merged into master. Because you can&#x27;t merge into your development branch, you have to rebase c AND b AND a. This really pissed of the owners of b and a because it shows up as a new changset and wipes out votes. God forbid you depend on two different patches that each have separate dependencies.<p>You can use the merge commit to add the review information if you want. Then you don&#x27;t have to molest the code change commit.",1423957748
9051179,comment,9050326,9050510,0,0,a3n,,,"So which one causes which?",1423957735
9051178,comment,9050793,9051077,0,0,justinsb,,,"If you&#x27;re mmaping a file and processing the majority of it, you really are typically doing that in C today if you care about performance.  You can get acceptable performance in Java with ByteBuffers, but because of the lack of value types it doesn&#x27;t feel like Java any more.  Go should be able to get much closer to C&#x27;s performance, while still being closer to idiomatic Go code.  And Go can plug in small pieces of C code / assembler for the really performance critical stuff.<p>All this can be done with JNI, but JNI is so un-fun that I can see Go making big inroads here.",1423957725
9051177,comment,9051041,9051125,0,0,kasey_junk,,,"> What exactly is weird about that?<p>I have no idea what they specifically mean, but I can tell you, that the github requirement of pr to come from <i>public</i> repositories on github is something that bothers me occasionally.  There are lots of reasons why I may not want my github fork to be public or I don&#x27;t want to have a github fork at all but do want to contribute to a repo hosted there.  This is a <i>distributed</i> version control system we are talking about after all.<p>As for their claim about pull request culture, again I&#x27;m not sure what they specifically mean, but I find the github code review tools to be very rudimentary and suspect that lots of other people with experience with more sophisticated code review workflows feel the same way.  Github is a great service for some things but it certainly is not centrally about code review.",1423957717
9051176,story,,,2,0,juliangamble,"Report says over 100 banks hit by cyberattack",http://www.skynews.com.au/business/business/world/2015/02/15/report-says-over-100-banks-hit-by-cyberattack.html,,1423957689
9051175,comment,9049208,9051035,0,0,sqyttles,,,"I agree with this advice. I just got out of b-school and my background is in computer information systems, but I am attempting to learn a lot more of the nitty-gritty aspects of computer science I was not exposed to in my university education. This includes topics like algorithms, data structures, operating systems and compilers. I do not know where to start and I&#x27;ve been using Hacker News to follow the tech scene as much as possible. Unfortunately I still feel that I am missing out because I chose business over engineering (which I continue to regret).<p>I&#x27;m just 1.5 years away from being 30 so I realize that I have quite a long time left in my software development career to catch-up to all you CS people. I don&#x27;t think I&#x27;ve been undirected (the opposite of conscientiousness) but I&#x27;ve been misdirected and distracted. I&#x27;ve studied other things including web design and music production. I&#x27;ve also enjoyed life a lot (and slacked off by watching too much Adult Swim and Comedy Central, as well!).<p>It&#x27;s hard being productive and studious all the time. While some people work 80 hour weeks continuously, most people don&#x27;t out of need for sleep, exercise and relaxation. There is certainly an ebb-and-flow to this so I am embracing the idea that it will take me many more years of continuous growth and effort to get where I want to be. I also know that I need to eliminate as many distractions as possible, including turning off the TV and avoiding going out to concerts, clubs and bars. I have picked up some meditation techniques as well (including spending 10 minutes a day, at least once a day, focusing on deep breathing in order to unwind my frontal cortex). Sacrifice sucks but it is necessary to become the person you want to be!",1423957684
9051174,story,,,1,0,pjdorrell,"The Personal Software Quality Questionnaire",http://thinkinghard.com/blog/ThePersonalSoftwareQualityQuestionnaire.html,,1423957680
9051173,comment,9050316,9050316,0,0,mrj,,,"As far as I can tell from this, the authors worked really hard to implement in Haskell something that is trivial and well-understood in Python and other languages.<p>Maybe the article could talk more about their specific needs, but this looks like a crud app made very complicated by the choice of unusual software for the task. Maybe it did something awesome, but this doesn&#x27;t tell us what that was. (They had to write their own ZeroMQ broker, after all. That was certainly costly.)<p>I don&#x27;t understand the claim in this article that concurrency in Python is hard. There are many reasonable ways to do it for the web, from multiprocessing using something like uwsgi or the excellent gevent. There are certain things that are hard, but for common patterns like web services, there are many awesome solutions to choose from.<p>And I don&#x27;t understand why memory footprint is seriously a factor here. Server runtimes may use all the memory available to go fast. As long as it fits, footprint seems a lot less important than other factors. The cost of buying an extra stick of ram is miniscule compared to the cost of having to implement libraries to support a language choice.<p>The choice of a pure functional language like Haskell to do lots of IO seems like a strange choice given that Haskell makes side effects like IO more difficult than other languages. I&#x27;m curious to know how that affected the implementation. I&#x27;d like to use more functional languages, but since my job is primarily IO of some sort, watching people struggle with writing to sockets leaves me more than a little hesitant.<p>Basically, this article is missing a lot of details to support the argument they have made.<p>&quot;The satisfaction we feel after a good day of Haskell is unparalleled, and at the end of the day, that&#x27;s what it&#x27;s really all about isn&#x27;t it.&quot;<p>Actually, since they appear to be working on a startup, I would think that a functioning business and time to market would be more important.",1423957661
9051172,comment,9049467,9051135,0,0,jonsterling,,,"After numerous discussions with Bob Harper (and reading Derek Dreyer&#x27;s work, who has been the biggest proponent for applicative functors), I have come to understand that there are only two compelling use-cases for applicative functors:<p>1. higher order functors.<p>2. modular type classes<p>Higher order functors are kind of cool, but IMO Standard ML does not seem to be suffering too much from the lack of them. I&#x27;m not too interested in it, since it gets super gnarly super fast, and this happens to be pretty much the main use-case for applicative functors. I suspect that most use-cases of higher order functors in OCaml could be reformulated to be first order, with a lot less monkeying around in the module system. There may be compelling use-cases though.<p>The other use-case is possibly a version of modular type classes that behaved a bit more like Haskell&#x27;s. The idea is that if functors are going to be applied automatically during elaboration to provide something like type classes, you&#x27;ll get MkWelp(S) called in multiple places, and you would prefer that any type members of the resulting structure be compatible. Applicative functors would do this.<p>I am not too convinced by this use-case, though I could see that people would find it useful.<p>In all other cases, generative functors have the correct semantics. Pretty much the whole use-case of putting abstract types in a functor is that you can then reason intensionally about them (i.e. distinguish them based on their access path). This is super useful, for instance, if you have a notion of &quot;index&quot; or something and you want to prevent yourself from using indexes from one table in another one, or something along those lines.<p>This is what the Scala people mystifyingly call &quot;path dependent types&quot;. It&#x27;s just generative abstraction.<p>So maybe it is an interesting feature to have applicative functors, but these should be added post facto, and generative functors should be the default. OCaml now supports generative functors if you add an extra () parameter; it&#x27;s strange syntax, but it&#x27;s good enough for me! :)",1423957626
9051171,comment,9048110,9048814,0,0,aniket_ray,,,"Not sure why you were downvoted as opposed to OP but this thread is full of people who don&#x27;t realize that Google is truly a place where employees are encouraged to speak up when things are bad. Frankly, organizations would never be able to fix their mistakes if their employees are censured when they speak up.",1423957618
9051170,comment,9049467,9050777,0,0,ufo,,,"The syntax is certainly very wonky but you get used to it. Installing merlin (vim / emacs plugin) helps a lot too.",1423957533
9051169,comment,9050316,9051083,0,0,jabagawee,,,"The guys who made Go (Robert Griesemer, Rob Pike, and Ken Thompson) actually found that it was Python and Ruby devs that were adopting Go, rather than C++ devs like they expected [1].<p>[1]: <a href=""http://commandcenter.blogspot.com/2012/06/less-is-exponentially-more.html"" rel=""nofollow"">http://commandcenter.blogspot.com/2012/06/less-is-exponentia...</a>",1423957517
9051167,comment,9049467,9051067,0,0,gnuvince,,,"Adding my own two cents:<p>- I like that with OCaml you can choose if you want your code to be functional or imperative, and both are equally well-supported.  I am writing a compiler in OCaml, and I am able to use the API described in Peyton-Jones & Lester for doing pretty printing while still using imperative algorithms from the Dragon Book.  This sometimes feels like cheating, but not having to figure out how to transform imperative code into functional code while still maintaining the same complexity constraints is really nice.<p>- OCaml code is usually a lot more &quot;boring&quot; than Haskell code, which is nice when reading other people&#x27;s code.  Let me explain: I am T.A.&#x27;ing an intro to compiler class where some students use Haskell and some use OCaml.  The Haskell styles of the students varies a lot: some prefer to use point-free style, some used Parsec others AttoParsec, some passed state around manually while other use a state monad, etc.  The OCaml submissions on the other hand were a lot more homogeneous: ocamllex for the scanner, menhir for the parser, the AST definition was almost identical to mine, and the code generation was also very similar.<p>- This may just be me, but I have had less problems with opam than with cabal.  Also, the merlin tool and its integration with Emacs are really good and give me the kind of minimal, out-of-my-way IDE experience that I am looking for.",1423957512
9051166,comment,9050970,9050970,0,0,angersock,,,"Oh, this is going to be so fun for doing terrible things.",1423957510
9051165,comment,9049467,9051062,0,0,ufo,,,"If you look at this from an &quot;expression problem&quot; point of view, this version with the records-of-functions is very similar to OO programming. But without inheritance, classes and so on.",1423957451
9051163,comment,9038874,9038874,0,0,hkarthik,,,"I use tmux and either tmuxinator or teamocil to accomplish this. I use vim as my editor so it just works within the shell.<p>Each project can have its own tmuxinator config and load up tmux with a number of shells. There is even native tmux support built into iTerm2 but I haven&#x27;t used it.",1423957380
9051162,comment,9031419,9039788,0,0,graycat,,,"Yes, at least in the media, there is a lot
of confusion about how e-mail and &#x27;open&#x27;
work.  E.g., for<p><a href=""https://news.ycombinator.com/item?id=9050436"" rel=""nofollow"">https://news.ycombinator.com/item?id=9050436</a><p>about<p><a href=""http://www.nytimes.com/2015/02/15/world/bank-hackers-steal-millions-via-malware.html"" rel=""nofollow"">http://www.nytimes.com/2015/02/15/world/bank-hackers-steal-m...</a><p>in that NYT piece on hacking banks in
Russia there is:<p>&quot;In many ways, this hack began like any
other. The cybercriminals sent their
victims infected emails — a news clip or
message that appeared to come from a
colleague — as bait. When the bank
employees clicked on the email, they
inadvertently downloaded malicious code.
That allowed the hackers to crawl across a
bank’s network until they found employees
who administered the cash transfer systems
or remotely connected A.T.M.s.&quot;<p>So, to get <i>infected</i> all they had to do
was just click &quot;on the email&quot;?  Not even
click on an attachment!  That must be some
strange, dangerous e-mail software!",1423957366
9051161,comment,9049467,9050846,0,0,jordwalke,,,"That&#x27;s a nice approach for debugging! If the mapping is close enough, I don&#x27;t mind reading the JS output. I&#x27;m curious about the general approach to compilation, though. It seems like a statically typed language could take advantage of the knowledge of types to generate an even more efficient version of the program that uses typed arrays and views (though, yes, it would require implementing a garbage collector unless relying on some kind of WeakMap in the JS engine).
I&#x27;ve heard of garbage collected languages compiling to LLVM which would allow Emscripten to assist you, but I&#x27;ve also heard that LLVM has a really hard time with GC languages.",1423957345
9051160,story,,,1,0,jeditobe,"How do security issues happen in programms?",https://reactos.org/ru/node/932,,1423957343
9051159,comment,9048772,9051030,0,0,chipotle_coyote,,,"This is interesting to follow; I basically agree with your take, but I also know precisely the kind of libertarian &quot;anarcho-capitalist&quot; type that Rayiner is effectively responding to, folks who follow in the footsteps of Murray Rothbard and company. They elevate &quot;coercion&quot; to the highest possible crime: you cannot have a state that isn&#x27;t invested with the power to coerce its citizens&#x27; behavior, ergo a benevolent state is impossible. So they fashion themselves anarchists, either unaware of or choosing to downplay the very anti-capitalist roots of anarchism. (And Rayiner&#x27;s observation about the frequent criticism of &quot;a state monopoly on violence&quot; from that crowd is one I&#x27;ve also had; as opposed to what, exactly, a free market for violence? Or a natural monopoly on it, perhaps? I understand their criticism to be valid concerns about what the failure conditions of that monopoly lead to, but many of the alternatives are horrifying in their <i>success</i> conditions.)<p>Turning this back on the actual topic, though, what do you think the libertarian response to the problems in your last paragraph should really be? I can&#x27;t think of any reforms which don&#x27;t still depend on the state following its own rules for both what it&#x27;s allowed to collect and what it can do with the data it <i>does</i> collect. Granted, merely having those rules--which we largely don&#x27;t--would be an improvement, but it feels like it&#x27;s in the &quot;necessary but not sufficient&quot; category.",1423957313
9051158,comment,9049630,9050911,0,0,moe,,,"No they don&#x27;t. Network-bound apps are rare, unless your app is e.g. file transfer or media streaming.<p>The overwhelming majority of apps is disk I/O bound.",1423957290
9051157,comment,9049467,9050520,0,0,ufo,,,"OPAM still doesn&#x27;t run natively on Windows though :(",1423957289
9051156,comment,9049467,9050624,0,0,lpw25,,,"Multicore:
    <a href=""https://github.com/stedolan/ocaml"" rel=""nofollow"">https://github.com/stedolan/ocaml</a><p>Modular implicits:
    <a href=""https://github.com/ocamllabs/ocaml-modular-implicits"" rel=""nofollow"">https://github.com/ocamllabs/ocaml-modular-implicits</a>",1423957258
9051155,comment,9051041,9051108,0,0,Mithaldu,,,"> I think people coming from SVN/CVS where history is strictly linear have this obsession with keeping it that way.<p>This has absolutely nothing to do with those, especially since they didn&#x27;t even allow cleaning up histories. There is one very simple reason for why some developers prefer a linear history of master:<p>It makes debugging very easy.<p>With branch merges, especially when the branch lines cross, or the merge is an octopus merge, the complexity of the code necessitating inspection to find the root cause of a bug straight-up explodes. Meanwhile with a linear history it&#x27;s not only easy, but automatable to find a commit that breaks a thing.<p>I do realize that you may not have had the displeasure yet to be in the situation to learn these things. Please feel free to consider yourself fortunate, but please also do try to understand that the things i just wrote are in fact simple observation of realities.",1423957213
9051154,comment,9050279,9050279,0,0,manidoraisamy,,,"Stanford NLP is pretty good, if you are on java - <a href=""http://nlp.stanford.edu/software/corenlp.shtml"" rel=""nofollow"">http://nlp.stanford.edu/software/corenlp.shtml</a><p>You might also want to look at word2vec (implemented in most of the popular languages) - <a href=""https://code.google.com/p/word2vec/"" rel=""nofollow"">https://code.google.com/p/word2vec/</a>",1423957190
9051153,comment,9050793,9051149,0,0,enneff,,,"That&#x27;s exactly what we do, and we need to change the commit hash because we want to include the review information in the commit message.<p>Not sure why this is &quot;insane.&quot;",1423957173
9051152,comment,9050793,9051066,0,0,arsv,,,"&quot;not a dynamic executable&quot;<p>In case you wonder, that&#x27;s dietlibc which is typically built with no dynamic linking capabilities whatsover.",1423957161
9051151,comment,9048110,9048573,0,0,aerovistae,,,"I laughed",1423957126
9051150,comment,9049467,9050547,0,0,ufo,,,"Named arguments may be just &quot;syntax sugar&quot; but its one of the biggest things I miss from Haskell. They make library functions more consistent and they also make it much easier to write point free code because you don&#x27;t need to resort to combinators like &quot;flip&quot; or &quot;.&quot; as much.",1423957124
9051149,comment,9050793,9050793,0,0,hueving,,,"Gerrit still produces merge commits unless they have it configured to cherry-pick onto master, which is insane because you are changing the commit sha at that point.",1423957069
9051148,comment,9051144,9051144,0,0,fortytw2,,,"Note here, elementaryos.org now redirects to elementary.io - the .org is nothing more than a redirect",1423957053
9051147,comment,9049698,9050114,0,0,proveanegative,,,"Could you elaborate a little about why you rejected Erlang?",1423957048
9051146,comment,9051041,9051108,0,0,sytse,,,"GitLab CEO here, I completely agree with your observation that people coming from SVN have a hard time adjusting to non-linear history. At GitLab we recommend embracing it <a href=""https://about.gitlab.com/2014/09/29/gitlab-flow/"" rel=""nofollow"">https://about.gitlab.com/2014/09/29/gitlab-flow/</a> But we also believe in the freedom to do what you want, see there is a version of GitLab with automatic rebasing to allow a clean linear history without having to rebase by hand <a href=""https://about.gitlab.com/2014/12/22/gitlab-7-6-and-ci-5-3-released/"" rel=""nofollow"">https://about.gitlab.com/2014/12/22/gitlab-7-6-and-ci-5-3-re...</a>",1423957015
9051145,comment,9027743,9036060,0,0,ukigumo,,,"Thank you, I&#x27;m going to read through those carefully.",1423957010
9051144,story,,,2,1,fortytw2,"Elementary OS switches to a .io domain",https://elementary.io/,,1423956971
9051143,comment,9049208,9049208,0,0,sigfreud,,,"You have to like your tools and stick to them, that means your text editor for notes and immediate todo lists and access in the cloud, also that list of inspirational themes, quotes and links you&#x27;d like to research, eventually; but also includes that programming language, framework and patterns you have to adopt and stick to, just to give yourself enough time to master it, and only then it will make sense to take next steps to a higher level or to test that other new/cool technology. Love your tools and knowledge and stick to them until you really need something else.",1423956962
9051142,comment,9050793,9051019,0,0,justinmk,,,"> where you often have many iterations or the diffs are large). But for many other projects the UI that GitHub provides is sufficient<p>GitHub is painful for non-trivial reviews. Biggest WTFs:<p>- No comment threading (or at least collapsing). On a PR with 100 comments[1] it is unlikely that those revisiting the thread need to see (and download, and render...) the first bazillion comments.<p>- Source &quot;annotations&quot; are lost after a force-push (why not keep around a read-only view of old comments? We have lost some valuable discussions on GH pull requests)<p>Yes, we try to keep PRs small. But they also need to be meaningful, and sometimes they require (many) more reworks than expected.<p>[1] <a href=""https://github.com/neovim/neovim/pull/1820"" rel=""nofollow"">https://github.com/neovim/neovim/pull/1820</a>",1423956945
9051141,comment,9050379,9050974,0,0,electronvolt,,,"I think it&#x27;s a combination of playing around and math chops.<p>Without any mathematical knowledge, you probably couldn&#x27;t come up with something like the s(i,k,o) function (which, as far as I can tell from just looking/playing around with them briefly, seems to be the function responsible for the tessellation offset), and you might not have thought to define a system like (x=X(N,t), y=Y(N,t), 0<t<1).<p>Without a nontrivial amount of playing around, you probably wouldn&#x27;t have found the exact constants used, like (2<i>pi</i>(3^i)), .2/(2^i), etc.--but knowing how altering those affects the end result takes some mathematical knowledge, so it&#x27;s more guided investigation than random guessing.",1423956945
9051140,comment,9034673,9040127,0,0,allemagne,,,"This is not my alt account. I&#x27;m just not that active. These are not outliers, you are simply incorrect. If you believe your assertions to be anything but assumptions and blase accusations of entire cultures, I&#x27;d be happy to read your published work on the matter.",1423956944
9051139,comment,9050793,9051093,0,0,noir_lord,,,"I was generating 7-15Mb binaries out of Delphi in the late 90&#x27;s (it had a similar kitchen sink approach) and it simply wasn&#x27;t an issue then and it certainly isn&#x27;t an issue now.<p>I&#x27;m actually racking my brain for a case where a 500kb vs 5Mb binary would be a deal breaker, outside of embedded stuff I can&#x27;t think of much.",1423956938
9051138,comment,9050793,9051090,0,0,hueving,,,"That&#x27;s like trying to predict the cost of a flight by cost per mile using a quote from SFO to SJC as a baseline.",1423956915
9051137,comment,9049186,9050675,0,0,ukigumo,,,"Exactly! No architecture, no structure, no process, no documentation and with some luck, no money either.",1423956879
9051136,comment,9050793,9051057,0,0,arsv,,,"> Besides, bickering over the size of hello world is pretty pointless; better to compare the size of programs that actually do something.<p>It is not about the size of hello world executable, that is just a symptom. A code smell if you like. There is something badly broken in the dead code (or dead data) elimination area. And I hope that code is in fact dead, because if it is not, add code generation to the list of smelly things.<p>What I suspect I see here is a kind of C++ vtable problem built deep into the language design somewhere. And the reaction is, let&#x27;s talk about large executables so that it would kinda become not so visible. Or maybe let&#x27;s take a look at glibc, because glibc is definitely a paragon of clear design befitting a new language.<p>> fmt.Print does use reflection<p>There are two problems with this. The lesser one is why does it need reflection to print a string. The bigger one is why do I see about 600 reflect.* entries in the resulting ELF instead of a single one for the string type.",1423956878
9051135,comment,9049467,9051067,0,0,jordwalke,,,"I generally prefer programming with immutability, but I certainly appreciate the ability to use &quot;benign effects&quot; in my programs. Besides the case for performance, I have applied a strange combination of benign effects, GADTs, and functors to generate a sort of &quot;proof of type equality&quot; between two values passed into a framework, each of which are not known to the framework because they&#x27;re passed <i>into</i> the framework by two separate clients of the framework. At that point, I had the ability to reason about two values with arbitrary and potentially distinct types, as either being not the same (None), or the same Some(x, y) with x and y having the same type.<p>I have no clue if there&#x27;s a more elegant way to do this (edit: there probably is), but even I (as a n00b) was able to figure out how to do this by using benign effects. There&#x27;s only a single mutation in this library - but it was such a critical one that made everything else possible.<p>I&#x27;m curious about the reason for preferring generative functors over applicative functors. It seems like both could have valid use cases. Could you point me to a writeup that explains why you believe generative functors are superior?",1423956856
9051134,comment,9050208,9051001,0,0,bcolb,,,"I&#x27;m honestly not as well versed in what the latest alternative cryptocurrencies are as I used to be. However, I don&#x27;t know of any that have solved the problem of blockchain bloat due to increased microtransactions.<p>I still think Bitcoin would be the best choice at the moment. It has a developer community that is actively working on solutions to the problems that keep it from being better suited to large numbers of microtransactions.",1423956854
9051133,comment,9051041,9051088,0,0,MaulingMonkey,,,"> &quot;In general, pull request culture is not about code review.&quot;
> I have no idea what this means.<p>Me either.  To me, the entire point of pull requests is about triggering (code) reviews.  If I don&#x27;t want to bother with review, why not just grant direct push access and skip the rubber stamp ceremony?",1423956842
9051132,comment,9049200,9051107,0,0,Mahn,,,"It&#x27;s not that big of a deal to have these fields visible in the first place. The post is a nice trick, but I doubt it has a market for a startup.",1423956786
9051131,comment,9051041,9051086,0,0,sytse,,,"GitLab CEO here. Both GitHub and GitLab normally always create a merge commit when accepting a merge request in the web UI. GitLab EE has a rebase feature where you can accept merge requests by automatically rebasing them just before merging, for more information see <a href=""https://about.gitlab.com/2014/12/22/gitlab-7-6-and-ci-5-3-released/"" rel=""nofollow"">https://about.gitlab.com/2014/12/22/gitlab-7-6-and-ci-5-3-re...</a>",1423956779
9051130,comment,9050343,9051109,0,0,whocalledus,,,"Which website? whocalled.us does not generate or list any URL that does not have information. Empty pages were never indexed by Google.<p>If you search Google for a random telephone number you will see a ton of empty sites who list every possible number. whocalled.us has <i>never</i> done that.",1423956779
9051129,comment,9048772,9051112,0,0,harryh,,,"I always thought it was the oppressive laws, poor economies, concentration camps and (in many cases) out right starvation of the populace that held the people in check. To me those things seem a lot more important that the gov&#x27;t snooping on my email.",1423956763
9051128,comment,9049186,9050873,0,0,ThrustVectoring,,,"Since you want to do the features with the highest impact per unit effort first, the units used for estimates don&#x27;t matter. You could replace a time estimate with a number between 1 and 10, and that&#x27;s equivalent for prioritization purposes.<p>As long as you don&#x27;t let the difficulty numbers get translated back into dates, you get the best of both worlds. You don&#x27;t waste time on projects that aren&#x27;t worth doing, and there&#x27;s no deadlines and estimates to cause friction.",1423956762
9051127,comment,9045574,9047812,0,0,leishulang,,,"Java works on Android Runtime (ART). Clojure barely works on dalvik, let alone ART.",1423956733
9051126,story,,,1,0,guiambros,"The Voice of David Carr",https://medium.com/five-hundred-words/the-voice-of-david-carr-1b72577839ed,,1423956719
9051125,comment,9051041,9050793,0,0,Mithaldu,,,"Edit: This commit was written to the original submission: <a href=""https://talks.golang.org/2015/state-of-go.slide#7"" rel=""nofollow"">https://talks.golang.org/2015/state-of-go.slide#7</a><p>--------------<p>It seems like these people simply don&#x27;t understand Github very well.<p><pre><code>    Can only view diffs on a single page (can be very slow).
    Cannot compare differences between patch sets.
    Accepting a patch creates a &quot;merge commit&quot; (ugly repo history).
</code></pre>
Don&#x27;t use the merge button, just add the requester&#x27;s repo as a remote to yours and use your familiar tools. If possible and done, a fast-forward merge + push will also close the PR.<p><pre><code>    Comments are sent as they are written; you cannot &quot;draft&quot; comments.
</code></pre>
How is that different from pull requests via emails? (Also, on the website itself the comments can be edited.)<p><pre><code>    To create a patch one must fork the repository publicly
    (weird and unnecessary).
</code></pre>
What exactly is weird about that? It makes it possible for the requestor to craft their changes with full control, without requiring upstream to give them write access. This point is just entirely nonsensical.<p><pre><code>    In general, pull request culture is not about code review.
</code></pre>
A strong claim, but one without any justification, and which is, in my experience, as far from the truth as possible.<p>Edit:<p>In light of their complaints about the need to fork, i have to say that their current contribution process can in its entirety be described as weird, unnecessary <i>and</i> baroque:<p><a href=""https://golang.org/doc/contribute.html"" rel=""nofollow"">https://golang.org/doc/contribute.html</a>",1423956672
9051124,comment,9049698,9050782,0,0,agumonkey,,,"Is there a flagship project using Nim ? Rust has Servo. I&#x27;ve read here and there that this is the best way for a language to catch on.",1423956656
9051122,comment,9049698,9051045,0,0,def-,,,"Instead of ADTs there are object variants in Nim: <a href=""http://nim-lang.org/manual.html#object-variants"" rel=""nofollow"">http://nim-lang.org/manual.html#object-variants</a><p>With ADTs:<p><pre><code>  data Shape a =
    Rectangle
      { x :: Float
      , y :: Float
      , width :: Float
      , height :: Float
      }
    | Circle
      { x :: Float
      , y :: Float
      , radius :: Float
      }
</code></pre>
With Object Variants, note that we don&#x27;t have to repeat x and y:<p><pre><code>  type
    ShapeKind = enum Rectangle, Circle
  
    Shape = object
      x, y: float
  
      case kind: ShapeKind
      of Rectangle: width, height: float
      of Circle: radius: float
</code></pre>
The pattern matching in Nim is quite limited. Something like this works:<p><pre><code>  let (x, y) = getCoordinates()
</code></pre>
But Nim doesn&#x27;t have (x,y) = (y,x) for example, instead swap can be used.<p>You could implement your own pattern matching using metaprogramming: <a href=""http://www.drdobbs.com/open-source/nimrod-a-new-systems-programming-languag/240165321"" rel=""nofollow"">http://www.drdobbs.com/open-source/nimrod-a-new-systems-prog...</a>",1423956638
9051121,story,,,1,0,dnetesn,"The Large Hadron Collider gears up for restart",http://www.symmetrymagazine.org/article/february-2015/whats-new-for-lhc-run-ii,,1423956583
9051120,comment,9051041,9050793,0,0,inglor,,,"This presentation looks horrible on the iPhone screen. I wonder if they couldn&#x27;t spend a few minutes to point phone users to a working version or at least not lock the viewport size so mobile users could pinch-zoom out.",1423956543
9051119,comment,9049907,9050997,0,0,ukigumo,,,"Because it has a good suite of tools that work out of the box. There&#x27;s LDAP, webmail, webDav/calDav/cardDav, admin interface, antivirus, anti-spam, etc. It integrates well with OwnCloud too which is a nice plus.<p>When I was looking to move away from gmail, my requirements where security and privacy and Kolabsys was one of the first services that popped up as a viable alternative.<p>The thing is, I was also looking for a reason to try out AWS and get back to using linux after years of powerpoint and archimate _poisoning_ so everything came together like that.<p>I highly recommend it, even if it took me about 5 working days to get spamassassin, openDKIM, ciphermail and TLS working for all components. But hey, now I get a 94% grade on www.emailsecuritygrader.com and a A+ on SSL Labs&#x27;s test so hurray for me.",1423956528
9051118,comment,9051041,9051108,0,0,notnowlewis,,,"One of the previous slides says they are using Gerrit.",1423956455
9051117,comment,9050970,9050970,0,0,nubb,,,"Link is down =(",1423956433
9051116,comment,9050343,9050478,0,0,pyre,,,"> I would almost go so far as to say browsers and search engines are killing the web. It&#x27;s no longer a web.<p>How do you want people to find things on the web if not via search engine? Do you want to go back to the days of the &quot;Web Ring?&quot; Or are people supposed to crowd source their search via their social graph on Facebook?",1423956431
9051115,comment,9049569,9049569,0,0,stuartd,,,Thiotimoline,1423956388
9051114,comment,9049200,9049607,0,0,kevinchen,,,"Safari appears to do the same. Version 8.0.3 (10600.3.18)",1423956383
9051113,comment,9049208,9049208,0,0,noonespecial,,,"This said trying to be completely free of condescension:<p>What you are feeling is inexperience. It gets better.",1423956369
9051112,comment,9048772,9051075,0,0,lstyls,,,"Every modern authoritarian regime relies on mass surveillance as a cornerstone of its power.<p>Edit: for example, North Korea, Soviet bloc countries past and present, Fascist states...",1423956366
9051111,comment,9048772,9049878,0,0,_cudgel,,,"You should forward her this as well:<p><a href=""http://chronicle.com/article/Why-Privacy-Matters-Even-if/127461/"" rel=""nofollow"">http://chronicle.com/article/Why-Privacy-Matters-Even-if/127...</a>",1423956354
9051110,story,,,2,0,kallesverige,"License Fees vs. Total Cost of Ownership",http://testdroid.com/mgmt/the-efficiency-and-costs-license-fees-vs-the-total-cost-of-ownership,,1423956302
9051109,comment,9050343,9050441,0,0,saurik,,,"This kind of website does not have a URL for every piece of information: it has a public URL for every potential piece of information, and it expects those to show up in search results. This would be similar to having every combination of words show up in your search results as a blank page on Wikipedia that you can edit to add content. When I use Google to find content, I want to find actual content, not ten billion placeholders: if the site doesn&#x27;t have information on a particular phone number it should return a 404, not a 200, and not be indexed; there should then be a way to submit information into the database (actual information, not something totally useless like &quot;reported&quot;) that then creates that URL. From the home page (which hopefully at this point has high page rank for being a non-spammy resource) they then should link to a list of &quot;updates&quot;, which will be seen to change often, and the links on the other end of those will also change often, so Google will pick up new content quickly and efficiently. Yes: I realize that these websites are trying to rely on the search query as their discovery tool to get people to add content, and so doing this &quot;harms&quot; them, but if every one of them does this it becomes a useless discovery tool anyway (as the page of results is just pages and pages of these placeholders); imagine if every wiki did this: chaos.",1423956294
9051108,comment,9051041,9051088,0,0,admax88q,,,"They&#x27;re probably using Gerrit.<p>Although I agree, I don&#x27;t think merge commits are ugly.  I think people coming from SVN/CVS where history is strictly linear have this obsession with keeping it that way.<p>In fact I find lots of developers just have an obsession with &quot;clean&quot; history, and fetishes for particular tools.  It baffles me.",1423956250
9051107,comment,9049200,9049200,0,0,theunixbeard,,,"So who would pay for a tool to make creating/handling/analyzing these links as easy as using UTM parameters?",1423956249
9051106,story,,,1,0,tuty767,"Show HN: 3Derm, 3D pictures that detect skin cancer",https://onevest.com/3derm-onefund-llc,,1423956237
9051105,comment,9050793,9051077,0,0,enneff,,,"> <i>if you are writing such systems (in either language) you are very likely to spend quite a lot of time in &#x27;unsafe&#x27; land.</i><p>I don&#x27;t think that&#x27;s necessarily true. Go does a much better job than Java at letting you manage your allocations and re-use memory. You can write tight, performance-critical code in Go without resorting to &#x27;unsafe&#x27;; it just requires care, as it does in any language.",1423956150
9051104,comment,9049208,9049208,0,0,george_ciobanu,,,"What works for me: start them all and see which one sticks.",1423956075
9051103,comment,9050436,9050810,0,0,hawkice,,,"I&#x27;m going to be a little pedantic, but since this is an article about security (and your point is also about security, of a marginally different type):<p>> You already have trustworthy people, and people with the relevant skills and connections.<p>In security, there is a distinction between &#x27;trustworthy&#x27; and &#x27;trusted&#x27;. Organized crime definitely has trusted personnel, but, &#x27;trustworthy&#x27;... maybe not.",1423956036
9051102,comment,9050793,9051090,0,0,enneff,,,"Which makes no sense, anyway. The reason a Hello World program in Go is large is because it must include the baseline runtime support that is included in any Go program. A 10 line program won&#x27;t be 13mb.",1423955994
9051101,comment,9049467,9050852,0,0,jonsterling,,,":) Thanks! And yes, I don&#x27;t know about Anthony, but my intention has always been for Vinyl to be a proof-of-concept for what happens when you try to make a clean, minimal & well-factored HList experience; my motto is, “Now build your own Vinyl”.",1423955914
9051100,comment,9050793,9051076,0,0,enneff,,,"Actually, the Gerrit workflow is pretty agnostic about whether you use one or many commits.<p>In general, it&#x27;s poor form to send massive commits anyway. Those poor reviewers!",1423955895
9051099,comment,9050970,9051089,0,0,joewalnes,,,"I haven&#x27;t used websocketify. I&#x27;d be interested to have users try out both and write up their experiences.",1423955870
9051098,comment,9049467,9051023,0,0,lomnakkus,,,"I won&#x27;t address all your points, but I think [1] deserves special attention: I think we can all agree that if you want to write software that will let you land a small vehicle on Mars, then you don&#x27;t want/need the opinion of a theoretician, you just need $1B and a team of extremely disciplined programmers who will <i>ADHERE TO PROCESS</i>. Then you impose so much process that they either leave or prevail. What we&#x27;re speculating about here (at least I think we are?) is if this is a sustainable model for general development and if we can do better. Even if we can&#x27;t get better runtimes from FP languages, could we perhaps make programs which <i>generate</i> better C programs than those elite programmers that were chose for this particular mission? (I think we can. It has very little do with humans, but a lot to do with the fact that programs are very <i>meta</i> in that we can create programs that generate programs that generate programs ad-infinitum. If we can get our specifications right, the rest becomes trivial.)<p>A Mars lander program director explicitly said that he chose C because it was what he was familiar with. (I&#x27;ll edit and post a link if I can find the video.) Just for context, his decision was <i>also</i> based solely on familiarity and experience. For him it wasn&#x27;t quite so much about language, it was more about <i>process</i> (6 different industrial-strength linters, etc.)<p>> Just because something is elegant mathematically, does not mean it&#x27;s good engineering practice. Haskell, for example, can be practical, but it struggles between the math and the reality of limited machines and human cognition[2]. Likewise, when you start talking about SML vs OCaml, you&#x27;re talking engineering, not math -- and possibly a language tailored to engineering vs math.<p>That&#x27;s the thing I would dispute, but it&#x27;s hard to convince people who aren&#x27;t already drinking the Kool-Aid, as it were. Compared to compiler-assisted reasoning about side-effects, the difference between SML and O&#x27;Caml is completely trivial.<p>Your [2] is just absurd :). Clearly, you don&#x27;t have to understand the body/implementation of a function, just its type. :)<p>More seriously, I&#x27;d be interested if there&#x27;s a particular experience that soured you on FP (or perhaps Haskell, in particular)...?",1423955870
9051095,comment,9049698,9050116,0,0,chipsy,,,"Everybody was embarrassed about that day. It was a lot of toxicity over an issue that had already been resolved in technical terms, and dragged on for hours, but Andreas was mostly gracious throughout. I give him a lot of credit for being willing to trade blows with aggressive users without using Linus-style shame tactics himself. However there is also some recognition of how disruptive it is to allow discussion to spiral out of control like that. The channel is considering a more policy-driven approach to handling these kinds of situations. It has never banned anyone in its history to date, but it may have to cross that bridge soon.",1423955847
9051094,comment,9049233,9050325,0,0,tyho,,,"The only userspace application is busybox. I think it is statically linked against whatever you have installed on the machine doing the build.",1423955844
9051093,comment,9050793,9051084,0,0,enneff,,,"This makes me laugh, considering at Google we regularly deploy statically linked C++ programs that are two orders of magnitude larger.<p>&quot;You call that a big binary? THIS...&quot; etc",1423955796
9051092,comment,9051005,9051060,0,0,melling,,,"Yeah, it&#x27;s almost like it&#x27;s a complete waste of time to even enter the debate.  Still we do it every day all over the Internet.",1423955784
9051091,story,,,2,0,yurylifshits,"Apple may be working on a self-driving car",http://www.theverge.com/2015/2/14/8038461/apple-self-driving-car-rumors,,1423955765
9051090,comment,9050793,9051038,0,0,SBullet01,,,"I think the point he tried to make was that if only &quot;hello world&quot; produces a 1.3 megabytes executable, the file size of a fairly complicated program made in Go will be significantly larger than the same program implemented in another language.",1423955693
9051089,comment,9050970,9051028,0,0,espadrine,,,"What are the differences? Do I miss anything?<p>1. websocketify allows binary, while websocketd is text-only<p>2. websocketify does I/O through a socket that the program uses (and that it sniffes through rebind.so), while websocketd relies on stdin / stdout<p>3. The arguments are different<p>websocketd --port=8080 my-program<p>websocketify 8080 -D -- my-program",1423955675
9051088,comment,9051041,9050793,0,0,nawitus,,,"What is the better alternative Go is using?<p>&quot;Can only view diffs on a single page&quot;<p>You don&#x27;t need to use GitHub to view diffs.<p>&quot;To create a patch one must fork the repository publicly (weird and unnecessary).&quot;<p>I don&#x27;t think it&#x27;s weird.<p>&quot;Accepting a patch creates a &quot;merge commit&quot; (ugly repo history).&quot;<p>You don&#x27;t need to have a merge commit, although I don&#x27;t think that creates an ugly repo history.<p>&quot;In general, pull request culture is not about code review.&quot;<p>I have no idea what this means.",1423955642
9051087,comment,9049208,9049397,0,0,MistahKoala,,,"I&#x27;ve been looking for something like this. If I understand correctly, you&#x27;re suggesting something similar to the mapping of scientific paradigm(s): <a href=""http://seedmagazine.com/content/article/scientific_method_relationships_among_scientific_paradigms/"" rel=""nofollow"">http://seedmagazine.com/content/article/scientific_method_re...</a><p>From a learner&#x27;s perspective, the map would be more like a route-planner, highlighting the particular paths to take to get from one point of knowledge to another - but it would presumably need to be able to account for what a learner already knows (what if, for example, a route requires the learner to acquire advanced algebra, but they don&#x27;t yet have basic algebra?).",1423955636
9051086,comment,9051041,9050793,0,0,boulos,,,"Does GitHub still not support &quot;fast-forward only&quot; commits?  The &quot;ugly merge&quot; thing is easily avoided with a rebase before committing.",1423955606
9051085,story,,,1,0,pappyo,"At Business School, Networking Can Cost $18,000 a Year",http://www.bloomberg.com/news/articles/2015-02-12/at-business-school-networking-can-cost-18-000-a-year,,1423955586
9051084,comment,9050793,9051057,0,0,eternalban,,,"It is a valid point considering the lack of dynamic linking. Go (as is) strongly suggests having lots of &quot;small programs&quot; compose a larger (modular) system on a node. So those 1.9MBs do add up.",1423955550
9051083,comment,9050316,9050824,0,0,ffn,,,"My guess is probably the same reason why the author writes &quot;NONE&quot; in the &quot;Ease of / Desire to programming&quot; section for Java... because brackets, pointers, for loops, using : to declare types, and other such C-derived language constructs / tokens.<p>This may be a generalization, but from my experiences so far, it seems there are two major schools of programmers in today&#x27;s world: those who come from Java / C, and those who come from Python / Ruby.<p>The Java/C school likely did a lot of low-level stuff, hardware, OS, compilers, and the like college. If required, they can probably crack open the gnu debugger and crank through assembly. They concern themselves primarily with systems that the computer can efficient perform. In their work, the reader will find lots of loops, indexing temp variables, and comments documenting that does what. Today, they tolerate working with higher level tools like Go, vanilla js, Rust, Typescript, etc.<p>The Python/Ruby school likely did a lot of math and scientific computations in college. In their hard drives, you can probably find Matlab, R, or (more recently) Julia files containing everything from implementations of Newton&#x27;s method to routines for calculating Navier Stokes. They concern themselves primarily theory and models, and prefer elegant and beautiful models/code to optimized performance. In their work, the reader will find tons of maps-filter-reduce chains, &quot;arrows&quot;, and few comments (they argue their code is clear). Today, their higher-level tool chain include things like Haskell, Coffeescript, HAML, etc.",1423955506
9051082,comment,9050436,9050981,0,0,aidos,,,"That&#x27;s an interesting point, though it&#x27;s a pretty thin silver lining on a very dark cloud. Being able to undo the operation doesn&#x27;t really soften the blow of having hackers inside your bank sending outgoing video feeds of employee&#x27;s screens.<p>Do you think they&#x27;ll be getting back the money in this case? Presumably the people involved know enough about the operations to have moved the cash to somewhere out of reach before being exposed.",1423955438
9051081,comment,9046526,9049707,0,0,dbaupp,,,"The CPU branch predictor can predict/&quot;specialise&quot; virtual calls too.",1423955421
9051080,story,,,1,0,Edmond,"Show HN: Learn to code via chat",http://www.jasymchat.com/?roomId=1spszhiw9kuor1svyiut9cqihe-1423955333805&roomLabel=Learn%20To%20Code,,1423955400
9051079,comment,9050436,9051055,0,0,joemi,,,"As far as I understand it, the money that was transferred out did not come from nowhere... Ultimately it was the bank&#x27;s money.<p>Edit: Meant to also mention also that the whole making-it-look-like-an-account-had-more-money concept was about making the fact that they were taking the bank&#x27;s money harder to notice. It was not actually creating money that did not exist before.",1423955381
9051078,comment,9050933,9050933,0,0,coding4all,,,"I thought tamagoyaki (卵焼き) was fried/grilled egg? 卵 tamago = egg, 焼き yaki = fried/grilled.",1423955377
9051077,comment,9050793,9051053,0,0,eternalban,,,"You jest?<p>Go is GC&#x27;d just like JVM. The only possible benefit -- even if Go catches up at runtime -- is the compact form of memory objects in Go vs Java object. But then again, if you are writing such systems (in either language) you are very likely to spend quite a lot of time in &#x27;unsafe&#x27; land.",1423955309
9051076,comment,9050793,9051019,0,0,mapleoin,,,"Agreed. What I like most about GitHub pull requests is that they encourage splitting commits into smaller ones. Gerrit is focused on doing a change in one big commit.",1423955284
9051075,comment,9048772,9051030,0,0,harryh,,,"> History has shown mass surveillance to be antithetical to individual freedom. So our goal is to abolish mass surveillance.<p>It has? When?",1423955235
9051073,comment,9050008,9051006,0,0,karambahh,,,"Working with &quot;northern european&quot; retailers myself, I can tell you&#x27;re in for a bumpy ride (their scale is so huge they can basically force your suppliers to stop supplying you if they want to), but there&#x27;s definitely a market for food at reasonable prices from small producers.
Good luck in your endeavour!",1423955181
9051072,comment,9050436,9051047,0,0,aidos,,,"To be honest, I have no experience - so I can&#x27;t say, if the description in the article is at all accurate though, they&#x27;re in a pretty bad way:<p>&quot;<i>The cybercriminals sent their victims infected emails — a news clip or message that appeared to come from a colleague — as bait. When the bank employees clicked on the email, they inadvertently downloaded malicious code. That allowed the hackers to crawl across a bank’s network</i>&quot;<p>There must be plenty of people on HN with experience in this field, so it&#x27;ll be interesting to hear their take on it.<p>My (very ranting/rambling) point was that I&#x27;ve seen other large organisations pretending to do security (and probably believing it themselves), where it&#x27;s really just security theatre.",1423955181
9051071,comment,9050436,9050962,0,0,lifeisstillgood,,,"To run with your analogy a bit I occassionally see CEO types with &quot;bodyguards&quot;.  Because the kidnapping attempt is theoretical and not happened for ten years the bodyguard is carrying the luggage or opening the doors or answering the phone.<p>The analogy is fairly clear - you can spend the money on security in depth.  But humans tend to use those in segments for other things eventually.  Banks hav been around long enough that all their bodyguards are now bellboys.",1423955149
9051070,comment,9050436,9051003,0,0,chubot,,,"So, I&#x27;m specifically asking about protecting employees&#x27; machines.  My reading of the article is that the attackers got a foothold on employees&#x27; machines and credentials, and just piggybacked their malicious transactions along with normal transactions.<p>In that case, it doesn&#x27;t matter how much security you have in your data center.  Employees need access to central systems to do their job, so client security is paramount.<p>For instance, for a bank or Bitcoin exchange, I think it would relevant how many client operating systems can access your crown jewels.  I think if you&#x27;re just using Mac or Windows with antivirus or whatever, there&#x27;s already a pretty low upper bound on your client security and thus your overall system security.<p>What I&#x27;m wondering if anybody is deploying some kind of custom client OS similar in spirit to Qubes OS, or a build of Chromium OS or Android, which have application sandboxing beyond what stock Linux, Mac or Windows have.<p>Also, I would imagine that each teller has their own credentials, and the bank should have policies about the transaction rate / total for a single teller.  It sounds like the attackers would have to compromise multiple employee accounts to steal that much money.  So you also want to protect employees machines from each other as much as possible (not just &quot;outside&quot; attackers).<p>I&#x27;m guessing that a Bitcoin Exchange doesn&#x27;t have that many employees, since the whole industry is new.  You probably have people just accessing stuff with their personal MacBooks or whatever, and that&#x27;s fine for now (there are bigger risks).  But when you start to have 100, 1000, 10,000 employees capable of doing financial damage, then I think this type of thing will start to matter more.<p>EDIT: Actually I remember one large deposit I made required three people at a bank to approve it.  The teller said, &quot;Wait my boss has to approve this.&quot;  Then the boss said, &quot;Wait my boss has to approve this&quot;.  So they are probably using the presence of three credentials and credentials at a sufficient employee level to authorize large transactions.  So I take it the attackers would have to target employees with those credentials.<p>But that can cause problems for customers -- e.g. if the branch manager isn&#x27;t around, you might not be able to do what you wanted.  To some degree, they are  using meat space protocols to mitigate risk that their software systems can&#x27;t handle.",1423955138
9051069,comment,9049233,9049233,0,0,69_years_and,,,"This is really cool - have a read of the tutorial it presents what&#x27;s going on in a concise manner. Makes it all seem quite simple... until it gets to the end. &quot;Nice work&quot; to the author.",1423955119
9051068,comment,9049698,9050999,0,0,Araq,,,"<i>Shrug</i>, you left out:<p>- Conservative GC marking of the stack.<p>- No stack overflow check in release mode.<p>Compiling to C is not tricky, it is horrible and we don&#x27;t do it for the fun of it! That said, clang has lots of options to tame C&#x27;s undefined behaviour. Guess what, you can enable these too for C code generated by Nim.",1423955117
9051067,comment,9049467,9049467,0,0,jonsterling,,,"Nice post! There are a lot of good reasons to use OCaml over Haskell which are more compelling than “JavaScript”, though. A few of them are:<p>1. modularity (and now that they have added generative functors à la SML, you can have true abstraction)<p>2. benign effects: in Haskell &quot;proper&quot;, you do not have effects; rather you have &quot;codes&quot; for effects, which get interpreted into effects by the RTS; this rules out the possibility of, e.g., using effects to implement a semantically pure interface. On the other hand, OCaml has <i>actual</i> effects, which can be used in an open-ended way to implement all sorts of functional interfaces.<p>3. strictness: arguments abound about whether laziness or strictness is better; for me, it comes down to the fact that with some pain, you can embed laziness in a strict language with effects, but you cannot embed full-on ML-style strictness into a language like Haskell; moreover, strictness-by-default permits <i>safe</i> uses of benign effects.<p>I&#x27;d call Haskell an expression-oriented programming language, since the types end up classifying expressions and algorithms (i.e. the particular &quot;effects&quot; you used get put into the type). Whereas I&#x27;d say (OCa)ML is a value-oriented language, since values (canonical forms) are considered separately from general expressions (canonical and non-canonical forms); moreover, implementation details don&#x27;t end up in the types, so you can really consider them to be classifying values and functions (i.e. equivalence classes of algorithms, not algorithms themselves). This is largely orthogonal from strictness vs laziness, but as soon as you add partiality in, strictness becomes the only tractable way to have canonical-form-based meaning explanations for the judgements of the theory.<p>P.S. My day job is writing Haskell. (In case the Pedagogical Brethren wish to come and &quot;correct&quot; me.)",1423955088
9051066,comment,9050793,9051029,0,0,vetinari,,,"> A simple C &quot;hello, world&quot; program compiled and linked statically using gcc<p>Statically. Care to check &quot;ldd hello&quot; of your binary?",1423955085
9051065,comment,9049208,9050411,0,0,polyx,,,"There is a great plugin for sublime for that. It is called simple tasks if I recall correctly (Always forget the name of this plug in because of it generic name) It allows to still be using plain txt file but adds nice shortcuts and allows to make checkboxes.",1423955071
9051064,comment,9049186,9050954,0,0,dustingetz,,,"I guess I was alluding that if one is in a consulting situation where he can no longer estimate, one possible solution may be to increase quality by being more like a product team, and the resulting clarity of thought will help out his estimates",1423955061
9051063,comment,9050316,9050824,0,0,coolsunglasses,,,"If you&#x27;re going to satisfy a type-checker, you might as well negotiate with a reasonable one that understands what you mean and doesn&#x27;t confuse the obvious :)",1423955044
9051062,comment,9049467,9050949,0,0,tel,,,"If you have an ADT but want pattern matching, try Scott Encoding.<p>For instance, here we have Option<p><pre><code>    module Option = struct
      let scott (some : &#x27;a -> &#x27;r) 
                (none : &#x27;r) 
                (opt  : &#x27;a option) =
        match opt with
        | Some a -> some a
        | None   -> none
    end
</code></pre>
For Option, since it&#x27;s non-recursive, the Scott Encoding and the recursor/inductor/Church Encoding are identical. Here&#x27;s a linked list, though<p><pre><code>    module LL : sig
      type &#x27;a t
      val fold  : (&#x27;a -> &#x27;r -> &#x27;r) -> &#x27;r -> (&#x27;a t -> &#x27;r)
      val scott : (&#x27;a -> &#x27;a t -> &#x27;r) -> &#x27;r -> (&#x27;a t -> &#x27;r)
    end = struct      
      type &#x27;a t = Cons of &#x27;a * &#x27;a t | Nil
      let rec fold cons nil = function
        | Cons (h, t) -> cons h (fold cons nil t)
        | Nil         -> nil
      let scott cons nil = function
        | Cons (h, t) -> cons h t
        | Nil         -> nil
    end
</code></pre>
Anyway, the pattern should be more clear now. These provide effectively &quot;functionalized&quot; pattern matching which you can apply whenever you need. In particular, you can think of these as expressing a (potentially partial) &quot;view&quot; of the abstract type. For instance, my linked list might have not been a linked list exactly but instead some kind of tree, but `scott` and `fold` let me expose a &quot;view&quot; of that tree as though it were a linked list.",1423955041
9051061,comment,9050793,9051051,0,0,enneff,,,"I don&#x27;t understand the basis of your question. What does the bootstrapping process for a compiler have to do with &quot;OSS&#x27;s value proposition?&quot; (By OSS I&#x27;m assuming you mean &quot;Open Source Software&quot;?)<p>To build gcc, you need a C compiler. To build Go, you need a Go compiler. To compile anything you need to start with some kind of compiler.",1423955033
9051060,comment,9051005,9051005,0,0,smt88,,,"You can go back and find posts that aggressively argue that any new technology will succeed or fail.<p>Right now, you can find people saying that Tesla has a bright future or that it&#x27;s going down the toilet. Extreme viewpoints get clicks, especially when they&#x27;re contrary to popular opinion (like OP).",1423955015
9051058,comment,9050793,9051029,0,0,ori_b,,,"Are you sure that fmt doesn&#x27;t allocate memory or do introspection?",1423954937
9051057,comment,9050793,9051029,0,0,enneff,,,"> <i>&quot;Run-time support and type information&quot;, why is it linked into a an executable that never allocates memory and does no introspection of any kind?</i><p>fmt.Print does use reflection.<p>Besides, bickering over the size of hello world is pretty pointless; better to compare the size of programs that actually do something.<p>We do recognise that Go binaries can and should be smaller, but probably not as small as you might hope.<p><a href=""https://github.com/golang/go/issues/6853"" rel=""nofollow"">https://github.com/golang/go/issues/6853</a>",1423954909
9051056,comment,9050855,9050855,0,0,smt88,,,"MBTI is mostly BS[1][2] (although I do find it entertaining)<p>1. <a href=""http://www.reddit.com/r/askscience/comments/1p2cki/how_scientifically_valid_is_the_myers_briggs/"" rel=""nofollow"">http://www.reddit.com/r/askscience/comments/1p2cki/how_scien...</a><p>2. <a href=""https://www.psychologytoday.com/blog/give-and-take/201309/goodbye-mbti-the-fad-won-t-die"" rel=""nofollow"">https://www.psychologytoday.com/blog/give-and-take/201309/go...</a>",1423954903
9051055,comment,9050436,9050436,0,0,kirvyteo,,,"&quot;But the largest sums were stolen by hacking into a bank’s accounting systems and briefly manipulating account balances. Using the access gained by impersonating the banking officers, the criminals first would inflate a balance — for example, an account with $1,000 would be altered to show $10,000. Then $9,000 would be transferred outside the bank. The actual account holder would not suspect a problem, and it would take the bank some time to figure out what had happened.&quot;<p>A naive thought...if they leave with the exact amount of money (left) in the bank, should it be seen as just &quot;illegal inflation&quot;, rather than seeing it as a theft. Someone made a gain but nobody made a loss in any case. Banks have always created more liquidity officially through loans, except that it is legal.",1423954903
9051054,comment,9049467,9051018,0,0,jordwalke,,,"No need to ask permission to quote me, but thanks for asking anyways. I definitely agree that shifting focus towards industrial use cases is what we need.",1423954840
