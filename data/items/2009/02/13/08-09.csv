ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
479635,comment,478754,479176,0,0,kaens,,,"Exactly  - 90% of the regular expressions you (or at least I) use in Perl are going to be fairly simple. They'll look like cryptic nonsense to someone who is not familiar with regexes, but be immediately obvious to someone who uses them often, and obvious with 40 seconds of looking at documentation to someone who is just familiar with them.<p>Regexes shouldn't, IMO, be removed or avoided in Perl - they're a crucial part of the language, and one of the reasons Perl is so good for what it's good for.<p>Same goes for slices in python. Just like how if you're using Perl, you need to become familiar with regular expressions, if you're using python, you <i>need</i> to become familiar with slicing, because it's a crucial part of the language, and you'll probably be writing a lot of  ""un-pythonic"" code in python without them, as well as being utterly unable to read someones code who <i>is</i> familiar with them.<p>As far as palish's point about explicit and implicit<p><pre><code>    listb = lista[:]\n</code></pre>\n<i>is</i> explicit, once you're familiar with the basic features of python, assuming you consider slicing a ""basic feature"" - I certainly do.",1234515403
479634,comment,478192,479328,0,0,strlen,,,"You could say that at DNA level a mutation can contain the exact same amount of information as a non-mutation if you use Shannon's measure e.g.:<p>GTTACA\nto\nGAATCA<p>would be the same. But of course there is a <i>vast</i> difference in terms of the phenotype that would happen from this mutation (if the mutation happens in the relevant area).<p>Of course strictly speaking you can also add a mutation, the most trivial example is:<p>AAAAAA\nto \nACAAAA<p>Obviously entropy is higher in second string.<p>All those examples show, however, that laws of information entropy (as well as thermodynamic entropy) don't really have much to do with evolution.<p>There isn't going to be a logical or semantic trick to ""disprove"" evolution either, as it's not a suggested mathematical theorem: it's not in the a-priori space. It's an enumeration that flows from evidence. No one is claiming that evolution is a logical necessity: it's merely a theory (just like gravity is merely a theory) that is the best one supported by evidence.<p>How would one disprove evolution? To quote an evolutionary biologist, find something along the lines of rabbits in the Pleistocene. Until that is found, evolution through natural selection is what best fits the evidence.",1234515152
479633,comment,479165,479494,0,0,trezor,,,"<i>Too many people think MySQL and its limitations are representative of this technology; it isn't, not by a long way.</i><p>This is about as true as it is sad, but when your only exposure to relational databases is the least mature and featured one on the market, and everyone is too busy sharding and remaining oblivious about it, this is the kind of discussion you get.",1234515006
479632,comment,479165,479266,0,0,fauigerzigerk,,,"""The reality is that 99% of web apps don't really want a RDBMS. There are no arbitrary queries to run, they just need to extract some objects from the database""<p>Well, I'll tell you what my reality has been. It's been that every time I started a project, it appeared like I just needed to extract some objects from the database. But very soon it turned out that there wasn't just one way to view that information. There were two or three important use cases that destroyed my preferred, supposedly ""natural"" view.<p>Now, I'm fully aware that sometimes one preferred view of the information you have is so dominant that you have to optimize for that case. The question, is how do you optimize? Do you hard code that particular view from the beginning, or do you normalize first and then layer an optimized view on top of it, e.g. in the form of caching or materialized views? RDBMS make it easy to do the latter.<p>You say ""they really only handle one (small) problem space well -- modeling relational data.""<p>I think being relational is not an a priori property of data and relational modelling is not a problem space. It's the other way around. First you have a problem space, then you decide how to model it, and then you get the data according to that model. Assuming that information already has a kind of ""natural"" model attached to it is a fallacy in my view.",1234514730
479631,story,,,4,4,greut,"Why NDAs are mostly a joke",http://blog.nektoon.net/archive/2009/02/12/nda-nix-decent-agreement.html,,1234514696
479630,comment,476509,476746,0,0,aj,,,"It does provide a real time activity stream through a download-able app. But I did not require it since I don't have that high of a viewership..<p>What I like most about Reinvigorate is that the fairly clean UI and no complex charts. All are simple (unlike GA which I can never make sense of.. Yeah I sucked in statistics :( )",1234514176
479629,comment,479617,479617,0,0,endtime,,,"Sounds a bit like the plot of a Bond movie...a bad Bond movie, sure, but it would have more plot than the last one.<p>I wonder how they would be able to afford 300 staff for 600 programmers?  I know they'd be cheap programmers, but still, add on an extra half a salary (of a chef or cleaner or whatever), plus food costs, making sure the boat doesn't sink etc...it seems like it would end up costing quite a lot.",1234514130
479628,story,,,2,0,laika4000,"Google chief's endless search for fast and reliable services",http://www.irishtimes.com/newspaper/finance/2009/0213/1233867934474.html,,1234514117
479627,comment,479410,479610,0,0,kqr2,,,"You can try vi in javascript:<p><a href=""http://gpl.internetconnection.net/vi/"" rel=""nofollow"">http://gpl.internetconnection.net/vi/</a>",1234514057
479626,story,,,20,6,pg,"60% of Neanderthal DNA sequenced",http://news.bbc.co.uk/2/hi/health/7886477.stm?lss,,1234514011
479625,comment,478326,479332,0,0,MaysonL,,,"Languages are not implementations.<p>Algorithms are more productive of speed than language choice.<p>It is highly likely that in five years, Python code will run competitively as fast as C, assuming that either language is still in use.",1234513924
479624,comment,479617,479617,0,0,kqr2,,,"<a href=""http://www.sea-code.com/"" rel=""nofollow"">http://www.sea-code.com/</a><p>It looks like they haven't updated their website since 2005.",1234513880
479622,story,,,3,0,bentoner,"Engagement loops: beyond viral",http://startuplessonslearned.blogspot.com/2008/12/engagement-loops-beyond-viral.html,,1234513799
479621,comment,478632,478632,0,0,timcederman,,,"I wrote a little bit about a (mathematically naive) solution to the averages problem on my blog (props to Eric Liu for his feedback) -- <a href=""http://www.cederman.com/?p=116"" rel=""nofollow"">http://www.cederman.com/?p=116</a>",1234513692
479619,comment,479165,479272,0,0,trezor,,,"<i>If the DB can't guess up a good query plan, why not let me simply feed one to it?</i><p>You speak like good databases wont allow you to override the query-optimizer. Look up optimizer hints.<p>Most real database-systems worth using allows this, but it is discouraged because for most queries, most of the times, the statistics the DB has on existing indexes, data uniqueness, estimated size of result-sets etc etc provides a better basis for optimizing the query than anything you can come up with.",1234513683
479618,comment,479532,479532,0,0,m_eiman,,,"Errors like this a embarrassingly common in all sorts of media. Something it looks like genuine errors - charts made by someone who didn't take enough math in school, but more often it's someone who wants to highlight differences of some kind and skews the charts accordingly.<p>One of the favourite ways of doing this is to make a line chart of two values, maybe mortage rates from two banks, and not make the chart's Y axis based on zero (or put a zero there and make a little squiggle on the line). A minute difference is made to look huge, and it annoys the hell out of me.<p>I expect things like this in marketing, but what -really- annoys me is when public television does things like this on the news. They really should know better...",1234513665
479617,story,,,19,11,1gor,"Offshore programming idea: floating luxury hotel for developers 3 miles off US coast?",http://www.boston.com/business/technology/articles/2005/04/25/a_plan_to_offshore____just_3_miles_out/,,1234513319
479616,comment,479314,479584,0,0,JesseAldridge,,,"Yes, we do need to measure quality.  And maybe a simple metric wouldn't work, but a skilled programmer should be able to hold two results up side by side and judge for himself which is better.<p>Controlled experiments with human judges seem like the best answer.",1234513283
479615,comment,478492,479048,0,0,bkudria,,,"I was there - but I don't remember the problem we chose.<p>Sorry.<p>But is <i>was</i> cool.",1234513172
479614,comment,478754,478905,0,0,ivank,,,"Creating empties with {} takes just 58% of the time as dict() [0.25 us, 0.39 us] because there's no need to LOAD_GLOBAL and CALL_FUNCTION.<p>'not not variable' is similarly faster than bool(variable).<p>(not that I've run into this often in Python.)",1234513089
479613,comment,479314,479314,0,0,JesseAldridge,,,"Here's how I track my own productivity:  I take notes.  I'm using Freemind these days.  I have my code at the top of the screen and a mindmap at the bottom.  One of the nodes in that mindmap is a ""ToDo"" node that contains various tasks.  As I work on a task - whenever I ask myself a question, or hit an error, or whatever, (usually around every 1-5 minutes) I'll make a note in the mindmap.  I have another node called ""Done"" where I keep a log.  Whenever I complete a big task, I move the node and all it's children from the ToDo node to the Done node.  The child nodes in the Done node are organized by date.<p>How you do it isn't the important thing.  The important thing is that you can look back later and review your work.",1234513049
479612,comment,479314,479398,0,0,access_denied,,,"I think part of the ""feeling"" is knowing - internally - how much you have learned during that particular programming session.  How much did you produce is one thing, but how much did you improve you capability to produce more another.",1234513043
479611,story,,,2,0,bdfh42,"Pinnacles of 19th Century Science",http://www.charlespetzold.com/blog/2009/02/Pinnacles-of-19th-Century-Science.html,,1234513025
479610,comment,479410,479410,0,0,natrius,,,"This is all sorts of awesome.<p>My current editor of choice is vi(m) because it is available everywhere, doesn't clutter the interface with things I never use, supports (at least syntax highlighting for) every language I care about, and has powerful keyboard shortcuts. If I weren't so anti-chording, emacs would be just as good.<p>New editors these days tend to focus mainly on one language, like Eclipse with Java, so the interface gets bloated with things that are only useful for that language. I've tried PyDev in Eclipse and it just feels foreign. Sure, I could customize Eclipse if I felt like it, but I'd have to learn plenty of SWT and the Eclipse codebase itself to do so. I already know HTML, CSS and JavaScript, so customizing Bespin should be far more trivial.<p>If I were running Bespin on a machine I control, it could theoretically access any machine I can ssh into (though the security implications of this merit further thought). If enough people use it, it will have decent support for every language I care about and powerful keyboard shortcuts (hopefully borrowed from vi wholesale). Since it's built with HTML, CSS and JavaScript, I can easily customize it to work how I want it to, adding in the language support and keyboard shortcuts myself if need be.<p>I'll probably be hacking on this when I wake up.",1234512939
479609,comment,479362,479432,0,0,natch,,,"It is true that you don't need it (and the poster never said you need it, btw), but the sign does help add additional evidence in the event you need to show a court that you were taking steps to protect your mark.",1234512652
479608,comment,479409,479409,0,0,iigs,,,"Off topic for Bespin, but on topic for their site, I just had one of those ""if you want your customers to use it make it easy to play with"" moments. I actually caught myself weighing the benefits of seeing it first hand vs putting my email address into another database. Then when I clicked register to fact check this comment it gave me (well, Chrome) the inferior-browser-F-U:<p><i>We would love to have you try Bespin<p>Unfortunately, we are using exciting new technology in HTML 5 that only leading browsers have implemented.<p>We want to push the Open Web forward, so for this tech preview you will have to use a new browser.<p>We have successfully tested Bespin on Firefox 3 and WebKit Nightly, so try one of them!</i><p>Oh well. :/",1234512546
479607,comment,479362,479362,0,0,natch,,,"This is cool. Sorry don't have time to do a detailed test drive now, but I see others have done that, and I just wanted to add that YES this is a great concept and something I have been wishing for. Dodgeball was close, Twitter is OK for this but too noisy and not always followed closely enough, but this gets right down to a core use case that is near and dear. One nice thing is that since the use case is narrow, getting updated via SMS would work, at least for people with good SMS quota plans.<p>Also both the name and the subtitle are great, and I won't be surprised to see them inspire other -able and -onty names shortly.<p>A money maker? I don't understand how, but you have thought about it way more than me, so maybe you have a way.",1234512438
