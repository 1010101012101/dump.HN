ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
23324,comment,23300,23322,0,0,SwellJoe,,,"Great to see Perl is coming back into vogue in these kinds of conversations.  It's gotten a bad rap for a while, because it's so easy to write really messy and ugly code...but it's also extremely expressive, and contains more functional constructs than even Ruby or Python.  Perl 5 didn't get objects right, but they aren't awful (not nearly as big and clunky as Java/PHP).  Perl 6 really will be a killer.  I watched Audrey Tang's recent video about it, and it was just astounding how far they plan to leap with Perl 6...I must have known it was coming, since I read the apocalypses years ago, but seeing the example code blew me away.  It's still a pretty good learning language, and an unbeatable ""get things done"" language because of CPAN, but if pressed I would have to recommend Ruby or Python for first time programmers.",1179625389
23323,story,,,1,1,danw,"Perl Golf Apocalypse",http://en.wikipedia.org/wiki/Perl_Golf,,1179624273
23322,comment,23300,23301,0,0,staunch,,,"Your title is broad but here you say you want to do web development. Many of the people here are interested in programming for programming's sake, so a lot of the advice will be computer sciency. That's great, but if you just want to make stuff you can safely skip theory for now and get your hands dirty producing real stuff and fill in the gaps over time.<p>The <i>key</i> is to learn best practices of whatever language you choose. Don't learn bad habits. Read the authoritative books and don't take short-cuts. Don't be the guy writing code people cry at having to maintain. Avoid ""cargo cult"" programming, where you just paste code you find into your programs without fully understanding it. I recommend never pasting at all in fact. At the very least re-type everything as you're learning and try to understand it as best you can.<p>You can safely skip haskell, lisp, prolog, and all those languages you will never get friends to help you with, many books to read, or libraries to leverage. At least until you've got enough experience to be mostly independent of assistance.<p>With the use of best practices it doesn't really matter if you choose: Ruby, Perl, Python, or PHP. I'd ignore Java because it has so many training wheels, and the others don't. These can all work extremely well for web development and anyone who says different is selling something. The Truthâ„¢ is that Perl5 is the best and Perl6 will make them all obsolete :-)
",1179624128
23321,comment,23300,23300,0,0,tim_sw,,,"Read COncepts, Techniques, and models of computer programming.<p>You will get a taste of all these languages/paradigms, and in addition, others like concurrent programming etc.<p><a href=""http://www.amazon.com/Concepts-Techniques-Models-Computer-Programming/dp/0262220695"" rel=""nofollow"">http://www.amazon.com/Concepts-Techniques-Models-Computer-Programming/dp/0262220695</a>
",1179623976
23317,comment,21107,21587,0,0,rurucu,,,agree!,1179623122
23316,comment,23284,23284,0,0,npk,,,"This kind of question is difficult for any of us to answer.  First of all, this is a subject I have no experience in, so I can't comment on how ""fair"" your numbers are.  I'll only offer general advice about negotiations.<p>You and your friend are about to form a business relationship.  Therefor: <i>really</i> try to understand his opinion of fair.  If both of you can not be happy, then forget it and move on.  Does he really offer something worth 50% of your company?  It seems to me that high-tech is a very competitive industry, if you have something good, typically, you will find investors.<p>Personally, I do not like rewarding people based on the number of VC dollars brought in.  Reward him for actual work.  Say that he will be paid X shares/hour, plus some start-up bonus.  BTW - Rewarding people for sales, is a different story.",1179622989
23315,comment,23300,23309,0,0,timg,,,"Agreed.<p>But, shouldn't <i>we</i> be asking the poster ""why""? If the ""why"" is because he wants to be good at programming, then I would suggest that he first does some light c, a tiny bit of assembly, and a get a basic understanding of FP languages and the insanity of advanced OO in java.<p>In the end though, be sure you are using Python. Heck, even if you get bored along the way, throw some python in.<p>A [Warning] though: python will spoil you. Good luck going back to a more verbose, rigid language, should you be forced to.",1179622845
