ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
35460,comment,35309,35455,0,0,pg,,,"I must never have written a sufficiently complicated Lisp program.",1184896504
35459,comment,35456,35456,0,0,pg,,,"Facebook has never, as far as I know, claimed to want to be a <i>computing</i> platform.  There are lots of senses of the word platform, but sense in which the current FB is a platform is not that one.",1184896352
35458,story,,,19,26,drusenko,"What if Facebook loses my data?",http://david.weebly.com/1/post/2007/07/what-if-facebook-loses-my-data.html,,1184895342
35457,comment,35447,35447,0,0,pg,,,"His argument that you have to pay market rate regardless of the equity equation is false.  If a transaction is a net loss for the company, you shouldn't do it.<p>If your situation is so desperate that you feel <i>forced</i> to hire someone (or take more funding) at what seems an excessively high price, then what's really going on is that you're overvaluing the company.  If your situation is desperate, your value is low.",1184895319
35456,story,,,5,1,nickb,"Valleywag on Facebook's Parakey acquisition",http://valleywag.com/tech/acquisitions/facebook-buys-a-star-engineer-and-another-billion-dollars-in-valuation-280468.php,,1184895300
35455,comment,35309,35422,0,0,willarson,,,"Allow me to introduce you to my corollary to Greenspun's Tenth Rule: ""Any sufficiently complicated Scheme or Lisp program contains an ad hoc, informally-specified, bug-ridden, slow implementation of half of object orientation.""",1184895174
35454,comment,35311,35311,0,0,willarson,,,"Well, server optimization has been my primary hobby for the past month, and I'd like to make some clarifications about a few things the article says.<p>Saying that Lighttpd supports ""CGI scripts, Ruby on Rails, Pylons, TurboGears, Django, Quixote, webpy, Mongrel, Catalyst, Mason, Joomla, AWStats, and so much more"" is kind of misleading. Lighttpd can do a few things: it does fast cgi (fcgi support explains about 75% of the examples in that list), it can serve static files, and it can proxy requests to other servers. Lighttpd doesn't ""support Mongrel"", because Mongrel is another server. What Lighttpd does is use something akin to mod_proxy to send certain requests somewhere else, that somewhere else might be a Mongrel cluster that is running on port 8080 (hence it ""supports"" Mongrel).<p>
That proxying service is where the majority of Lighttpd usage has been. A typical efficient setup these days (YouTube does along these lines) is to have lighttpd accept incoming requests and if the request is for a static file then it serves the request (because it is very lightweight (i.e. minimal) it is more efficient than Apache at serving static media), and if it is for dynamic content the request is passed to Apache, which then passes it back to Lighttpd, which passes it back to the requester (this means that ""heavy"" Apache threads will be dedicated to a request for a shorter period of time since it only has to communicate/wait for Lighttpd instead of the actual requester).<p>
Lighttpd on its own isn't necessarily the best solution (an example from my experience is that mod_python and Apache become more efficient at serving dynamic content than fcgi and Lighttpd as the numbers of requester per second get very high). Usually a combination of a light frontend server and Apache in the backend can provide the best performance (again this is at high numbers, at lower numbers lighttpd is probablly equally or more efficient).<p>
As a final note, I'd really recommend Nginx over Lighttpd if you are looking for a light http server to serve static content, support fcgi, and/or proxy to other servers. The biggest reason? Lighttpd leaks memory and has to be restarted occasionally because every couple of days (under heavy usage) it dies. Not a great feature in a production server.",1184894699
35453,comment,35232,35232,0,0,ivankirigin,,,"Kids these days, with their hair and their twitters...
",1184893778
35452,comment,35439,35439,0,0,abstractbill,,,"Alas, my lawyer explained it to me like this:  There is a front door (that allows people to submit paperwork), leading to a back door (that gives people Green Cards).  You're already <i>through</i> the front door.  All they're proposing is that the front door should be bigger, but they (the USCIS) don't have the resources to process even the people who are already through the front door and push them out the back door.  Nobody seems to be proposing more resources so that the USCIS can get people through the system more quickly.",1184893696
35451,comment,35311,35311,0,0,ivankirigin,,,"I love it. Though I'm not an expert in optimized configuration of servers. I guess that's sorta the point.",1184893597
35450,comment,35015,35443,0,0,euccastro,,,"Hm, what about FedEx-ing a HD with the encrypted data?  It might be faster/cheaper/more practical?<p>Edit: That's assuming cperciva has physical access to his server, rather than working with e.g., EC2, or that he has more bandwith to spare.",1184893359
