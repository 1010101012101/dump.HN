ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
300755,comment,300541,300648,0,0,procrastitron,,,"Up until recently T-Mobile refused to let people opt-out of receiving text messages, regardless of what steps you were willing to go through. The only reason they changed their policy was because of a class-action lawsuit that was filed against them.",1221080363
300754,comment,300541,300742,0,0,biohacker42,,,"Spectrum is finite. But consider that the ""junk"" spectrum was left unregulated, completely unregulated and pretty much every exciting wireless tech started in this unregulated junk spectrum.<p>Obviously you're right too, we could come up with examples all day long, suffice it to say I think that a big part of texting costs is due to regulation driven high entry costs.",1221080297
300753,comment,300294,300749,0,0,dangoldin,,,"Would it grow exponentially? Would it be possible to cut around it and launch it out into space?",1221080289
300752,comment,300382,300382,0,0,pedalpete,,,"cool concept with the swyping, but isn't it time for something better than the qwerty layout for this?<p>though my fingers have learned where to press on the keyboard, I don't think my mind would be as good at swiping across like this.",1221080126
300751,comment,300485,300658,0,0,catch23,,,"Next week, I'll tell the world why ""Lua will replace Erlang in the next 2 years as the standard for Enterprise Applications""",1221080042
300750,comment,300583,300729,0,0,biohacker42,,,"Some don't even make it to 40hrs a week, ask DHH and crew: <a href=""http://www.37signals.com/svn/posts/893-workplace-experiments"" rel=""nofollow"">http://www.37signals.com/svn/posts/893-workplace-experiments</a>",1221080042
300749,comment,300294,300740,0,0,Prrometheus,,,"If it were small enough, it could only suck in a few atoms at a time. So, it could take a substantial amount of time to expand in the beginning.",1221080012
300748,story,,,2,0,Anon84,"Large Hadron Collider: Best- and Worst-Case Scenarios | Wired Science from Wired.com",http://blog.wired.com/wiredscience/2008/09/the-bosons-that.html,,1221079986
300747,story,,,5,0,dangoldin,"The Landscape of Possible Intelligences",http://www.kk.org/thetechnium/archives/2008/09/the_landscape_o.php,,1221079887
300746,comment,299903,299917,0,0,ld50,,,"how is this ""brilliant"" and not ""common effing sense""?",1221079808
300745,comment,300593,300593,0,0,epe,,,"A cool OCaml version:<p><a href=""http://www.ffconsultancy.com/ocaml/sudoku/index.html"" rel=""nofollow"">http://www.ffconsultancy.com/ocaml/sudoku/index.html</a>",1221079752
300744,comment,300728,300728,0,0,pedalpete,,,"I used crowdspring for web design and had an amazing experience. 
They have sections for logo design as well as other design services.",1221079742
300743,comment,194558,194724,0,0,barryfandango,,,"No need to be so caustic.  You wrote a redundant headline.  Learn from it and move on.",1221079617
300742,comment,300541,300690,0,0,ardit33,,,"That's trivializing a not so simple problem.   In a pure market, with no regulation whatsover, anybody could just stick an high power antena on it's roof, and bam, they have their own network.<p>But, also spectrum is finite, especially on what we can use with the current technologies.  If everybody puts it's own high powered antenas, it would just make everbody's service unsuable.  And taking out your competitor, ment to just place a bigger antena.<p>Also, high costs and barriers of entry don't just come b/c regulation.  There is huge capital costs to build a infrastructure  (towers, technology, etc.)  Look at Wimax, (which has less regulations than cellular telephone) where two companies had to merge in order to make it feasable.<p>What I would like, is option 2. The goverment makes sure there is fair competition for services, and where a carrier shouldn't lock your devices, and not allow you have your own apps and services in your phone.<p>If you look a classical use of goverment regulation:  Road traffic, traffic lights, rules etc.  In the early days of the car, none existed, and it used to be every man for each own.  Result was lots of accidents, traffic jams  (deadlocks everywhere), making cities almost too chaotic.  People driving without knowing how to really drive  (accident rates where very high).  Regulation brought some control to the chaos, where it made roads usable, traffic flowing, and make sure only people that know how to drive, drove.<p>But, regulation can also go too far, but making things expensive, excessive tickets that serve only to make revenue to cities and states.  etc.<p>And yes, I have real life experience with this.  I come from an ex-communist country, where twice in my life time goverment basically ceased to exist  (once in 90-92, and once in 97).  It was everybody on it's own, and it wasn't pretty.<p>I remember my favorite TV channel went off air, b/c one their competitors decided to erect a bigger antena, and use  the same band.<p>Overegulation is bad, but under regulation is surely aweful.  And I lived through it.  Most of you probably just dream about it, and think it is cool, but it is not.",1221079440
300741,comment,300728,300738,0,0,twelvedigits,,,"Of course it isn't.  But it's a lot more efficient.  I have a hard time buying the concept of paying a designer $500 on a project basis, when I could pay $500 to the best of 30+ submissions I receive.",1221079343
300740,comment,300294,300674,0,0,pavelludiq,,,"We would probably die pretty fast, because all the atmosphere would be sucked in, plus the black hole would create a big shock wave while sucking the earths surface and probably the great amount of radiation would kill us instantly, im no physicist, all i know about black holes, i know from the discovery channel and wikipedia, if i am wrong, please tell me, im dieing to know :D",1221079310
300739,comment,300577,300607,0,0,ivey,,,"For the 80% case, cap works fine.  It's when you need to do stuff in that last 20% that you have real trouble.",1221079118
300738,comment,300728,300728,0,0,michael_dorfman,,,"I had a great experience with 99designs-- but I have mixed feelings about the subject, since I'm not sure that it is healthy for the design industry....",1221079105
300737,story,,,4,0,hhm,"How Google Chrome Stores Passwords",http://blog.paranoidferret.com/index.php/2008/09/10/how-google-chrome-stores-passwords/,,1221078832
300735,comment,300577,300718,0,0,pmjordan,,,">> <i>9. Read other peopleâ€™s code</i><p>> <i>I have NEVER liked this advice.</i><p>The only way I'm able to read code is when I'm actively working towards some goal. Usually this is extending or fixing the existing code in some way. Sometimes it's to extract a specific algorithm or technique for some project of my own. That can certainly be enlightening, whereas just plain reading the code sends me to sleep.<p>Basically, that turns the advice into:<p>- either participate in an open source project (bugfixing, implementing features)<p>- or integrate/convert some complex piece of open source code into/for a project of your own<p>I definitely think there's something to be gained (learned) from read/write hacking rather than (mostly) write-only. Obviously, if you're trying to get stuff done, all that goes out the window, just get the damn thing written, by whatever means it takes.",1221078711
300734,story,,,2,0,waderoush,"The Real Story Behind the Google Chrome Comic",http://www.xconomy.com/national/2008/09/10/the-infinite-canvas-an-interview-with-scott-mccloud-the-google-chrome-comic-guy/,,1221078647
300733,story,,,1,1,kurtosis,"Ask HN: What's the newly hyped Secret Weapon in Iraq",,"In a 60 minutes interview to promote his new book<p>http://www.youtube.com/watch?v=ns_3VpOEkzM<p>Woodward talks about a new ""secret weapon"" - It seems to involve surveillance / tracking.  I'm interested in hearing your wild speculations as to what this technology might be.  (please try to avoid politics if possible)",1221078569
300731,comment,300728,300728,0,0,qhoxie,,,"<a href=""http://99designs.com/"" rel=""nofollow"">http://99designs.com/</a><p>I have seen quite a lot of quality work done on these sites.",1221078519
300730,comment,300541,300648,0,0,cstejerean,,,"I'm guessing not receiving text messages at all is also not an option for some people. Being able to whitelist numbers from which you can receive messages would be much better.",1221078480
300729,comment,300583,300707,0,0,j2d2,,,"Do any programmers actually work only 8 hours a day..? I've never seen evidence suggesting this is actually true. 10+2 seems more realistic.",1221078422
300728,story,,,8,13,twelvedigits,"Ask HN: Can anyone share their experience with logo shootout sites like logosauce?",,"We are looking to create a new logo for our startup and are thinking of crowdsourcing the project out for a small fee ($250-300) to a shootout website like http://www.logosauce.com<p>1.  Does anyone have experience with these types of sites?<p>2.  Are there are any other competitive sites that we should be looking at?<p>I know it's sexy to work with a logo designer, but I think there's probably a good number of them banging away at these websites.",1221078118
300727,comment,300485,300513,0,0,rcoder,,,"The Java protection model is in many ways less strict than the process isolation model exploited in Erlang. Giving each programmer responsibility for their pool of classes may sound like a good way to limit their ability to damage the rest of the system, but as long as anyone else is dependent on the stability of their API (and the absence of unchecked runtime exceptions), a single bad line of code can easily bring down an entire system.<p>Also, while it may technically be a ""functional"" language by virtue of disallowing destructive update of values, it really reads more like a scripting language. Variables are dynamically typed, and the functions only have an arity, not a signature.<p>Programmers used to the expressive type systems and polymorphism of more ""academic"" functional languages like ML or Haskell, on the other hand, would probably chafe at Erlang's lack of support for any abstractions other than forking and message-passing.<p>Real rocket scientists, on the other hand, would probably like Erlang, since the semantics of the language are simple, and its fault-tolerance and concurrency features could be well-suited for high-availability systems like mission data collection. (Its lack of hard real-time features make it a non-starter for actual avionics.)",1221078080
300726,comment,300710,300710,0,0,raju,,,"Related Reading -<p><a href=""http://en.wikipedia.org/wiki/Boson"" rel=""nofollow"">http://en.wikipedia.org/wiki/Boson</a>
<a href=""http://www.boston.com/bigpicture/2008/08/the_large_hadron_collider.html"" rel=""nofollow"">http://www.boston.com/bigpicture/2008/08/the_large_hadron_co...</a>",1221078025
300725,comment,300228,300505,0,0,orib,,,"What's the difference between financially supporting someone who would do evil, and doing it yourself?<p>Is hiring a hitman wrong? Is shopping at a known hitman's store, knowing that the profits he makes will be invested into killing wrong?<p>It's an extreme example, but if you feel that something a company is doing is wrong, financially supporting them is also wrong.<p>If you say <i>""I'm supporting an entity that does wrong, but the benefit it brings me is greater than the guilt I feel from using them""</i> is one thing. saying <i>""I support them financially, but I disagree with them, therefore I'm not supporting immoral behavior, and am still moral""</i> is just stupid and hypocritical.",1221077903
300724,comment,300702,300702,0,0,th0ma5,,,"have a notable bald head graphic?",1221077756
300723,comment,300026,300026,0,0,auntjemima,,,"I am new here, don't know what protocol is for duplicate (or in this case highly related) threads.  Here is a newer entry about swype:<p><a href=""http://news.ycombinator.com/item?id=300601"" rel=""nofollow"">http://news.ycombinator.com/item?id=300601</a>",1221077599
300722,comment,300588,300679,0,0,bjelkeman-again,,,"I am sure how people learn this is as varied as their background. I learned by starting a small business and when it got bigger I got mentoring from other entrepreneurs as well as had my accountant teach me. I also bought books on simple accounting, read QuickBooks manuals etc. i.e. wherever I could find the information.<p>These type of basic tutorials are useful though.",1221077503
300721,comment,298140,298140,0,0,schtog,,,"Wow the homepage looks great, very cool stuff. This is something that is really needed too.<p>I am very skilled in Python, have toyed around a lot with Haskell but not really written anything significant. Probably only written about 200 lines of C++ in my life...
Is that ok or you demand strong knowledge in all three?<p>How much Haskell do you use anyway(just out of curiousity) and for what?<p>Do you do raycasting?",1221077456
300720,comment,300710,300710,0,0,smoody,,,"they didn't actually collide anything yet.",1221077422
300719,comment,300583,300662,0,0,tdavis,,,"""Elite"" can have different meanings and is only relevant in context. If you have a small library of programming books you've read and you're constantly gaining new knowledge, you are ""elite"" compared to all the people who write bank software in Java that they learned once 5 years ago.<p>If someone they describe is in the top 5-10%, there are still folks in the top 4-1% and at some point it becomes ridiculously difficult to get anymore ""Elite"" without prodigy-like skill. I read a lot of books and am skilled in numerous computer-related areas including programming, but Linus Torvalds I am not.",1221077333
300718,comment,300577,300577,0,0,edw519,,,"Every once in a while, a seemingly useful piece is posted here at hn that I read and, based on what has worked well for me, I simply don't agree with.  This is one of those.  Here goes:<p><i>1. Upgrade Test::Unit - What, you arenâ€™t testing? You should be testing all the fucking time (TATFT).</i><p>Except when you're coding.  And then you shouldn't be doing anything but coding.  Sometimes you just gotta crank in order to make any real progress.  It's a lot easier to test once you have something to test.<p><i>2. Try out some TDD - Test Drive Development (TDD) makes for better code.</i><p>No.  Define your target.  Code to it.  Deploy.  Then test.  Lots of quick cycles blow away few slower ones.  Just code with your pedal to the floor.  Test time is the time for testing.<p><i>3. Upgrade your fixtures - Iâ€™m not sure I can advocate this approach due to the fact fixtures actually do provide some use.</i><p>Just because something provides <i>some</i> use doesn't mean you should use it.  Get a good IDE or text editor, a good work area, and a little gray matter; that's all you need.  Otherwise, you risk getting caught up in all your cool tools, an easy mistake to make.<p><i>4. Install (and learn and use) a SCM - The benefits of having code in some form of repository hugely outweighs it not being there.</i><p>Uh, I'd love to argue with this one, but I won't.  Good advice.  Either get some kind of repository or learn to walk on eggshells.  Your choice.<p><i>5. Investigate Continuous Integration - ...makes automating your tests to run at checkin next to trivial.</i><p>Making checkin trivial is not a goal while coding.  Getting something done IS.  Anything that is not coding is not helping you make progress while coding.<p><i>6. Know your code - It is one thing to write your code, but it is another greater thing to know your code. Four automated tools...</i><p>""Know your code"" & ""automated tools"" are mutually exclusive.  See my response to #7 below.<p><i>7. Automate your deployments - Automation is your best friend.</i><p>Wrong.  This is EXACTLY to opposite of #6, ""Know Your Code"".  Automation takes you out of the very trenches you have to be in to get to know your code in the first place.  The dirtier I get, the better I know my code.  (For further reading, Chapter 3 of Founders at Work by Jessica Livingston.  Woz (my hero) totally immersed himself in his details without crutches in order to know them as well as anyone ever has.)<p><i>8. Collect some statistics</i><p>Code now, get something working, and worry about analyzing it later.  Again, anything that isn't ""coding"" is slowing you down.<p><i>9. Read other peopleâ€™s code - You want to be a better developer? Read code. Read bad code. Read good code. Read your code. Read my code. Code reading is a skill that many developers skimp on.</i><p>I have NEVER liked this advice.  Why?  I've never found it the least bit helpful.  Either I didn't understand the code or it sucked so much, I was too ill to work the rest of the day.  Better: find something cool (on the outside) and figure out how to code it yourself.  Ask for help or suggestions if you need it.<p><i>10. Blog about it</i><p>If you have time to blog, then your project isn't big enough.  Code now, deploy, and blog later.  Frankly, I don't want to read about your ""adventures in development"" until you're done and have something to say about your (completed) work.",1221077329
300717,comment,300657,300700,0,0,biohacker42,,,"<i>The name StackOverflow refers to an infinite loop or recursion in the programming languages C or C++...</i><p>I did read the article, the above is what I'm responding to.",1221077180
300716,story,,,4,4,raghus,"Fotonauts Is a Gorgeous Photopedia ",http://www.techcrunch.com/2008/09/10/tc50-fotonauts-is-a-georgeous-photopedia/,,1221077145
300715,comment,297054,297448,0,0,symptic,,,"Perhaps you could develop a sort of system where users can text in their results as they work out or post-workout and the site takes the data and charts it?<p>i.e.: ""db bench 160, db fly 50, s press 140, l press 650"" translates into 'dumbbell bench press 160lbs., dumbbell fly 50lbs., etc. etc.<p>I know most people at the very least lug around their cell phones with them in the gym, so it could prove to be very useful.",1221077088
300714,comment,300312,300403,0,0,pmjordan,,,"Beyond a certain error rate, you will definitely end up with bad data. The point is, with error detecting or correcting codes, you're introducing redundancy by encoding the information into more bits than minimally required to represent that information.<p>The simplest form is adding a parity bit, which allows you to detect (not correct) up to one bad bit. (so, say 1/8 bits or 12.5% if you store a byte of information in 9 bits)<p>Using R-S codes you can crank up the number of bits used for encoding, which also drives up your error tolerance. Plus, in addition to detecting errors, you can even correct them. So it doesn't matter if some bits come up bad (or missing) - the redundancy is spread equally across <i>all</i> of the transmitted/stored bits, so it's irrelevant which bits suffer from the failure. There aren't any ""old"" or ""new"" bits.",1221077076
300713,comment,300583,300670,0,0,tdavis,,,"This is often a difficult statistic for programmers who <i>do</i> read to grasp because the only programmers you likely know are more people like you. The thing is, there aren't as many of us as we think there are.<p>None of the programmers I know <i>don't</i> read. I am told that these people exist; they work in cubicles and so forth. However, I don't know any of them. So, personally, it takes a lot of concentrated effort on my part to not take that 5-10% and bump it to, say, 50%. Because in the world I live in, that statistic is crazy low.",1221077040
300711,comment,300710,300710,0,0,ionela,,,"Cern scientists expect to find answers to many important subjects of physics such as the origin of universe, up to now explained with the big bang theory. Since the boson seems tied to the very origin of the universe, hence to the beginning of life, boson is also known as god particle.",1221076987
300710,story,,,1,3,ionela,"Hadron Collider: we are still alive",http://dev.emcelettronica.com/hadron-collider-we-are-still-alive#,,1221076980
300709,story,,,2,0,jlogic77,"Ask: HN Experience with GoGrid.com",,"I was looking into Gogrid.com and was wondering if anyone has had any experience with them.<p>Advantages
- Use of the F5 loadbalancer at no additional cost
- Flexibility in only paying for what you use.<p>Disadvantages:
- Bandwidth costs seemed pretty expensive per/gb
- Didn't seem to have a solution for getting more storage space without spinning up another instance where you pay a premium for the RAM/CPU time.  (Maybe pair with S3 or have some local SAN storage for a different cost)<p>Any other thoughts?",1221076969
300708,comment,300485,300600,0,0,gaius,,,"Shhh, don't tell anyone :-D<p>On a more serious note yes, but again that's a cultural thing. Languages like Erlang (and OCaml, and Haskell, and...), you spend more time thinking than typing. You don't (need to) write much code, and if you think of a better way you might completely overwrite yesterday's work. You might deliver a huge chunk of functionality in a couple of pages of code that took weeks of thought, but that looks like it was typed in a day (I have been in that situation).  Functional languages don't fit big-company management comfortably. They don't look like ""work"" in the sense that most IT organizations are used to. Java will be with us for a long time.",1221076968
300707,comment,300583,300662,0,0,biohacker42,,,"If you read coding horror you are a programming GOD!<p>Alternatively, unless you instantly grok the crufties code only to instantly transform it into the best code ever, and then go home and do some more programming on the side, and then you're also a social butterfly who is never ever on the market and never has to stoop so low as to send out resumes to get a job - well then you're just a VB drone loser.<p>I myself don't know where I fit in, because while I read lots of programming and cs related stuff, I can <i>not</i> do the 8+2 hrs thing, and I got my last job by sending out resumes. So I must be somewhere between god and total loser.",1221076915
300706,comment,299965,299975,0,0,ca98am79,,,"thanks - I ended up using something like this",1221076910
300705,comment,300583,300670,0,0,schtog,,,"- From Peopleware, Productive Projects and Teams by Tom De Marco and Timothy Lister (2nd Ed, page 12)",1221076814
