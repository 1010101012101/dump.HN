ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
107736,comment,107683,107731,0,0,greendestiny,,,"Yeah I know the lisp trees thing is something that gets said a lot, but I really don't see how inexplicable the transformation of other languages into trees is. Ultimately in lisp you have the most flexibility in manipulating the tree, but a little study in compilers and formal languages and its obvious that all languages are describing trees.<p>Objectively easier to read? Thats a strange road to go down. Theres no reason that languages with grammars that generate strange and wacky trees might not suit a human's ability to describe formal solutions better. I think the reason people find languages like C easier to understand is all in the state handling anyway.",1201854881
107735,story,,,2,0,ggrot,"The fact that your project runs on language X is not a competitive advantage.",http://gregable.com/2008/02/why-language-wars.html,,1201854716
107734,comment,107733,107733,0,0,davidw,,,"Obviously doesn't apply to me, but it looks like a cool opportunity for girl geeks, and guys can go if a woman brings them along.",1201854519
107733,story,,,3,1,davidw,"Bay Area Girl Geek Dinner",http://www.emilychang.com/go/ehub/story/bay-area-girl-geek-dinner/,,1201854431
107732,comment,107643,107643,0,0,ubudesign,,,"you could also run vnc server on that windows inside the vmware server or on another physical machine.",1201854139
107731,comment,107683,107723,0,0,curi,,,"in lisp you write trees.<p>in other languages, you write weird things that get turned into trees, seemingly by magic.<p>other languages <i>seem</i> easier to understand, to most people. this is because they have a lot of experience with all that magic -- it has become a tradition. if you're better at normal languages, go ahead and use them. i don't care. but they are not objectively easier to read, they are much harder and more complicated.",1201854005
107730,comment,107468,107694,0,0,BrandonM,,,"Awesome, thanks. I'll check it out.",1201853653
107729,comment,107683,107704,0,0,BrandonM,,,"For me, the Python module system and documentation wins hands down. I keep telling myself that at some point, I'm going to dive into Lisp and never look back, but Python's module system is very easy to use, and this lends itself to a very nice standard library as well as easy-to-install libraries. Not to mention that every module is well-documented often with real world examples a Google search away.<p>With Lisp, I have honestly tried to find good documentation on its module system, and I have tried my best to understand the workings of ASDF, but when it comes down to it, I just don't have the time to muck around with stuff that is so much more difficult. The simple fact is that if I need to get something done, it's going to be in Python for the time being, and who knows when I'll get to the point where I'm not coding against a deadline, the point where I'll be able to waste some time really learning Lisp.",1201853426
107728,comment,107647,107703,0,0,zach,,,"A lot better than using Flex, I'm going to guess.<p>Okay, seriously, here's my question to startup website developers.  Is it wise for us to spend significant time trying to avoid using tables in our often-changing layouts, in the hope that a blind user may have a slightly less confusing experience?  I'm not quite going to say YAGNI, but I will say I'm not convinced.<p>If you're serious about accessibility, good for you -- use VoiceOver or JAWS, truly check your site out.  It's a lot more laudable a goal than having your HTML perfectly pass some XHTML validator.  Otherwise, I think it's one of those things we can sensibly put on hold until after our B rounds.",1201853297
