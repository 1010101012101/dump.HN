ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
112674,comment,112215,112289,0,0,icky,,,"Already a verb (or at least a gerund):<p><a href=""http://www.google.com/search?hl=en&q=greenspunning"" rel=""nofollow"">http://www.google.com/search?hl=en&q=greenspunning</a>",1202556644
112673,comment,112129,112511,0,0,mfp,,,""" I also like the idea of an extensible grammar (and syntax too, right?)""<p>Yes, that's what I meant (you change the grammar, resulting in new syntax).<p>Some examples of what you can do with camlp4:<p><a href=""http://martin.jambon.free.fr/pa_memo.ml"" rel=""nofollow"">http://martin.jambon.free.fr/pa_memo.ml</a> allows to define memoized functions very conveniently:<p><pre><code>    (* normal *) 
    let fib = function 0 | 1 -> 1 | n -> fib (n-1) + fib (n-2)
    (* memoized *)
    let fib = memo 0 | 1 -> 1 | n -> fib (n-1) + fib (n-2)
</code></pre>
Automatic generation of<p>* typed JSON marshallers (<a href=""http://martin.jambon.free.fr/json-static.html"" rel=""nofollow"">http://martin.jambon.free.fr/json-static.html</a>)<p><pre><code>    type json mytype = Foo | Bar of int * int
    (* just add ""json"" to the type declaration to create to
       create the json_of_mytype and mytype_of_json functions *)
</code></pre>
* serialization with S-expressions (<a href=""http://www.janestcapital.com/ocaml/"" rel=""nofollow"">http://www.janestcapital.com/ocaml/</a>)<p>* pretty-printing, type-safe marshalling with structure-sharing, dynamic typing, equality... (<a href=""http://code.google.com/p/deriving/"" rel=""nofollow"">http://code.google.com/p/deriving/</a>)<p>* list comprehensions, heredocs, string interpolation, lazy pattern matching, ""do syntax"" for monads (very much like Haskell's)...<p>Here's some OCaml code that relies on a rather large syntax extension of mine which allows you to generate (or verify) SQL schemas automatically and build composable queries using a typed relational algebra (the type system ensures that all queries are valid; if you change the schema and break some queries, the compiler will tell you what's wrong --- broken queries just don't compile):<p><pre><code>   TABLE user users
     COLUMN id SERIAL AUTO PRIMARY KEY
     COLUMN name VARCHAR(64) UNIQUE
     COLUMN age INT NULLABLE INDEXED
     COLUMN password VARCHAR(64)
   END
   
   TABLE comment comments
     COLUMN id SERIAL AUTO PRIMARY KEY
     COLUMN title TEXT
     COLUMN text TEXT
     COLUMN created_at TIMESTAMPZ
     COLUMN author SERIAL FOREIGN(users, id)
   END
   
   let minors x = SELECT [User_age < (Some 18)] x
   let pauls = SELECT [User_name LIKE ""%Paul%""] users
   let young_pauls = minors pauls
</code></pre>
You can read more about this extension at <a href=""http://eigenclass.org/hiki/typed-relational-algebra-in-OCaml"" rel=""nofollow"">http://eigenclass.org/hiki/typed-relational-algebra-in-OCaml</a>",1202556440
112672,comment,110412,110669,0,0,phil,,,"I wouldn't bet on it. Like tearing down hutongs, this is about presenting a clean shiny appearance while the rest of the world is watching.",1202556054
112671,comment,112461,112598,0,0,hbien,,,"In terms of development, maybe it's not better than what you have on the desktop.  If you're really productive in your environment (terminal + vim OR IDE), then it definitely doesn't make sense to develop on their JS editor.<p>But in terms of hosting, it's a lot cheaper to host your Rails app using Heroku than getting a VPS.  Both money-wise and time-wise.<p>I only listened a few minutes into the podcast, but I think one of the founders mentioned that at its current state Heroku is great for people who want to make apps for their friends, like 1-20 people.  But these developers don't want to buy a VPS plan and manage the application themselves.<p>Their future goal is probably to get hosting for apps with 1000+ users, so they can make some money.<p>But you're right, for developing an app, I'll probably stick to the desktop.  Maybe one day Heroku will get so slick that we can do all development straight from the browser and hit ""Publish"", like Weebly.",1202555715
112670,story,,,5,3,alaskamiller,"Twitter-proxy: Any Interest?",http://assetbar.wordpress.com/2008/02/08/twitter-proxy-any-interest/,,1202555573
112669,comment,112665,112665,0,0,rms,,,"digitalpoint.com is mostly good enough... it at least got me a free $50 for MS ads when I spend $5.",1202555228
