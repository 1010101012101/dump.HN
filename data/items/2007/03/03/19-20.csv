ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
2033,story,,,3,17,amichail,"Why finding a partner is hard!",,,1172951985
2032,story,,,3,1,nostrademons,"The 18 Mistakes that Kill Startups",http://paulgraham.com/startupmistakes.html,,1172951855
2031,comment,1987,2006,0,0,nostrademons,,,"Well, remember that he's selling bugtracking software. ;-) Many of Joel's articles are very good, but remember that they are designed to sell his product.<p>You do need *some* sort of bug tracking system, but I've never found one that I like.  I've used Bugzilla, Mantis, FogBugz (Joel's product) and reported on Jira, Sun's bugtracking system, and SourceForge, but the only one I halfway-liked was Jira.  At work, I use pencil & paper along with fixing bugs as they're reported.  For my startup, I'll likely roll up some custom solution, as I haven't seen anything that comes close to meeting our requirements.  I'll take a second look at what's out there first, though - I've heard good things about Trac, and maybe someone somewhere has come up with a decent bugtracker.",1172951003
2030,comment,1987,2009,0,0,nostrademons,,,"Multiple founders != multiple programmers.<p>Many startups with multiple founders have one founder do most or all of the programming work.  As I understand it, Reddit is like this: Steve does the coding while Alexis does all the other miscellaneous work.  Sun had 4 founders, but Bill Joy did the programming.  AFAIK, DHH did most of the initial programming for 37signals, though they obviously have more now.  Their advice (in ""Getting Real"") was to start with one programmer, one designer, and one person who could do swing work - a little server admin here, a little CSS work there.  This also squares with Fred Brooks's advice in Mythical Man Month - a programming team should be organized like a surgical team, with one lead programmer and 5-7 people running support so he has no distractions.<p>There're some big advantages to this structure, mostly involving communications overhead.  With one programmer, you don't need to coordinate who does what.  You don't need to explain what needs to be done.  You don't waste time fixing broken interfaces.  You can move quickly and add whatever features the customers want.<p>I've worked for two startups that have both suffered by starting with a team of 4-5 (1 founder + 3-4 employees) instead of a single founder.  It's very hard to get everyone on the same page on the requirements, particularly if the employees don't know the domain well.  And when startups change direction frequently, multi-programmers tend to get demoralized (because the switching costs are higher and comparatively more effort went into the previous product), while single tech leads just throw away the old code and write whatever they need.",1172950537
2029,story,,,4,1,Elfan,"Software and craftsmanship",http://moishelettvin.blogspot.com/2006/12/software-and-craftsmanship_05.html,,1172949890
2028,comment,1960,1960,0,0,akkartik,,,"Extending Zawinski's law [1] to the web: Every website expands until it becomes a social network. Websites that cannot so expand are replaced by ones which can.<p>[1] http://en.wikipedia.org/wiki/Zawinski's_Law_of_Software_Envelopment",1172949474
2027,story,,,7,6,danw,"How will this software get my users laid?",http://valleywag.com/tech/romance/how-will-this-software-get-my-users-laid-heres-how-233037.php,,1172948983
2026,comment,1981,2024,0,0,danielha,,,"We are using Django for our project and it does have user-created content.<p>I can see why Django is great for publishing content (it as a newspaper app, as you mentioned), but I haven't found anything compelling that puts TurboGears over Django for user contributions. Do you have any specific examples?",1172948590
