ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
2723115,story,,,2,0,chailatte,"Google's antitrust defense sounds like Microsoft's",http://www.betanews.com/joewilcox/article/Googles-antitrust-defense-sounds-like-Microsofts/1309021869,,1309669119
2723114,comment,2722504,2722651,1,0,gtani,,,"<i>Learn You</i> is terrific.  Besides that, Conrad Barski and Hal Daume's tutorials, the stuff that the Wash U students did (see Haskell Wiki), and Hutton's little green book.<p><a href=""http://www.haskell.org/haskellwiki/Tutorials"" rel=""nofollow"">http://www.haskell.org/haskellwiki/Tutorials</a>",1309669100
2723113,comment,2722833,2722899,18,0,mkramlich,,,"I think the level of self-promotion and/or other-people-promoting-him is the key factor. Not really the supposed productivity. I know many people who get a lot done, both for day jobs, for contract work, as a hobby, as entreprenurial ventures, etc. but 99.9% never hits the front page of HN on a regular basis like Zed's activity seems to. Which doesn't lessen what he does and his skills, but it does pull back the camera a bit to put it into a broader context. Not everyone self-promotes to the same extent as Mr. Shaw, or has other people promote them.",1309669093
2723112,story,,,3,3,chailatte,"The Google Monopoly Needs To Be Broken Up",http://www.michaelcropper.co.uk/2011/06/the-google-monopoly-needs-to-be-broken-up/,,1309669076
2723111,comment,2722833,2722833,3,0,rgrieselhuber,,,"My wish came true. :-)<p><a href=""http://apps.ycombinator.com/item?id=1727617"" rel=""nofollow"">http://apps.ycombinator.com/item?id=1727617</a>",1309669055
2723110,comment,2723001,2723001,2,0,geuis,,,"The 8 hour visualization is fascinating to watch. <a href=""http://video.google.com/videoplay?docid=4775386042852459808"" rel=""nofollow"">http://video.google.com/videoplay?docid=4775386042852459808</a><p>What would it take to get this running under OS X?",1309669041
2723109,story,,,4,0,chailatte,"Several US states have begun anti-trust investigations into Google",http://www.thisislondon.co.uk/standard-business/article-23964211-google-monopoly-probe.do,,1309669033
2723108,story,,,2,0,znmeb,"Data Journalism Developer Studio  Release 1.3.2",http://borasky-research.net/2011/07/02/data-journalism-developer-studio-release-1-3-2/#.Tg_2hTUHn3U.hackernews,,1309669005
2723107,comment,2722549,2722549,0,0,cppsnob,,,"What's future is past.<p><a href=""http://en.wikipedia.org/wiki/Cyberdog"" rel=""nofollow"">http://en.wikipedia.org/wiki/Cyberdog</a>
<a href=""http://en.wikipedia.org/wiki/OpenDoc"" rel=""nofollow"">http://en.wikipedia.org/wiki/OpenDoc</a>
<a href=""http://en.wikipedia.org/wiki/Object_Linking_and_Embedding"" rel=""nofollow"">http://en.wikipedia.org/wiki/Object_Linking_and_Embedding</a>",1309669003
2723106,comment,2722825,2722825,0,0,benatkin,,,"s/clarified/fixed/<p>If you search the comment thread, the original wording is ""we think it necessary"" which should be ""we think is necessary"".<p><a href=""http://blog.dropbox.com/?p=846&updated#comment-240678381"" rel=""nofollow"">http://blog.dropbox.com/?p=846&updated#comment-240678381</a><p>I'm surprised an editor didn't catch that.",1309668995
2723105,comment,2721621,2722401,2,0,zenspunk,,,"If you're that worried, you can delete your web history and permanently opt-out of Google Analytics using Google's supplied opt-out extensions for Chrome and Firefox.<p>They allow you to do things like that (not to mention data liberation efforts), which is the point the parent was making.",1309668951
2723104,comment,2722833,2722950,0,0,__rkaup__,,,"I'm amused you took the time to put in 2pi there.",1309668905
2723103,comment,2722039,2722662,4,0,trevelyan,,,"If you don't think Wikileaks constitutes free speech, I'd be more curious how you define it yourself.",1309668882
2723102,comment,2722549,2722549,4,0,skybrian,,,"Nice idea, but surely you can't introduce a new cross-site communications protocol without discussing the security implications?",1309668828
2723101,comment,2722383,2722896,3,0,palish,,,"You're very wise.  Thank you for sharing.<p>It's satisfying that you were able to say ""There's a good chance you're wrong, here's why"" and then be confirmed by testing.  You obviously have a great deal of experience with low-level programming; relatively rare, nowadays.  Mine comes from graphics programming.<p>Also, which article are you referring to?  Any keywords I can search for?",1309668716
2723100,comment,2722833,2722958,2,0,__rkaup__,,,"You'd still need to explain pointer arithmetic somehow.",1309668677
2723099,story,,,29,13,razin,"Google+: Why I Think Mom and Dad Will Use It",http://www.jeanhsu.com/2011/07/02/google-why-i-think-mom-and-dad-will-use-it/,,1309668651
2723098,story,,,3,3,suneliot,"Googles Pi In The Face",http://techcrunch.com/2011/07/02/3-point-14159265/,,1309668411
2723097,comment,2722383,2722748,5,0,palish,,,"Really?  How would dereferencing a NULL pointer cause ""some really nasty crashes""?<p>Yes, it will crash.  That is a Good Thing(tm).<p>1) It is extremely unlikely that malloc() will ever return NULL (on a PC).  This is due to virtual memory.  If you manage to allocate more than 1.5GB of memory, then yes.  Otherwise no.<p>2) Even if malloc() does return NULL, then NULL checking it is pointless because program operation cannot realistically continue.  You <i>need</i> that memory.  The best and cleanest solution is to crash.  You will get a call trace leading to the exact point of failure (which you won't get if you do NULL checks + continue program execution).  Also, as far as I know, it's almost impossible for a dereferenced NULL pointer to be a security vulnerability, unlike e.g. a buffer overrun.<p>In summary, just let it crash.  There isn't any reason not to, <i>unless</i> you're developing a ""third-party library"" (e.g. you're a Lua developer, etc) and you want to leave the decision of whether to crash to the programmers using your code.",1309668399
2723096,comment,2722833,2723090,2,0,alf,,,"Right, agreed. :)",1309668375
2723095,story,,,4,1,davidedicillo,"Here's How Square Plans To Spend $100 Million",http://www.fastcompany.com/1764469/square-how-to-spend-100-million?partner=rss&utm_source=feedburner&utm_medium=feed&utm_campaign=Feed%3A+fastcompany%2Fheadlines+%28Fast+Company+Headlines%29,,1309668370
2723094,comment,2721812,2722442,1,0,dmoney,,,"The advantage is probably just that it's owned by NASA rather than by a private entity.  This could allow it to be used for sensitive or classified applications, or for space related applications (which could be classed as munitions, which [I'm not a lawyer, but i'm guessing...] means putting them on AWS could count as ""exporting"" them).",1309668347
2723093,comment,2722413,2722625,1,0,computator,,,"> I'm also just aesthetically opposed to descriptive names.<p>In <i>your</i> case, I think a coined name is OK because any alternative that I can think of--like ""Multi Product Installer""--sounds horribly generic. Multi Product Installer is no easier to remember than Automated Setup Utility, or Quick Choice and Download, or whatever.<p>By I do think that for a fast-moving market, a descriptive name (or at least a memorable one) is pretty important. Movies are great example of this. I'm convinced that some really good movies that have done badly at the box office failed because of the their names.<p>Two examples that come to mind are ""Waking Ned Devine"" and ""ffolkes"". You get no clue what the movies are about from these titles. Are they comedies or action movies? Who knows. It would be so much better for these films to have been called, say, ""Get the Dead Guy's Fortune"" and ""North Sea Hijack"", respectively.<p>I've personally chosen movies to watch based <i>solely</i> on the title (when the film I came to actually see was sold out, for example), so there's no denying that it can have a big effect when you need to make choices quickly. In this respect, ""Facebook"" makes sense, especially in a super-fast arena like social media software.<p>""Google"", by the way, is not a counter-example to my point because the name is memorable (by association with googol) to techie people who would have been the early users.",1309668243
2723092,comment,2722833,2723068,3,0,rpearl,,,"That's nothing to do with C as a language, but rather to do with relevant APIs, which can be difficult to read at times.",1309668182
2723091,comment,2722534,2722534,1,0,p858snake,,,"Didn't some one post something similar last year(?) and it ended up they were getting chucked into the wrong server pool or something and someone at google fixed that?",1309668145
2723090,comment,2722833,2723071,10,0,hp,,,"Maybe ""low level"" is a bit ambiguous.<p>I certainly agree that C is most appropriate when you are ""low in the stack,"" just above the operating system and maybe implementing something like a virtual machine. I don't make a habit of writing stuff in C for no reason and the vast majority of programming these days isn't and shouldn't be in C (or C++ for that matter).<p>However, ""low in the stack"" is different from ""low level"" like ""I refuse to use modern practices"" or ""I get to omit half the letters from my function names."" You can be coding an on-the-metal kind of thing and still think about it in a high level way.",1309667998
2723089,story,,,148,47,16s,"TrueCrypt Discrepancy",http://16s.us/TCHunt/discrepancy/,,1309667969
2723088,story,,,1,0,gourneau,"ZEN Audio Player A gorgeous single-song HTML5 Audio Player",http://lab.simurai.com/ui/zen-player/,,1309667935
2723087,comment,2722413,2722916,1,0,dilap,,,"For one, they tried hard to support every possible video format for upload (as opposed to, e.g., Google Video, which was much pickier about what it would accept). In general, they nailed the ""just make it work"" factor.<p>(Subjectively, I remember YouTube being the first site that made me think, ""wow! video on the internet! it works!"". Ironically enough, this is no longer really true -- half the time YT starts buffering part way through the video (sometimes never to go finish w/o a full page refresh), & the other half the time you get a disruptive pop-up covering 20% of the screen. Bah.)",1309667932
2723086,story,,,3,0,aorshan,"Map of the World Drawn Entirely Using Facebook Connections",http://www.geekosystem.com/facebook-connection-world-map/,,1309667932
2723085,story,,,1,0,sakabet555,"  ",http://www.gclubonline.com/GoodService.html,,1309667764
2723084,comment,2722833,2723075,10,0,hp,,,"Agreed, but it's still sort of a weird case, I think.
The considerations related to things like memory allocation, performance, concurrency, internationalization, security, IO, etc. are pretty different in the kernel.",1309667746
2723083,comment,2722833,2722833,16,0,JoshTriplett,,,"When I first learned C, I did so under DOS, an environment in which you could declare a pointer to video memory, make a magic call, and start drawing graphics.  I found that a memorable way to learn pointers.  Sadly, doing that in the modern world requires quite a bit more setup.",1309667697
2723082,story,,,2,0,ajkessler,"Hacking Hollywood",http://www.ajkesslerblog.com/hacking-hollywood/,,1309667595
2723081,comment,2720363,2721587,1,0,bzbarsky,,,"""Maybe"".  You still have to go through and convert lone surrogates to the replacement char.",1309667479
2723080,comment,2722833,2722908,6,0,JoshTriplett,,,"Personally, I hope that this book will work for people who don't already know a programming language.  C seems like a great first language to learn if only because (if taught well) it exposes a large number of the underlying details of how programs actually run on a system.",1309667410
2723079,comment,2722833,2723016,3,0,gregjor,,,"After arguing I read the preface to Zed's book. He wrote ""LCTHW will <i>not</i> be for beginners, but for people who have at least read LPTHW or know one other programming language."" It seems LCTHW addresses the same audience as K&R after all.",1309667381
2723078,comment,2722833,2722948,2,0,__rkaup__,,,"Maybe he's referring to how identifiers with leading underscores followed by a capital letter are reserved in C++ (I'm not sure if they are in C)...",1309667359
2723077,story,,,3,1,timf,"[Global Warming] Skeptics: Real or Fake?",http://tamino.wordpress.com/2011/06/28/skeptics-real-or-fake/,,1309667318
2723076,comment,2722768,2722824,1,0,wisty,,,"Fish stocks is the next challenge, now that global warming is being dealt.",1309667302
2723075,comment,2722833,2723055,18,0,JoshTriplett,,,"The Linux kernel, weird requirements and all, actually represents an excellent example of using C well.  It has high-level functions, objects, classes, abstract data types, interfaces, and many other useful abstractions to make C almost comfortable.",1309667300
2723074,comment,2722504,2722827,7,0,sedev,,,"Or people with screen-readers, or w3m, or actual security concerns. There are lots of sites where JS is an essential part of their functionality! It is a feature when these sites break with JS off (even though it is <i>best</i> when they provide alternate functionality in that case - GMail is a great example). But if you are, like this prat, <i>serving text,</i> if you are presenting a fucking blog, then <i>completely breaking</i> with JS off is, again, evidence that you are a Bad Programmer and a Bad Person.",1309667186
2723073,comment,2722325,2722373,2,0,william42,,,"That's because Google+ has only been <i>released</i> to industry insiders and participants, if I remember correctly.",1309667171
2723072,comment,2722833,2722894,2,0,JoshTriplett,,,"I've watched and spoken to a large number of beginning C and C++ programmers (and beginning programmers in general) during their first terms of programming in university.  I've noticed a few common problems, and I think they all stem from not understanding the details of how a program runs on a real machine:<p>- The concept of a variable, and variables changing over time, seems quite difficult for people to grasp even when explained a few different ways.  ""x = 5"" followed by ""x = 12"" proves quite mystifying, and ""x = x + 1"" even more so.  People seem to have the most success with the idea that declaring a variable ""int x"" creates a location x which can hold an int, and you can put things in that location.<p>- Pointers actually don't seem to trip that many people up initially, once they get to that point.  However, I don't think people actually understand exactly what they do, so much as memorize the rules for dealing with them.  The same idea of a location to put something applies here too.<p>- Any case where the same function gets called more than once often ends up tripping people up; this applies particularly to recursion, but it can happen even when just calling the same function several times.  In particular, this often interacts badly with people's understandings of variables.  People need some understanding of scope.<p>- Combining several of the above, it would help to have clear explanations of the interactions between pointers, locations, and functions.  Bonus for explaining what goes horribly wrong if a pointer refers to something that goes out of scope.  That concept requires understanding several different pieces of C and putting them together.",1309667157
2723071,comment,2722833,2723055,4,0,alf,,,"C shouldn't be used for anything other than low level programming these days.  There are other higher level programming language that would make your job a whole lot easier.  Some programmers, like me, are stuck maintaining legacy C application code, but I wouldn't wish that fate for new programmers looking to learn C as another tool in the belt.",1309667113
2723070,comment,2722039,2722559,2,0,malkia,,,"I think in US they can refuse individuals, but IANAL.",1309667008
2723069,comment,2723014,2723014,2,0,martey,,,"How is this different from similar projects like <a href=""http://www.govtrack.us/"" rel=""nofollow"">http://www.govtrack.us/</a> ?",1309666986
2723068,comment,2722833,2722875,2,0,nhebb,,,"> Do people really think C is some mysterious, inscrutable language?<p>Yes, I do. But it's not because of the language itself. It's trying to figure out what you can do with it after you grasp the fundamentals. I taught myself C using K&R a long time ago, but I never did anything with it. At the time I figured there were two paths I could progress along - UI related (e.g., a Windows app) or systems related (something Unixy). Both paths presented large hurdles. Nothing insurmountable, but I wasn't a programmer at the time - just doing it for my own edification. I always thought it would be nice if there was a second level book that took you from post-basics to writing something useful.",1309666888
2723067,comment,2722325,2722544,4,0,wisty,,,"I'll wager you that Facebook may have <i>more</i> active users, but Google+ will have more <i>active</i> users and perhaps more <i>activity</i>.<p>I'm betting that Google+ will get more than just the early adopters.",1309666849
2723065,comment,2722413,2722706,5,0,sien,,,Onestall.,1309666826
2723064,comment,2722383,2722383,1,0,udoprog,,,"This is an epic introduction into virtual machines for the brave C coder. Very neat and clean, thank you.",1309666630
2723063,comment,2722790,2722854,1,0,killerswan,,,"With all the stuff on circuits, state machines, and probability, this course may be easy to sell EEs on teaching and taking.",1309666621
2723062,comment,2722383,2722674,4,0,Retric,,,"No, at best you could do a binary search using if's to simulate a lookup table, but you are going to trash the pipeline on a modern CPU if you want a reasonably complex lookup table you are much better off with something like:<p>float lookup_Sine(x){
int I = 100 * (x mod 360);
return sine_table(I);
}<p>Anyway, for a modern CPU hitting main memory takes a lot of cycles. So you need something a lot more complex than a simple trig function to make it worth it.",1309666594
2723061,comment,2722702,2722702,1,0,revti,,,"I think best online payment is via ""Paypal"" and lot of free lancer site pay via paypal.",1309666562
2723060,comment,2722549,2722792,1,0,gbhn,,,"A really key part of intents is that they're locally resolved. For centrally-resolved links, urls already work really well with the DNS system.<p>Of course, features that prevent abuse will be a key support element for browsers. That's part of the rationale behind the choice of a pop-up window in Paul's demo for instance -- in-page elements have some vulnerabilities that pop-ups don't.",1309666541
2723059,story,,,1,0,babanet,"SIM Information System, Check Total Sim Get Through Your CNIC Number",http://www.nowtips.com/2009/12/25/sim-information-system-check-total-sim-get-through-your-cnic-number/,,1309666466
2723058,comment,2722833,2722833,-3,0,helwr,,,"I learned C the hard way by taking this course, motherfucker  <a href=""http://www.cs.columbia.edu/~jae/cs3157/2009-1/syllabus.html"" rel=""nofollow"">http://www.cs.columbia.edu/~jae/cs3157/2009-1/syllabus.html</a>  <a href=""http://www.cs.columbia.edu/~jae/papers/3157-paper-v2.2-camera-final.pdf"" rel=""nofollow"">http://www.cs.columbia.edu/~jae/papers/3157-paper-v2.2-camer...</a>",1309666426
2723057,comment,2722549,2722853,2,0,gbhn,,,"I've talked with Paul a bit about this. We've also mocked up using link tags, which carry a bit more metadata. Probably the most promising approach, though, is using other webapp manifest ideas to bundle intent provider installation with that. (a la <a href=""http://lwn.net/Articles/419151/"" rel=""nofollow"">http://lwn.net/Articles/419151/</a>)",1309666372
2723056,comment,2722790,2722790,2,0,joelhaus,,,"Some additional info I turned up on the MIT site for this course:<p>If you don't like Scribd: <a href=""http://mit.edu/6.01/mercurial/spring11/www/handouts/readings.pdf"" rel=""nofollow"">http://mit.edu/6.01/mercurial/spring11/www/handouts/readings...</a><p><i>Think Python, How to Think Like a Computer Scientist</i>: <a href=""http://www.greenteapress.com/thinkpython/thinkpython.pdf"" rel=""nofollow"">http://www.greenteapress.com/thinkpython/thinkpython.pdf</a><p>Whiteboard Demos [videos]: <a href=""http://alawi.csail.mit.edu/~alawi/as3/"" rel=""nofollow"">http://alawi.csail.mit.edu/~alawi/as3/</a>",1309666364
2723055,comment,2722833,2722833,62,0,hp,,,"Ohloh says I've changed at least half million lines of C code (<a href=""https://www.ohloh.net/accounts/rhp/positions/total"" rel=""nofollow"">https://www.ohloh.net/accounts/rhp/positions/total</a>)
Play me a tiny violin ;-)<p>What kinda bugs me is that whenever people go to teach C, they make out like it _has_ to be a low-level exercise, as if writing in C suddenly means you can't use abstract data types or object-oriented style or name your functions properly or have Unicode support.<p>For example, people teach libc string APIs like scanf() and strtok(), which should almost never be used. (See <a href=""http://vsftpd.beasts.org/IMPLEMENTATION"" rel=""nofollow"">http://vsftpd.beasts.org/IMPLEMENTATION</a> for one take.) Instead, use
<a href=""http://git.gnome.org/browse/glib/tree/glib/gstring.h"" rel=""nofollow"">http://git.gnome.org/browse/glib/tree/glib/gstring.h</a> or 
write your own like <a href=""http://cgit.freedesktop.org/dbus/dbus/tree/dbus/dbus-string.h"" rel=""nofollow"">http://cgit.freedesktop.org/dbus/dbus/tree/dbus/dbus-string....</a><p>If you're going to display user-visible text, you are pretty much required to link to GLib or another Unicode library, since libc doesn't have what you need (unless you want to use the old pre-unicode multi-encoding insanity).<p>Don't use fgets() and other pain like that, use g_file_get_contents() perhaps, or another library.
(g_file_get_contents is in <a href=""http://developer.gnome.org/glib/stable/glib-File-Utilities.html"" rel=""nofollow"">http://developer.gnome.org/glib/stable/glib-File-Utilities.h...</a>)<p>You need help from a library other than libc to deal with portability, internationalization, security, and general sanity.<p>Maybe more importantly, a library will show you examples that in C you can still use all the good design principles you'd use in a higher-level language.<p>I told someone to ""use a string class"" in C recently for example, and they said ""C doesn't have classes"" - this is confusing syntax with concepts.<p>C requires more typing and more worrying about memory management, that's all. It doesn't mean that all the best practices you know can be tossed.<p>There's a whole lot to be said about how to write large, maintainable codebases in C, and it can even be done. It's not something I would or do choose to do these days, but it can be done.<p>One other thought, two of the highest-profile C codebases, the Linux kernel and the C library, have extremely weird requirements that simply do not apply to most regular programs. However, a lot of people working in C or writing about C have experience with those codebases, and it shows.",1309666360
2723054,comment,2722833,2723002,3,0,JoshTriplett,,,"The original lint tools seem entirely superseded by modern compiler warnings.  On the other hand, a whole new class of static analysis tools exist now, such as Sparse, Coccinelle, Frama-C, and in the proprietary world Coverity.",1309666348
2723053,comment,2722413,2722720,5,0,smanek,,,"You might be right - but you can't logically draw the conclusion that 'lots of people remember the name' based on the evidence presented.<p>The is <i>no</i> correlation between words people end up reaching your site by, and words that they are trying to find your site by.<p>Consider the world where 10M people are trying to find Ninite, but forget the name and unsuccessfully google ""keep multiple programs up to date"". Similarly, 1M people google for some variation of Ninite, and all find your site. Your referrer logs would show that all users reaching your site remembered your name, even though you're throwing away 90% of your potential user base.<p>That's like trying to disprove the hypothesis: ""You don't network enough, so not enough people know you"" with the evidence ""99% of the calls I get are from people that know me, so clearly a lot of people know me"".",1309666312
2723052,story,,,3,0,MaysonL,"How Google+ Transformed Picasa Web",http://googlesystem.blogspot.com/2011/07/how-google-transformed-picasa-web.html,,1309666297
2723051,comment,2722833,2722913,7,0,JoshTriplett,,,"The negative connotations of the word aside, it seems perfectly reasonable to call C dangerous.  Without that ""danger"", you couldn't write an OS kernel, a language runtime, or various other low-level code we need on our systems; on the other hand, when writing higher-level code that doesn't need that level of raw access, it seems useful to remove the possibility of a broad class of mistakes.<p>See also Rusty Russell's rules about ""easy to use versus hard to misuse"".  I find C easy enough to use, but also easy to misuse.",1309666232
2723050,comment,2722833,2722875,1,0,udoprog,,,"I haven't perceived that people think C is significantly scary (or evil). There are however many compelling reasons not too choose C in the present RAD/Web/Cloud/Solution Business world.",1309666200
2723049,story,,,1,0,Jackther,"10 examples of grep command in Unix and Linux",http://javarevisited.blogspot.com/2011/06/10-examples-of-grep-command-in-unix-and.html#.Tg_rDV-rn4k.hackernews,,1309666107
2723048,comment,2722383,2723041,1,0,sehugg,,,"Creepy man. Are you my clone or something? :)",1309666050
2723047,story,,,1,0,yalagoal,"    ",http://yalagoal.blogspot.com/2011/07/372011_7857.html,"               28       (  )  3/7/2011   16:00                   ",1309666030
2723046,comment,2722833,2723025,2,0,bad_wolf,,,"If 19 is represented differently in binary on your platform than (leading zeros)10011, you are already quite screwed.<p>You might be thinking of character representation for the later example.",1309665995
2723045,comment,2722147,2722280,1,0,killerswan,,,"Exactly.  Right now we're only beginning to explore this stuff.",1309665968
2723043,comment,2721499,2721857,3,0,joshhart,,,"Check out Spark, a framework for writing parallel machine learning jobs (among lots of other things) on top of hadoop. <a href=""http://www.cs.berkeley.edu/~matei/spark/"" rel=""nofollow"">http://www.cs.berkeley.edu/~matei/spark/</a><p>They need to keep data in memory and shuffle it around really fast. To do so, they use a bittorrent-variant algorithm. I think this is the paper that describes it - <a href=""http://www.google.com/url?sa=t&source=web&cd=7&sqi=2&ved=0CEgQFjAG&url=http%3A%2F%2Fwww.cs.berkeley.edu%2F~agearh%2Fcs267.sp10%2Ffiles%2Fmosharaf-spark-bc-report-spring10.pdf&rct=j&q=spark%20mosharaf&ei=GeoPToGgE4-esQPdwtSoDg&usg=AFQjCNG6sVV12DfLM3iNBhLs6F66toBCwg&sig2=n9opoR0rGbQR0L0KShgZtw&cad=rja"" rel=""nofollow"">http://www.google.com/url?sa=t&source=web&cd=7&s...</a>",1309665920
2723042,story,,,1,0,javabuddy,"What is the difference between Enumeration and Iterator?",http://javarevisited.blogspot.com/2010/10/what-is-difference-between-enumeration.html#.Tg_qYTMkwAU.hackernews,,1309665904
2723041,comment,2722383,2722383,1,0,zwieback,,,"Made me think of Sweet16, the 16 bit virtual machine Woz put into the Apple ][ ROM.",1309665810
2723040,comment,2722383,2722759,1,0,jws,,,"I think subroutines would go something like:<p><pre><code>   PUSH the_address_you_want_to_come_back_to
   JMP  some_other_spot
 the_address_you_want_to_come_back_to:
   BLAH
   BLAH
   ...
 some_other_spot:
   BLAH
   BLAH
   POP some_scratch_address
   JMP some_scratch_address
 </code></pre>
So yes, JSR is two opcodes and RTS is also two opcodes, but it works.",1309665752
2723039,comment,2722383,2722383,4,0,sehugg,,,"This made me think back to a tiny virtual machine that took less than 300 lines -- in fact it took less than 500 bytes of code (thanks to the Woz): <a href=""http://en.wikipedia.org/wiki/SWEET16"" rel=""nofollow"">http://en.wikipedia.org/wiki/SWEET16</a><p>Aw, heck, let's get to the meat of it: <a href=""http://www.6502.org/source/interpreters/sweet16.htm"" rel=""nofollow"">http://www.6502.org/source/interpreters/sweet16.htm</a>",1309665719
2723038,comment,2722833,2723016,5,0,gregjor,,,"I knew time-shared BASIC before learning C in 1978. I was definitely a beginning programmer then, still in high school. Many (probably most) of the programmers I know from the same era learned programming from books that would be dismissed today as too hard for beginners. In the preface to the first edition Kernighan and Ritchie wrote: ""This book is not an introductory programming manual; it assumes some familiarity with basic programming concepts like variables, assignment statements, loops, and functions. Nonetheless a novice programmer should be able to read along and pick up the language, although access to a more knowledgeable colleague will help."" Of course that was before the internet, when access to a ""more knowledgeable colleague"" was harder to come by. In 1978 the only other languages someone would know were Fortran, BASIC, COBOL, Pascal, assembly language, etc.<p>Chapter 1, A Tutorial Introduction starts at the same place Zed's book starts: hello world. Looking at it now I don't see any reason my 13-year-old son (who knows a very little bit of Python) couldn't learn C from K&R with me explaining things here and there -- the same way I learned C. The recursive descent parser doesn't come up until the end of chapter 5 (out of 8), right after quicksort is implemented with pointers to functions. By then the reader has built up some skills and presumably developed enough curiosity to refer to other books for more explanation of sorting and parsers. For me those were Knuth's ""The Art of Computer Programming,"" especially the third volume with all of the great example code which I busily translated to C.<p>If you think K&R is too hard for beginners consider how many programmers learned programming from the badly-typeset and somewhat inscrutable ""Pascal User Manual and Report"" (1974). That was the programming 101 text used at the local university when I was there.",1309665688
2723037,comment,2722656,2722656,6,0,chicagobob,,,"Yes, but this talk was uploaded to youtube 8 months ago.",1309665679
2723036,story,,,2,0,netaddict,"Zyngas Facebook Reliance Spooks Some Investors",http://www.bloomberg.com/news/2011-07-01/zynga-will-raise-1-billion-in-ipo-letting-investors-bet-on-virtual-goods.html,,1309665624
