ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
91817,story,,,3,0,iamwil,"Don't complain about the game. Change the game you're playing.",http://www.slash7.com/articles/2007/11/30/don-t-complain-about-the-game-change-it/,,1198273797
91816,story,,,1,0,seren6ipity,"Web application that lets you brainstorm online",http://www.bubbl.us/,,1198273497
91815,comment,91575,91633,0,0,thomasswift,,,"When the comment above this is what I thought of, but didn't post it, I thought it didn't 'add' to the conversation, but whatever, I don't know the source of this saying is but it reminds me of the hitchhiker in Something about Mary. <p>Hitchhiker: Step into my office. \nTed: Why? \nHitchhiker: 'Cause you're f<i></i>*in' fired!",1198273417
91814,story,,,28,12,luccastera,"Ask 37signals: Numbers?",http://www.37signals.com/svn/posts/749-ask-37signals-numbers,,1198272996
91813,comment,91140,91264,0,0,qaexl,,,"I have not worked with Java much. I have, however, worked with Pascal, C, Objective-C, Perl, PHP, and Ruby. When the Google Android SDK came out, I downloaded Eclipse and its plugin and worked  through the tutorials. Having been working with Ruby on Rails for nearly the past two years, it was a shocker at the amount of crap and copy-and-paste I had to do to get it working.<p>And that's with the tutorial crowing about how the SDK has tools to help you save time.<p>For example, in the SDK, you define resources in an XML file. The IDE/Android plugin will automatically build a Java  file for you out of the XML file. This lets you reference the the code in there. And sure, the shift-ctrl-O to organize the library import is nice ... it is just that I never had to do that with Rails. And adding event callbacks via anonymous classes? It is incredibly awkward. <p>In my brief excursion into Java, I think the zinger, ""Typically, when attacking Java (the most common sport in the software world today) people will pretend it has disabilities it doesn't have."" is grossly misinformed. The examples of System.out.println(""output here""); or the for loop example is trivial compared to the power of Ruby's eigenclasses and runtime code rewriting capabilities. While working my way through that tutorial, I kept thinking to myself, ""I really should not have to deal with this crap.""  <p>When I was a teenager, I spent too much time coding with LPC, using the MudOS platform. This was before the Ultima Online dev team started soliciting ideas from rec.games.muds. LPC uses a C-like language, had dynamic array and hash syntaxes ported from Perl 3. You could use anonymous functions (though you could not serialize it), and reflection is built into the language. The pseudo-natural-language parser in MudOS was built to take advantage of the LPC's reflection capabilities. <p>Being older now, I went back through some of the LPC libraries on a whim. I remembered those good old days with a sort of fuzzy, nostalgic glow. At least until I looked at the code. Looking at it now, I know with something as capable as Ruby, the code would not have had to twist itself in such awkward ways, lots of copy-and-pasting. (And just so you know, copy-and-paste on MudOS systems meant using the built in command-line 'ed' editor).<p>""By contrast, I have dealt with Javascript codebases that were a nightmare to work with simply because the previous guy thought it useful to graft functions onto objects (or is it ""prototypes"") at runtime. Nice feature, if you're not inheriting it...""<p>This actually tells me quite a bit why you like Java instead of Javascript. I didn't really feel Javascript was a compelling language until I saw the prototyping feature. The point is not to inherit it so much as to mixin code. It is a very different way of thinking. To me, overly-designed class heirarchies are as ugly and awkward to me as the prototype/code mixin is to you. <p>In the example of writing that game, having code mixin gives you an incredible advantage. You can create game objects by mixing in different game properties. is_immune_to_poison. is_resistant_to_fire. reflects_magic :only => :fire. You don't need to set a bitfield or try to do multi-inheritance. And you would be able to define game content using the prototyping language (Javascript, Ruby, whatever) rather than writing a (breakable) parser to load up the game object definitions.",1198272816
91812,comment,91773,91773,0,0,SwellJoe,,,"We've been fighting this for ages in Webmin/Virtualmin.<p>We've done the following:<p>XML-RPC for the core libraries in an almost unwrapped variant (you have to have knowledge of the underlying system to make use of it).  Almost no one uses this.<p>Simple command line utilities that can be called from shell scripts easily, using standard GNU argument conventions ( create-domain.pl --domain virtualmin.com --pass fooby --desc ""Cool hosting management software"" ).  Virtualmin is a system administration tool, so this is our most popular variant...all of our customers know basic shell scripting, so this is a natural fit for them.  I suspect we'll eventually make these into commands in the path to make calling them easier (right now they're in our application directory in /usr/libexec or /usr/share).<p>Remote variant of the above that can be called via simple POST or GET requests: <a href=""https://domain.tld:10000/virtual-server/remote.cgi?program=list-domains"" rel=""nofollow"">https://domain.tld:10000/virtual-server/remote.cgi?program=l...</a><p>This remote one will become RESTful at some point in the near future--I just need to add some rewriting functionality to our webserver to handle mapping /virtual-server/list-domains into the above full path.  This one is also very popular, particularly for folks who like to work in PHP.  Most of the billing apps that work with Virtualmin use this API.<p>And, we've just built a Webmin::API Perl module that finds a local Webmin installation and makes the existing API available to Perl programmers.<p>All but the last one are language agnostic, though not necessarily as tightly coupled as one might like.  I've been working on JSON providers for a lot of the menus and such in our product...and the more time I spend with it, the more it seems like an ideal mechanism for building language agnostic tools (every popular language has a JSON parser/deparser and a web client library).  Since you can ship out raw data structures in JSON, it's really quite neat.  You could build the same data structures in a wrapper for any language pretty trivially.  Though the labor involved would be sizable for a large application with a lot of data structures, it's no more intensive than any other method I can think of.  I'm working on a blog post about this as we speak, actually.<p>We've considered using Thrift, as it would also provide a language agnostic data-structure passing system.  But I think JSON is easier to deploy, easier for folks to understand and use, and a lot more popular.  The only benefit I can think of for using Thrift over JSON would be performance (maybe), so it's no longer on our radar.",1198272663
91811,story,,,24,6,nickb,"A Visual, Intuitive Guide to Imaginary Numbers",http://betterexplained.com/articles/a-visual-intuitive-guide-to-imaginary-numbers/,,1198272620
91810,story,,,7,0,nickb," One scenario for the great Hollywood strike(s) of 2007-2008",http://blog.pmarca.com/2007/12/one-scenario-fo.html,,1198272584
91809,comment,91500,91500,0,0,snorkel,,,"Fascinating reading the entire discussion thread. Andressen proposes a simple tag for embedding images and right away everyone else makes more complicated proposals. Tim Bernes-Lee himself suggests only embedding icons in links. Soon the thread devolves into a discussion on embedding all kinds of media. Think of how boring the web would be if some of the more complicated schemes in that discussion had prevailed over IMG SRC.",1198271513
91808,comment,91752,91788,0,0,jawngee,,,"The back button works on iilwy.<p>There is no need for a site like this to be done in anything other than flash.  It's meant to be a place to go to waste some time, nothing more, nothing less.",1198271240
91807,comment,91752,91766,0,0,jawngee,,,"You need to loosen up considering the majority of people using it are older than you and the people that created it have almost 10 years on you.",1198271112
91806,comment,91752,91803,0,0,nickb,,,"It's the Flash. It's horrible on a Mac.",1198270963
