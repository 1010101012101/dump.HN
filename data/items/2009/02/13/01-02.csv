ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
479303,comment,478720,478991,0,0,tptacek,,,"That's true, but the AP Stylebook says $...M means million; I too have only seen this used among the MBA types.",1234490269
479302,comment,478632,479141,0,0,patio11,,,"I realize this is probably a joke, but the relative infrequency of rating, the fact that this rating algorithm only requires information from the local context[1], and the existence of caching means that this is very, very unlikely to be the bottleneck for any site.<p>[1]  i.e. to calculate Harry Potter's rating you only need to know about Harry Potter, not every other book ever printed",1234490240
479301,comment,478284,478548,0,0,moe,,,"Well, technically it's an abomination no matter from what angle you look at it (and I <i>am</i> looking at the orbited sourcecode in another window right now).<p>To me comet is a testament to our collective failure to demand proper tools from the ""big guys"" (Mozilla, Opera, Microsoft). The term ""web 2.0"" was coined roughly 7 years ago and even long before that it has been clear that some sort of WebSocket would be incredibly useful to have in a browser.<p>Yet no single browser vendor (to my knowledge) has impemented it today.<p>Imagine where we could stand if only Firefox had a true, non-standard Socket class already. People would be using it (socket for the fox, comet-hacks for the rest) and IE market share would probably be dropping faster than ever because all the fancy new apps work better elsewhere.<p>But I digress, this is mostly whining. You have a point; the comet hack, as ugly as it is, is justified by the lack of proper alternatives. But still, an abomination on so many levels...",1234490236
479300,comment,478720,478974,0,0,bobbyi,,,"It's because M is the roman numeral for a thousand and a million is a thousand thousand. (Although it wouldn't actually be expressed that way with the real roman numeral system; MM would be two thousand).",1234490107
479299,comment,479054,479293,0,0,sounddust,,,"Yes, I wasn't trying to claim that it was one of the cashiers in this particular scheme; I said ""one of <i>these</i>"" rather than ""one of <i>the</i>.""   However, given the content of the interview and how similarly the aspects of this particular scam match up with the cashier's description, it seems likely that this scam was pulled off in a similar manner.",1234490081
479298,comment,479165,479165,0,0,rgrieselhuber,,,"I've been fascinated with Key-value databases for almost as long as my career. Interestingly enough, I first came across the concept when I did a little work with Lotus Notes, way back in 2001. My memory is a little rusty on the full capabilities of Lotus databases, so I don't know if it applies to their format, but what I miss most from other HashMaps in the cloud are aggregate functions.<p>As a developer, I'd prefer one of two innovations: relational databases that scale better across machines or k/v databases that provide a familiar mechanism for ad-hoc querying and aggregation across keys.",1234489874
479297,comment,478632,479214,0,0,patio11,,,"<i>he wrote a web service to send formal you're fired letters. To me.</i><p>You're fired, for dragging down the average amount of awesome in any room Evan is in.",1234489659
479296,comment,479054,479205,0,0,cellis,,,"I don't think he sold them with a time limit. For a simple reason: the cards had to be refreshed after they had hit their withdrawal limit. This, coupled with the fact that they all happened at the same time, strongly points to realtime complicity on both sides of the transaction, anonymous or not. What compels this guy to refresh these cards? I mean from a game theory point of view it doesn't benefit him at all...assuming both parties are indeed anon.",1234489654
479295,comment,479191,479191,0,0,aristus,,,"(Black hat on) This might be very interesting for some types of injection attacks. Instead of simply getting backlinks you could steal the pagerank of your victims without leaving a visible mark. Limited to subdomains, though.",1234489654
479294,story,,,3,0,Anon84,"University of Waterloo: Concurrency in C++ - Google Code University - Google Code",http://code.google.com/edu/submissions/waterloo-concurrent/index.html,,1234489550
479293,comment,479054,479263,0,0,tsetse-fly,,,"That interview is from May 2006.[1] We don't know if it's one of <i>the</i> cashiers and we don't know how this specific scheme played out.<p>Yes, you can often hire a cashier. Typically, this guy has some plastic and an encoder, but he doesn't have a steady supply of data to encode the cards. He's working with you because you have data to cards with a high limit and you can verify that they're valid. Most of the time, he's not even on the street. He'll encode them in the car and have someone else run up to the ATMs.<p>[1] <a href=""http://web.archive.org/web/20061115154615/http://smallworldpodcast.com/?p=391"" rel=""nofollow"">http://web.archive.org/web/20061115154615/http://smallworldp...</a>",1234489514
479292,story,,,1,0,startupnz,"Is this why you're not getting funded?",http://www.start-up.co.nz/is-this-why-you-re-not-getting-funded/,,1234489478
479291,story,,,1,0,dmoney,"Agilism vs. Complexity",http://www.noop.nl/2009/02/the-decline-and-fall-of-agilists.html,,1234489441
479290,comment,479054,479255,0,0,bobbyi,,,"ATMs in Vegas give $100 bills.",1234489299
479289,comment,478632,478874,0,0,acangiano,,,"> What makes this happen?<p>I'll answer the, perhaps rhetorical question, by defining a new law: ""Any online community that doesn't actively encourage its users to be nice, and civil, to each other is bound to become a cesspool."".",1234489126
479288,comment,479165,479264,0,0,jasonkester,,,"I see this as an area where Microsoft could pull out a big win.  Imagine if, instead of their half-baked BigTable clone that they just released, they had instead put 1000 or so brains on the problem of distributing a single SQL Server database across N machines.<p>Scaling out to a dozen DB servers that master/slave their way to scalability is no fun, but it's solved.  The problem is that you're currently required to do it yourself.  It would rock to be able to outsource that to the cloud.<p>I want to toss my ASP.NET application up into the Microsoft Cloud, where it will figure out how many webservers it needs to spread itself across and how many database servers it needs to fire up to handle the load it's seeing.  And I want it to pretend like it's a single webserver talking to a single DB instance on a single box.<p>Say what you will about Microsoft, but they have the skills to pull that off.  I sure hope they're working on it.",1234489109
479287,comment,479054,479240,0,0,sounddust,,,"ATMs in the USA almost never give out $100 bills (it's never personally happened to me in my life).   The highest I've seen is $20.",1234489027
479285,comment,479165,479275,0,0,jacobscott,,,"In addition to a cloud-hosted solution, packaged software (along the lines of Hadoop) would be great too. Not everyone wants their corporate data out in the cloud, but I suspect they would all be happy to skip writing one-off ""fix RDBMS scalability"" layers.",1234488783
479284,comment,479165,479264,0,0,russell,,,"It is a very difficult problem.  I worked for a short time for a company that was trying to solve consistency, distributed redundancy, and scalability.  It succeded consistency and redundancy, but failed because transaction chatter caused it to fail at scaling.  I think that within an application or enterprise schemas will be partitioned among types of database by whether the data must always be consistent(RDB's), are mostly readonly and can be updated leisurely (contact-lists, personnel records), and those that can afford to be inconsistent (archives, web chatter).",1234488709
479283,comment,478284,479221,0,0,moe,,,"<i>It's a case where being worse in the ""obvious"" technical architecture allows you to be better in things that actually matter: ease of access, simplicity of use, lack of installing things and wide support.</i><p>Well, ubiquity != adequacy. I understood the original author's article as a technical recommendation. He basically suggests to use HTTP for everything because he thinks ""it's technically good for everything"".<p>He made broad claims about how any HTTP based protocol will magically scale by leveraging proxies, loadbalancers and other existing infrastructure, completely ignoring the fact that many applications just don't fit into the request/response paradigm in first place.<p>RSS is a great example for the power of the internet that enables us to ""build on what we have"" without waiting for some standards body or greater authority to get moving. But it is also a text-book counterexample to his scalability and ""one size fits all"" claims. Polling just doesn't scale for these things and technically it's a step back from Usenet, that had these problems sorted out already. We went back to square 1 with RSS and are now locked up there until we get a true WebSocket and worthwhile persistent storage in browsers.",1234488699
479282,comment,479181,479181,0,0,nazgulnarsil,,,"an aside about mars plans.  what is the deal with all these inflatable habitat and self constructing memory metal ideas?  why would you build on the surface when one of the main concerns is radiation?\nthere are lots of cracks int he surface of mars.  with much less material you can simply roof off one of these and carve rooms into the walls of the fissure.  Build down dummies.",1234488679
479281,comment,478973,478999,0,0,nazgulnarsil,,,"one of the main problems with the blogosphere is that people just cite each other as evidence of legitimacy.  When I said that this story was linkbait crap someone linked me to a different site that was using the exact same video for justification.\nI don't want democracy to infect the web like it has infected science and everything else.  A lot of people agreeing with you means nothing.  It might have meant something in the ancestral environment, when convincing everyone made you more powerful within the tribe.  But we don't live in tribes anymore.",1234488478
479280,comment,479012,479133,0,0,MikeCapone,,,"Certainly, though I've never heard of any documented. I'll do some research, thanks.",1234488446
479279,comment,478867,479167,0,0,joshuarr,,,"I've been thinking about this one for awhile now. Here's the quote I think we're talking about:<p>>That said, Portland Ten is a unique model which combines incubation/investment theory, along with the extreme bootstrapping methods and GTD approach I’ve been developing via Hundred Dollar Business.<p>While I'm not entirely sure what Carolynn means by incubation/investment theory, I do understand that she is not implying direct investment. I do not see any contradiction, but can understand why you'd be confused.<p>That said, I would be interested to learn what she means by taking an investment theory approach..",1234488424
479277,story,,,5,4,jasonlbaptiste,"Microsoft to open retail stores",http://www.crunchgear.com/2009/02/12/microsoft-to-open-retail-stores/,,1234488238
479276,comment,479181,479227,0,0,jerf,,,"Futile? Look around, they're <i>happening</i>. Now.<p>Don't look on CNN, though. It gave up science coverage.<p>There's been a lot of progress made in the fields of ""things journalists don't really understand"", which encompasses an ever-wider range of stuff, including robotics, materials science, biology in general, private space research, and several other things.<p>Oh, your really fanciful stuff might be impossible, but the merely possible is happening. Just... <i>slower</i> than you'd like, but still, happening.",1234488163
479275,comment,479165,479264,0,0,timf,,,"I think people are doing it, they are just not slicing it up in a pay-as-you-go format for end users.<p>The best talk I ever saw in this area was by Paul Strong from eBay (they obviously have a very strong requirement for both scalability and consistency).  He talked about how they eventually ripped out all transactions and stored procedures from the RDBMS layers and built their own giant, cross cluster, <i>consistent</i> system to make the zillion customer/auction problem finally managable.<p>For the less giant problems, I think Amazon could charge a premium for an API-managed RDBMS solution, they have all the tools for making one in place (as opposed to requiring you go build it yourself with EBS and EC2 nodes).<p>add-slave-node() ...",1234488058
479274,comment,479196,479196,0,0,d13hard,,,"- debt fueled consumption is over<p>- american wages will slowly revert to global standards where there is global competition...i.e. start getting used to hiring managers talk about the ""bangalore price"" just as people in manufacturing have been beaten about with the ""china price"".<p>- stock markets will be continuously pummeled by volatility and mandated selling (boomer 401k liquidation)<p>- the big ""IF"" - can the dollar survive. we've basically entered a zimbabwe-like state of fabricating huge volumes of new currency to prop up fiscal fractures that were themselves caused by excessive abuse of currency in the 90s. one must ask, at what point does the dollar break? my guess: US debt of 25 trillion",1234488057
479273,comment,479231,479231,0,0,tsally,,,"Did anyone else not know that Google did radio advertising?",1234488055
479272,comment,479165,479165,0,0,jerf,,,"Context: So, why are relational databases going to die? Because only key-value hash lookups are fast enough. Wait, can't RDBMs do hash-based lookups too? Yes they can. So what's the problem? Well, if you want to take advantage of the relations, you have to use joins and such. Why is that bad? The query plans the RDBMs uses end up being slow. Putative solution? Throw out RDBMs, replace them with key/value DBs (which are strict and severely impoverished subsets of RDBMs), and implement your own relations.<p>My comment: This makes me wonder if the solution shouldn't be looked for in a different direction. Instead of throwing out the RDBMs, why not give me one that gives me complete control of the query plan? That's the real stickler here, not the relations themselves, which are there whether you maintain them or not. If the DB can't guess up a good query plan, why not let me simply feed one to it?<p>Is there any DB that lets me have complete control over the query plan? (And even if there is, it's probably a half-hearted, unoptimized feature with little design effort poured behind it.)<p>Yes, even so you may have to give up 40-table joins, but it seems to me RDBMs, with more control given to the user, could still provide a lot of value without throwing out the baby too.",1234487982
479271,comment,479270,479270,0,0,keltecp11,,,"The Pizza Box One Is Awesome...",1234487855
479270,story,,,5,2,keltecp11,"Wharton Entrepreneurship Conference Tomorrow. 25 Cool Start-Ups.",http://wec2009.com/expo,,1234487826
479267,comment,479181,479227,0,0,bd,,,"<i>And also, how the hell did we put men on the moon in the 1960s?</i><p>And it was for mere $135 billion (in 2005 dollars). [1]<p>That's less than $20 for every person currently alive on Earth (6.8 billion). [2]<p>Or about $170 for every citizen of US+EU combined (~800 million).<p>Amazing what we can achieve when we focus.<p>[1] <a href=""http://en.wikipedia.org/wiki/Project_Apollo#Program_costs_and_cancellation"" rel=""nofollow"">http://en.wikipedia.org/wiki/Project_Apollo#Program_costs_an...</a><p>[2] <a href=""http://en.wikipedia.org/wiki/World_population"" rel=""nofollow"">http://en.wikipedia.org/wiki/World_population</a>",1234487622
479266,comment,479165,479165,0,0,jrockway,,,"RDBMSs are not doomed, but people are beginning to realize that they are not the Solution To Every Problem.  I don't know why people ever started treating them like that; they really only handle one (small) problem space well -- modeling relational data.  If that's the problem space you're working in, there's no better tool.  If that's <i>not</i> the problem space you're working in, then now we have some better options.<p>The reality is that 99% of web apps don't really want a RDBMS.  There are no arbitrary queries to run, they just need to extract some objects from the database, interact with them, and render a web page.  As of late, people have been using ORMs to make their relational database look like an object database.  The problem is that the objects you get from an ORM don't work like real objects (try making a cyclical structure, or try `change-class`-ing the objects; doesn't work).  This usually means you need to map the objects from your ORM into a better model of your app, adding complexity.  (Some ORMs also screw up the relational part, making the data in the database nearly useless to any other apps.  Oops.)<p>People are starting to realize that this model is a waste of their time, and they are using object databases instead.  Now there is no ORM, they write their objects that the app interacts with, and those are persisted as needed.  Suddenly half your app's code is gone, and it runs faster.  That is why people are excited.  Less code is always exciting.<p>This article is really heavy on key/value databases, probably because they are easy to understand.  But really,  key/value databases are like the assembly language of databases.  You will have to do a lot of work to run your app on a key/value database.  It is better to use something higher-level, like CouchDB or an object database.  (For an OODB, I recommend KiokuDB.  It has indexing (stolen from Postgres), and can store your data to BDB, a directory on disk, a RDBMS, Amazon SimpleDB, or CouchDB.  This gives you a lot of flexibility.)",1234487613
479265,story,,,1,0,dmoney,"The Interview Question You Should Always Ask",http://www.globalnerdy.com/2009/01/28/the-interview-question-you-should-always-ask/,,1234487477
479264,comment,479165,479225,0,0,jacobscott,,,"Whoever solves the ""scalability or consistency: choose one"" problem will make a boatload of money. From what I can tell this is a very hard problem, so software that makes it seamless to operate at multiple levels of this tradeoff curve -- perhaps at the same time, for different parts of your data -- would also be a big win.",1234487382
479263,comment,479054,479182,0,0,sounddust,,,"There is an audio interview with one of these ""cashiers"" who explains it all (you have to fast forward a bit): <a href=""http://smallworldpodcast.com/mp3/smallworld051906.mp3"" rel=""nofollow"">http://smallworldpodcast.com/mp3/smallworld051906.mp3</a><p>It's fascinating.  Basically, the cashiers are working on the honor system.  They get to keep a percentage (this guy gets 40%), and they send the rest to the ""boss"" through e-gold.  The percentage you get increases as you earn their trust.  I guess that this keeps most people honest, as they want to get a higher percentage the next time.",1234487360
479262,comment,478284,479223,0,0,abstractbill,,,"You mean most people only care about the <i>web</i>, right?",1234487331
479261,comment,478754,479060,0,0,astrec,,,"Only to override the default implementation.",1234487300
479260,comment,478916,479202,0,0,jmtulloss,,,"Pylons provides similar capabilities outside of Firebug, but I do think the firebug approach is clean, familiar, and attractive. I'm all for it.",1234487095
479259,comment,477955,478500,0,0,grandalf,,,"""Housing prices were not artificially inflated.""<p>Well, considering that during the time that housing prices increased there was a large mortgage interest deduction, an implicit bailout of Fannie/Freddie, a huge capital gains tax loophole on selected home sales, as well as a variety of programs designed to allow people who wouldn't normally have been able to afford a house to buy one, I'd beg to differ.<p>The above are all demand stimulating laws.  For some reason people believe that paying interest to a bank (instead of rent to a landlord) is the American dream, and significant government revenue was allocated to creating home ownership.<p>Why wouldn't any smart speculator double down on the idea that by betting on home prices increasing he's got the government on his side and stands to make a mint?<p>Now, those speculators (and in this group I include anyone who bought a house expecting it to increase faster than twice the rate of inflation) are being bailed out by the policymakers who made their gambles possible!",1234486966
479258,comment,479054,479192,0,0,chris,,,"I agree.  Simply disabling an account that was used at more than one ATM within a certain timeframe, based on geographic area, would have limited the damage.  Similar to how cell phone cloning is detectable.",1234486892
