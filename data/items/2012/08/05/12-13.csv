ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
4341329,comment,4340891,4340891,13,0,EvanMiller,,,"Some neat Erlang projects:<p>* ErlGuten, PDF generator: <a href=""https://github.com/hwatkins/erlguten"" rel=""nofollow"">https://github.com/hwatkins/erlguten</a><p>* OpenCL binding: <a href=""https://github.com/tonyrog/cl"" rel=""nofollow"">https://github.com/tonyrog/cl</a><p>* gen_smtp, SMTP library: <a href=""https://github.com/Vagabond/gen_smtp"" rel=""nofollow"">https://github.com/Vagabond/gen_smtp</a><p>* erl_img, image manipulator: <a href=""https://github.com/evanmiller/erl_img"" rel=""nofollow"">https://github.com/evanmiller/erl_img</a><p>* ErlyDTL, Django template compiler: <a href=""https://github.com/evanmiller/erlydtl"" rel=""nofollow"">https://github.com/evanmiller/erlydtl</a><p>* BossDB, evented database abstraction layer: <a href=""https://github.com/evanmiller/boss_db"" rel=""nofollow"">https://github.com/evanmiller/boss_db</a><p>* Jerome, RTF/HTML/BBCode/Textile processor: <a href=""https://github.com/evanmiller/jerome"" rel=""nofollow"">https://github.com/evanmiller/jerome</a><p>* Cowboy, web server with WebSockets: <a href=""https://github.com/extend/cowboy"" rel=""nofollow"">https://github.com/extend/cowboy</a><p>* Chicago Boss, full-featured web framework: <a href=""http://www.chicagoboss.org/"" rel=""nofollow"">http://www.chicagoboss.org/</a><p>Those are just my favorites, there are many more listed here: <a href=""http://erlagner.org/"" rel=""nofollow"">http://erlagner.org/</a><p>Things I would use Erlang for:<p>* Network programming<p>* Web programming<p>* Sending a lot of emails<p>Things I would not use Erlang for:<p>* Numerical programming<p>* Video decoding<p>* Desktop or mobile applications<p>Basically Erlang is really good at receiving, parsing, and sending data, and bad at anything remotely processor-intensive (or graphical). I think this situation might change with Erlang's OpenCL binding (second link above), which lets the programmer skip the overhead of Erlang's run-time and go straight to the CPU or GPU for numerical tasks.",1344171592
4341328,comment,4340891,4341034,3,0,pka,,,"Facebook chat is based on Erlang, at least 1-2 years ago when they made a presentation [1] about it at CUFP.<p>[1] <a href=""http://cufp.org/videos/functional-programming-facebook"" rel=""nofollow"">http://cufp.org/videos/functional-programming-facebook</a>",1344171587
4341327,comment,4340047,4340047,2,0,loeschg,,,"<i>Translation: Its easy, Granny. Just rev to 6000, dump the clutch, and use wheel spin to get round the first corner. Up to third, then trail brake onto the freeway, late apexing but watch the marbles on the inside. Hard up to fifth, then handbrake turn to make the exit.</i><p>Haha!",1344171541
4341326,comment,4341091,4341091,4,0,Swizec,,,"It took me long enough to get used to eating every 3 to 4 hours. Now <i>this</i>?<p>Come on nutritionists, where was this theory when I was in high school and would randomly go for two days without eating ...<p>PS: eating every 3 to 4 hours has brought the biggest gains to my leanness of everything I've tried. Even better than running every day.",1344171529
4341325,comment,4341091,4341091,1,0,BlackJack,,,"A big thing to stress here is that you <i>eat normally the other days</i>. I know some people who have tried IF who gorge on food once the fast ends, and end up no better off than not fasting at all - calorie wise at least.",1344171514
4341324,comment,4341199,4341199,4,0,vitno,,,"How is this ""Google Fiber""? Can't we just call it fiber?<p>edit: title changed, thanks!",1344171503
4341323,comment,4340962,4341126,3,0,velodrome,,,"I like this. It is one less window to manage.",1344171482
4341322,comment,4340891,4341272,18,0,pka,,,"You're forgetting about OTP, Erlang's battle tested framework that covers about any edge case conceivable in a concurrent world. By themselves, you could probably produce hacky actors, pattern matching and hod code swap implementations in most dynamic languages (and on VMs like NET or JVM) nowadays, but it's the whole package that has remained unmatched so far.<p>Not to mention Erlang's live console and logging capabilities which are indispensable when it comes to diagnosing crashed services or inspecting live systems and gathering stats. The fact that Erlang's data structures are immutable allows OTP to give you a very detailed report containing the <i>exact state</i> before the crash and the message that led to it, while in Java and most other languages your best bet is just an exception trace - and then you would have to guess what exactly went wrong because you don't have the system state anymore and can't recreate it easily for that matter. You can imagine that this makes debugging an Erlang application a joy - at least as joyous as it can get.<p>One other important aspect of OTP are supervisor hierarchies - Erlang is built around the idea that if something can fail, it will - so systems should be designed in such a manner that failure in one component doesn't tear down the whole system. Services are carefully subdivided into autonomous submodules, and if a module crashes OTP will attempt to restart it and continue its operation if possible. Imagine a png conversion submodule crashing because of a faulty png header - in a Java system this would most probably throw an IndexOutOfBoundsException and down comes your whole backend. Erlang/OTP would just note that the converter has crashed and then restart it. It can do that because the converter doesn't affect or depend on some interconnected, global, ""complected"" state and thus can be easily started and stopped at will.<p>Of course, Erlang's solution to concurrency is no silver bullet - you can still create deadlocks if you aren't careful and you can still create global state by abusing named processes, but it makes a lot of things a lot, lot easier.<p>edit: one more thing - Erlang's hot code swap support is really one of the most beautiful things I've seen when it comes language features. Now, swapping code by itself isn't such a big problem - you can do this in C as well by just reloading a DLL or in Java by un/reloading a specific class - but the tricky part is about swapping state, and this is where most imperative languages fail hard.<p>Said otherwise, when you update your service, you not only want to update your code but also your data structures. For example, if you have a class/struct like this:<p><pre><code>    struct person {\n        string name;\n        int age;\n    };\n</code></pre>\nand would like to add an additional field `ageString` to it, for whatever purposes, how would you go about doing this in a more conventional language? You would have to track all usages of `person` somehow, and then replace the in-memory representation with the new version while making sure that no thread is reading or writing data, then swap the code while being careful that no new code is reading old data or vice versa. In fact, in most systems I've worked on such a thing would be almost impossible.<p>Erlang's processes and immutable data structures allow you to do just that - and as painless as possible. You provide a function that converts old state to new state (in this case containing the field `ageString`), the new code which operates upon the updated data structures and let Erlang do the rest. All messages that come in while the swap is taking place will be queued up and delivered later.<p>Moreover, if the update introduces a bug, you can as easily downgrade as you did upgrade. And all this while your service is up and running!",1344171415
4341321,story,,,2,1,rickdale,"Michigan eLab: New Ann Arbor venture capital firm fights Silicon Valley",http://www.freep.com/article/20120805/BUSINESS06/308050113/Michigan-eLab-New-Ann-Arbor-venture-capital-firm-fights-Silicon-Valley?odyssey=mod%7Cnewswell%7Ctext%7CFRONTPAGE%7Cs,,1344171395
4341320,comment,4340641,4340835,-1,0,michaelochurch,,,"<i>it's the Zynga product with the most profitability and longevity.</i><p>I'd be hesitant to quantify over the entire space of ""Zynga product"", because the average adult human produces 1 to 1.5 pounds of Zynga product per day.",1344171395
4341319,comment,4340962,4340962,1,0,velodrome,,,"My biggest annoyance: When I click on downloaded items on the download bar, it takes me to the folder instead of opening the file.<p>Anybody have this same issue?",1344171380
4341318,story,,,2,0,PaulMcCartney,"Take a tour of the Kennedy Space Center, courtesy of Google Street Vie",http://venturebeat.com/2012/08/04/kennedy-space-center-street-view/#s:kennedy-street-view-space-1,,1344171343
4341317,comment,4339609,4340093,1,0,batista,,,"Yes, very intelligent.",1344171332
4341316,comment,4340891,4341252,4,0,rdtsc,,,"> It's unlikely that an open source language is both ""secret"", and has oodles of libraries - things just don't tend to work that way.<p>It really depends on the history and the typical domain that language is used in. Yes, Erlang doesn't have good image manipulation library, but it has built in support for a multi-node distributed system setup. Applications with automatic failover running on 2 nodes. Also a distributed database and so on. These are not trivial things to just whip up on other languages, but Erlang has them in the standard library.<p>It has also been used for telecom applications for a long time before it became open source, and thus it accumulated a decent size library over the years, which it might not have  had it been a ""secret"" language started from scratch by a PhD student 5 years ago...",1344171331
4341314,comment,4340196,4340901,3,0,rpwilcox,,,"I would agree, to an extent. (Even) in tech work right now there's a huge bias against remote workers.<p>The market is hot.... Assuming you live in SF or NYC. It's pretty dry - even for tech - if you live somewhere else. (just look on github jobs and count the number of jobs accepting remote workers)<p>I'm not sure better tools would solve the problem. Between web based trackers/document collaborators/Skype/Google Hangouts, it feels like we have most of the tools we need (except maybe a good whiteboard tool).<p>There are biases against remote work (in most cases). In some cases it might be, ""oh, we <i>neeeeeed</i> high Bandwidth of seeing people in same room"" (maybe, maybe not). In some cases it might boil down to someone equating ""seeing butts in chairs"" with ""working"". Or, ""we've always been in one room, why change?""<p>The tools are there: Web based bug trackers, email, Skype/Hangouts, pairing via screen/tmux (granted pairing is an market ripe for even better tools), GitHub... And yes it's some effort to use these tools, but it's a pretty low barrier.<p>I think the virtual office will become a reality once people overcome their bias... Which is a human problem, not a problem we can solve with Mr Turing's Machine.",1344171294
4341313,comment,4341091,4341091,4,0,Axsuul,,,"I've also been doing this for awhile now. The program I'm on is called LeanGains <a href=""http://www.leangains.com/"" rel=""nofollow"">http://www.leangains.com/</a> and I've been pretty successful with it. I've went from about 15% BF to 10% with minimal muscle loss.",1344171292
4341312,comment,4340641,4340641,17,0,michaelochurch,,,"Excellent article. Spot-on.<p>""Social games"" are the least social variety of game that has existed over the past 5,000 years. They're even less social than typical video games. With console games like <i>Final Fantasy 6</i> there was, at least, the process of going to school and talking about the game with other kids. There was a social ""meta"" game. <i>Magic</i> had a similar metagame that was deeply social: you had to engage with other people to figure out what strategies people were coming up with and what the new deck types were. Zynga games don't have that because almost no adult would ever admit to wasting 5 hours per day on <i>Farmville</i>, because it's just too damn embarrassing.<p>These ""social games"" exist to generate addiction without content. As peoples' immunities build, that's going to become increasingly fruitless from an economic perspective. And the only thing ""social"" about them is that they market themselves through social networks. Zynga is, in essence, Facebook's tapeworm. It's also, in my opinion, responsible for a large fraction of the ""social network"" fatigue that's setting in now.<p>There was a (failed, alas) proposal at Google to focus on high-quality games for Google+. It was called the Real Games (or Excellence in Gaming) initiative. The idea was that we'd support independent designers who'd give us quality games, instead of publishing the dreck thrown at us by mainstream publishers. We'd have the developer code up the game logic and UI, and we'd take care of web-scale, player matching, and analytics. (We'd also be able to provide a platform for playtesting, which is a major limiting factor for amateur game designers.) I wanted to focus on German-style board games, the best social games (e.g. Apples to Apples), 2D ""retro"" RPGs, and the most innovative casual games... but inevitably we'd cover the whole space.<p>The business logic was as follows. Every social network needs to start off seeming upscale, but ""upscale"" on the Internet has more to do with content quality, intelligence, and in games, NFC (need for cognition) than economic status. Facebook had a huge high ground because it started in the Ivy League. Google+ needed something similar. Providing an extremely high-quality platform for excellent games that can't be found anywhere else would give us this.<p>We could also integrate these games with Hangouts and make the experience genuinely social. I'm obviously biased, but I think this was one of Google+'s biggest missed opportunities of 2011.<p>Also, in mid-2011, Facebook's brand was damaged (more than it is now) by these games, due to the game spam problem. Facebook had actually fixed that by then, but reputation is always a lagging indicator and we had a great opportunity to use this to brand ourselves in the wake of the first signs of social network fatigue: ""We Won't Waste Your Time With Shitty Games"".<p>You've probably never heard of Google+ Games. That's a good thing. The higher-ups ignored Real Games and took a ""Me, too"" strategy that failed.<p>Taking a broader perspective, I've thought a lot about the social space and about games, and I think the fundamental way in which these networking products are undeserving people is that there's no focus on improvement. The space seems to be all about documenting <i>what is</i> (and selling the data to advertisers) but very few (Meetup is an admirable exception) are actually trying to <i>improve</i> the social theater and <i>expand</i> the network. The next great social network and the next great game platform will be ones that improves human interaction in creative ways that few people had ever thought of.",1344171271
4341311,story,,,1,0,alinajaf,"No-one Cares About Security (and what you can do about it)",http://happybearsoftware.com/noone-cares-about-security.html,,1344171267
4341310,story,,,1,0,ahmedeqbal,"Facebook Obtained Facebookconnect Rights",http://www.ahmediqbal.com/facebook-obtained-facebookconnect-rights.html,,1344171241
4341309,comment,4340047,4340268,6,0,batista,,,"><i>Number 1-5 are mostly ""I don't want to learn new things"", so I'll ignore them.</i><p>Ignore them at your own peril.<p>""Not wanting to learn new things"" is very different from ""Not wanting to learn needlessly complicated mess of new concepts because nobody bothered to clean up the conceptual spaghetti"".<p>Which is the case here.",1344171183
4341308,comment,4340047,4341162,6,0,chris_wot,,,"<i>Superficially, I dislike it because it seems very little thought has been put into giving it a coherent interface. TFA points out instances of this, and it's true: whether something is implemented as its own command or as a flag to another command sometimes seems to have been decided via dartboard rather than any sort of intelligent process.</i><p>The examples given weren't illogical. The author's examples were <i>git pull</i>, which he complains is a <i>git fetch</i> followed by a <i>git merge</i>... which is quite logical, given that to <i>pull</i> from a repository you must first <i>fetch</i> the files, and then <i>merge</i> the files into your repository.<p>The second example that he complains about <i>git commit</i> not commiting a file if it's not specified on the command line. This makes sense, as you need to explicitly add the files via <i>git add</i> - something the documentation makes clear. As one of the complaints is that the documentation isn't clear, I think it worthwhile mentioning that the git-commit man page specifically says:<p><pre><code>  The content to be added can be specified in several ways:\n\n  1. by using git add to incrementally ""add"" changes to the index before using \n     the commit command (Note: even modified files must be ""added"");\n  .\n  .\n  \n  3. by listing files as arguments to the commit command, in which case the \n     commit will ignore changes staged in the index, and instead record the \n     current content of the listed files (which must already be known to git);\n  \n  4. by using the -a switch with the commit command to automatically ""add"" \n     changes from all known files (i.e. all files that are already listed in \n     the index) and to automatically ""rm"" files in the index that have been \n     removed from the working tree, and then perform the actual commit;\n</code></pre>\nThe third example he used was that the shortcut for <i>git branch</i> and <i>git checkout</i> is <i>git checkout -b</i>. However, this makes sense because a branch doesn't populate automatically with any files and needs a checkout. Thus <i>git checkout -b</i> makes perfect sense.<p>Perhaps there needs to be a <i>git branch -c</i>?<p><i>I also do intensely dislike git's own man pages, which are the first thing I'd ordinarily turn to. Unfortunately, the concept of an acyclic graph has not yet arrived in that part of git.</i><p>I think some of the opening descriptions are a little terse, but not entirely sure what you mean by the acyclic graph comment... I haven't been able to find anything obvious in the man pages that references a man page that then references the original man page... of course, I might have missed something!<p><i>I dislike the way git overloads ""branch"" with multiple meanings or, rather, forces end users to do so.</i><p>Could you clarify what you mean? Branches have only one meaning in git!<p><i>I dislike the fact that every repository and every branch is on equal footing except for all the commands that work differently with a remote branch or require you to do extra setup before they do work.</i><p>Could you clarify what you mean?<p><i>I dislike the fact that side-by-side inspection of different branches requires me to jump through hoops, since git only wants me to see one branch at a time. SVN, for all its faults, at least got that one right -- I can actually see two different branches, at the same time, using tools that require no knowledge of anything beyond my filesystem.</i><p>Can't gitk do this? Genuinely interested...<p><i>I dislike the fact that even people who use git day in and day out still can't seem to agree on a workflow. And I'm not just talking about things like whether rebasing is fashionable this week, but very basic things like when and how to branch.</i><p>I really can't see that's a valid argument. Some folks need to branch differently than others. This isn't just a git thing, the same can occur in SVN. As has been pointed out, branching tends to be discouraged because merging can be a regular pain.<p><i>I also agree with the article's point about contributor workflow; git and GitHub are more complex for contributors. There's also very little that's ""decentralized"", since GitHub is full of canonical central repositories, which makes me wonder what we gain from pretending we're using the ""D"" in ""DVCS"".</i><p>I disagree. The github workflow might be a little tricky, but as has been pointed out there are other workflows possible in git. git != github!",1344171167
4341307,comment,4340733,4340733,2,0,jsmcgd,,,"Can someone explain to me why it isn't possible to steer the capsule with the heat shield such that it can be used to deplete virtually all of its speed?<p>I can imagine a system where the capsule pitches up near the end of its run so that it starts gaining altitude and then deploys a parachute for landing once it has reached its apogee.<p>I appreciate that their system probably is the best design as they are a smart bunch, however I haven't heard the reason's why some of the more conventional mechanisms weren't used.<p>Another thing is the crane mechanism, which is to protect the rover from the debris kicked up from the rocket motors. I was wondering why the rover couldn't just be encased in a simple lightweight protective box and then placed directly on the deck?<p>Does anyone have any links to the other designs that were considered and rejected?",1344171080
4341306,comment,4340047,4340047,1,0,smoyer,,,"I hate blogs that put pop-ups over part of the content with no way to close them (I'm not subscribing to your mail list or following you).<p>I don't hate Git but I do agree with many of your points.  There's ccomplexity that should be hidden (or more hidden) and there's inconsistencies that still catch me occasionally.  I've never actually lost code on Git though it's taken me a while to find my code.<p>It's also not fair to confuse Github's ""Pull request"", ""Fork"" and ""Merge"" with Git.  These are still just branches and merges.",1344171013
4341305,story,,,1,0,danso,"Slack and the Art of Exhaustion",http://www.newyorker.com/reporting/2012/07/30/120730fa_fact_gladwell?currentPage=all,,1344170907
4341303,comment,4339531,4339531,1,0,shasta,,,"Can someone explain why trades are done continuously in real time?  Wouldn't it make more sense to have a turn-based exchange with a turn of one minute or an hour?",1344170877
4341302,comment,4340309,4340309,3,0,Tloewald,,,"I hate to break it to him, but Indiana Jones is a fictional character and, were he a real person, would have been considered a terrible, terrible archeologist -- on par with 19th century ""archeologists"" who dynamited ruins and chiseled choice bits off monuments.",1344170874
4341301,comment,4340196,4340196,1,0,livestyle,,,"Above all these helpful hints ..this quote should ring true #passion<p>""When people are financially invested, they want a return. When people are emotionally invested, they want to contribute.""<p>@simonsinek  ht: @danmartell",1344170869
4341300,comment,4337938,4340311,1,0,tripzilch,,,"Echoing this, because it happened to me. And in <i>that</i> case I was very happy I backed up my most important things to some sort of ""cloud"" (a combination of GMail, creative portfolio stuff on a few webservers, projects I had sent to friends and a couple of those filelocker sites).<p>Additionally, SD Cards turn out to be some the most resilient data storage media I've personally witnessed. Probably helped it was encased in a camera, which was kaput, but the photos on it were fine, not even data-bent.<p>And a year later I found in a box of my damaged CDs some more treasures on a couple of really old DVD backups that actually still worked :D (I never bothered to really unpack the boxes of partially blackened and warped CDs--there's no need in the age of MP3, and after a while you've really seen enough boxes of sooty crap smelling like burnt plastic)<p>My basic lesson from this is: spread your data and risks around.<p>Though, none of that stuff was encrypted. Just the stuff I kept online was passworded and do friends count as a two-factor auth? :-)",1344170755
4341299,comment,4341091,4341091,1,0,StavrosK,,,"I've practiced inttermittent fasting for a bit (eating absolutely nothing with calories one day a week), and, apart from losing weight (which I can't attribute entirely to IF, since I was also eating less in general, but IF definitely helped), it was just more convenient for me.<p>I prefer to just eat nothing one day, which is relatively easy since I work/do stuff during the day and have to take time out of the day to eat, and then indulge the rest of the week. IF enabled me both to not keep in mind how much I eat six days out of the week, and to just simply not eat anything for one day. I consider it a great success.",1344170739
4341298,comment,4340962,4341152,4,0,mattacular,,,"I've noticed the Chrome team are pretty cavalier and don't seem to appreciate outside recommendations and critiques.<p>If Google ever changes the download bar in Chrome, you can be damn sure it has nothing to do with a snarky Chromium bug tracking thread. And they wouldn't be totally in the wrong because it isn't a bug, obviously.",1344170651
4341297,story,,,1,0,taiji91vm,Www.shangshantaiji.com,http://www.shangshantaiji.com,,1344170488
4341296,story,,,3,0,easonchan42,"The John Carmack Archive",http://www.team5150.com/~andrew/carmack/johnc_plan_1996.html,,1344170486
4341295,comment,4340427,4340982,2,0,pbhjpbhj,,,"Couldn't the Olympic authorities have set up a ticket system inside the ridiculous number of billions spent - they could then develop and expand the system, opening sourcing it to meet with their supposed noble goals, the improved version could then be used for Rio, ...",1344170419
4341294,comment,4341289,4341289,1,0,blehnert,,,"Great insight!",1344170409
4341293,story,,,1,0,andyres,"Top 5 Best Prank Applications on Google Play",http://androidreviewss.wordpress.com/2012/08/05/top-5-best-prank-applications-on-google-play/,,1344170385
4341292,comment,4339989,4339989,1,0,savrajsingh,,,"Would be happy to work with you guys to integrate farm energy use data into this. (Wattvision.com YC W09)",1344170365
4341291,story,,,1,0,haoyajme,1.85,http://www.3cac.com,,1344170337
4341290,comment,4340427,4340944,1,0,pmarsh,,,"While ticketing is harder than people think, have you ever dealt with Ticketmaster's technologies?<p>Not fun can be an understatement.",1344170272
4341289,story,,,1,1,CReber,"Startups: Your entrance pass to Disneyland",http://christianreber.com/blog/startups-your-entrance-pass-to-disneyland,,1344170236
4341288,comment,4340850,4341193,4,0,vacri,,,"As an Australian, Netflix was never part of the web that I could see :)",1344170199
4341287,comment,4340962,4340962,-4,0,TuanaJenn,,,"There are hundreds of millions of people all over the world dying of diseases and starvation. And you are complaining about the ""download bar""? Are you kidding me?",1344170165
4341286,comment,4340427,4341259,4,0,_delirium,,,"Tangent: G4S, and their predecessor Securicor, should win some kind of award for cyberpunk-esque corporate branding. A nebulous private security company named as an inscrutable 3-letter code (now), or as the very generic ""Security Corporation"" (then) are both pretty good. Also, the former slogan, ""Securicor Cares"".",1344170163
4341285,comment,4340962,4341046,0,0,Tichy,,,"Just curious, how come you have so many things to download? Is that email attachments in web mail? I can't really think of many things to download - usually PDFs, I suppose.",1344170150
4341284,story,,,1,0,sycosteve,Facebook,http://www.google.com/ig/adde?synd=open&source=ggyp&moduleurl=http%3A%2F%2Fhosting.gmodules.com%2Fig%2Fgadgets%2Ffile%2F100080069921643878012%2Ffacebook.xml,,1344170106
4341283,story,,,1,0,abionic,"Puppet ~ Beginner's Concept Guide Part#3 ~ Module Much More: Practices",http://justfewtuts.blogspot.in/2012/08/puppet-beginners-concept-guide-part-3.html,,1344170102
4341282,comment,4338387,4339463,1,0,ericHosick,,,"> machine a size of your fridge and you download blueprint from internet<p>So, you are saying that in the future, Amazon will manufacture and sell blue prints and 3D printers? :-)",1344170060
4341281,comment,4340047,4341276,1,0,chris_wot,,,"Please feel free to name a few :-) I've come up against a few of them, but nothing that I've not been able to work out with the documentation available.",1344169969
4341280,comment,4340891,4341058,1,0,rat87,,,"> The language is not particularly old. Note you are not allowed to call a language old if the ""newer"" language is based on C or its semantics :)<p>What newer language?<p>In my opinion<p>java /c#/ruby/python share little few semantics with c(other then some basic types).",1344169938
4341279,comment,4338315,4339523,1,0,thinkingisfun,,,"because I think it's silly to require email addresses to leave comments.",1344169911
4341278,comment,4340047,4341270,3,0,chris_wot,,,"I wouldn't be calling someone an expert if they don't understand what a rebase is.",1344169837
4341277,story,,,1,0,iProject,"Technology boosting China people power",http://globalpublicsquare.blogs.cnn.com/2012/08/04/technology-boosting-china-people-power/,,1344169806
4341276,comment,4340047,4340342,1,0,aneth4,,,"As a git newbie, perhaps you have not encountered many of the seemingly simple edge cases that end up being agonizing searches for incantations.",1344169803
4341275,comment,4340047,4341114,1,0,chris_wot,,,"What part, exactly, is so hard to understand? All the examples he gives aren't particularly hard to understand.<p>For example, he complains that git pull is actually git fetch and git merge... well, that's pretty obvious. First you have to fetch the changes, then you have to merge in those changes. What is particularly illogical about that?<p>Another example: he complains that <i>git branch</i> combined with <i>git checkout</i> is <i>git checkout -b</i> (he forgets to note that you specify a branch name...). What's so non-obvious or ""insane"" about that? First you create a branch with <i>git branch newbranch</i>, then you checkout files from a branch with <i>git checkout <branch></i>. The obvious shortcut is <i>git checkout -b newbranch <branch></i>: when you want to create a new branch, then you have to checkout the files from a branch, and the -b creates a new branch for you before you do that.<p>The only real thing that is a little tricky to understand is the concept of refs, but even that's not really that hard to understand. Every commit has a SHA-1 reference to it, and a branch is merely a reference to a particular commit that is the head of a line of work.<p>Remote refs are about the only other type of ref that you need to know about - all they are is a reference that points to a remote repository that you can push to or fetch from.<p>Once you know what a ref is, most of the man pages make sense. Thus when the man page for git-push says:<p><pre><code>  git-push  Update remote refs along with associated objects\n</code></pre>\n... you can see that it means that it will update the remote refs (remote repositories you are pointing to). Which is what he says in his article, but all he has to really do is understand what a ref is and he wouldn't be so confused.<p>When you think about refs, they make logical sense - all they are is like a ""remote branch"" of your repository.<p>As for complexity in the concepts, let's look at what he's complaining about:<p><i>...you have files, a working tree, an index, a local repository, a remote repository, remotes (pointers to remote repositories), commits, treeishes (pointers to commits), branches, a stash</i><p>1. Files - obvious<p>2. A working tree - you do your work in the working tree<p>3. An index - once you have made your changes in the working tree, you commit your changes to the index<p>4. A local repository/a remote repository - this isn't a particularly hard concept to understand. You do you work in your own local repository. You might get that repository from someone else. You make your changes in your own repository, then you push those changes to a remote repository.<p>Not entirely sure what is so difficult about that concept...<p>5. Remotes - again, not a particularly hard concept really, as he says these are just references to remote repositories<p>6. Commits - You work away on your code in the working repository (whatever directory structure you so desire). Then you commit it to the index. Which is not really any different to SVN, where you checkout a file from the SVN repository, then you make your changes, then you <i>commit</i> your change back to the repository.<p>Explain to me again what is so hard about this concept?<p>7. Tree-ish - This is an extremely advanced part of git that most users may never encounter. You most certainly don't <i>need</i> do know about this, though of course it is always good to do so.<p>8. Branches - we <i>are</i> talking about source control? If so, what is the issue here? Branches are not really any different in git than any other source control system.<p>9. Stashes - an extremely useful feature. If you are in the middle of working on something and you want to switch branches, you normally don't want to commit those changes. So what you do is ""stash"" the changes onto a stack. You can reapply them later. Some excellent info can be found here: <a href=""http://git-scm.com/book/en/Git-Tools-Stashing"" rel=""nofollow"">http://git-scm.com/book/en/Git-Tools-Stashing</a><p>There... none of that was so hard, was it?",1344169729
4341274,comment,4341196,4341196,1,0,thedeuce,,,"or how about I just use native apps that dont require ridiculously bloated browser technology",1344169622
4341273,comment,4340047,4341064,7,0,aneth4,,,"Here here. Any design that needs to be defended so vociferously and causes so much confusion is clearly flawed.<p>Distributed version control is not as complicated as this.",1344169576
4341272,comment,4340891,4341198,5,0,maximveksler,,,"Erlang is a powerful language, IMHO it stands out because of 3 features:<p>- Actor Model<p>- Pattern Matching<p>- Hot code replace<p>Yet HotSpot is more performant VM then erlang's VM is. Now, if those features could be implemented on top of the JVM it would (to me at least) render erlang to be irrelevant.<p>So let's examine what is currently known.<p>- Actor Model: An example of a massive implementing effort of Actor model would be scala's Akka framework <a href=""http://akka.io/"" rel=""nofollow"">http://akka.io/</a><p>- Hot code replace: I don't know the answer to whether HotSpot lame code swapping implementation can be fixed to act like erlang does it. <a href=""http://scala-programming-language.1934581.n4.nabble.com/how-to-steal-Erlang-s-hot-code-update-for-Scala-Java-td1989938.html"" rel=""nofollow"">http://scala-programming-language.1934581.n4.nabble.com/how-...</a><p>- Pattern Matching: As for pattern matching, to my understanding this can be implemented on top of the JVM, if one wishes to. <a href=""http://news.ycombinator.com/item?id=2784086"" rel=""nofollow"">http://news.ycombinator.com/item?id=2784086</a>",1344169539
4341271,comment,4340850,4341268,3,0,0x0,,,"Indeed the flash plugin has been riddled with crashers and security vulnerabilities. But the blame for high CPU usage during video decoding seems to have been mostly in Apple's court before that.",1344169506
4341270,comment,4340047,4341179,7,0,aneth4,,,"The fact that even experts admit they don't understand the array of options and implications for commands like reset and rebase would tend to support me here.<p>And there is always dispute about the best way to do something as simple as back out a commit or clean large old files from a repository (very difficult with a large team). The series of incantations to do such things is always ridiculously obtuse, with non-intuitive flags and symbols.<p>Sure the basics are learnable, and google can often reveal solutions (though rarely definitively), but I know no one with a comprehensive understanding of the majority of git fundamentals.",1344169490
4341269,comment,4340047,4340268,6,0,xpaulbettsx,,,"If you find yourself confused and frustrated like the author, here's how to make git make sense:<p>1. Temporarily forget everything you know about every other system, and imagine they didn't exist, and that you have to solve this problem yourself. How might you do it?<p>2. Read Tom Preston-Werner's ""The Git Parable"" (<a href=""http://tom.preston-werner.com/2009/05/19/the-git-parable.html"" rel=""nofollow"">http://tom.preston-werner.com/2009/05/19/the-git-parable.htm...</a>).<p>Read it very carefully - the minute you start skimming, you'll start filling in gaps using your Subversion knowledge  and be lost again. If you <i>really</i> want to understand, read this <i></i>aloud<i></i>.",1344169424
4341268,comment,4340850,4341065,4,0,pi18n,,,"If that's the major reason preventing them from being performant, then I misunderstood the reason for crashing and the reason for poor performance to be the same. Apple should not be complaining about CPU usage.<p>That doesn't excuse Adobe from making buggy plugins.",1344169414
4341267,story,,,2,0,endtwist,"Your Unique Value Proposition is not your marketing angle.",http://notes.unwieldy.net/post/28761837073/your-unique-value-proposition-is-not-your-marketing,,1344169372
4341266,comment,4335287,4335287,1,0,DigitalSea,,,"Without-a-doubt Zynga is at fault here. Those who know the way Zynga works know this was intentional, you only have to look back on the plethora of allegations against Zynga about copying other people's games and Facebookatising them to make money. As much as I loathe EA these days, nobody should have their hard earned work ripped off like that, I hope Zynga pays dearly for this. The RGB skin colour argument alone will be the end of them.",1344169354
4341265,comment,4340850,4341253,3,0,0x0,,,"Not really, StageVideo has a bunch of limitations in the compositing pipeline, but that doesn't really matter if all you want to do is build a 2D movie player.<p>Anyways, I guess Adobe changed their mind later, and decided they wanted to solve both of the ""different problems"" mentioned in the blog post.<p>(Remember, Flash used to be all about vector animations. Sometimes it'd seem like the ubiquitous flash-as-a-video-player thing happened almost by accident; it turns out the video support (a relatively small feature in the whole flash featureset) was good enough to bring ""universal"" video to the web.)",1344169256
4341264,comment,4339609,4340117,2,0,thinkingisfun,,,"Exactly. Now compare to this:<p>""Treat people as if they were what they ought to be and you help them to become what they are capable of being."" -- Johann Wolfgang von Goethe<p>That is the perfect antithesis to Microsoft, Apple, Google, Facebook, Twitter, the list goes on.",1344169150
4341263,comment,4339999,4339999,2,0,SjuulJanssen,,,"""A recommended use of assertions is to follow the following \npattern:""  \nif (!c_assert(p >= 0) == true) { \n  return ERROR; \n }<p>Why not:\nif (!c_assert(p >= 0)) { \n  return ERROR; \n }",1344169076
4341262,comment,4339609,4340080,1,0,rat87,,,"File -> Rename/Move File ?",1344169069
4341261,comment,4339999,4340829,4,0,radicalbyte,,,"Reverse the order of precedence and then compare the ASTs.  If they're the same, then pass.<p>Smart.",1344169065
4341260,comment,4340962,4341203,2,0,wut42,,,"This flag exists since chrome://flags exists. I always enabled it (due to the shitty download bar), but never saw a new UI, even 2 years later.",1344169014
4341259,comment,4340427,4340768,2,0,DanBC,,,"G4S are a tier 3 sponsor of the Olympics.  Thus, they paid 10m to be a sponsor.<p>G4S were also involved, before they got the contract, in the bid for the Olympics.<p>Pretty sleazy.",1344168978
4341258,comment,4340850,4341213,2,0,inportb,,,"There is. <a href=""http://www.videolan.org/doc/play-howto/en/ch04.html#id591206"" rel=""nofollow"">http://www.videolan.org/doc/play-howto/en/ch04.html#id591206</a><p>Then again, I don't use it because I couldn't get any seek UI to appear.",1344168941
4341257,comment,4340309,4340893,1,0,sigzero,,,No.,1344168918
4341256,comment,4340891,4341047,3,0,mahmud,,,"He must have taken a detour throught Groovy because he wrote this just before Akka.<p><a href=""http://gpars.codehaus.org/"" rel=""nofollow"">http://gpars.codehaus.org/</a>",1344168866
4341254,story,,,69,47,mariuz,"Rails like framework for C++ with great speed",http://www.treefrogframework.org/,,1344168624
4341253,comment,4340850,4341061,3,0,jessriedel,,,"So is this evidence that the blog author was full of it when he wrote this?",1344168531
4341252,comment,4340891,4341198,11,0,davidw,,,"> building out just about every library you could want<p>It's unlikely that an open source language is both ""secret"", and has oodles of libraries - things just don't tend to work that way.<p>Here's a simple anecdote: Erlang doesn't seem to have a good image manipulation library/interface to Graphics/ImageMagick.  That's something most <i>popular</i> languages have at least one of.<p>That said, when you have a task that's a good fit for Erlang's sweet spot, Erlang is <i>very</i> good.  The runtime is a very fine bit of software craftsmanship.",1344168501
4341251,comment,4340891,4341198,10,0,ryanong,,,"Jose Valim made an awesome language for the erlang vm called elixir<p><a href=""http://elixir-lang.org/"" rel=""nofollow"">http://elixir-lang.org/</a><p>I have been playing around with it and it simplifies a lot of the things that bother me about erlang. It breaks some functional conventions for code readability such as rewriting the same variable",1344168495
4341250,story,,,1,0,shawndumas,"Unix FAQ (for OS X)",http://hayne.net/MacDev/Notes/unixFAQ.html,,1344168456
4341249,comment,4340891,4341222,1,0,johndonsp,,,"No, the parallelism in that algorithm is fundamentally limited. That bottleneck is not going away, and was an example of where neither Erlang nor any other model of parallelism will help you.<p>Do you have any good ideas about how I can solve the seat booking example using Erlang's model of parallelism? There is a block of seats. I want to be able to handle seat bookings in parallel. The seats that people might want to book could be in large groups - as large as all of the seats.",1344168372
4341248,comment,4338956,4340274,1,0,yummyfajitas,,,"""Proponents argue that a driving tax may be an effective way to curtail driving.""<p>""...one of five ideas it has to reduce the environmental impact of traffic in the San Francisco Bay Area.""",1344168357
4341247,comment,4340459,4340459,11,0,rdudekul,,,"""It is this authors personal belief that the most important part of machine learning is the mathematical foundation, followed closely by efficiency in implementation details.""<p>An introductory ML material in my opinion can be less mathematically rigorous. Emphasis can be on intuitive understanding of principles of various techniques, the strengths and weaknesses of each and the application of ML techniques to various simplified problems for practice. It is easy to get lost in too much Math and loose sight of real world problem solving.",1344168284
4341246,comment,4322758,4322758,1,0,helen842000,,,"Yes, if it meant that it was ad free for me.",1344168278
4341245,comment,4339051,4340389,10,0,mlvljr,,,"(speaking from Russia) at the time of that argument, our propaganda guys did have a point: the poverty was defeated here, everyone had a job guarantee, an opportunity to get (free) world-class higher education, choose a career in science, military, or industry, etc.<p>Speaking of China, they do have their problems (of course), but to have a moral right to criticize, other fellow countries should at least stop their oil-for-bombs and occupation-based-on-rumors politics (and we will see, how that will change the quality of life and corruption level).<p>But the resemblance is there, yeah ;)",1344168256
4341244,story,,,1,0,naresh88,"Assistant Manager,  Jobs  in IDBI BANK",http://www.apoffline.com/assistant-manager-jobs-in-idbi-bank/,,1344168180
4341243,story,,,1,0,dchest,"Gizmodo reporter gets hacked via Apple tech support",http://crave.cnet.co.uk/software/gizmodo-reporter-gets-hacked-via-apple-tech-support-50008811/,,1344168150
4341242,story,,,1,0,vijayanands,"Ask HN: How to Design an Effective Startup Workspace?",,"	The Minute a startup gets funded, there is the usual expenses to the report - Macs, Bean Bags, a colorful coat of paint, music in the lounges, but surprisingly I've seen more productive work out of a team that still has its old Dell hardware, and headphone plugged coders hacking away.\nThere is nothing wrong with a new coat of paint and a great working environment, but dont go buy that pool table yet (or invest into fancy pantries) - if you cant justify a link to productivity.<p>With that context, Would love to hear your thoughts on the bare essentials (think you are bootstrapping) on what ""design"" elements, you believe adds to the productive workspace culture.<p>Eg: Long 6 x 4 tables w/ pluggable power sockets with the entire team around makes a big difference.",1344168126
4341241,comment,4340891,4341173,3,0,gajomi,,,"> Erlang claiming n-times faster on n-cores is snake oil. First of all, not all problems have n-times parallelism in them!<p>I keep reading this claim in Erlang articles, and I wonder why it continues to be made. Its obviously false for the theoretical reason of the limited amount of parallelism in a problem you just stated. It is empirically false on every benchmark I've seen on a real-world architecture (i.e. actual multicore, with actual memory and IO, as opposed to virtual processes). What's strange is that the OP seems to be completely aware of this, but still leads the article with the claim in bold letters before qualifying it later on.<p>To my mind, Erlang is pretty cool as it is, even before a discussion of multicore performance. But I guess if you ""have been waiting 20 years for this to happen, and now its payback time"" (payback for what?) you are OK with a bit of hyperbole.",1344168010
