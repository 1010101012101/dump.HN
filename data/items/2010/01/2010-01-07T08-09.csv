ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
1036754,comment,1036566,1036566,0,0,dtby,,,"<i>1/7/10</i><p>Why in the world would one choose this as the date format, if not 'forced' to do so by faithful reproduction of an external title?  It seems that even on SparkFun's site they would use 2010.01.07.",1262854755
1036753,comment,1036665,1036665,0,0,ntoshev,,,"I think a poll is a bad way to make such a decision. First, the poll options seem written in a way that would skew the answers towards ""no precedence"" (too many good sounding options towards that end of the continuum).<p>Second, I have never programmed in an infix-notation language without operator precedence, and I imagine most programmers are like me. I can't possibly know if I will continue to make stupid mistakes due to my intuition about precedence for just a couple of days after learning the language, a couple of months, years, or forever.<p>That said, I would encourage you to try the language without precedence and ask early adopters about their experience. If it is at all possible to have precedence in your way of doing things and it turns out to be needed enough, you can implement it later.",1262854743
1036751,comment,1035145,1035145,0,0,pushingbits,,,"I've recently been doing some research into building one of these things myself. Some resources if anyone's interested:<p><a href=""http://www.angelfire.com/blues/heli_project/"" rel=""nofollow"">http://www.angelfire.com/blues/heli_project/</a>
<a href=""http://www.pabr.org/chromicro/doc/chromicro.en.html#iprc_rxtx"" rel=""nofollow"">http://www.pabr.org/chromicro/doc/chromicro.en.html#iprc_rxt...</a>",1262854624
1036750,comment,1036665,1036665,0,0,niyazpk,,,"I don't remember having problems with the way operator precedence work in any languages I worked with. May be I don't write complicated programs as you guys do.<p>Most of the time operator precedence works according to the BODMAS rule. Doesn't it?",1262854484
1036749,comment,1036509,1036742,0,0,wisty,,,"Goodheart's Law (not to be confused with Godwin or Murphy's Laws): ""any observed statistical regularity will tend to collapse once pressure is placed upon it for control purposes"".<p>Randall Munroe (xkcd) has make a similar observation.",1262854272
1036747,story,,,1,0,blazzerbg,"Adobe Reader vuln hit with unusually advanced attack",http://www.theregister.co.uk/2010/01/04/adobe_reader_attack/,,1262854093
1036746,comment,1036665,1036720,0,0,daeken,,,"I do agree on the if statements; they're fairly complex, although easily readable.  I wonder how that'd end up feeling in the real world.  It'd definitely irritate me at first, at the very least.<p>As for assignments, this would actually be a nonissue.  For example, <i>x = 5 + 10</i> would be parsed as:<p><pre><code>  (x = (5 + 10))
</code></pre>
Same with <i>a = b = c + d</i>:<p><pre><code>  (a = (b = (c + d)))
</code></pre>
Edit: Hmm, I was just thinking about this, and this order of parsing could potentially cause issues.  It'd work for most arithmetic, but in the case of complex operations (specifically operator overloads on things like matrices) it could cause problems.  I need to think a bit more on this issue.",1262854072
1036745,story,,,3,0,blazzerbg,"Hacker pierces hardware firewalls with web page",http://www.theregister.co.uk/2010/01/06/web_based_firewall_attack/,,1262854061
1036744,comment,1036509,1036716,0,0,wisty,,,"It's not a teachers job to teach ""smart"". It's a teachers job to teach the subject, which gives the students more tools to make themselves ""smart"". I'm not sure if there is any way you could design a schooling system that teaches ""smart"", short of outlawing homework so students have more time to teach it to themselves. (I'm only half joking).<p>There are a number of levels in teaching (and learning). You learn the basic facts (or processes), you learn to apply them in simple situations, and you learn to apply them creatively. This can be tested by multiple-choice tests, or more in-depth tests, but multiple-choice is fairly reliable and very cheap.<p>Besides, the difference between a ""good"" and ""bad"" student is pretty easy to measure, if you look at the broad population.",1262853992
1036743,comment,1034549,1035639,0,0,wlievens,,,"Your pseudo-code is a little weird (it recurses infinitely?) but I <i>think</i> that what you're referring to is <i>memoization</i>, or basically caching your function calls' results for equivalent arguments. I don't know if any languages support it out the box, but I do know that any language with first-class functions and closures will allow you to make a simple ""wrapper"" construct so that you get this feature anyway.",1262853932
1036742,comment,1036509,1036716,0,0,patio11,,,"<i>I wonder what limitations there are to using standardized testing for evaluating ""progress""?</i><p>Any heuristic you care to use is significantly better than the traditional metric for school quality, which is spending per pupil.  (This metric was selected because optimizing for it optimizes for the outcomes teachers unions desire.  American public school exist to employ union teachers and sometimes cause education as an industrial biproduct.)<p>This puts me in mind of the metric my day job used to track productivity for several decades: hours worked by the engineering staff.  That one had perverse consequences, too.  (Having a bad quarter?  Need a good statistic to report to the head office?  Start a deathmarch!)",1262853920
1036741,comment,1036309,1036309,0,0,swombat,,,"Will be interesting to see a follow-up post on how this impacts your sales/adoption... hopefully you can post a graph with a nice hockey stick in it :-)",1262853909
1036740,comment,1036507,1036507,0,0,JCThoughtscream,,,"There is no such thing as ""too old for music."" Rather, picking up something new helps keep your brain nimble. You have no reason at all NOT to do it - and, hey, you even have a free tutor!",1262853766
1036739,comment,1036631,1036631,0,0,RiderOfGiraffes,,,"Sorry to appear anal, but in riddles like this, details matter.<p>Did you mean ""it's"" or did you mean ""its"" ??",1262853584
1036737,comment,1036507,1036507,0,0,route66,,,"No limits. Before I switched to software development I paid my bills as a Jazz guitar -player and -teacher. Observation: the ""too old"" only applies indirectly when you're ""grown up"" schedule is already very full with everyday activities. Even then I watched people with no time to spare but with lots of enthusiasm and determination making progress. Some physical learning gets slower with age, but the speed of learning is not important at all IMO/E.<p>I line up with others here in recommending private lessons, at least for the beginning. Getting quick feedback in what you are doing is essential, especially for the motoric part.<p>I picked up viola da gamba with 39 and might have lacked some physical abilities to do the bowing well from the beginning but thanks to my teachers I got smoothly over these problems.<p>Another thing: start playing with others early. It's like chatting away in a new language. You learn best/have the most fun when you <i>have</i> to make sentences and express yourself.<p>Get yourself an axe and enjoy!",1262853375
1036736,comment,1035576,1035576,0,0,xster,,,"about time, should have been a feature 5 years ago",1262853363
1036735,story,,,4,0,mjfern,"Despite Risks, Carmakers Integrate the Web With the Dash",http://www.nytimes.com/2010/01/07/technology/07distracted.html,,1262853341
1036734,comment,1036691,1036691,0,0,piotrSikora,,,"I can recommend Nirvanix (<a href=""http://www.nirvanix.com/"" rel=""nofollow"">http://www.nirvanix.com/</a>). They have very nice API which allows you to do image processing on their servers (so on uploaded images).",1262853319
1036733,story,,,14,11,niyazpk,"Ask HN: What are the good alternatives to Google Groups?",,"That is pretty much it. Any suggestions?",1262853292
1036731,comment,1036665,1036665,0,0,cduan,,,"Interestingly, this reminds me of two programming languages you probably never thought about: TeX and Metafont.<p>TeX is an entirely macro-driven language. It processes an input file by reading a token (usually a single letter or a backslashed \command), and then either executing the token if it is a builtin operator or replacing the token with its macro definition. Since it is always processing the first token on the list, it has no operator precedence concerns (in essence, everything is in prefix notation).<p>Metafont (the programming language Knuth created for drawing fonts) is also a macro language, but it allows for infix notation as well as prefix. When you define an infix operator macro, you can choose a precedence level (primary, secondary, tertiary). For example (I'm not sure if this is exactly right), addition might be a tertiary operator, multiplication a secondary operator, and exponentiation a primary.<p>Having used both of these languages fairly extensively in the past, I would say that the easiest way to avoid the issue of operator precedence is to disallow infix operators. However, if you do think that infix operators are worth keeping in your language, you might look to the Metafont parser implementation for ideas--if there is anyone who has something to say on parsing, it is Donald Knuth.",1262853172
1036730,story,,,1,0,khandekars,"Gemcutter + openSUSE Build Service cooperation",http://stick.gk2.sk/blog/2010/01/gemcutter-opensuse-build-service-cooperation-idea/,,1262853146
1036729,comment,1034359,1036688,0,0,pvg,,,"Please don't 'dude' me. My breath is perfectly even. And at this point I don't think I was even replying to you. The things you said make make a program short are simply inaccurate and not the significant factor in making programs shorter. That's all. Nobody made their programs shorter by the 'tricks' you describe. And it's not a ZX81 thing. To read the keyboard on, say, a 6502 apple ][ you have to do a store to clear the strobe, a read to get a value and a check on the most significant bit of the value to check for keypress and then you need to mask out the actual value. I don't need to go into endless detail about the rest of them. The primary factor is the size of the instructions and the size of their operands (8 and 16 bit addresses).",1262853107
1036728,comment,1036545,1036638,0,0,notauser,,,"There's already cheap technology to do this using a Wii remote camera attached to the screen and a pair of IR LEDS mounted on your glasses.<p>Those low resolution IR cameras must have been produced in such huge quantities I bet they are pretty cheap now. You can buy a Wii-mote for $50 retail and that includes lots of expensive hardware you don't need such as a bluetooth transceiver and a pair of accelerometers.",1262853058
1036727,comment,1036665,1036665,0,0,allenbrunson,,,"kind of tangentially related: despite spending decades programming in C-family languages, i have <i>no idea</i> which operators have precedence over others. in my own code, i always use enough parentheses so that it doesn't matter. if i'm looking at somebody else's code that contains long strings of unparenthesized numbers and operators, i'll have only a vague guess at what the eventual outcome will be.<p>if i find myself having to maintain code like that, first i'll write unit tests, then add parentheses where i think they ought to go, and make sure the tests still pass.",1262853000
1036725,comment,1036665,1036665,0,0,jlangenauer,,,"Smalltalk does exactly this for binary operators.<p><a href=""http://en.wikipedia.org/wiki/Smalltalk#Expressions"" rel=""nofollow"">http://en.wikipedia.org/wiki/Smalltalk#Expressions</a>",1262852649
1036724,comment,1036395,1036514,0,0,dschobel,,,"What is the killer app for python though? Django? numpy? 
I don't think it really has one, certainly not like the ruby/rails relationship.",1262852336
1036723,comment,1036530,1036530,0,0,brandnewlow,,,"There's a whole host of under supported and underdeveloped Drupal projects that could certainly use some love.",1262852283
1036721,comment,1036691,1036691,0,0,happysteve,,,"I will check simplecdn. btw, does anyone know where do 'Daily Booth.com' host their server?",1262852232
1036720,comment,1036665,1036665,0,0,gizmo,,,"It's a deal breaker, I think.<p>For example:<p><pre><code>    if x > y and x < max_x
</code></pre>
looks fine with parens:<p><pre><code>    if (x > y) and (x < max_x)
</code></pre>
but when it becomes slightly more complicated:<p><pre><code>   if (x > (y + 1)) and (x - 1 < max_x)
</code></pre>
it really looks awkward.<p>Or how about this?<p><pre><code>    x = 5 + 10
</code></pre>
is parsed as<p><pre><code>    (x = 5) + 10
</code></pre>
and I'd really hate to have to write simple assignments as<p><pre><code>    x = (5 + 10)
</code></pre>
just to avoid that kind of snafu.<p>I don't think your compiler should get much more complicated with operator precedence. Just have a precedence stack that always reflects the operator precedence in the current scope. Parse the expressions without operator precedence (e.g. always LtR), then at a later compilation stage, swap the subexpressions in the AST until the AST adheres to the precedence rules, and you're done.",1262852202
1036719,comment,1036665,1036714,0,0,daeken,,,"> You have to defer the grouping of operands until well after the actual parse-time.<p><i>Why?</i><p>Well, in the case of my parser, I get back an S-expression corresponding to the groups (parentheses, braces, brackets) in the code, with each token inside that.  So to group expressions, I then have to go over that, applying the macros in order of precedence.  If I make operators purely left-to-right (with the exception of . , which has to be special-cased), I can do this grouping at the parser level and simplify things.<p><i>But if your macros have scope, isn't this a problem independent of operator precedence?</i><p>It's still a problem, as it is with any language with macros, but by letting operators have precedence that can change from file to file (or even worse, from function to function, if you're sadistic) would make it very difficult for people to track what's going on.  With the pure left-to-right parsing, the behavior of operator grouping would be consistent regardless of anything else that's going on.",1262851861
1036717,comment,1036566,1036566,0,0,Derferman,,,"Any suggestions on a kit / parts for a novice?",1262851671
1036716,comment,1036509,1036509,0,0,andreyf,,,"I wonder what limitations there are to using standardized testing for evaluating ""progress""? From personal experience, many of my friends who score very well on standardized tests aren't necessarily ""smart"" in the sense Feynman was ""smart"" - that is, capable of creating and sharpening their models of the world.<p>What's ironic is that while Teach for America acknowledges that it's extremely difficult to measure what makes a ""good teacher"", in that same sense of a person who continuously creates and sharpens their models of the world, they seem to assume it's trivial to measure a ""good student"", even though the two are fundamentally the same.",1262851586
1036715,comment,1036251,1036319,0,0,axod,,,"Incorrect IMHO.<p>In the last year I've seen both bids, and average per click payouts from adsense drop significantly. Like halved.<p>The OP is about divorce. Legal, finance, class action lawsuits. They're all crazy click prices because they're potentially very lucrative.<p>Managing your own campaign is extremely easy. You don't even have to set bid prices any more if you don't want to.",1262851562
1036714,comment,1036665,1036665,0,0,andreyf,,,"People can't answer a question like this honestly. It would be a deal breaker for many more than will admit it here.<p><i>You have to defer the grouping of operands until well after the actual parse-time.</i><p>Why?<p><i>you could have the same operator with different precedence depending on the macros in scope.</i><p>But if your macros have scope, isn't this a problem independent of operator precedence?<p>I'd suggest defining higher-order macros, where you can have a something like infix(op, prec=0, assoc=LEFT), used like:<p><pre><code>    infix('+', 0)
    infix('*', 1)
    ...
</code></pre>
For a similar example, see Haskell's infixr/infixl:  <a href=""http://www.haskell.org/tutorial/functions.html#sect3.2.2"" rel=""nofollow"">http://www.haskell.org/tutorial/functions.html#sect3.2.2</a><p>Also, whatever it is you are doing might be easiest to implement using Alex Warth's OMeta: <a href=""http://tinlizzie.org/ometa/"" rel=""nofollow"">http://tinlizzie.org/ometa/</a>",1262851376
1036713,comment,1036251,1036351,0,0,axod,,,"It took me a quick phone call to get monthly net30 paper billing setup with them :/<p>They send me a bill at the end of each month, and I pay it within 30 days. Quite a lot nicer than credit cards if you have a substantial spend. And better for cashflow.<p>I guess it's a UK/US thing which is a shame. Maybe you can call the Ireland support?",1262851311
1036711,comment,1036583,1036674,0,0,cubicle67,,,"Poor Steve, he looks like he's just been presented with some award.",1262851234
