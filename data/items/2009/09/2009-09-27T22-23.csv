ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
847372,comment,847044,847260,0,0,jgrant27,,,"That metric has long been flawed.",1254092388
847371,comment,846502,846647,0,0,CyberFonic,,,"You mention the quality of the candidate's questions.  Do you find those questions are general or an indication that they did some research before coming to the interview and thus specific to your company and/or the technologies that you use?",1254092307
847370,comment,846556,846556,0,0,skermes,,,"<a href=""http://goingtorain.com"" rel=""nofollow"">http://goingtorain.com</a>, I think.",1254092262
847369,comment,847044,847044,0,0,jgrant27,,,"Grades are a sign of intelligence ?<p>This could simply be a student's willingness to parrot whatever answers or theory a teacher would like to hear. Ever notice that often when a student outdoes his teacher or his teacher's favorite 'pets' then he is down-graded ?<p>The world's best scientists, mathematicians, physicists have all experienced this especially when their thinking was about to improve on and/or replace the old theories that their professors used for large grant money.<p>Maybe there was a good reason that it was a crime in Socrates day for teachers to accept money from students.
Does financial incentive corrupt education outright ?<p>""Prestigious"" schools also deny those that need tuition most when the whole point of attending is to gain something(knowledge etc.) that they do not already possess. These schools also pride themselves on cultural diversity but what about the classicism that defines their admissions ? 
Why should a decent degree run a student into 100-200k of debt after graduation ? Less wealthy countries provide comparable and even better education for free. Why ?",1254092071
847368,comment,847118,847118,0,0,dmytton,,,"What kind of product do you want to work on that you would feel passionate about?",1254092033
847367,comment,847334,847363,0,0,DarkShikari,,,"Considering how much people are still falling into this trap, it definitely needs to be rehashed more.",1254092011
847366,comment,847334,847334,0,0,jacquesm,,,"The reverse of this is vapourware, marketing without a product behind it.<p>Kudos to the guy for trying, but sometimes it is better to anticipate a less than stellar showing and to plan accordingly.<p>What will strike consumers fancy is a very difficult and sometimes impossible to answer question. Some stuff that you see and think can't possibly sell will make someone a millionaire, another has a great and well thought out product but nobody needs it.<p>Most products end somewhere in the middle. Even the largest companies still struggle with this, occasionally their 'focus groups' get it so wrong it isn't even funny.<p>If you're in the 'brick & mortar' side of things then you will have learned the hard way that too little inventory is just as lethal as too much, to hit that sweet spot is quite hard.<p>A buddy of mine trades goods that he buys in bulk at bankruptcy auctions, the diversity of the goods is huge, as is the pricing. Every time he bids on a lot he has to make a gut call on how fast he'll be able to turn that stuff over, if he misjudges several times in a row it can seriously hurt his business. He has one golden rule that came out of doing this for a while: It's better to have money in your pocket than stuff you bought that you can't sell.<p>So he errs well on the side of caution, is prepared to let others get away with 'great deals' simply because he builds in a level of cushioning that he needs to maintain his balance. If he can't get it at the right price, he's better off without it.<p>It's hard, even with hindsight to tell the musician from the example how he could have done better, I've had some contact with a 'name' artist that produces his own CDs, his method is to go for the long term relationship with his customers, including samples, mailing lists and so on.<p>By the time his CDs are pressed he knows exactly how many he will sell short term and how many will take up space for some time to come.<p>Selling music of an unknown artist through a newspaper ad seems to be a mismatch of medium, chances are that through a better medium he'd have been able to move much more of his inventory.",1254091960
847365,comment,847334,847334,0,0,joez,,,"Reminds me of Steve Blank's sayings on the customer and product development cycle. His mistake was he ramped up before properly understanding his customers (and how to best sell to them).",1254091945
847364,comment,847245,847245,0,0,xanados,,,"If you have a one-on-one tutor I don't think I would be too worried about taking a long time to learn the language. It's much more effective just having someone to talk to, TPS or not.",1254091920
847363,comment,847334,847334,0,0,rglullis,,,"Yet-another-post-about-chinese-math: <a href=""http://www.businesspundit.com/please-stop-with-your-chinese-math/"" rel=""nofollow"">http://www.businesspundit.com/please-stop-with-your-chinese-...</a><p>Sigh. If only 1% of bloggers stopped re-hashing old ideas, then we'd have something actually good to read on HN.",1254091898
847362,comment,847334,847359,0,0,sachinag,,,"A VC (or anyone else) who cares more about the number than how you calculated it is a moron.",1254091865
847361,comment,846246,846246,0,0,ams6110,,,"Heh that takes me back to my ""Programming Languages"" class, taught by Friedman, and using <i>The Little LISPer</i> as a textbook.",1254091809
847360,comment,847093,847345,0,0,unalone,,,"I clicked the ad. I didn't buy the shirts, because last year was the year I grew out of buying t-shirts.",1254091673
847359,comment,847334,847334,0,0,dcurtis,,,"This reminds me of how venture capitalists will sometimes ask founders about their TAM, or ""total addressable market"". The TAM is basically the amount of money you would make if every single eligible human being on Earth purchased/consumed your product.<p>I will never forget one night I was with a friend and he calculated his TAM to be something like 940 billion dollars. For his web startup.<p>After calculating this number, he said ""Wow, if only 1%...""",1254091626
847358,comment,847202,847315,0,0,gchpaco,,,"One of the things that's nice about Common Lisp style conditions is that they do <i>not</i> automatically force a stack unroll.  You can, and people do, signal conditions like ""I don't know what to do with this"" that can be handled inline (say, with the coding table, replacing it with ""?"" although I personally loathe that ""fix"") and then the parser goes along its merry way.  The same library can be used to say ""WTF?  this is in no way the data file I wrote out.  Bail!"".",1254091463
847357,comment,847202,847202,0,0,jsankey,,,"IMO almost all of the problems people have in practice with checked exceptions are from poor API design rather than an issue with checked exceptions themselves.  The core Java APIs use checked exceptions for too many conditions which are not recoverable - causing a whole bunch of maintenance pain for no benefit.  This is understandable considering that Java was the first mainstream language to really exercise the concept.<p>If used judiciously, I think checked exceptions do have benefits.  There are classes of errors that are exceptional but also conceivably recoverable.  The fact that they are exceptional means it is important to draw attention to them (they may otherwise be overlooked).  The fact that they are recoverable justifies requiring calling code to make a choice - handle or propagate the error.  Even in these cases, the code can get messy, but I see that as a fact of life: writing robust code isn't easy.",1254091409
847356,story,,,4,7,RiderOfGiraffes,"Twitter confirms major cash boost",http://news.bbc.co.uk/1/hi/technology/8275792.stm,,1254091374
847355,comment,846754,847085,0,0,borism,,,"we have people in orbit for that right now",1254091336
847354,comment,847202,847344,0,0,barrkel,,,"The race condition example applied to a pretty global ""single resource"": the file system; and came from the example in the main article. In situations where you have greater control over the resource, I agree that serialization / independence of operations, whether by transactions, queuing, single arbiter, etc., is better.",1254091294
847353,comment,847183,847183,0,0,forsaken,,,"That looks amazing. I love the sale in the intro. ""You own the most beautiful oceans, the most beautiful mountains"" etc. A really interesting way to look at the national park system!",1254091221
847352,comment,847202,847274,0,0,scotty79,,,"a() throws Exception;
b() throws Exception;
c() throws Exception;<p>eeeverbody() throws Exception;<p>There, I dealt with exception handling.",1254091188
847351,comment,847093,847151,0,0,maukdaddy,,,"You forgot hotbot!",1254091128
847350,comment,847093,847219,0,0,dcurtis,,,"Search isn't a business. It's just a technology they developed. If Google hadn't found their advertising business, they would have failed.<p>You don't want Google's search technology because it will make you money. You want it because it has brand value and lots and lots of users that you want to leverage to make money using some other business.<p>Walmart's business is selling merchandise. The fact that they have to be experts at building construction so they can make stores to sell merchandise is just as secondary as Google's search business.<p>Would you rather have Walmart or their real estate?",1254091125
847349,comment,847044,847260,0,0,mnemonicsloth,,,"I'm not trying to score rhetorical points here, but it seems like you're trying to change the subject after having one of your unconscious assumptions brought to your attention.<p>Everybody has them, and, er... by definition... nobody is aware of them.  Most people try and forget all about them when they do become visible, but is that the ideal reaction?",1254091045
847348,story,,,5,0,j_baker,"PEP 389: argparse - new command line parsing module for python",http://www.python.org/dev/peps/pep-0389/,,1254091012
847347,comment,847202,847315,0,0,scotty79,,,"> The string conversion issue was brought up because I think it is an excellent case of 'programmer knows best', but the exception causes the whole dataset to be rejected, not just the one record out of 3.9 million that were fine.<p>The programmer first has to know that he has to make decision what to do with partially wrong input and there is no better way to let him know than throwing exception in his face. Then he will know that there is configuration option that will let him to go around the problem one or other way.<p>Default option in case of any trouble should be exception bubbling up with information what can be done to avoid it.",1254090983
847346,comment,847202,847339,0,0,russell,,,"IIRC that's what C++ does and I recently read that it's mostly ignored.  Of course a compiler or IDE could detect what is caught and generate the javadoc equivalent.  That would be useful.",1254090975
847345,comment,847093,847213,0,0,rokhayakebe,,,"Almost selling is not selling.",1254090931
847344,comment,847202,847330,0,0,jacquesm,,,"> My point is that exceptions should generally either be things you can't reasonably handle<p>That we completely agree on.<p>As for that race condition, I think that a situation like that could easily be avoided by having a single task be responsible for maintaining that data structure and to send it messages to update the state atomically.<p>That way you avoid the race completely.<p>Race conditions usually are a sign of multiple parties having access to a single resource where you'd be better served having one 'handler' process in charge of the data object that multiple parties want to access. It can then be the arbiter of who has access.<p>If the changes are a-synchronous then you could use a 'fire and forget' style queuing mechanism where the only thing that matters is that you know the message was received, the more tightly coupled example you gave could be handled reasonably elegant with a client-server model where the server will handle only client at a time for a particular resource.<p>Data objects not being 'alive' enough is the cause of many race conditions, by assigning a handler you achieve two things in one go, the first is an abstraction of interaction with the data object to a series of messages to a handler, the second the removal of race conditions and their 'normal' solutions (such as locks).",1254090921
847342,comment,847202,847274,0,0,russell,,,"By ""immediately"", I meant as you write the code.  Type the code, hit return, and you have an error.  ""Immediately"" you have to decide add a try or change the method signature.  I think this causes premature exception handling, just because the programmer wants to get moving along with the code.  Checked/unchecked seems to mirror static/dynamic typing, but it doesnt.  It's orthogonal.  Exception handling is an application specific implementation strategy, but checked exceptions force a ""religion"" on you.",1254090781
847341,comment,847044,847267,0,0,elblanco,,,"Downvoted obviously from a Stanford grad.",1254090510
847340,comment,847043,847301,0,0,jerf,,,"""The thing is that seventeen rules of Xanadu, in themselves, aren't that much more complex than the WWW - The http protocol is not an uber simple thing.""<p>I have to disagree. <i>Requiring</i> secure identification of a web server means that <i>every</i> web site must use an SSL certificate. Most likely, the way it was intended, it must also be an identity-verified SSL cert, i.e., ""Verisign"" et al, not just ""some SSL cert I generated last night"". <i>Requiring</i> secure identification of the user at all times is very onerous when propagated throughout the entire stack, as it would have had to have been. Now you have to be logged in to all sites, all the time, with some sort of universally-agreed-upon protocol which would run smack into the problem that not everybody's identification needs are the same. ""Every user can store documents"" means you are not allowed to browse the Xanadu without paying for hosting privileges. Backwards links complicates every CMS, ever, horrifically, and also has to manifest in the protocol. And I'm not even all the way through the list, the problems keep going, but I fear boring the reader.<p>If you look at what they really mean (remember, these are summaries), it is <i>night and day</i>. An elementary HTTP server can be bashed out in an hour, and it'll work with modern browers to at least some degree. In college, writing an HTTP proxy server was a 2 hour lab assignment in networking class, to give an example of another piece of the stack. AFAIK, nobody has <i>ever</i> produced a full Xanadu server, despite massive amounts of effort. This is not a coincidence; this is a reflection of the almost-impossible-to-overstate difference in complexity between the two ideas.",1254090466
847339,comment,847202,847202,0,0,scotty79,,,"Maybe it would be more useful to declare what types of exceptions method handles. Declaring what types of exceptions methods (throws|receives and not handles) should be optional. The way it is now is too much work and too little gain in typical setups.",1254090404
847338,comment,847035,847073,0,0,gleb,,,"This is a standard problem, not just in CA.  Assuming you don't need CA qualification, which is something for your lawyer not your bank to figure out, give them a letter stating that you have no employees in the state and as such don't require CA qualification.  That and some persistence should get you what you want.",1254090388
847337,comment,847044,847262,0,0,ghshephard,,,"Really?  Walk through the curriculum starting around the 3rd grade onwards - It basically sets up a foundation for future learning in all disciplines.  Reading, Writing, Arithmetic - I remember the precise instant (3rd grade) that I was introduced to the concept of a negative number.  It blew my mind.  And science classes theory in seventh and eights grade were awesome - if I hadn't been grinding I probably would have never learned about umbra's and penumbras, angle of reflection, etc... as well I did.<p>I think you get out of any experience (Sports, School, Start Ups) what you put into it.  And I have to agree - the entire point of the article, that people who haven't been able to demonstrate ""success"" in school, do tend to be a bit more defensive than those who have.   I don't know if this applies to other fields (Sports, Startups) - but it's certainly seen in schools with regards to academic achievement.  (BTW, We can all agree to hate the valedectorian who not only graduated with a perfect 4.0 GPA, but also spent close to 30% of her final two years  of high school traveling Europe, preparing for the winter olympics, and participating in the debate club)",1254090219
847336,comment,846949,846949,0,0,neilc,,,"More information on the GCD FreeBSD port is here: <a href=""http://lists.macosforge.org/pipermail/libdispatch-dev/2009-September/000014.html"" rel=""nofollow"">http://lists.macosforge.org/pipermail/libdispatch-dev/2009-S...</a>",1254090173
847335,comment,847202,847331,0,0,barrkel,,,"The failure modes of software written in C versus memory safe languages, with particular attention to security and buffer overflows, persuades me very strongly that languages (and their implementations, i.e. compilers) do indeed influence the robustness of programmers. What is a programmer other than the programs he writes?",1254090162
847334,story,,,210,43,sivers,"And if only 1% of those people...",http://sivers.org/1pct,,1254089902
847333,comment,847044,847273,0,0,codexon,,,"What you are saying is completely different from someone asking you ""What college did you go to"", and responding vaguely ""Boston"" when most people just say the name of the school.",1254089894
847332,comment,847202,847310,0,0,cema,,,"Exactly! :-)",1254089885
847331,comment,847202,847320,0,0,lucifer,,,"You make a very persuasive point, but I have reservation regarding the words ""encourage"" and ""solve"".<p>I would think the fact of the possibility of mapping exceptions (according to some abstraction order mirroring the layering of the overall system) calls for ""acknowledge"" instead of ""solve"".<p>And compilers can help with robustness of programs, but their influence on the robustness of programmers is not immediately evident.  So perhaps ""suggests"" instead of ""encourage"" for a subset of programmers?",1254089756
847330,comment,847202,847315,0,0,barrkel,,,"For your string example, a callback would probably be the most flexible solution, but I still believe that not signalling corruption when it is found by library code is irresponsible. Batch processing code will have a loop; that's precisely where there <i>should</i> be an exception handler, one that can log that there were errors with this particular record, so that attention can be brought in later. If the data isn't too important, then sure, minor corruption can be ignored, but it would be a terrible default.<p>Taking your database interaction example, here are the kinds of situations I could see, and responses:<p>* Failure to connect; this is pretty fatal, unless there's home-spun failover support, it should not be handled at a low level<p>* Query syntax / API error: this is a programming error, should be logged and the current process (request, whatever) aborted<p>* Constraint failure: choosing whether to handle constraints on the database side, or on the app server side, or both sides, is an architectural decision with tradeoffs. Ideally constraints should be portable, so that they can be transported all the way to the UI, and checked at every stage along the way. These constraint failures might be signalled through exceptions, but that's a tactical choice, and may not be the best one. Generally, exceptions only signal for the first error, but usually there is more than one constraint, and multiple actionable failed constraints should be propagated to avoid wasting the end user's time (consider the simplistic compiler which halts on first error).<p>My point is that exceptions should generally either be things you can't reasonably handle, with a non-throwing ""out"" for situations where you <i>do</i> expect to be able to handle the problem. If you expect to be able to work around the issue, i.e. find a solution locally, low down in the stack, then you probably shouldn't be catching an exception in order to do so, unless that's impossible (like the race condition I mentioned earlier).",1254089738
847329,story,,,12,1,bootload,"Bre Pettis of MakerBot and NYC Resistor ",http://www.designglut.com/2009/08/bre-pettis-of-makerbot-and-nyc-resistor/,,1254089666
847328,comment,847048,847048,0,0,oldgregg,,,"<a href=""http://en.wikipedia.org/wiki/E-mail_letter"" rel=""nofollow"">http://en.wikipedia.org/wiki/E-mail_letter</a><p><a href=""http://www.mailaletter.com/"" rel=""nofollow"">http://www.mailaletter.com/</a><p><a href=""http://www.netgram.com/"" rel=""nofollow"">http://www.netgram.com/</a><p><a href=""http://www.flydoc.com/"" rel=""nofollow"">http://www.flydoc.com/</a><p><a href=""http://l-mail.com/"" rel=""nofollow"">http://l-mail.com/</a><p><a href=""http://www.ezgram.com/"" rel=""nofollow"">http://www.ezgram.com/</a><p><a href=""http://www.postful.com/"" rel=""nofollow"">http://www.postful.com/</a><p><a href=""http://www.postalmethods.com/"" rel=""nofollow"">http://www.postalmethods.com/</a>",1254089649
847327,story,,,9,0,polvi,"Mobile Gmail and async script loading",http://www.stevesouders.com/blog/2009/09/26/mobile-gmail-and-async-script-loading/,,1254089547
847326,comment,847044,847044,0,0,dill_day,,,"<p><pre><code>  When you are content to be simply yourself
  and don't compare or compete,
  everybody will respect you.
</code></pre>
-- Lao Tzu",1254089406
847325,story,,,1,0,bsdpunk,"How to blink an LED over the net using python, and arduino.",http://bsdpunk.blogspot.com/2009/09/blinking-led-over-web-with-python.html,,1254089276
847323,comment,846420,846614,0,0,gojomo,,,"What specific regulations made the biggest difference?<p>The biggest factor I've read about is that Canada -- as a society and government -- never got on the ""promote home ownership at all costs"" bandwagon. There's no equivalent of Fannie and Freddie, and the traditional mortgage requirement of ~20% down remains. Thus Canada hasn't had the same sort of housing bubble, nor as many dubious mortgages, nor widespread mortgage securitization.",1254089162
847322,comment,847202,847202,0,0,smanek,,,"As a professional Java programmer, with some experience in various strongly typed languages (MLs, Haskell), I really liked the idea of Checked Exceptions when I first heard about them (and even when I used them in small projects in school). In principle, it seems like a way to allow for stronger static analysis and allows the compiler to make stronger safety guarantees. It also forces programmers to deal with oddball cases - instead of just ignoring them like we are prone to do with magic return values (a la C) or unchecked exceptions.<p>The problem is it never works. There are two common strategies that I've encountered to deal with 90+% of checked exceptions:<p>-Most code just bubbles the exceptions up the top layer (i.e., the UI), which clutters up every method signature along the way. The UI then has a big handler that catches all exceptions, and just logs an error and shuts down the program. Even on the off chance that the top-level could do something more productive, the problem is that the stack has been unwound too far and it's too late to fix whatever the problem is.<p>-The other common approach is to wrap every checked exception inside a custom unchecked exception that is just thrown. This is my preferred solution (at least it doesn't clutter up every method signature), but I have to explicitly convert every checked exception into an unchecked one - which is just a bit of a hassle.<p>I give Sun some props for trying out on a limb with a really cool sounding idea. But I think most people have realized it doesn't work very well in practice ...",1254089012
847321,comment,846579,847190,0,0,adg,,,"Gladwell popularized the ""10,000 hours rule"", but he didn't invent it. It's originally from a paper by K. Anders Ericsson on ""deliberate practice"" [1]. It cites a ton of other research in the area and is definitely worth reading if you liked Outliers.<p>[1] <a href=""http://projects.ict.usc.edu/itw/gel/EricssonDeliberatePracticePR93.pdf"" rel=""nofollow"">http://projects.ict.usc.edu/itw/gel/EricssonDeliberatePracti...</a>",1254088836
