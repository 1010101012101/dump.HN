ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
90253,comment,90017,90193,0,0,tel,,,"Brand development is still deadly important. No one is going to use your site if they can't remember it. If your competitors are on par with you feature-wise, the one with the stronger brand is going to win.<p>That being said, if your opponents <i>aren't</i> on par with you feature-wise, well...",1197870507
90252,comment,90156,90246,0,0,tel,,,"The problem is arguably that the indirection is really, really costly. Just today I wrote a custom template tag I needed in order to factor out some functionality common to every view on my application. In RoR it would have been maybe 2 lines, but that custom tag was more like 15.<p>I still adore Django for its efforts to remove all the ""magic"" code, though.",1197870136
90251,comment,89995,90169,0,0,altano,,,"Really?: <a href=""http://www.rubystuff.com/shirts.html"" rel=""nofollow"">http://www.rubystuff.com/shirts.html</a>",1197869381
90250,comment,90156,90230,0,0,adrianh,,,"Not using/allowing Python code in HTML templates is a deliberate Django design decision. We created Django in an environment where the designers didn't know Python (or much programming, in general), and it was much simpler to explain a simple template language than to teach them Python.<p>Aside from that, there are some nice benefits to having a separate template language. One benefit is the extra level of security -- a designer can't bring the entire site down by making a syntax error in the template. And there's the benefit that it encourages you (rather firmly!) to separate logic and presentation. In my Django applications, I'm never tempted to give templates any logic that isn't strictly presentation-related.<p>Then there's stuff like the template system's automatic HTML-escaping, which we just introduced in the Django development version. Sure, I guess you could do that with a pure-Python-syntax template system, but it seems like you'd end up hacking things substantially to get that to work.<p>And, finally, if you don't care for Django's template language, you don't have to use it. The whole framework is just Python, after all -- import whatever external libraries you want to import.",1197869372
90249,comment,90156,90246,0,0,bdr,,,"Exactly. Having a ""watered-down template language"" is a <i>good</i> thing.",1197869340
90248,comment,90156,90230,0,0,AF,,,"There are advantages to both approaches. Obviously as  you suggested, only using indentation makes templating more difficult than have an 'end' delimiter. But for the 90% of code that I write which isn't an HTML template, it is pretty nice to be able to not have extra ends all over the place.<p>But, if it is that big of a deal to  you, it really is a solved issue in Python. Mako is Python in a templating language with the extra ends to make it work. Another language which is all-Python and I think pretty elegant is Breve. It uses s-expressions to do the job.<p>Using Mako with Django would really be very simple. I think the main reason the Django developers use Django is not so much because they don't like Python but because they are very strict about separation of display logic and business logic. Django's templates really are meant for designers, not programmers. That isn't totally appropriate in all contexts, but like I said, using Mako with Django should only be a matter of writing a few wrapper functions.<p><a href=""http://www.makotemplates.org/"" rel=""nofollow"">http://www.makotemplates.org/</a>
<a href=""http://breve.twisty-industries.com/"" rel=""nofollow"">http://breve.twisty-industries.com/</a>",1197868992
90247,comment,90231,90239,0,0,inklesspen,,,"This doesn't look much like resisting the urge.",1197868652
90246,comment,90156,90230,0,0,staunch,,,"I like not having a lot of heavy code inside my templates. The only stuff I do there is displaying values, formatting, and some simple logic. Isn't this one of the core principles of MVC?",1197868619
90245,story,,,2,0,makimaki,"Chris Anderson: ""Free: The Past and Future of a Radical Price"" (Video)",http://www.netvision.de/uk/dispatching/?event_id=5bb1b5e95afabb2e62d2b148ded47706&portal_id=369401748e8249f142a700d8098a3473,,1197868040
90244,story,,,2,0,makimaki,"Who Will Google Buy Or Clone In 2008?",http://www.techcrunch.com/2007/12/16/who-will-google-buy-or-emulate-in-2008/,,1197867806
