ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
5274881,story,,,2,1,kirualex,"IOS layout helper",https://github.com/kirualex/KALayoutHelper,,1361725196
5274880,comment,5274539,5274539,2,0,joelgrus,,,"You really shouldn't be allowed to write articles about patents if you don't even know the different between a patent and a copyright.",1361725179
5274879,comment,5274393,5274722,2,0,larrys,,,"""but writing replacements for existing tools/libraries because they're flawed, while fun, can be an incredible distraction""<p>I think that's an excellent point and more or less goes along with my comment on this. I think what TPW was doing was actually trying to get out of the rut of completing the real work by trying to have some success and pleasure which would spur him on to finishing what he needed to do (as evidenced by the tweets) (reminds me a little of not getting into real work but spending time ""organizing"" first under you get the energy up to tackle the real task). Sometimes simply writing shell scripts gets me in the mood to do the ""real work"" that I have to do (programming or non programming).<p>Once again, nothing wrong with this approach I just don't think it's an example as stated of a ""doer"" which is not the same as saying that the behavior doesn't have any value.",1361725157
5274877,comment,5273575,5274846,3,0,garrettdimon,,,"It's both. The upside is that I didn't need to find a designer or developer to build it, but the downside is that it's a lot of work to keep up with all of the skills that I need. Ruby, Rails, design, front-end development, MySQL, servers, etc.<p>Fortunately, as we've grown, we've been able to contract work to friends who are experts in each of the areas, but it can be rather daunting at first.<p>The other downside is that when designing, I always begin to think about how design decisions will trickle down the front-end to the application to the database and sometimes even to the server. As a result, it's hard to just design and implement. I'm always caught up thinking about implementation even when I'm working in Photoshop.<p>These days, the biggest benefit is that even though I'm far from an expert in any of the areas, I can competently navigate all of the topics and maintain a pretty holistic view of both the business and the product. That makes it much easier to effectively coordinate everyone as the team grows.",1361725146
5274876,story,,,1,0,gnosis,"XML Sucks",http://c2.com/cgi/wiki?XmlSucks,,1361725128
5274875,comment,5274687,5274687,3,0,raquo,,,"I'm betting on Canada now. Beats Russland hands down.",1361725118
5274874,comment,5274687,5274687,4,0,throwaway420,,,"As bad as the US is becoming in many respects, the one thing its still got over the world is that its the one place that respects and rewards entrepreneurship to even the smallest degree.<p>The barriers to entry in the US are numerous and much more burdensome than they should be in a free society....and are still a flat out cakewalk compared to what the man with an idea faces in other countries.",1361725114
5274873,comment,5274550,5274550,10,0,mixedbit,,,"This article is not at all about REST, it is about RPC and its shortcomings. These shortcoming were fixed by REST, and the author of the article rediscovers these fixes.<p>A key features of a REST API is that is self describable, in a sense, that it has a single entry point from which a generic client can automatically discover available resources and actions. APIs in the given examples are not like this, they require custom clients that are strongly coupled with an application. These are not REST APIs but RPC APIs.",1361725107
5274872,comment,5273164,5273164,1,0,RawData,,,"You've got your boat back, now sue them for defamation or something.",1361725087
5274871,story,,,1,0,Lightning,"The Science of Nudity: The Skinny on Showing Skin",http://science.kqed.org/quest/2013/02/22/the-science-of-nudity-the-skinny-on-showing-skin/,,1361725070
5274870,comment,5274463,5274810,4,0,jeffdavis,,,"The problem with making all dates into ranges is that there would be no total order. To effectively have a total order, you would need to say ""give me the range of time at the smallest possible granularity"", which is really just asking for a point in time. If the granularity becomes smaller later, it might break the application if you aren't careful. So, I don't think it's a good idea to give up on points in time.<p>However, I strongly agree that ranges of time are a very useful concept, and I spent a lot of time implementing Range Types[1] in postgresql for that reason. I think Ruby should have both ranges of time and points of time (and ideally work with the SQL counterparts seamlessly).<p>[1] <a href=""http://www.postgresql.org/docs/9.2/static/rangetypes.html"" rel=""nofollow"">http://www.postgresql.org/docs/9.2/static/rangetypes.html</a>",1361725063
5274869,comment,5274550,5274745,1,0,onlyup,,,"What is COBRA?",1361725052
5274868,comment,5273975,5274819,2,0,anon1385,,,"I should mention that I've never worked in the corporate world, so my reaction is in that context. I can't talk about the corporate side of things since I've never experienced it.<p>Also yes static typing in Java does look pretty cumbersome. Personally I'm hoping that Rust takes off, I've enjoyed playing about with it over the last couple of weeks, although it has made me less happy using the more dynamic languages I normally use to do real work.",1361725045
5274867,story,,,1,3,ShirsenduK,"Ask HN: Should Today, February 24th be celebrated as Apple Day?",,,1361725028
5274866,comment,5273430,5273430,3,0,gtani,,,"Haven't had one of these anti-C++ threads/rants in a while, prbably not much new here<p><a href=""https://news.ycombinator.com/item?id=4969372"" rel=""nofollow"">https://news.ycombinator.com/item?id=4969372</a><p><a href=""http://news.ycombinator.com/item?id=4539251"" rel=""nofollow"">http://news.ycombinator.com/item?id=4539251</a><p><a href=""http://news.ycombinator.com/item?id=3712292"" rel=""nofollow"">http://news.ycombinator.com/item?id=3712292</a><p>______________<p>this mechanization of the lang spec in Coq looks interestng<p><a href=""http://hal.inria.fr/hal-00674663/en"" rel=""nofollow"">http://hal.inria.fr/hal-00674663/en</a>",1361725023
5274865,comment,5274550,5274656,2,0,steveklabnik,,,"hal is currently going through the ID -> RFC process, once it's an RFC, I'm sure you'll see stuff like this.",1361725012
5274864,comment,5274550,5274761,5,0,mattdeboard,,,"The author means, ""It is a lot of work"", I think.",1361725010
5274863,comment,5273769,5273769,2,0,sramsay,,,"Taken out of context, most ""inspirational quotes"" seems to me to be startlingly vapid.<p>1. ""Be the change you want to see in the world.""<p>How?  This might just mean, ""It's up to you to change the world,"" (a questionable assumption), but this actually says to ""be change.""  What the hell does that mean?<p>2. ""The real leader has no need to lead -- he is content to point the way.""<p>Leaving aside the fact that Henry Miller is a questionable authority on this subject, one might wonder what leadership would actually look like if the leader actually did nothing but ""point the way.""<p>3. ""A leader is a dealer in hope.""<p>Let's hope the CEO doesn't come in Monday morning with this one.<p>4. ""To do great things is difficult; but to command great things is more difficult.""<p>Why?<p>I could go on (and on and on).<p>I don't mean, of course, to impugn the authority of Napoleon, Gandhi, Nietzsche, or Miller (maybe Miller in this case).  But I do think little micro-quotes from these thinkers are not simply poor substitutes for their writings, but distillations of those writings into near nothingness.<p>There are writers who are very aphoristic, but damn few of them.  Most set their clever phrases within a much wider web of contemplation and argument.  The person who mistakes one thing for the other is likely succumbing to the illusion that they are learning something.",1361724998
5274862,comment,5273878,5274721,3,0,packetslave,,,"If you look carefully, you'll note that the link in your screenshot is not the same as the one in Dr. Meyer's DMCA complaint.",1361724988
5274861,comment,5274550,5274596,2,0,onlyup,,,"From someone who is unexperienced in soap, what is the problem with it?",1361724974
5274860,comment,5274550,5274652,8,0,stephen,,,"The problem wasn't XML itself, but the complexity they tried to encode in XML. The same sins could be committed in JSON.<p>JSON has just been lucky that its user base hasn't been the same enterprise architects that ruined Java.",1361724968
5274859,comment,5274687,5274687,2,0,devonbarrett,,,"I think London's start up scene is becoming something interesting at the moment.",1361724945
5274858,comment,5274550,5274638,5,0,steveklabnik,,,"As one of my friends on twitter said, ""Yes, people won't put their URIs in responses, so let's just put them in this other, totally unrelated file.""",1361724938
5274857,comment,5274705,5274705,9,0,dons,,,"> A few years back, one big lure of Python or Ruby used to be the functional constructs that they offered like higher order functions.<p>This statement surprises me.",1361724934
5274856,comment,5273975,5273975,1,0,xrt,,,"Beyond complexity management, breaking a design into many small programs opens it up to a rich set of well-known and proven OS services. Things like hardware memory protection, multi-processor support, queues, mutexes, monitoring, and cross language support. I'll take Unix over some language+standard library _any day_.",1361724932
5274855,comment,5274550,5274550,1,0,ahallock,,,"While I understand the allure of writing specs and using a unified library, good API clients are more terse, as they're written to take advantage of the programming language you're using, and understand the particulars and idioms of the API they're written against. For example, the client might pick up the correct environment variables for your API credentials, or reduce certain repetitive code.<p>Another example: I wrote a client that returns a queue message. Attached to that message are some helper methods for deleting, releasing, and touching the message. It makes your code cleaner and easier to understand.",1361724930
5274854,comment,5274308,5274308,1,0,duopixel,,,"I'm a designer and I'm often surprised that current science has not been able to answer seemingly simple questions such as ""what is the most legible typeface for a printed book?"" or ""what is the best chair for working on a computer?"". The reason for this, I suspect, is that we are measuring the wrong things. When researchers study legibility, they measure recall ability, speed of reading, and other quantifiable stats. The results of these studies often vary and are difficult to replicate.<p>A good typographer doesn't aim for style, he/she aims to get typography out of the way in order to read a text with minimal distraction. Erik Spiekermann put it succinctly when he said ""typography is like air, you only notice it when it's bad"". I think design will connect to science only when we are able to peek into the brain and see if a person is really concentrated when reading a text, or pleased when he sits down on a really comfortable chair.<p>This kind of research will bring great dividends in various fields. I can think of anti-depressant medication, architecture, and advertising (perhaps this last one is more controversial).",1361724900
5274853,comment,5274550,5274609,10,0,steveklabnik,,,"Yes, we have. <a href=""http://en.wikipedia.org/wiki/Web_Application_Description_Language"" rel=""nofollow"">http://en.wikipedia.org/wiki/Web_Application_Description_Lan...</a>",1361724886
5274852,comment,5272960,5272960,1,0,tytso,,,"The e2tools command line utilities should work just fine on OSX.  I'm surprised no one has bothered to make OSXFUSE work with an ext3/4 driver, but it should be pretty simple.  The libext2fs library which ships with e2fsprogs is pretty easy to make work with userspace applications.  The the e2tools package uses libext2fs, and there have been FUSE drivers which use libext2fs.  I can ask around see if there are some FUSE developers who could update an ext2/3/4 driver that works with OSX and Windows.",1361724839
5274851,comment,5273110,5273303,1,0,itistoday2,,,"I'm not entirely disagreeing with you. If you look at what I said, I wasn't really taking issue with the overall theme of her message, I was taking issue with how she chose to express it and some of the specific assertions she made. Gran and this woman would be making the same mistake: assuming that their life experience is somehow representative of the life experience of someone else. Sure, it's nice to listen to others and learn from the lessons they learned, but don't go telling others that they will have the same experiences you had, as though they are inevitabilities. I'd get mad at gran if she had said that too.",1361724828
5274850,comment,5274550,5274550,1,0,olegp,,,"I've gone a step further and converted the JSON definition into JavaScript method calls: <a href=""https://github.com/olegp/restwrapper"" rel=""nofollow"">https://github.com/olegp/restwrapper</a><p>RPC FTW ;)",1361724794
5274849,comment,5273575,5274809,1,0,garrettdimon,,,"It's an LLC, but for better or worse, that's not a decision that we put a lot of time into. So it's probably not a meaningful data point.",1361724779
5274848,story,,,92,36,profquail,"Hulk: A Haskell IRC server",http://chrisdone.com/posts/hulk-haskell-irc-server,,1361724751
5274847,comment,5269719,5274769,1,0,bmelton,,,"If you would summarize that as the gist of my argument, then you clearly did not read it.  That portions of my argument rest on the precedence of case law, is appropriate.  Legal decisions in this country are generally decided on exactly that, and not the half-cocked rhetoric you put forth.<p>For what it's worth, I could put forth statistics that show that guns are used to deter crime at a rate of 80 times the rate with which they are used to commit crime.  I could put forth statistics of how many lives were saved the by presence of a firearm.  I can show other factors that would mitigate gun crime far and above the proposed legislation.<p>If we're really going to ignore the Constitution though, why would we ban rifles at all, when the sweeping majority of gun crime is done using handguns?  Why not ban those?  If we're trying to save lives, then why look at guns at all?  Why not ban alcohol, or automobiles, or things that contribute to heart disease (the leading cause of death in the US), or foods contributing to Diabetes, or poisonous toxins.  All of these contribute to more deaths than guns.  In 2011, more deaths were attributable to blunt objects than rifles - should be ban heavy things?",1361724749
5274846,comment,5273575,5273575,1,0,jt2190,,,"<p><pre><code>  > Didn't get a tech partner: I'm more of a designer first \n  > and developer second... \n</code></pre>\nGarett, you seem to be a ""designer who programs""/""programmer who designs""... Do you think of this as an advantage, or a limitation?",1361724728
5274845,story,,,4,0,kine,"6 months. 1 fear. Are you ready to lean in?",http://blog.zackshapiro.com/6-months-1-fear-are-you-ready-to-lean-in,,1361724685
5274844,comment,5274550,5274811,1,0,mtts,,,"Yes it would. Because making it <i>universal</i> enough makes it incredibly verbose and nasty to work with. JSON became popular because it was simpler than Web Services which became popular because it was simpler than CORBA which became popular because it was simpler than  just talking over raw sockets using some sort of protocol ... oh, wait.<p>Actually <i>not</i> having a ""universal"" spec helps: it forces every provider to give some thought to how to make his API as lean as possible. Hopefully.",1361724666
5274843,comment,5273498,5273740,1,0,eCa,,,"This is one: <a href=""http://news.ycombinator.com/item?id=4461427"" rel=""nofollow"">http://news.ycombinator.com/item?id=4461427</a>",1361724646
5274842,comment,5273498,5273604,1,0,rimantas,,,"So, which <i>Ruby</i> security vulnerabilities were announced in 2013? I'll settle for ten instead of ""tens"".",1361724631
5274841,story,,,34,3,benjlang,"The arcane art of cold emailing bloggers",http://www.startupmoon.com/the-arcane-art-of-cold-emailing-bloggers/,,1361724628
5274840,comment,5274550,5274763,2,0,shurcooL,,,"Personally, I just assume that implicitly.",1361724587
5274839,story,,,5,0,ohadfrankfurt,"Live from Mozilla's Firefox OS event",http://live.theverge.com/firefox-os-mwc-2013-live-blog/,,1361724545
5274838,comment,5274550,5274638,5,0,algorithmmonkey,,,"true story. we could do worse than moving toward something like: <a href=""http://stateless.co/hal_specification.html"" rel=""nofollow"">http://stateless.co/hal_specification.html</a>.",1361724544
5274836,comment,5274550,5274609,10,0,randomdrake,,,"Agreed. I came here to post something similar but I was going to mention working with SOAP[1] in addition to what you mentioned. It sounds like the OP is trying to do something which sounded very much like using SOAP and XML to me.<p>To paraphrase the OP, ""Since so many APIs can be described in similar terms, why don't we have some sort of standard that one can look at to identify how to use the API instead of letting the API speak for itself?""<p>When you start going down this track, you're not only making things complicated on the client's end of things. On the server side, you're having to maintain two things for the API now. First: the ruleset, ensuring it's 100% to spec lest a client fail. Second: the code generating the response in the first place.<p>I've built clients and servers for both RESTful and SOAPy APIs and I can say I would take REST any day.<p>[1] - <a href=""http://en.wikipedia.org/wiki/SOAP"" rel=""nofollow"">http://en.wikipedia.org/wiki/SOAP</a>",1361724527
5274835,comment,5274550,5274550,1,0,johtso,,,"<a href=""https://github.com/dstufft/slumber"" rel=""nofollow"">https://github.com/dstufft/slumber</a>",1361724526
5274834,comment,5273975,5274434,3,0,sorbits,,,"Adding to that, his stated advantage of not having to limit yourself to one platform also seems opposite of my experience (i.e. keeping all on the same platform <i>is</i> an advantage).<p>When you have a big system with disjoint parts written in different languages, re-use and refactoring is a pain, and redundancy is almost certain to creep in (and with redundancy often comes inconsistency).",1361724518
5274833,comment,5273975,5273975,1,0,lukego,,,"My current theory is that a good program should compile in less than 1 second into an executable of less than 1 megabyte.",1361724515
5274832,comment,5274550,5274609,5,0,Geee,,,"I don't think there is a well-known way to self-describe available and required parameters nor any other validation requirements, or am I wrong?",1361724508
5274831,comment,5273498,5273498,2,0,moron4hire,,,"Congrats, Ruby Team. Always good to see a new release. Onward and forward.",1361724507
5274830,comment,5274742,5274742,3,0,kintamanimatt,,,"The answer, as with many things is: it depends.<p>What does your CLI app do? What platforms are you intending it run on? Is it going to be doing a lot of CPU-intensive work? Is this CLI app going to be long-lived, run infrequently (e.g. fsck), or run perhaps many times a day by an actual real user (e.g. grep)? Is your app expended to be part of a Unix pipeline? All of these things are the real deciding factor between a compiled language and scripting language.<p>If it's not doing anything particularly computationally expensive, perhaps a scripting language like Ruby or Python. Hell, you could even do it with JavaScript with NodeJS. CLI apps are usually utilities and their start-up time often matters. With any of these scripting languages there will be a palpable start-up time. This might not be so important if your CLI app is to be run infrequently, or is otherwise something that's long-running.<p>If you're writing something that's going to munch and crunch data, or is otherwise doing a lot of calculations, or is going to be run frequently and needs a fast start up time, Go, C, C++ are good bets. There are probably others that may be appropriate, but I'm not familiar with Haskell, etc.<p>The vast majority of CLI utilities are written in C or C++ and this is for a reason. Not many are written in scripting languages, although some are, such as Puppet, Vagrant, Fabric, etc.",1361724506
5274829,story,,,1,0,robdoherty2,"The Believer - Leaving the Witness",http://www.believermag.com/issues/201302/?read=article_scorah,,1361724502
5274828,story,,,1,0,mmphosis,"Mark Stock - lightning talk at the Leaders in Software and Art Conference (2012)",http://www.youtube.com/watch?v=zReEz7VLTQU,,1361724497
5274827,comment,5274550,5274692,3,0,onlyup,,,"It irritates me too.",1361724479
5274826,comment,5274550,5274774,1,0,mtts,,,"Well, to be fair, JSON is at least a lot less verbose than WSDL. So there's that.",1361724464
5274825,comment,5274550,5274812,5,0,raverbashing,,,"Yes, you're right<p>But it still looks like they pulled some rules out of nowhere and are enforcing them.",1361724461
5274824,comment,5274550,5274692,1,0,njy,,,"Try reading that with the voice of Morgan Freeman. Now THAT is something you would likely do :)",1361724449
5274823,story,,,1,0,llambda,"Magic Bitboards",http://www.rivalchess.com/magic-bitboards/,,1361724447
5274822,comment,5274463,5274644,2,0,ellie42,,,"It is. Luckily enough that was fixed in rails recently: <a href=""https://github.com/rails/rails/commit/31f807c7aaaf12c16ea1572559c00f49d54d6f43"" rel=""nofollow"">https://github.com/rails/rails/commit/31f807c7aaaf12c16ea157...</a>",1361724439
5274821,comment,5273975,5273975,2,0,mimog,,,"Isn't this ""the Unix way""? I have seen this style of small cohesive programs promoted a lot in Linux/Unix literature so the advise isn't really breaking any new ground. Look at git for instance. The advise is of course sound but it goes against the ""enterprisy"" way of doing things, in part because they tend to be using huge frameworks from the get go.",1361724427
5274820,comment,5274437,5274750,0,0,Goranek,,,"totally agree with you",1361724407
5274819,comment,5273975,5274734,1,0,michaelochurch,,,"On the anti-Java bias, I think the issue is that there's more than one Java culture. There's the horrid commodity developer culture, but that's not the language's fault.<p>I'm actually a pretty big fan of static typing. You don't get static typing's main benefits in C++ or Java, though. You have to use a language like Haskell or Ocaml, or the right subset of Scala, to see the major benefits of that.<p>Open-source is a bit different because people choose whether they contribute to a project. The quality of code in the active open-source world is leagues above what you find in typical enterprise codeballs, because of survivor bias. No one has the authority to mandate that code be maintained by others, so the messes are cleaned up by people who actually care, not people slogging through it to keep a paycheck coming.<p>The big-program methodology of the corporate world is the evil. In FOSS, the major projects are an unusual set-- code-quality at a high level just not seen in the for-paycheck commodity-engineer world and large <i>because of</i> success-- rather than the reverse. There's a survivor bias that occurs because the best projects are the only ones people pay attention to.<p>The corporate world is screwy because projects become large or small based on political reasons that have nothing to do with code quality. In the FOSS world, code-quality problems related to growth will be self-limiting because no one has the authority to ""force"" the program to grow.",1361724398
5274818,comment,5273498,5274028,1,0,philwelch,,,"Mixing keyword and non-keyword arguments isn't entirely ugly. It is in the ""foo"" case since ""foo"" is deliberately meaningless, but when there's one principal argument and the other arguments tweak or override the method's behavior, it's fine.",1361724393
5274817,story,,,4,2,geogra4,"What your culture really says",http://blog.prettylittlestatemachine.com/blog/2013/02/20/what-your-culture-really-says,,1361724389
5274816,comment,5274437,5274547,0,0,Goranek,,,"lame attitude",1361724375
5274815,comment,5274437,5274437,0,0,Goranek,,,"Wow nice !!!",1361724353
5274814,comment,5274463,5274796,1,0,jeffdavis,,,"There are different ways to overlap, too, so I don't think it's correct to say that there are only 4 states.",1361724340
5274813,comment,5274550,5274550,2,0,hhariri,,,"How about stop calling REST something that is not. You'll be surprised how many things it will solve.",1361724325
5274812,comment,5274550,5274692,10,0,edanm,,,"Writing using authoritative language is very common, and widely considered a best practice.<p>I highly recommend you simply accept it as what it is: the way some people communicate, especially online. It's not worth your time/attention/care to think about this.",1361724304
5274811,comment,5274550,5274745,1,0,stan_rogers,,,"Well, it wouldn't be so bad if it were <i>universal</i> enough, but we'd probably have to wrap it in some sort of inter-ORB protocol for the internet or something...",1361724244
5274810,comment,5274463,5274672,3,0,nona,,,"Maybe a Date should be a Range of Time? Even a specific date is a 24h interval.",1361724201
5274809,comment,5273575,5274214,1,0,databus,,,"Great deck! What business entity type (sole proprietorship, llc, ...) did you end up going with and has it changed over time?",1361724200
5274808,comment,5273000,5274267,2,0,unkoman,,,"It can't become what it already is.",1361724179
5274807,comment,5273769,5273769,1,0,sramsay,,,"Immediately put me in mind of this recent HN thread:<p><a href=""http://news.ycombinator.com/item?id=5232643"" rel=""nofollow"">http://news.ycombinator.com/item?id=5232643</a>",1361724165
5274806,story,,,1,0,jjude,"Consequences - Cognitive Edge Network Blog",http://cognitive-edge.com/blog/entry/5912/consequences,,1361724158
5274805,comment,5274726,5274726,1,0,Foomandoonian,,,"Like a priority inbox for Twitter. I've wanted this since very early on. Some of the best tweeters get drowned out.<p>It says a lot that Twitter basically gave this power to advertisers (promoted tweets) for them to put themselves in front of us more visibly.",1361724156
5274804,comment,5274383,5274765,5,0,heldtogether,,,"Fair comment, but I've been programming for 10 years (although I know that's not what your point is getting at). Your fears are fairly moot though, the app isn't networked (yet) and is fully self contained meaning that no one has access to your data except for you.<p>If I get to a stage where there are enough people demanding networking then I imagine my age won't be much of a concern any more.",1361724139
5274803,story,,,3,2,breck,"Startups and Planes",http://breckyunits.com/startups_and_planes,,1361724119
5274802,comment,5271034,5271409,1,0,rb2k_,,,"I don't currently have a grudge with any airline :)",1361724106
5274801,comment,5273430,5273430,3,0,npsimons,,,"Some valid points, but I was hoping for more meat, maybe references to what I call ""dark corners"" of C++. Take, for instance, writing a simple logging class that can log to multiple places and can be used in place of std::cout. The solution I initially came up with is a variation on <a href=""http://wordaligned.org/articles/cpp-streambufs"" rel=""nofollow"">http://wordaligned.org/articles/cpp-streambufs</a>, with some manipulator magic thrown in to adjust severity level. Ah, but that's not good enough, you have to pull some interesting gymnastics to ensure order of IOStream initialization: <a href=""http://accu.org/index.php/journals/264"" rel=""nofollow"">http://accu.org/index.php/journals/264</a>. And after all that, I'm still not sure it works, as looking at the data structures in a debugger looks like garbage (guess why I'm in the debugger in the first place).<p>All that being said, I still love C++. I'm glad I know it as well as I do so that I can (usually) avoid problems, but even then I run into compiler (or build!) dependent problems that shouldn't be happening. C++ has problems, and we need to address them. I'm happy to say that even though I am stuck with old compilers that have inscrutable template error messages, time moves on and I am aware of this problem being fixed in newer versions of compilers.",1361724081
5274800,comment,5274049,5274450,1,0,Surio,,,">>In the US, we seem to have this sense of superiority on this issue, but I think our tolerance of risk is paper-thin. It's superficial.<p>Hmmm... Judging by the overall comments so far, it seems every culture seems to has an acute (and accurate) sense of its own thin-skinnedness that another cultures' perception of them. Most of the points you make is validated by another article making rounds in the first page here: <a href=""http://news.ycombinator.com/item?id=5270460"" rel=""nofollow"">http://news.ycombinator.com/item?id=5270460</a>\n From the article linked to that thread:<p><i>When I was raising my first round, it fell apart because an A-list investor who had given us a verbal commitment backed out. He did this because he had heard from his friend, who I had went out for beers with, said that we were struggling and unsure of what we were doing. </i><p>>> The problem is that human nature is to pick leaders based on apparent success, and to ostracise failures.<p>Given that you've framed it like so, that nails it then? Status quo as it is now, is not going to change anytime soon! Let's stop wasting our time and get on with the rest of our lives, doing whatever it is that we are currently doing, eh? :-| [wry smiley]<p>P.S: Not being sarcastic, or picking on you in my reply. Hope that comes out clear :-/",1361724069
5274799,comment,5274463,5274788,3,0,tommorris,,,"Oh sure, I know the full extent of the madness. At a previous job I was working with XML Schema durations to represent energy emissions data. It gives me bad memories.",1361724059
5274798,comment,5273498,5273872,6,0,djur,,,"There's been a substantial retreat from modifying builtins in library code in the last 1-2 years anyway.",1361724033
5274797,story,,,1,0,patco,"Nice amazing pictures",http://funnystuffworld.blogspot.com/2013/02/amazing-nature-pictures.html,"We should love the nature and right now I would like to show you some of my favourite nature pictures",1361724003
5274796,comment,5274463,5274672,1,0,ibotty,,,"of course you can compare them (4 states: before, after, same, overlapping). you cannot put them into an order. that's something different.",1361724001
5274795,comment,5274025,5274025,4,0,jackalope,,,"Possible improvements occur to me:<p>1. If indentation is significant and required, dotted notation should be optional:<p><pre><code>    [foo]\n        [bar]\n            [car]\n</code></pre>\nThe parser should be able to understand that this results in a foo.bar.car structure without explicitly using dotted notation in the keys.<p>2. Support include files. With #1 implemented, includes would be extremely powerful and flexible. Since indentation is required, no special syntax is needed to relatively position the included files. And without requiring dotted notation in keys, include files can be reused in a configuration (such as common settings in the [servers] section of the example).",1361723995
5274794,comment,5274022,5274674,1,0,walshemj,,,"Its how I understand no follow - Used in  login and print page links and the like to stop the creation of massive numbers of duplicate pages.",1361723981
5274793,comment,5274550,5274550,1,0,spo81rty,,,"We need WSDL for REST to solve this problem.  Then we could code generate clients.",1361723962
5274792,comment,5274499,5274499,1,0,devonbarrett,,,"<i>""I have never wished to cater to the crowd; for what I know they do not approve, and what they approve I do not know.""</i>\n-Epicurus",1361723954
5274791,comment,5274550,5274763,2,0,Goranek,,,"Yes! :)",1361723953
5274790,comment,5267831,5272382,1,0,mistercow,,,"It isn't <i>only</i> for that, and as I said, it doesn't <i>have</i> to be used for that. But it's an effective way to do things, and it is one of the purposes of the construct.",1361723951
5274789,comment,5274550,5274763,4,0,mattdeboard,,,"Yes. Assuming guru voice just makes you sound like a blowhard.",1361723951
5274788,comment,5274463,5274735,2,0,sorbits,,,"ISO 8601 is large standard and predates the internet (as we know it) and seems like an attempt of formalizing all the many different ways people expressed dates (on physical papers in addition to computer systems), and also some ways no-one would ever use.<p>I think youll find a lot of APIs (or formats) claiming to support an ISO 8601 date when in fact they mean a date of the form YYYY-MM-DD  its a common misunderstanding, but I think better that, than actually allowing the full range of dates allowed by the actual ISO 8601 standard :)",1361723950
5274787,comment,5273498,5274041,5,0,djur,,,"Ruby doesn't have an equivalent of Perl's 'local'.",1361723917
5274786,story,,,1,0,ClaudioDominech,"Amandha Fox contro il Porcellum: una provocazione condivisibile ma fuorviante",http://www.claudiodominech.com/?p=1651#.USpCAgHTVW0.hackernews,,1361723909
5274785,comment,5274194,5274694,1,0,mds101,,,"Thanks for your comments.<p>1. Yes, we are planning on writing a few blogs emphasising the need for product tours, which we will be including in our 'cold call' sales emails to newly launched apps.<p>2. Branding: we chose 'Easy Product Tours' for easy remembrance and google-ability. We think we can build a decent brand around that name.<p>3. Sounds good. We'll give some thought to how we can implement a refferal program.",1361723885
5274784,comment,5274022,5274602,1,0,walshemj,,,"You wont like it when you get a UGC spam penalty though - had to sort one of those out for one of Reed Elsivers sites.",1361723873
5274783,comment,5274550,5274745,2,0,ayushgta,,,"Oh Shit! Common Object Request Broker Architecture!! I'd thought all fellow humans from that era had been killed and buried :)",1361723871
5274782,comment,5274550,5274774,3,0,taude,,,"whoops, just saw other comments on the whole, feels like WSDL all over again.",1361723816
5274781,comment,5274463,5274463,2,0,gcv,,,"While we're on this subject, does anyone know of a decent C or C++ date-time library? Something like Joda Time. I know Boost has a couple of options but they look a bit less capable.",1361723801
5274780,comment,5274550,5274692,6,0,TallboyOne,,,"I was just thinking that, I hate article titles that are phrased exactly as a command and it's merely a blog post that wants to change an entire body of thought that's well founded.",1361723785
5274779,comment,5274437,5274738,4,0,Nagyman,,,"We use Grappelli. It's a nice facelift and adds extra admin functionality too. Unfortunately, the entire django admin is due for a bit of an overhaul (more talk than action at this point I believe). It implemented a pseudo-class based view before they were a thing, and just changing the admin app to use the standard CBVs would be a big win.<p>Kudos and credit to the authors of the original admin application  there's a hook for almost anything making it incredibly flexible. My major gripe has been template overriding (lot's of copy-pasting entire templates just to add a new block); but at least it's possible.",1361723771
5274778,comment,5274117,5274413,2,0,general_failure,,,"Did you mean complaints?",1361723757
5274777,story,,,4,0,iProject,"Why Local Commerce Will Be Larger Than E-Commerce For The Next Decade",http://techcrunch.com/2013/02/24/brick-and-mortar-wins/,,1361723753
5274776,comment,5274550,5274692,2,0,Goopplesoft,,,"I was thinking about this yesterday, but its seems like HN likes that kinda thing. Lots of frontpage article are direct orders from blogs with who knows what credibility.",1361723737
5274775,story,,,1,0,greenvaio,"RNA --""DNA's Messenger, or the Origin of Life on Earth?"" ",http://www.dailygalaxy.com/my_weblog/2013/02/rna-dnas-messenger-or-the-origin-of-life-on-earth.html,,1361723735
5274774,comment,5274550,5274550,5,0,taude,,,"Hmmm....JSON documents (jsonSpec) describing the restful services is the new WSDL, feels like 2002 all over again.<p>I think too many people consume REST APIs in different manners, utilizing different data in unique relations. This is the beauty of it.",1361723728
5274773,comment,5274550,5274714,2,0,ayushgta,,,"Json Schema is pretty good at describing data coming through JSON. But describing (REST) APIs requires more. For example a standard way to describe API endpoints with parameters and response types, errors, related models, default/allowable values etc. This was what the OP was referring to and this is what Swagger is trying to do. The Swagger Spec is here with some more details on whats required in addition to JSON Schema to document APIs: <a href=""https://github.com/wordnik/swagger-core/wiki/API-Declaration"" rel=""nofollow"">https://github.com/wordnik/swagger-core/wiki/API-Declaration</a> Incidentally model/data specifications in swagger spec does map closely with json schema.",1361723704
5274772,comment,5252757,5259254,1,0,walshemj,,,"well compared to Seattle anywheres weather is better :-)",1361723704
5274771,comment,5274393,5274393,1,0,throwaway1979,,,"No really ... how do doers do? I got married recently and have a full time job on weekdays. It has been an immense challenge to find time to work on personal projects now that I am no longer single. I've known some weight lifters who wake up early or go to bed very late in order to get in their workouts (I've had some success with this but have gotten overwhelmed after a few days). Any HNers have tips on how to live the hacker life while maintaining marital bliss?",1361723689
5274770,comment,5274731,5274731,1,0,uzairjawed,,,nice!,1361723686
5274769,comment,5269719,5274677,1,0,rooshdi,,,"If your whole argument rests on the words of a constitution, I don't know what to tell you. I still stand by my argument and have provided several sources in doing so.",1361723674
5274768,comment,5274117,5274253,1,0,danielgrieve,,,"It isn't web-based but <a href=""http://www.fuelcollective.com/permute"" rel=""nofollow"">http://www.fuelcollective.com/permute</a> is a nice tool.",1361723630
5274767,comment,5266418,5274601,1,0,walshemj,,,"MM ever worked in a traditional factory type setting? all the workers collectively do this and if you not you would get sent to Coventry.<p>And this is tame compared to what used to happen back in the 70's in engineering ""go slows"" and backhanders paid in brown paper envelopes - I was told ""even the tea boy got 900"" about a 1/3 of the average wage at the time.",1361723624
5274766,comment,5273430,5273430,-1,0,rspring,,,"Yea, let's write all of our higher level object juggling in C++! Such a nice language, isn't it? And there aren't much alternatives either, right?\nLet's be honest: if you find yourself complaining about C++ syntax and error messages while coding your higher level logic, chances are you either like the pain or you have lived under a rock for the last 15 years. In the latter case, go open your browser and type ""Python"" (or ""JNI"" or ""Javascript"" for that matter).",1361723624
5274765,comment,5274383,5274383,3,0,sc0rb,,,"You look like a kid and I don't trust you with my data. Why are all these types of 'startups' done by people with absolutely no experience that probably only learnt rails (or some other such low barrier to entry tech) this year?<p>Before the down votes roll in. This is a legit concern that ordinary customers could easily have.",1361723599
5274764,comment,5274711,5274711,1,0,MrPowers,,,"There are also JavaScript, Rails, Git, and Unix practice questions on the site.  I tried to make the quizzes like The Little Schemer because that learning style works best for me.",1361723597
5274763,comment,5274550,5274692,3,0,shurcooL,,,"Would it help if he prefixed it with ""In this article, I argue for why I believe that you should""?",1361723592
5274762,comment,5274550,5274748,1,0,petercooper,,,"It's still XML but that does look closer. I thought the other commenter was joking that this existed.. :-)",1361723575
5274761,comment,5274550,5274550,2,0,phatbyte,,,"Can someone please explain me why it doesn't scale ? True question.",1361723574
5274760,comment,5271245,5271245,1,0,timmm,,,"I usually don't like things like this, but I just used it for fun and was actually pretty cool and funny.",1361723559
5274759,comment,5274198,5274198,1,0,devonbarrett,,,"chargify.com is the best I have used for something like this, and it didn't take too long to integrate. However, in the long run I would probably opt to manage it all myself for the flexibility.",1361723554
5274758,comment,5274025,5274092,1,0,luser001,,,"You seem picky. :) But check out libconfig. Maybe it'll work for you.",1361723547
5274757,comment,5274437,5274437,8,0,oellegaard,,,"I'm very excited to see this ecosystem of paid django apps starting up. Hope there will be more commercially supported open source django in the future (with the obvious effect being more development effort and faster bugfixing).",1361723543
5274756,comment,5271770,5272963,1,0,xtacy,,,"You're welcome.  There's a Mininet AMI too if you want to get started quickly!",1361723517
5274755,comment,5273498,5274039,13,0,lobster_johnson,,,"As a former Python dev, I find the Ruby community to be just as positive an experience as the Python. Different, but just as positive.<p>Any community will have stratas of personality types that exist in various proportions:<p>* The loudmouth alpha types (DHH, Zed)<p>* The playful jesters (_why, Tom Preston-Warner) who are often evangelists<p>* The sharp-minded, code-focusing engineer types code (lots!)<p>* The newbies (lots, too!)<p>The Ruby community has been perceived as blighted with in-fighting, but it is, in my opinion, rather a case of certain people, the first type, trying to be public leaders, and failing at it. Those big sounds are just ill-considered publicity stunts. It's clear that DHH wants to be the Linus Torvalds of the Ruby community, blasting his way through perceived idiocy with profanity-filled speeches appealing to common sense and good engineering. Zed seems to want to be Jamie Zawinsky. Leadership does not come from being loud.<p>Ruby has its share of the playful and weird. Sometimes they give the impression of hyping something, because they bring with them their rosy-tinted version of the world where everything is fun and great. Sometimes they come across as glib and obnoxious because, well, they are, a bit. Overall I think they are an asset.<p>These two types are the people you encounter if you follow blogs and tweets, precisely because those two personality types depend on publicity. The Ruby community will certainly <i>seem</i> overrepresented by idiots if you go that route. But if you go on the Ruby mailing list you will see a different community, one that looks more like the Python people. Matz and many other core devs are conservative, highly technical, mature, and very helpful. There are also many low-visibility sub-communities that are very professional. My local Ruby meetup community in Oslo [1] is a wonderful bunch of highly technical, development-focused people who have none of the negative traits you describe. And if you go back to the question of what a community is supposed to provide -- help, insight, direction, ideas -- there are tons of great people.<p>That said, do I think the proportion of highly-skilled, high-technical is somewhat smaller in the Ruby community than the Python community? I do. Python has gained acceptance in more conservative, engineering/science/maths-oriented environments where Ruby has not yet reached, partly because of tools like SciPy. In fact, my feeling is that Python seems generally to attract a higher proportion of ""engineer types"" who are attracted by Python's rigidity (one way of doing things, etc.), compared to Ruby's often extreme malleability and laxness. This also means that the Ruby community is potentially missing out on some hard-core devs, and without support from the engineering/science/maths sphere it's never going to get things like SciPy.<p>And as for the newbies, Ruby has perhaps a bigger than usual share of inexperienced devs who are pollute the library space with lower-quality code. I blame this on the fact that Ruby is so simple to learn and has attacted many people through Rails, and this gives some devs a false feeling of confidence. I have had my share of time spent wading through other people's bug-ridden, ill-architected Ruby gems, but then if anything it's taught me to be careful.<p>[1] <a href=""http://irb.no/"" rel=""nofollow"">http://irb.no/</a>",1361723501
5274754,comment,5274025,5274744,1,0,lutusp,,,"> How many less characters could there be<p>""Less"" characters? Do you mean physical smaller characters, like ""e"" instead of ""E""? Or do you perhaps mean <i>fewer</i> characters?<p><a href=""http://en.wikipedia.org/wiki/Fewer_vs._less"" rel=""nofollow"">http://en.wikipedia.org/wiki/Fewer_vs._less</a>",1361723491
5274753,comment,5274025,5274579,2,0,cmwelsh,,,"I like to put comments in my configuration files. How do you comment out blocks of a JSON configuration file?",1361723479
5274751,comment,5271770,5274387,1,0,xtacy,,,"The first two programming assignments can be found here: <a href=""http://www.scs.stanford.edu/10au-cs144/lab/reliable/reliable.html"" rel=""nofollow"">http://www.scs.stanford.edu/10au-cs144/lab/reliable/reliable...</a>.  The 2012 assignments were the same.",1361723462
5274750,comment,5274437,5274547,3,0,Nagyman,,,"It gives me more confidence in the project. If someone has a vested interest ($) in making sure it's a polished and maintained application, then a nominal fee is welcome. Free for non-commercial is more than fair.",1361723419
5274749,comment,5273839,5273839,2,0,alanctgardner2,,,"On Chrome on Android I got a mixed-content error; some of the assets on the page aren't over HTTPS, or there's an intermediate cert missing. That might be a good thing to fix in an SSL tutorial",1361723347
5274748,comment,5274550,5274652,5,0,gluegadget,,,"<a href=""http://en.wikipedia.org/wiki/Web_Application_Description_Language"" rel=""nofollow"">http://en.wikipedia.org/wiki/Web_Application_Description_Lan...</a> ?",1361723327
5274746,comment,5273164,5274057,2,0,lutusp,,,"> Apart from the fact that the opposite of government worker is not ""civilian""<p>I could have said ""citizen"" but that coinage sounded a bit too Orwellian.<p>> random gov't employees are not supposed to play spokespeople.<p>Yes, true, and in some places like the military, this is very clearly spelled out by ordinance -- military personnel must avoid engaging in political advocacy while in uniform.",1361723248
5274745,comment,5274550,5274550,2,0,eintr,,,"Yeah, let's do CORBA once again. No thanks.",1361723248
5274744,comment,5274025,5274730,2,0,nicksergeant,,,"How many less characters could there be while still maintaining meaning? Could you show an example of what you'd prefer?",1361723242
5274743,comment,5273975,5274635,12,0,NateDad,,,"Most enterprise systems start off with requirements similar to those you think of with a database - a lot of data with high expectations of performance.<p>For example, the program I work on has to support a million row database that can be sorted and filtered both on the server and client with subsecond response time.  The program is incredibly configurable based on data in the system, so many of the features depend on reading data and reacting to it.<p>The problem with ""many small programs"" is the cost of communication. I can pass a pointer to a list of 100,000 items to be sorted and filtered in a trivial amount of time. If I have to serialize that list to json to pass to a separate program that then has to deserialize that list and perform the function, then reserialize the sorted/filtered list, send it back, re-deserialize....  it'll take longer to do the communication than it does to do the sort.<p>However, that's not to say that the <i>idea</i> of separation of concerns still can't be applied to large program. And in fact, most enterprise devs do exactly that. That's what all these ""services"" are in the program. Except that instead of having to serialize data, I can just pass them a pointer.<p>Just because you can't <i>see</i> all the different programs, doesn't mean they're not there.",1361723236
5274742,story,,,4,6,klaussilveira,"Ask HN: Best high-level language for CLI application?",,"What's the most appropriate language to develop a large CLI application? By appropriate, i mean:<p>* Good framework for CLI usage (input, output, auth, etc)<p>* Performance<p>* Low, or none at all, dependency-hell",1361723224
5274740,comment,5273769,5274263,1,0,petercooper,,,"<i>Or even optionally tweak the gendered words on the fly?</i><p>""That's not how <i>quotes</i> work."" - Mary Magdalene.",1361723196
5274739,comment,5273575,5274237,1,0,raphinou,,,"Thanks for the links!\nDo you know of communities of self-employed/micro-entrepreneurs? I'm not interested in a booming startup scenario, rather looking to build a sustainable business.",1361723182
5274738,comment,5274437,5274437,3,0,anandkulkarni,,,"It's always great to see more Django admin customizations!  Here's another one that I found that looks like it can jazz up the admin interface.<p><a href=""http://www.grappelliproject.com/"" rel=""nofollow"">http://www.grappelliproject.com/</a><p>Perhaps in some future release Django will incorporate one of these as standard. It's not much work to clean up the CSS each time, but it'd be one less thing to do in building great Django apps.",1361723181
5274737,story,,,1,0,ycombwin,"What Does Hyperinflation Look Like? Just Take A Look At The Weimar In 1923",http://denisgobo.blogspot.com/2008/11/what-does-hyperinflation-look-like-just.html,,1361723179
5274736,comment,5272189,5272685,1,0,nodemaker,,,"<i>""The current VC-funded startup scene, which Ive affectionately started calling VC-istan, is not to be soft with it a total waste of time for most of the people involved""</i><p><i>""the VCs stake gives them control. It gives them board seats, influence over senior management, and the opportunity to hand out a few executive positions to their children or to people whom they owe favors""</i><p><a href=""http://michaelochurch.wordpress.com/2012/07/08/dont-waste-your-time-in-crappy-startup-jobs/"" rel=""nofollow"">http://michaelochurch.wordpress.com/2012/07/08/dont-waste-yo...</a>",1361723169
5274735,comment,5274463,5274672,7,0,tommorris,,,"Sure, it's a tough problem. The resolution to my complaint is a proper ISO 8601 implementation for Ruby.<p>Which I'll probably have to write. ;)",1361723167
5274734,comment,5273975,5274588,4,0,anon1385,,,">So why is big-program development winning? There are a couple reasons for that. First, it gives managerial dinosaurs the illusion of control.<p>So why do larger programs 'win' in the open source world as well[1]? Pop psychology about management doesn't seem sufficient to explain the phenomenon (although I'm sure it is a good way to sell a '101 habits of highly effective managers' book or get paid to give talks about management). Large systems are large, breaking them up into smaller pieces doesn't change that, but it makes navigating the code base harder (although I assume you don't care about that since judging from your blog posts you don't think tooling is important). It makes your interfaces less malleable (can be good can be bad), and moves a lot of communication to places where the compiler can't warn you about mistakes (again, if you don't care about tooling I guess this doesn't matter but I would argue that this is bad).<p>It seems to me like systems of many small separate processes is basically dynamic OOP. Everything is late bound, dynamically typed and async. It's easy to make changes and also easy to break things. You can argue that this is better for certain problems, but I don't think it's universally better, and the community seems pretty divided on the issue too: look at the popularity of Go, statically typed and building concurrency into the language rather than using the OS like in the older C world.<p>Aa an aside; surely the web developer community is eventually going to grow tired of talking about how terrible Java is and how $idea_of_the_moment is good because it's 'not java'? As an outsider the obsession seems extremely unhealthy, and leads you to bizarre places like arguing against automated refactoring or interactive debugging or static type systems just because those things are associated with Java. I guess to maintain credibility I also need to point out that I don't and have never used Java<p>[1] Firefox/Chromium vs uzbl, gcc/llvm/clang vs pcc, gdb vs printf debugging, sqlite/mysql vs directories and plain text files, perl vs sed/awk/grep shell scripts, emacs/vim vs ed/notepad etc etc.",1361723166
5274733,comment,5272960,5274600,1,0,NelsonMinar,,,"Oops, typo, updated to say $40.",1361723154
5274732,comment,5273575,5274102,1,0,Mahn,,,"> But I am afraid that the existing solutions have soaked up all the customers<p>I used to think this aswell, and I was proven wrong. I think this assumption is almost always wrong. Unless you are building a facebook competitor, you <i>will</i> find customers, regardless how crowded the market is.",1361723099
5274731,story,,,1,1,pknerd,"An easiest way to get back of your resume",https://www.remonk.com/,,1361723041
5274730,comment,5274025,5274025,2,0,fingerprinter,,,"I don't know if this is the answer, but I'm a fan of someone trying.<p>I personally never jumped on YAML or JSON. I liked that they weren't XML, but they each felt like XML++ too much for me. There was still too much, I don't know, weirdness/typing/oops! Don't get me wrong, I think they were better than XML, but only marginally. It would be nice to see more of a phase change type of approach. I'd LOVE to see something like this (or something else) that involves much less typing/special characters/etc than YAML and JSON.<p>Personal opinion.",1361723006
5274729,comment,5273000,5273460,1,0,Symmetry,,,"I think there's a difference between forgoing privacy when in public and forgoing privacy when in private.  Having anybody be able to see me when I'm on a city street is one thing, having anybody be able to see into my bedroom is another.",1361723003
5274728,comment,5273000,5273000,1,0,shoki,,,"Albert-Laszlo Barabasi talked about this sort of fear a few years ago in his boot Bursts[1].  He figured Google would be the one to do it.  Even with dropouts occurring when someone goes into a bus, people's movements tend to have low entropy[2]. Since most people's movements follow pretty predictable routines, over time the system can learn to predict most people's positions given noisy data.<p>It might not work well for criminals trying to avoid being seen by arial cameras during the day, hiding out away from their usual haunts and obscuring their faces.  It will probably be a big win for marketing data analytics firms.<p>[1] <a href=""http://www.amazon.com/Bursts-Patterns-Everything-mail-Crusades/dp/B0064XDKTA"" rel=""nofollow"">http://www.amazon.com/Bursts-Patterns-Everything-mail-Crusad...</a><p>[2] <a href=""http://www.barabasilab.com/pubs/CCNR-ALB_Publications/201002-19_Science-Predictability/201002-19_Science-Predictability.pdf"" rel=""nofollow"">http://www.barabasilab.com/pubs/CCNR-ALB_Publications/201002...</a>",1361722989
5274727,comment,5273498,5273598,3,0,steveklabnik,,,"> there haven't been any releases since 2011.<p>Every commit is a release of rbx. Yay continuous integration!<p>That said, there hasn't been a numbered release in a while, through there will be a 2.0.",1361722982
5274726,story,,,1,1,javascripter9,"Feature for Twitter, Follow, and REALLY Follow.",,"Getting lots of followers on twitter by following lots of people works well enough, but increases the noise to where you miss stuff from those you really want know about.  Let me create a REALLY Follow list that bubbles up tweets from these people to the top and hides everyone else's tweets further down on the page or on a completely different one.",1361722964
5274725,story,,,1,0,kalimatas,"Send email with diff after pushing to Github",https://github.com/kalimatas/gitdiff,,1361722947
5274724,story,,,1,0,allsociety,"Segment Your Connections For Better Networking",http://omnipapr.com/#?1190,,1361722927
5274723,comment,5273983,5274375,3,0,lutusp,,,"> Morton Feldman (1926-1987) was convinced that he was a major 20th century composer. That point of view put him in the minority. Now, 26 years after his untimely death, people are starting to agree.<p>It's Bla Bartk all over again. I wonder if there's an unwritten rule in nature that truly creative composers have to die before people recognize the value of their work?<p>A counterexample to this pattern is Philip Glass, who is receiving some recognition, but by virtue of being recognized in his own lifetime, may undercut his own reputation.",1361722916
5274722,comment,5274393,5274393,1,0,agwa,,,"It's good to have this kind of drive, but writing replacements for existing tools/libraries because they're flawed, while fun, can be an incredible distraction from the end goal of shipping your product.  I know this from experience.  It's a balancing act: sometimes it's worth it, but often you'll spend more time writing the replacement than you'd spend using the bad tool.<p>Tom Preston-Werner is also incredibly lucky that he can write a spec and overnight a half-dozen implementations crop up.  I wish that worked for me!",1361722914
5274721,comment,5273878,5274231,1,0,doe88,,,"> Are you suggesting that the need to do more than the law says?<p>No, all I'm suggesting is that Google removes this link [1] as asked by the author of the book. Again, I fail to see what's hard to understand.<p>> Whatever Google does, the content is still available. It's been posted to Usenet news at least once. (<a href=""http://binsearch.info/?q=Object+Oriented+Software+Constructi..."" rel=""nofollow"">http://binsearch.info/?q=Object+Oriented+Software+Constructi...</a>)<p>Google is not responsible for others indexing systems, I've never said otherwise.<p>[1] <a href=""http://www.imagebam.com/image/e2e9df239055991"" rel=""nofollow"">http://www.imagebam.com/image/e2e9df239055991</a>",1361722913
5274720,comment,5272634,5272634,3,0,billpg,,,"Dear industry, if you are going to add comments to JSON, please make it the /* */ variety.",1361722896
5274719,comment,5270320,5273425,1,0,protomyth,,,"""military high command decide""<p>No, that's what we elect congress to deal with.  We do not want the ""permanent undersecretary"" problem showing up in the US like it has in various other governments around the world.  Its bad enough much of the regulation we have to deal with was never voted on by congress after seeing what the consequences of their legislation was.  That's where the money is in government and what directly affects the voters.<p>Congress cannot pass anything over a two year budget because that would be unconstitutional.",1361722874
5274718,comment,5273498,5274466,1,0,estavaro,,,"Exactly. In Python you still pass ""self"" to the method. In Ruby and Dart it's not needed.<p>In Python I've seen Python users discourage the use of classes. I haven't seen the same distrust of classes in Ruby for instance. It's as though Python has unresolved OO issues. Python could take pride in being ""multi-paradigm"", whereas languages like Ruby and Dart could take pride in being more OO.<p>Regarding the C extensions of Ruby, I think the bottomline is that from int, to booleans, to null, to classes, everything is considered OO even in the C code. So common functions can be applied to them even from C, say like Polymorphism would in other languages. From the primitives on up everything is like a high level Ruby. As Python is more ""multi-paradigm"" perhaps some of its C extension features aren't as OO as Ruby's are.<p>Funny though that those C extensions that make Python and Ruby so popular end up making other implementations of those languages that target other runtimes incompatible as they don't have access to those C extensions. So even in that regard they are similar.<p>Say we can't find anywhere in Python where Objects don't exist. Then welcome on board of true OO. Now show OO some love and stop discouraging the using of classes. Maybe drop the ""multi-paradigm"" approach. I know though that like JavaScript, sometimes you have to live with the shortcomings of the programming language in its support of OO. So while JavaScript could be said to have Objects everywhere, and it truly does, writing classes in JavaScript is not a settled issue. That's why I like Dart instead:<p><pre><code>  class A {\n    var aList = ['a', 'aa'];\n    get length => aList.length; \n  }\n  \n  class B {\n    var aList = ['b', 'bb', 'bbb'];\n    get length => aList.length; \n  }\n  \n  class C extends A {\n    var aList = ['c', 'cc', 'ccc', 'cccc'];\n  }\n  \n  printIt(o) {\n    print(""${o.aList}: ${o.length}"");\n  }\n  \n  void main() {\n    printIt(new A());\n    printIt(new B());\n    printIt(new C());\n  }\n</code></pre>\nResult of running it:<p><pre><code>  [a, aa]: 2\n  [b, bb, bbb]: 3\n  [c, cc, ccc, cccc]: 4</code></pre>",1361722869
5274717,story,,,1,0,Yolz,"Palette Extractor",http://media4x.com/palette-extractor/,"Find design inspiration with natural image palletes extracted using k-means clustering algorithm.\nUpload your image in JPG or PNG format. Then select any section of the image and click ""Submit the Selection"".",1361722854
5274716,comment,5272575,5273780,1,0,barumrho,,,"By Lemer & Company in the patent infringement claim that I received. I am guessing that after GTTA got sued, they decided to settle and license the patents.",1361722854
5274715,comment,5274437,5274437,8,0,kmfrk,,,"Personally, I prefer django-admin-bootstrapped: <a href=""https://github.com/riccardo-forina/django-admin-bootstrapped"" rel=""nofollow"">https://github.com/riccardo-forina/django-admin-bootstrapped</a>, but the more competition the better.",1361722843
5274714,comment,5274550,5274550,4,0,feralmoan,,,"Isn't this what <a href=""http://json-schema.org"" rel=""nofollow"">http://json-schema.org</a> aims to provide? Or am I missing something.  It's a solid spec.",1361722843
5274713,comment,5273498,5274572,2,0,steveklabnik,,,"> it still uses string parsign<p>This is false, at least after tenderlove did all his work to re-write arel.",1361722808
5274712,story,,,1,1,Yolz,"Site Load Test",http://media4x.com/site-optimizer/,"A practical tool for speeding up your website, helping you to receive more search engine traffic and making your ads perform better.",1361722805
5274711,story,,,1,1,gklein,"Codequizzes - Free Ruby quizzes ",http://www.codequizzes.com/,,1361722803
5274710,comment,5273000,5273460,3,0,noarchy,,,"By ""everyone"" do you include the government? This always seems to be the big exception. We've moved in the direction of secretive government that wants to know everything about you, which is the opposite of what I'd prefer to see: open, transparent government that respects basic liberties.",1361722792
5274709,comment,5272980,5273255,1,0,thirsteh,,,"Andrew Tanenbaum explains: <a href=""http://www.youtube.com/watch?v=bx3KuE7UjGA"" rel=""nofollow"">http://www.youtube.com/watch?v=bx3KuE7UjGA</a>",1361722786
5274707,comment,5273430,5273430,1,0,dtld,,,"Is there an article named The Dark side of mathematics?",1361722767
5274706,comment,5274437,5274547,1,0,kmfrk,,,"It's free for non-commercial projects, so unless you are working on the next Instagram, there shouldn't be much to worry about.",1361722754
5274705,story,,,70,112,karterk,"The comeback of static typing",http://kishorelive.com/2013/02/24/the-comeback-of-static-typing/,,1361722739
5274704,comment,5274437,5274696,8,0,cschmidt,,,"Exactly, $45 or $150 is not exactly going to break the bank for a commercial venture. If it is something you need, and it saves you a couple of hours of time, then you're ahead.",1361722721
5274703,comment,5272575,5273650,1,0,barumrho,,,"Yes. Unfortunately, it did not help with my situation.",1361722721
5274701,comment,5274383,5274682,1,0,heldtogether,,,"I've thought about it. The question is, should it bulk import everything from your bank account every time you open the app, and you just add labels etc to it/match it up with existing transactions, or should it be separate somehow? Curious to hear what people actually want, rather than what's available now.",1361722697
5274700,comment,5273975,5273975,5,0,Chris_Newton,,,"Modular design at any scale has a natural tension between looser coupling and higher cohesion. If you split up a large code base into many small parts, each part can be simpler and looser coupling between parts may improve maintainability. On the other hand, now you must to co-ordinate those parts somehow, and making up for the loss of cohesion introduces a kind of complexity you didnt have before.<p>This tension exists at any scale, from a single-developer hobby project up to massive enterprise projects and OSS giants, so I challenge the original premise of this blog post that having a large code base is the root cause of the problem. Going too far in either direction can result in absurdity, whether thats enterprise software levels of boilerplate (too much tight coupling) or DLL hell and typical Linux package management (not enough cohesion).",1361722694
5274699,story,,,2,0,gklein,"Promiscuous -  replicating data across your Ruby apps",https://github.com/crowdtap/promiscuous,,1361722690
5274698,comment,5274693,5274693,1,0,thirsteh,,,"The video is from 2010, but it provides an accurate introduction to MINIX 3.x by Andrew Tanenbaum himself. Version 3.2 was just released: <a href=""http://news.ycombinator.com/item?id=5272980"" rel=""nofollow"">http://news.ycombinator.com/item?id=5272980</a><p>Original post: <a href=""http://news.ycombinator.com/item?id=1494386"" rel=""nofollow"">http://news.ycombinator.com/item?id=1494386</a>",1361722669
5274697,comment,5274345,5274626,1,0,misnome,,,"Is it a right to have a Lawyer during a raid? It's not like they didn't have a warrant, and he doesn't have to talk to them during the raid - it's the equipment and evidence they are collecting.",1361722641
5274696,comment,5274437,5274547,20,0,forsaken,,,"This attitude is one of the largest problems with open source in my opinion. If people want to try and make money on software, it is their option. It's free for non-commerical use, and the most enlightened thing you could say is ""eww""?<p>People need to eat, and writing open source software to provide for themselves seems like a much better model than doing it for free in their spare time off from some proprietary coding job.",1361722630
5274695,comment,5274124,5274124,1,0,jonsterling,,,"Please don't do free work for other people. If you want to build something without getting paid, let it be a really cool project that you can call your own!",1361722621
5274694,comment,5274194,5274194,2,0,pajju,,,"Great product and neat work. \nFair pricing, unlike others who are charging a lot more.<p>I would definitely use your service for my next client projects.<p>Feedback:<p>1. <i></i>Do whatever so that users will know your app exists in the first place.<p>First get known to lot of potential users. Let them know your app exists in the first place, then think of Bmodels. Charge little to none!<p>This kind of app needs more visibility and recognition across the web. Then everyone will recommend and refer your app over-time. It should only get better over time.\nSo don't charge more. Give it at a throw-away price. Reach all top blogs, top/newly launched products and give them to use free, with your branding. ( Your product is the easiest to get known, because of the nature of the app)<p>2. Long-term: Build a branding around.<p>When someone thinks of product tours your app name should be synonymous with tours. Always think this way, and do whatever to achieve this. ;)<p>3. Add a referral service.<p>If someone recommends and links back, give them 1 month extra? Don't pay back anyone for referring, but let them use your product more and spread the good message.<p>* And do reach me out, if you need any kind of help. :)",1361722620
5274693,story,,,2,1,thirsteh,"MINIX 3: a Modular, Self-Healing Posix-compatible Operating System",http://www.youtube.com/watch?v=bx3KuE7UjGA?2,,1361722616
5274692,comment,5274550,5274550,44,0,TelmoMenezes,,,"Am I the only one who doesn't like receiving direct orders from article titles?",1361722615
5274691,comment,5273498,5273543,9,0,steveklabnik,,,"Rails 4 will ship with ""1.9.3 required, 2.0.0 recommended,"" so I'm expecting that to drive a lot of adoption.",1361722552
5274690,comment,5274550,5274618,3,0,itsnotvalid,,,"When I see this post, the first thing to pop up is SOAP as well. Just that SOAP is not human-readable. Then I suddenly remembered that it wasn't SOAP itself that include the schema but the SOAP providers would generate WSDL alongside a SOAP endpoint.",1361722529
5274689,comment,5272980,5273360,2,0,thirsteh,,,"It's also for security. If you find a security vulnerability in e.g. the sound driver, you're not going to get root access.<p>Andrew Tanenbaum explains it well: <a href=""http://www.youtube.com/watch?v=bx3KuE7UjGA"" rel=""nofollow"">http://www.youtube.com/watch?v=bx3KuE7UjGA</a>",1361722524
5274688,story,,,5,8,McUsr,"Index soon to be portable ""database-file program"" for OS X",https://github.com/McUsr/Index-2.0#readme,,1361722523
5274687,story,,,31,80,kintamanimatt,"Ask HN: If you could start a start-up anywhere in the world",,"With the one exception of the US, where would you pick and why? Are there any non-US cultures that really support entrepreneurship, embrace failure as a stepping stone to success, and don't also try to hammer down the nails that stick out?",1361722511
5274686,comment,5272575,5274522,1,0,barumrho,,,"Thank you for reminding me about this. I am going to look into that.",1361722502
5274685,comment,5274393,5274393,2,0,jonsterling,,,"I like how he summarizes the post he links to as go out there and do something worthwhile and stop regaling your heroes for their ability to shut up and ship, and then totally fails to take the point to heart, by writing a gushing piece about TPW and his ability to shut up and ship. Obnoxious.",1361722471
5274684,comment,5274550,5274550,3,0,erwanl,,,"Yay, SOAP in JSON!",1361722464
5274683,comment,5274025,5274579,3,0,jokull,,,"Its hard to author by hand. Ever added a comma after the last element in a list? Its not very forgiving.",1361722455
5274682,comment,5274383,5274529,1,0,krmmalik,,,"From the bank account. I know Barclays support this. Don't know about the rest.",1361722424
5274681,comment,5274550,5274550,15,0,ubermammal,,,"I don't see how writing JSON REST API descriptions isn't practically the same as writing REST API clients anyway: they're still clients, just written declaratively rather than procedurally.<p>If the point is ""stop writing procedural REST API clients and write them declaratively instead"" then that advice is by no means restricted to REST API clients.<p>If the point is ""hey, I noticed that REST API clients are another thing that we can now comfortably write declaratively"" then OK.",1361722420
5274680,comment,5273878,5274458,3,0,largesse,,,"Short answer: It would bring Google an incredible amount of grief. 99.9% of everything you read on the web is copyrighted text.",1361722418
5274679,story,,,1,0,espadrine,"The Settings File Format",https://github.com/espadrine/set,,1361722396
5274678,comment,5273839,5273839,1,0,visarga,,,"Thank you, web designer of scantosecure.com, for blocking font resizing with ""Ctrl +"". It was extremely small, but the lines became wider than the screen itself as I zoomed in, and Readability didn't work on your page either. (<a href=""http://imgur.com/a/jawW7#0"" rel=""nofollow"">http://imgur.com/a/jawW7#0</a>)<p>I looked in and saw this:<p><pre><code>  font:13px/1.7em 'Open Sans';\n</code></pre>\nWhat is this? Is this causing the text to be unzoomable?",1361722390
5274677,comment,5269719,5274487,1,0,bmelton,,,"That's because 80% of all weapons manufactured today are semi-automatic.  In similar news, most vehicular homicides are attributable to cars that have seat belts.  Should we ban seat belts, or should we take a look at causality?<p>As for the criminals who engage in mass shooting, I think that we can agree that it's a disgusting, cowardly act, but we can't very well pass laws to prevent every crime someone <i>might</i> commit.  As for ""Exactly why mass shooters prefer high capacity weapons"", that's not even necessarily true.  The VA Tech shooter had 17 low-capacity magazines and just reloaded whenever he felt the need.  Again though, per DC v Heller, standard capacity magazines are 'in common use' and 'for lawful purpose', which means that effectively, on Constitutionality, should not be bannable.<p>Regardless, of all the homicides that have been committed, the <i>vast majority</i> are perpetrated with handguns, not rifles of any sort, and nobody is moving to ban those in any way.  Moves to ban guns based on their aesthetic features is, in my opinion, naive.  Banning guns with ""military style features"" like barrel shrouds (that exist on every rifle made since 1880) or sliding stocks (which simply allow a gun to be shared by people of different stature) are akin to banning cars with racing stripes or bucket seats.<p>It's also pointing out that while mass shootings are indeed terrible, the citizenry in the United States has had access to the same type of weaponry since 1936, and these school shootings are a relatively recent phenomenon.  The weapons themselves are certainly not to blame, so I believe we should look for other causes.<p>""Most victims of mass shootings aren't afforded that luxury.""<p>Nor are they generally afforded the luxury of being armed themselves.  Every mass shooting (except perhaps the Gabby Gifford shooting in Arizona) in the US since 1950 has been perpetrated in a ""gun free zone"" (not yet sure if Dormer counts), where the citizenry would be expected to be unarmed.<p>The Aurora, CO shooter for example, bypassed 6 theaters nearer to his home, including the largest theater in the area, and instead effected his spree at the one theater that enforced a gun free zone.  Virginia Tech, Newtown, Columbine, Fort Hood, etc.  The elimination of gun free zones may prove effective at deterring mass shooting.  Despite the President's scoffing at the NRA's suggestion to put armed guards in school, he has effected that very policy through executive order, so perhaps that will mitigate shootings as well.  Others have suggested that we investigate the link between mass shooters and prescription medication, but I can't speak intelligently on the subject myself.<p>""People print counterfeit money too but we put measures in place to minimize it.""<p>So, perhaps I didn't make that remark with the care that I should have, but nobody is seeking (except perhaps California) to ban the possession of magazines, but the sale and import of those magazines into the state.  Using my home state of MD as an example, I am not allowed to buy 30 round magazines here, and similarly, nobody here is allowed to sell them to me.  But I can cross state lines to Pennsylvania or Virginia (which is no more than 20 minutes in either direction) and buy them and bring them back in without violating any laws whatsoever.  Moreover, I can buy magazine ""parts kits"" from anyone I choose, on the internet or even in state, and then I just have to assemble them, which is a fairly trivial endeavor.<p>That there are also federal provisions that allow me to manufacture my own weaponry for personal use would mean that banning the sale of high capacity magazines would be particularly ineffective for too many reasons.  1) There are literally millions of them already in existence in the United States, 2) anybody can download a template and print them off in a 3D printer, 3) Criminals planning to commit crimes like mass murder are almost certainly going to ignore any such statutes, 4) Limiting capacities to 10 or below hasn't proven to be effective in reducing the body count even in cases where the criminals chose to use them and of course 5) It would almost certainly be an unconstitutional provision based on recent case law precedent.<p>Edit: Note, I made this  reply before you edited to add your rhetoric about negroes, ""Free negros were also unconstitutional at one point. The constitution means nothing to me.""<p>In hindsight, it makes me wish I hadn't bothered to respond at all. Kudos for having wasted a good deal of my time.",1361722328
5274676,comment,5269719,5270659,0,0,rooshdi,,,"Then why doesn't the NRA support most of its members when the vast majority of them want background checks on all gun sales?<p><a href=""http://www.washingtonpost.com/blogs/the-fix/wp/2013/01/31/nra-leadership-members-divide-on-universal-background-checks/"" rel=""nofollow"">http://www.washingtonpost.com/blogs/the-fix/wp/2013/01/31/nr...</a>",1361722314
5274675,story,,,1,0,francois580,"Zo kies je het juiste tuinhuis",http://www.hoe-waar.be/zo-kies-je-het-juiste-tuinhuis/#.USo7uucg5dY.hackernews,,1361722308
5274674,comment,5274022,5274575,5,0,cbr,,,"<p><pre><code>    To prevent a search engine from poking\n    around links and executing actions\n    meant from human beings.\n</code></pre>\nThat's not how search engines interpret nofollow.  You should use robots.txt instead.<p>EDIT: for details, see the original blog post, which says ""those links won't get any credit"" not ""those links will be ignored"": <a href=""http://googleblog.blogspot.com/2005/01/preventing-comment-spam.html"" rel=""nofollow"">http://googleblog.blogspot.com/2005/01/preventing-comment-sp...</a>",1361722297
5274673,comment,5272960,5273703,0,0,npsimons,,,"<i>It smells like Linux has been here! I can't STAND that guy or anything he touches, so I burned the folder just to be safe. You can thank me later.""</i><p>This pretty much sums up Microsoft's reaction to Linux in a nutshell. It's precisely why articles like the one we are commenting on exist. The answer to the question that the article poses is ""Because Microsoft hates competition and acts like a petty spoiled brat. Get back to us when they grow up.""",1361722286
5274672,comment,5274463,5274463,16,0,haberman,,,"The article is making two somewhat unrelated complaints:<p>1. Date.iso8601 does not correctly parse some ISO 8601 formats like ordinal dates or month-only dates.<p>2. The Date class does not support year-only or year/month granularity.<p>In response to the first, the documentation for Date.iso8601 (<a href=""http://ruby-doc.org/stdlib-1.9.3/libdoc/date/rdoc/Date.html#method-c-iso8601"" rel=""nofollow"">http://ruby-doc.org/stdlib-1.9.3/libdoc/date/rdoc/Date.html#...</a>) says:<p>""Creates a new Date object by parsing from a string according to some typical ISO 8601 formats.""<p>Not ""all ISO 8601 formats,"" ""some typical ISO 8601 formats.""  While supporting more formats is obviously desirable, the method never claimed to be a complete ISO 8601 implementation.  It would be nicer if it were, but would also take more work and it appears that 100% spec support was neither prioritized nor promised.<p>I believe the second complaint is less justified.  Asking a single class (Date) to support multiple granularities opens up a lot of semantic conundrums that have no obvious resolution.  What <i>should</i> this return?<p><pre><code>   Date.iso8601(""2012-01"") < Date.iso8601(""2012-01-05"")\n</code></pre>\nIf one is truly month granularity and one is day granularity, then the two aren't directly comparable.  It would make more sense to me to have the month granularity representation be a separate class altogether (YearMonth?) with easy and well-defined conversions between the two.",1361722265
5274671,comment,5274463,5274651,3,0,tommorris,,,"Yeah, I wrote it in a bit of a hurry on the train. Will fix.",1361722254
5274670,comment,5273878,5274085,1,0,largesse,,,"Your first paragraph admits that he may not have any control over the pricing and then your last paragraph implies that he does.  How did that happen?",1361722250
5274669,story,,,1,0,DanielBMarkham,"The Case of the Phantom Ballots",http://www.miamiherald.com/2013/02/23/v-print/3250726/the-case-of-the-phantom-ballots.html,,1361722228
5274668,comment,5273498,5273802,5,0,steveklabnik,,,"> In this world Rails doesn't deliver any particular value (in my opinion).<p>I beg to differ, though I'm biased. Rails still offers a lot. <a href=""https://github.com/rails-api/rails-api#why-use-rails-for-json-apis"" rel=""nofollow"">https://github.com/rails-api/rails-api#why-use-rails-for-jso...</a>",1361722222
5274667,comment,5274550,5274550,2,0,arankine,,,"so, define web services as a json file. JSON-SOAP?",1361722213
5274666,comment,5271001,5271832,1,0,delian66,,,"Why should you teach a child ed(1), instead of any other text editors? \nIn my opinion , it is one of the most sadistic common text editors in existence, and has been for several decades.",1361722210
5274665,comment,5273575,5273575,2,0,neya,,,"I love this presentation. So wonderful, precise and valid. I sincerely wish you best of luck for your future!",1361722209
5274664,comment,5273983,5274375,2,0,lmg643,,,"Palais de Mari is a great piece of music, very accessible considering the style.<p>is the recording available online, either youtube or for sale?",1361722199
5274663,comment,5273975,5273975,2,0,crististm,,,"The problem I see with lots of software is that you don't have an immediate view of the scale.\nSuppose you're opening a random file. What do you see? Are those the atoms or the gears? You want to see the gears but there is usually no map to point you to the gears. The software is the map - yeah, right.<p>What are you supposed to do? Find the int main() and then make the program run in your head?<p>I can make an analogy with a car - I don't know every one piece of it but I can infer from the context. The scale is evident.",1361722192
5274662,comment,5273498,5274107,1,0,FuzzyDunlop,,,"There was a post here a while ago about a language that didn't use 'super' inside subclassed methods, but instead had something used in the parent class method to call the same one in any subclass. I quite liked the idea of that.<p>Looks like Module#prepend is there to do a similar thing.",1361722174
5274661,comment,5273975,5274434,3,0,grobertson,,,"I was just about to make the same argument. I completely see why this is tempting, but it quickly makes maintenance into a new layer of hell, and anyone supporting your production environment will hate you. Added to which, knowledge transfer becomes a huge problem, and it takes new developers and production support people a small lifetime to learn all the pieces and their touchpoints.",1361722166
5274660,comment,5273498,5273572,-3,0,Ingaz,,,"I think that ruby, perl, python and javascript are similar only in purely theoretical way.<p>Python - is ""executable pseudoscript"". It does not have ruby elegance, perl ""worse is better"", javascript ... minimalism(?)<p>I'm using python for prototyping. As communication tool.<p>I can describe all python scetches to every programmer, be it javer, c-sharper, C-developer or SQL-er.<p>Can I use perl/ruby/CSharp/Java/F#/Haskel?<p>Answer is NO.<p>Perl:  sigils, regexp everywhere (when it not needed), parameters passing, ""use strict"", strange OOP - all those features makes it impossible for prototyping.<p>Ruby: it's the same as for perl. It looks more pleasant to eyes but it is no way ""pseudocode"" that everybody can read.<p>C#/Java - prototyping is a joke. And I can't use sharp-code for javer and otherway.<p>F# - F# is looking a lot like ""pseudo-script"". But the main strength - type system is not helping in prototyping.<p>LISPs - I think that LISPs are good for prototyping. The only problem - they are LISPs.",1361722164
5274659,story,,,2,0,pelle,"The Cashless Utopia Mirage",http://www.forbes.com/sites/jonmatonis/2013/02/24/the-cashless-utopia-mirage/,,1361722153
5274658,comment,5273000,5273000,2,0,mrleinad,,,"""You're being watched. The government has a secret system. A machine that spies on you every hour of every day.""",1361722136
5274657,comment,5273769,5273769,1,0,grdeken,,,"I don't want anymore email. Maybe you can SMS me instead?",1361722135
5274656,comment,5274550,5274628,2,0,mjs,,,"I actually have no idea why the hal people aren't writing hal specifications for existing services right now--it's not quite as nice as ""native"" support, but the format supports it, and it would be useful to see what a hal version of the Twitter API looked like, for example.",1361722116
5274655,comment,5273498,5274468,4,0,ww520,,,"There are plenty of other good jobs that don't require Python.  He has already said others like it but it doesn't work for him personally.  Why beat it over his head for your preference?",1361722112
5274654,comment,5272634,5272726,2,0,draegtun,,,"It's because Larry Wall wanted something shorter than <i>associative arrays</i>.<p>* <a href=""http://www.nntp.perl.org/group/perl.perl6.language/2007/05/msg27646.html"" rel=""nofollow"">http://www.nntp.perl.org/group/perl.perl6.language/2007/05/m...</a><p>* <a href=""http://www.nntp.perl.org/group/perl.perl6.language/2007/06/msg27659.html"" rel=""nofollow"">http://www.nntp.perl.org/group/perl.perl6.language/2007/06/m...</a>",1361722061
5274653,comment,5274049,5274049,3,0,jeffehobbs,,,"McClure continued: ""You're simply the best. Better than all the rest. Better than anyone -- anyone I've ever met."" <i>standing ovation</i>",1361722057
5274652,comment,5274550,5274550,17,0,petercooper,,,"We could give a name to the language we use to define such files. It's a language that defines Web services, so perhaps Web Services Description Language? :-) <a href=""http://en.wikipedia.org/wiki/Web_Services_Description_Language"" rel=""nofollow"">http://en.wikipedia.org/wiki/Web_Services_Description_Langua...</a><p>Flippancy aside, maybe there's a need for a next generation of this that skips all the XML headaches after all.",1361722046
5274651,comment,5274463,5274463,4,0,viraptor,,,"Actually the article seems to be a bit confused:<p>> If you arent doing ordinal dates, you arent doing ISO 8601.<p>It seems ruby1.9 does implement ordinal dates just fine:<p><pre><code>    irb(main):002:0> Date.iso8601(""2012-012"")\n    => #<Date: 2012-01-12 ((2455939j,0s,0n),+0s,2299161j)>\n    irb(main):005:0> Date.iso8601(""2012-366"")\n    => #<Date: 2012-12-31 ((2456293j,0s,0n),+0s,2299161j)>\n</code></pre>\nWhat it does not implement is the ""YYYY-MM"" format:<p><pre><code>    irb(main):010:0> Date.iso8601(""2012-12"")\n    => #<Date: 2012-01-12 ((2455939j,0s,0n),+0s,2299161j)></code></pre>",1361722035
5274650,comment,5274550,5274550,9,0,id_heaven,,,"> This doesn't scale.<p>Most overused phrase right there.",1361722031
5274649,comment,5274550,5274550,2,0,pfraze,,,"We've been experimenting with this at my office. We use yaml descriptions of all of our routes to generate test coverage. We plan to later generate our documentation and client libraries with the same docs.<p>Document-generated server behavior is something we're researching as well, to possibly represent business logic. We're hoping that patterns can be found and condensed into notations, like Regular Expressions do for string-parsing. We'll post about anything that we come up with.<p>One of my side projects us an Ajax library which allows javascript to respond to requests (LinkJS [1]). It has a helper object called the Navigator, which is like a miniature Web Agent. It retains a context, and uses the Link header from the response to populate the navigator with relations. It works out like this:<p><pre><code>  var nav = Link.navigator('http://mysite.com');\n  nav.collection('users').item('pfraze').getJson()\n    .then(function(res) {\n      console.log(res.body); // => { name:'pfraze', role:'admin' ...}\n    })\n    .except(function(err) {\n      console.log(err.message); // => 404: not found\n      console.log(err.response.status); // => 404\n    });\n</code></pre>\nThe advantage is that the link header is a relatively condensed representation of the resource graph. As a result, it's not a problem to send it and process it every time. You do gain latency, but the internet is only getting faster, and caching can be used. Meanwhile, the server can rewire links without interrupting their clients.<p>1 <a href=""https://github.com/pfraze/linkjs"" rel=""nofollow"">https://github.com/pfraze/linkjs</a>",1361722022
5274648,comment,5273498,5274047,6,0,steveklabnik,,,"I maintain rails-api, and both Yehuda and I have commit to Rails. I just want to mention that while Ember + Rails will be a potent combo, Ember will work great with non-Rails backends as well, and rails-api will work great with other frameworks too. That said, we're working really hard to make sure that Rails 4 + rails-api + Ember 1.0 is a fantastic experience, so watch that space for sure.",1361722019
5274647,comment,5274025,5274568,4,0,adamtj,,,"That's not hard to parse.  Inline comments are nice.  You'll be doing more reading of files that writing of parsers.",1361721949
5274646,story,,,2,1,SchizoDuckie,"Teacher revolutionizes checking student's homework with iphone app ",http://www.dumpert.nl/mediabase/6529431/4db6bc63/leraren_opgelet_.html,,1361721930
5274645,comment,5274463,5274630,1,0,tommorris,,,"Yep. There's a lot more problems than that.<p>I've been reading the source code of one ISO 8601 implementation in JavaScript and writing my own in Java. Looks like I'll have to fix the Ruby one too.<p>Given that it's used by, oh, HTML and XML, not properly implementing ISO 8601 is really no big deal.</sarcasm>",1361721929
5274644,comment,5274463,5274463,3,0,madisp,,,"Maybe it's rfc3339 and not iso8601? e.g. the method has been named wrong?",1361721838
5274643,comment,5273498,5273770,3,0,steveklabnik,,,"No, 2.0.0 is intended to be mostly backwards compatible with 1.9.3.",1361721833
5274642,comment,5274550,5274550,7,0,autarch,,,"All that these sorts of description produce is a low-level API. That can be useful, but what's really needed are high-level APIs that provide meaningful semnatics:<p><pre><code>    my $me = Facebook->new( username => 'autarch' );\n    $me->post_status(""I'm on Hacker News writing this comment"");\n\n    my $friend = Facebook->new( username => 'imaginary' );\n    $me->post_on_wall( $friend, ""Hey buddy, I am on Hacker News writing this comment"" );</code></pre>",1361721831
5274641,story,,,1,0,golovatuy,"The State of Mobile Cloud Computing",http://techandscience.com/techblog/ShowArticle.aspx?ID=3139,,1361721829
5274640,comment,5273498,5274411,2,0,coldtea,,,"><i>And apparently ""we"" are using ""irrelevant"" to mean not fashionable. Or does it mean, ""Do not use for new IT projects"" or something? What does it matter what other people do, especially those with a strong (if small) community, frameworks, libraries, books, articles, conferences...</i><p>It matters because there is not enough of ""community, frameworks, libraries, books, articles, conferences"". If I want to do something in LISP there are 2-3 libraries in different states of broken and/or abandoned. In Python I can usually find something with much more ease. In Java even more so. The same for hiring programmers AND getting hired yourself, etc etc.<p>><i>And where does Smalltalk fall? I hate to tell those people their language is ""irrelevant"" -- will their programs crash?</i><p>You don't have to tell them. They know it already. It has been ever since most Smalltalk shops closed and the bigger ones turned over to supporting Java.<p>Now, people using Smalltalk to do hobby work, or even nice important work with paying customers, good for them.<p>Their programs will not crash (unless their Smalltalk platform of choice gets abandoned to die with too few contributors or is proprietary and doesn't get support for newer platforms and architectures). But they wont be getting as much new toys as the other boys.<p>><i>And which LISP, by the way?</i><p>All of them, inc. Common Lisp. Clojure might have a fighting chance, but it still is too small for people who value ecosystem over cowboy style ""let's build all the wheels ourselves"".<p>><i>This irrelevance property is dumber than a language debate because we don't even debate them, we condemn them from the outside by applying our own arbitrary criteria.</i><p>Irrelevant? It's very pragmatic. Number of available employers, employees, number of documentation, vibrancy of the ecosystem, new libraries and continuous support for older libraries, etc.<p>I would love to have a Smalltalk that is well supported to play with. One that is not aimed at kids and doesn't have a Fisher Price UI like Squeeze, and that can match Python or Java for ecosystem. Unfortunately none exists.",1361721816
5274639,comment,5274245,5274245,1,0,btaylorweb,,,Rails,1361721814
5274638,comment,5274550,5274550,20,0,michaelw,,,"Sigh.  This is optimizing for the wrong problem.<p>Stop creating REST APIs that are only level 1 or 2 (see <a href=""http://martinfowler.com/articles/richardsonMaturityModel.html"" rel=""nofollow"">http://martinfowler.com/articles/richardsonMaturityModel.htm...</a> ).<p>Start writing HATEOS systems where the client is coupled to the semantic rather than the syntax.<p>Machine parseable interface descriptions might get rid of some boilerplate but it doesn't make for a more robust client-server relationship.",1361721749
5274637,comment,5273498,5274576,2,0,dasil003,,,"I mean concise compared to Java.  The reason is because I want to primarily use vim and not need an IDE.",1361721740
5274636,comment,5274393,5274393,4,0,arocks,,,"It is amazing how today's technology favours the doers who inspires us with their actions. Almost anyone in the world can see and learn from their actions, thanks to technology.<p>Decades ago leadership meant using powerful and inspiring words to <i>move</i> people into action. This led us to believe that people who could ""communicate"" well were natural leaders. Personally, I prefer ""doers"" to ""talkers"" as an inspirational model.",1361721727
5274635,comment,5273975,5274434,10,0,michaelochurch,,,"The problem with corporate, big-program development is that it's a premature abstraction.<p>If the system-of-small-programs doesn't perform, then you're in a state where larger programs might make sense. If the problem is well-understood and the pieces have been built and refined by competent programmers, but it's impossible to go any further without some coupling and integration, then a large program isn't the worst thing in the world. Really, that's what most ""optimization"" is: the use of about-the-system knowledge to make changes that, while they create couplings that exclude (by which I mean, may cause horrible things to happen, but that's irrelevant) unused cases, improve the performance of the used cases.<p>For example, with databases, you have requirements that are both technically challenging but also need to work together: concurrency, persistence, performance, transactional integrity. These involve an ability to reason about ""the whole world"" that can't be achieved with a system-of-small-things approach. That's a case where ""bigness"" actually imposes complexity reduction. But it has taken some very smart people decades to get this stuff right.<p>The problem with ad-hoc corporate big-program systems is that the one benefit of largeness-- complexity reduction-- never occurs because there is no conceptual integrity, but only a heterogeneous list of ""requirements"" that pile on and don't work together. You get the ugliness of ""lots of small programs"" but the APIs aren't even documented. Instead of reading crappy APIs to work on such systems, programmers have to read crappy code, which is even harder.<p>Small is the way to start. If you need to make a program large, there are intelligent ways of doing it, but it's best to start small and build enough knowledge so that, when largeness becomes necessary, the problem is actually well-understood.",1361721724
5274634,comment,5272575,5274230,1,0,shmerl,,,"It surely depends on resources. If you have them - it's better to fight and try to invalidate those patents (like Newegg did). Some patents are strong, while others are junk. And third have prior art. Naturally not everyone has resources to look for it, but pooling resources can help. Many victims fighting a racketeer is easier than one victim alone.",1361721711
5274633,comment,5274463,5274463,4,0,zdw,,,"Maybe he should subclass it and make it strict, renaming it the RFC3339 method:<p><a href=""http://tools.ietf.org/html/rfc3339"" rel=""nofollow"">http://tools.ietf.org/html/rfc3339</a><p>Basically, RFC3339 is ISO8601 cut down to the most straightforward implementation (YYYY-MM-DDTHH:MM:SS), without the ""Ordinal Date"" variant that is at issue here.",1361721700
5274632,comment,5274348,5274348,1,0,travelhead,,,"My startup, KingSide.com, provides an all in one marketing platform and API that you can sell under your own brand as a white label.",1361721665
5274631,comment,5273983,5274249,2,0,colomon,,,"In my mind the interesting/curious transition is from music that ""anybody"" can play to music that requires the very very best players in the world.  (I mean seriously, if the Kronos Quartet can't handle playing your string quartet...)<p>I mean, I'm a fair amateur bassoon and piano player.  I've played bassoon on four Beethoven symphonies over the years, and technically they were easily within my grasp.  His piano sonatas push me, but back when I was actively playing piano I could make them sound like music.<p>I've played some more modern music which was much harder, and while I quite like some of it, I sure don't think it was ""better"" than Beethoven.<p>I think the exact same thing has happened to jazz, too, it's just a few decades behind ""classical"" music in the transition...",1361721641
