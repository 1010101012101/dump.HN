ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
224286,comment,223959,224001,0,0,mrdorian,,,"because most hackers here married their right-hands,unfortunately.",1214153929
224285,comment,224173,224249,0,0,BrandonM,,,"There's got to be a greasemonkey script or a Firefox plugin that disables this behavior. Perhaps Awesome Highlighter should link to one of these solutions.",1214153751
224284,comment,223959,224056,0,0,asdflkj,,,"Happiness is not selected for or against any more than satiety is. You're using first-order reasoning on a second-order trait.",1214153657
224283,story,,,20,10,NextNetNow," MacRumors Buyer's Guide: Know when to buy your Mac",http://buyersguide.macrumors.com/,,1214153577
224282,comment,224191,224191,0,0,oz,,,"I hate school. With a passion. I find I learn best sitting quietly alone, thinking, reading or experimenting. This applies not just to Computer Science, but most subjects.<p>Between the Internet, amazon and a good library, an above-average intelligence person can teach themselves many subjects, including CS. The point about not knowing the order in which to learn is invalid: Easily solved in <5 minutes by going to a few university websites and trying to establish a common denominator. For the really gifted ( and I should think enough most who are motivated to learn CS autodidactically are), they may probably discover new things by simply playing around, noticing interesting phenomena and use our famous OCD tendencies to add to the field. That's how most scientific discoveries are made. Ramanujan, the great Indian mathematician, was not formally trained, yet made important contributions.<p>I'm also reminded of the anecdote where a student who had not attended class got a copy of the homework from a colleague, not knowing that the professor had told the class the problems were unsolvable. OF course, he solved them; the other students had a mental block. But to be honest, if you learn things from books, they will consider certain problems 'unsolvable' as well.<p>Ultimately, it depends on your IQ, aim and financial situation. If you've made up your mind, like me to be an entrepreneur, you don't have to care about a degree. In fact, I would like to make a ton of money while young, so I can spend lots of time later delving deep into both the sciences and humanities (in many ways an artificial distinction; Google ""Lockhart's Lament"").<p>If you plan to work for others, its safe, but not absolutely necessary, like anything else, it depends. In this case, the employer in general and the specific interviewer. If s(he) has had many good experiences with non-degreed employees, your chances are better.<p>From a purely acquisition of knowledge standpoint, yes, you can teach yourself CS. If there's something you're not sure about, I'm absolutely sure that you can develop a good relationship with a good professor local to you or even online. My gut feeling is that good professors wouldn't mind, they love smart students.<p>Ahhh, my friends, the journey of self-discovery!",1214153509
224281,story,,,12,8,mashour,"Y.A.G.I.S: Yet another Google Interview story (With a twist)",http://startupinsights.blogspot.com/2008/06/yagis-yet-another-google-interview.html,,1214153366
224280,story,,,3,2,ideas101,"Hot social browsing tools ",http://infotech.indiatimes.com/articleshow/3148431.cms,,1214153292
224279,comment,223846,224032,0,0,bkovitz,,,"Thanks for the advice.  The reason I want the Ph.D. is to become a professor, and the reason I want to be a professor is to be paid to indulge my curiosity and to teach (I love both).<p>Delaying a year to do this site is definitely an option I'm considering.  Cooking Indian food in my kitchen has got to be way cheaper than gnawing off my own leg. ;)",1214153254
224278,comment,223654,223914,0,0,danohuiginn,,,"I'm worried about the hassle as every 'hello world' tutorial stops working. The change has been on the cards for yonks, and the print('foo') version has always been valid - why hasn't there been a push to get the documentation changed <i>before</i> introducing the change?",1214153127
224277,comment,224191,224191,0,0,babul,,,"One of the best things about doing any degree is the people you meet and the interactions you have with them.<p>Many a friendship/company/network are born from these relationships and often are beneficial to you throughout life.<p>No matter how good they are, Wikipedia et al cannot offer this.",1214153087
224276,comment,224255,224272,0,0,babul,,,"It also removes many of the initial fixed costs such as dedicated servers, and will actually bring your projections down to lower levels making, in many cases, the proposition more attractive to investors (if that is what you are looking for).",1214152839
224275,story,,,10,8,sah,"New solar dish from MIT concentrates sunlight intensely enough to melt steel",http://www.dailytech.com/MIT+Students+Develop+Revolutionary+Solar+Dish+That+is+Hot+Enough+to+Melt+Steel/article12153.htm,,1214152679
224274,comment,224227,224227,0,0,ratsbane,,,"I like to see code that my mind can parse as easily as the machine can.  Tasteful code likely is short, efficient, and readable... but perhaps there are exceptions to that?  Good taste is like obscenity - hard to define but you know it when you see it.<p><a href=""http://www-cs-faculty.stanford.edu/~knuth/lp.html"" rel=""nofollow"">http://www-cs-faculty.stanford.edu/~knuth/lp.html</a>",1214152659
224273,comment,224227,224227,0,0,iron_ball,,,"I'd like to add a subquestion: I'm always told to check out other people's code and study it, but I'm also well aware that popular software doesn't necessarily mean good code. What source-available projects would you recommend I look at if I want to see some quality examples of the craft?",1214152634
224272,comment,224255,224255,0,0,babul,,,"Most decent hosting providers give detailed breakdowns of their service costs (servers/cpu-slices/bandwith/transfer-rates/limits/etc) so if you are able to approximate your usage levels e.g. by comparison to the patterns of other established similar apps/companies, you can do a good job in calculating these costs.<p>Even not knowing your usage levels, you can make reasonable assumptions and hence choose appropriate services with fixed costs and work on that basis.<p>Amazon Web Services, SliceHost, and the like are particularly good if you do not know how your service/app will perform over time as they allow you to scale with ease compared to other more traditional hosting solutions and although more expensive in the long term (i.e. buying dedicated servers are cheaper), is cheaper in the short term and actually makes creating early projections much easier.",1214152632
224271,comment,223654,223841,0,0,bkovitz,,,"Muchas gracias for the explanation of repr.  I knew I shouldn't have lost faith in Guido.<p>The ctemplate sounds really frickin' interesting.  Is this an easy way to get a major performance boost on CPU-intensive bits of Python?  Actually, this is probably getting off-topic, but will you email me when ctemplate is ready for prime-time?",1214152606
224270,comment,224227,224256,0,0,gizmo,,,"> truly incredible code is nominally quite brie<p>That's probably true. But that makes me wonder...<p>People have a hard time appreciating poetry in their second or third language, because you need to have such vast knowledge to get the subtleties of the poet's intentions.<p>I suspect the same holds for code. The more skilled and more experienced the programmer, the more complexity he can handle. And he'll find beauty where mortals like us are simply confused.<p>I can't appreciate Shakespeare, but I suspect it is as great as many claim it is. I would probably dismiss Shakespeare as unnecessarily complex and verbose if I didn't know better.<p>Worth thinking about the next time you're annoyed at a piece of complex code, and really want to refactor it so everybody can read it. You may be destroying something beautiful.",1214152229
224269,comment,223964,223964,0,0,themole,,,"It sounds more like a badly designed web app than Alexa doing something it shouldn't. If it really did do harvest passwords and log in with them, we'd hear a lot more about it.<p>As gojomo said it was probably passing the username and password in the URL (query string). I've been burned by the exact same thing before because of Alexa. I had the little Alexa rank FF extension which told Alexa about a page I really wish it hadn't...",1214152070
224268,comment,223744,223923,0,0,asdflkj,,,"> Bipartite graph algorithms and topological manifolds are not as important as Gardasil and alternative energy.<p>That's not so obviously true that you can just state it as fact.",1214152034
224267,story,,,3,0,markbao,"Logos, seals, & your identity",http://www.presentationzen.com/presentationzen/2008/06/it-seems-that-every-two-years-i-comment-on-a-logo-in-the-news-see-this-post-i-wrote-on-the-world-cup-logo-in-06-a-logo-of.html,,1214151934
224266,comment,224191,224242,0,0,krschultz,,,"Exactly, I'm doing Mechanical Engineering, and I picked up a minor in CS to pump up my GPA. It seems like a much better combo than pure CS because it is much harder. (Isn't there a PG essay about staying upwind of your goal, an engineering degree is certainly upwind of CS. Not knocking on Computer Engineering here, that is one of the hardest engineering degrees for sure). As for ""meeting smarter people"", I don't know, I was 100% self taught when I got my job at my startup because I hadn't started CS yet, and the smartest people I have ever met are the guys in my company - much more so than professors. All are computer and electrical engineers though, we only have one CS major, and hes a self taught guy too. My roommate is a CS major who never taught himself anything - and though I like the guy, he is 2 years ""ahead of me"" and I program circles around him.",1214151819
224265,comment,223959,223959,0,0,drios,,,"Lucky Stalin!!!!",1214151746
224264,comment,224191,224191,0,0,msg,,,"It's really a question of whether you prefer supervised learning or unsupervised learning.<p>Supervised learning is one-off and expensive, unsupervised learning is cheap and widely available.<p>Supervised learning converges over a much shorter time frame than unsupervised learning.<p>Supervised learning introduces bias in the quality of the teacher signal that unsupervised learning cannot run afoul of (or take advantage of).<p>An interesting middle way might be active learning. It is a technique where an unsupervised learner has the ability to ask a supervisor for useful tasks to train on. In academia, sadly, this doesn't seem to happen below the PhD level.<p><a href=""http://en.wikipedia.org/wiki/Supervised_learning"" rel=""nofollow"">http://en.wikipedia.org/wiki/Supervised_learning</a>\n<a href=""http://en.wikipedia.org/wiki/Unsupervised_learning"" rel=""nofollow"">http://en.wikipedia.org/wiki/Unsupervised_learning</a>",1214151543
224263,comment,224191,224228,0,0,ajross,,,"To be fair: neither is having a degree evidence that one has actually mastered the subjects it covers.<p>Hell, I have a degree <i>and</i> regularly read wikipedia articles on all sorts of subjects, including computer science.  Does that invalidate my degree?",1214151510
224262,comment,224191,224191,0,0,gizmo,,,"Nobody needs a Computer Science degree. But if you want to be really good, then you need to have a thorough understanding of all parts within a computer. Get a mental model of a computer from the transistor to the hardware architecture to the boot sequence to the memory models to the operating system internals to the virtual machine and garbage collector of your language du jour.<p>If pieces from the chain are missing you'll be programming by trial and error. And that way you'll never reach your full potential. Could you learn everything on your own? Absolutely. But without the external pressure you'll simply skip on a lot of tough topics because you don't think you need to know them. But you do.",1214151384
224261,comment,224227,224256,0,0,ComputerGuru,,,"I agree with you absolutely with regards to no two people having the same exact idea, but I don't think even the latter case is an exception - brief may be efficient but not ""stylish"" and ""beautiful."" Just like the other properties, it depends on the person looking at it:)",1214151373
224260,comment,223895,224009,0,0,allenbrunson,,,"you've got just about zero empathy, don't you.  i see you demonstrate that fact, time and time again.<p>i suppose i was that way when i was young also.  i shudder to think.",1214150974
224259,comment,223846,223846,0,0,ampradhan,,,"Fulltime sales engineering job, hacking and consulting gigs on the side for my own startup...",1214150873
224258,story,,,2,0,ideas101,"Predicting Where You’ll Go and What You’ll Like",http://www.nytimes.com/2008/06/22/technology/22proto.html?ref=technology,,1214150790
224257,comment,224227,224227,0,0,gizmo,,,"Code has style when you can't describe why the code is so good. Because when you try to describe it, you know you're selling it short - the code is more than simply its specification. The only way to convey the quality of the code is by reading the code itself. Code has style when you'd rather read the code than an explanation of what it does.<p>For me, it's always a matter of simplicity. When a problem is hard to describe in English, you naturally assume the code will be a bit complex as well. And yet, sometimes, the problem can be decomposed so neatly that the parts are trivial and fit together effortlessly. For me a requirement is that after carefully reading the code you are absolutely certain there is no room left for bugs. You almost know for certain that the code didn't have any bugs when it was written down for the first time, because it captures intent so well. If you need to refactor it's probably too late already.<p>So I think books like ""Beautiful code"" got it entirely wrong. I especially don't agree with icey's opinion that refactoring can make code tasteful or that linebreaks can make or break greatness. It's about bringing human thoughts to computer code. And when that mapping is perfect, the code is great.",1214150572
224256,comment,224227,224227,0,0,donw,,,"This is the same as asking why certain pieces of art or music are beautiful.  Any two random people would likely disagree over their interpretations of beauty, but as a whole, many works would likely receive a drastically high 'beautiful' vote, like Pachelbel's Canon.<p>That said, with code, I think there are a few properties which are considered 'beautiful' or 'tasteful', not in and of themselves, but combined with that impalpable aesthetic we call 'beauty'.<p>Of all of these, I think the only one most programmers would agree on is that truly incredible code is nominally quite brief.",1214150466
224255,story,,,2,3,phpdev,"Projecting hosting costs for business plan.",,"Hi.\nI'm writing a business plan for my web app.\nI need to project my hosting costs for 6/12/18/24 months into the future for my financial projections etc..\nIs there a way to predict the costs? \nEG: For every 250,000 hits per month you would roughly need 1 server?\nBeing projections, it doesn't need to be 100% accurate! Just a ball park/rule of thumb figure for the plan!\nThanks.",1214150446
