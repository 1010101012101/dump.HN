ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
465716,comment,465580,465580,0,0,Allocator2008,,,"A point on terminology: unit testing is an upstream, in-development process, done usually either by development or CM. For example, a java build tool like maven can include running unit tests during the build process. Automated testing is usually a downstream process done by QA. Currently I do SilkTest automation, using the 4-Test language of Borland SilkTest. That is under the ""umbrella"" of QA. In the past though I have done unit testing (CPPUnit mostly, the C++ port of JUnit), which would have been under the ""umbrella"" of development. In my experience, it seems like people adopt automation (i.e. GUI automation) from the QA end of it, before they adopt unit testing from the development end of it, unless a test driven development mentality is there from the get-go. If a company starts without this, they are more likely to adopt automation in the QA end of things, and then maybe later adopt unit testing in development. Seems like a company needs to do unit testing from the very start, or otherwise it is very slow to adopt it. I think unit testing is a great idea, but really it is hard to put into place from a management point of view, unless it is there to begin with.",1233755983
465715,story,,,8,6,alrex021,"$50 to anyone who can tell me the whereabouts of these meatheads",http://www.hackersinshape.net/archives/35,,1233755967
465714,comment,465317,465531,0,0,DougBTX,,,"> After the changes, you know there's probably bugs, but you don't know where.<p>Which highlights one of the ""problems"" with unit tests: if something fails, you have to take time to go and fix it. If you have no tests, you can assume there are no bugs because you are such a great programmer, then go home after a job well done.<p>That there actually are bugs there doesn't bother you, because you don't know about them. It takes less time to write buggy code.",1233755772
465713,comment,464567,465252,0,0,moe,,,"<i>Who told you that names are supposed to be short and distinctive?</i><p>My common sense and probably every marketing book in existance.\nThink about the internet brand names that you can recall from the top of your head. How many of them are longer than 8 letters?<p><i>Security Situation is a pretty damn good name if you're starting a security company.</i><p>Most certainly not. It's generic and unsuggestive. That kind of name may work for an information page (""Security situation in your neighbourhood"") but not for most businesses.",1233755627
465712,story,,,1,0,raju,"Google's Clout Grows as Tech Initiatives Take Shape",http://online.wsj.com/article/SB123370590038545591.html,,1233755381
465711,comment,462244,465309,0,0,yan,,,"Firstly, if the two machines are on the same switch this method is noticeably faster than scp'ing something large. The actual main reason though, is that this isn't limited to tarring over a network. What it comes down to, is you can almost seamlessly have a shell pipeline and one of those stages jumps a machine boundary.",1233755369
465710,comment,465317,465543,0,0,DougBTX,,,"He could also believe exactly what he says, that Spolsky has a ""lack of knowledge of what I do and what I say"".<p>FWIW, I think this is the post being responded to: <a href=""http://www.joelonsoftware.com/items/2009/01/31.html"" rel=""nofollow"">http://www.joelonsoftware.com/items/2009/01/31.html</a>",1233755302
465709,comment,465653,465677,0,0,dantheman,,,"Agreed, you could really see the emotion in face/voice when he was describing what he went through.",1233755287
465708,comment,465580,465702,0,0,mikeryan,,,"This is a common fallacy regarding test driven development. I use BDD/TDD MORE as a single developer. I may spend significant time writing tests, but the product is significantly better and I spend less time tracking down bugs.<p>The time you ""lose"" on the frontend of development is made up on the back.",1233755229
465707,comment,465685,465689,0,0,JustAGeek,,,"Hm, yes, that could work.<p>Though it is still a bit too complicated because quite a lot of interaction is needed to do that, even with the delicious Firefox addon. You probably have to manually enter the group name as a tag, for example.<p>Ideally, I'd only have to click one button displaying a popup with all groups I've set up.<p>But well, sounds like the way to go - unless somebody can point me to something else.<p>So, thanks for your answer! :)",1233755184
465706,comment,464607,465174,0,0,arebop,,,"I disagree with your assertion that there has never been a ""remix snippets"" exception to copyright. The EFF posting mentions the principle of fair use, developed out of case law at least as old as 1740 [1] and now incorporated into modern statutes [2]. Do you dispute that fair use addresses a ""remix snippets"" exception to copyright?<p>[1] <a href=""http://books.google.com/books?id=VNA48yhYnncC&pg=PA80&lpg=PA80&dq=history+abridgement+copyright&source=bl&ots=atJ_CTR7G0&sig=OePo8M7XBRK1fYhs_XWlnEDxofs&hl=en&ei=iJqJSYPsDITYNOu4-dgH&sa=X&oi=book_result&resnum=2&ct=result"" rel=""nofollow"">http://books.google.com/books?id=VNA48yhYnncC&pg=PA80&#3...</a>\n[2] <a href=""http://www.copyright.gov/title17/92chap1.html#107"" rel=""nofollow"">http://www.copyright.gov/title17/92chap1.html#107</a>",1233755129
465705,comment,465695,465695,0,0,jacquesm,,,"That's a neat project, but I always figure that if you're going to fork an open source project instead of contribute to the original you really have to make a very strong case for doing that, and in my opinion in this case that has not happened.<p>Everybody - including the author - would be better served by extending the original package to include the functionality that they are missing, to fork and drop a bunch of features so that it becomes easier to add the things that are missing is not going to help in the long term. Unless it is done as a case study on how to attack the problem, but that does not seem to be the case here.<p>Fragmentation because of excessive forking of projects is one of the biggest problems in the open source world.",1233755002
465704,comment,465580,465580,0,0,teej,,,"I recently finished contracting with a startup that heavily relied on outsourced programmers for 70% of their code.  Use of TDD & Cruise Control were essential in keeping the code quality up while rapidly adding developers.  I have to say, they managed it all pretty well.",1233754826
465703,comment,465698,465698,0,0,mootymoots,,,"Is anyone else excited about this? Would this application be any use to people? Interested in feedback!",1233754804
465702,comment,465580,465589,0,0,ivankirigin,,,"You and I both suffer from SDS: single developer syndrome.",1233754801
465701,comment,465474,465558,0,0,almost,,,"No, I didn't. And that kind of eliminates those concerns a bit.<p>Apologies for my lack of reading-all-the-way-throughness",1233754655
465700,comment,463484,463947,0,0,gaius,,,"Well, people who do splits <i>are</i> training each muscle multiple times per week. If you have an ""arms day"" and a  ""chest day"" then you're hitting your triceps twice, for example. On ""legs day"" you're working your abs as well as your quads to squat, even if you have another abs workout another day.",1233754617
465699,comment,464445,465694,0,0,DanielBMarkham,,,"To the degree you are relaxed, having fun, and working hard, it's working. Use that as a guide. Scrum/Agile isn't magic or new -- it's just stuff that smart teams have been doing for decades.<p>Sorry to hear about the bad taste it left. Sometimes it isn't the way you work but just the initial mix of folks that make a big difference. Some people are okay with chaos and changing requirements (ie, they know how to nail down what they can and what they can't and do the work expecting change) and some folks aren't.<p>Remember that agile teams aren't just a big list of stuff where you do a little each sprint. That's something you could train monkeys to do. You're supposed to be managing the big picture, working risky items first, designing for change, etc -- all of the good stuff that keeps you out of those ""done"" screw-ups.<p>EDIT: Burn-down mania: make your sprints small (a week or two). If you end up working OT, it's simple: don't buy so many stories the next time. Some guys will say you should never work OT, but I find that impractical in the real world. Better to have smaller sprints. If something hurts, stop doing it. I also find PMs pressuring teams to buy more stories than they can do. The PM shouldn't be the CSM because of this conflict of interest. The team should be in charge of what it can do or not inside a sprint.<p>Thanks for the story.",1233754575
465698,story,,,3,1,mootymoots,"What we know about AWS EC2 console iPhone application",http://www.reynoldsftw.com/2009/02/amazon-ec2-console-for-your-iphone/,,1233754557
465697,comment,465567,465567,0,0,plesn,,,"It's seems great for developpers. The minus part of generated code and all those frameworks is of course that it doesn't go in the direction of ""view source"" readability. Is css becoming an ""assembly"" for style inside browsers?",1233754463
465696,story,,,3,2,jacquesm,"The value of typing",http://jacquesmattheij.com/content/value-typing,,1233754459
465695,story,,,17,16,sant0sk1,"Drizzle, Simplified MySQL Fork",http://adam.blog.heroku.com/past/2009/2/3/drizzle_simplified_mysql_fork/,,1233754436
465694,comment,464445,465622,0,0,wallflower,,,"The project was interesting because it involved the new process (Scrum), a new technology platform (Adobe Flex), and a fair amount of requirements (rework) and technology (refactor) churn. And it was a ""1.0"" product. And there were high revenue expectations (which were exceeded+met, at least until the recession)<p>We did do fairly large stories (e.g. complete UI panels) but we go slammed when the requirements changed and we had to go back and rework what was 'done' in Sprint 4 during part of Sprint 6. I always joked that I was going to give a well done steak to my scrum master at project's end (e.g. a raw piece of meat).<p>I fear that my first gulp of Scrum has left a bad taste but it was an intense experience. We are much better now - very little requirements churn and we have a UXD group. We don't have Mighty Morphin' Wireframes now. Scrums are now managed according to the scrum master, which means if the SM is relaxed, hands-off (like ours is) we don't get pressured to update the burn down every day.<p>Burn downs. During the first project there was intense pressure to meet the burn down expectations so people would work overtime and that skewed their accuracy and added stress. What ended up happening in practice was that some tasks took hours from other tasks.",1233754240
465693,comment,465580,465580,0,0,fauigerzigerk,,,"We do use automated tests, but not test-first. The tests are written once the design and the initial implementation have settled down a bit.<p>I think production code absolutely needs good test coverage, otherwise changing things is a nail biting affair.",1233754084
465692,comment,465317,465407,0,0,jsdalton,,,"Do you know of any good texts or articles that describe the ""right"" way to test?<p>I put myself in the category of mediocre test writer, because I do bump into the problem fairly regularly of having a lot of tests fail when I do a rewrite. I'd love to learn how to write better tests...and your last paragraph seems to scratch the surface of a superior approach.",1233754026
465691,comment,465681,465681,0,0,jacquesm,,,"more fascinating reading on this subject:<p><a href=""http://www.itu.dk/~mikkelbu/projects/ars.html"" rel=""nofollow"">http://www.itu.dk/~mikkelbu/projects/ars.html</a><p>and this classic:<p><a href=""http://www.cs.nott.ac.uk/~gxk/courses/g5baim/papers/ants-002.pdf"" rel=""nofollow"">http://www.cs.nott.ac.uk/~gxk/courses/g5baim/papers/ants-002...</a> (pdf)",1233754003
465690,comment,465580,465580,0,0,futuremint,,,"We have tests for both Rails and front-end javascript.  Not 100% coverage, but all of the critical code is covered.  TDD is used to develop the more complicated domain specific features that we need to make sure are correct.<p>We also create tests to cover bugs to prevent regressions.",1233753999
465689,comment,465685,465685,0,0,ahpeeyem,,,"You actually could use delicious, with a tag for each group.  If you really don't want different groups to see your other links you could use different usernames.<p>e.g. if your username was JustAGeek you could have any links for your friends tagged with 'friends', and the URL for those links would be <a href=""http://delicious.com/justageek/friends"" rel=""nofollow"">http://delicious.com/justageek/friends</a>.<p>For work you could have the username 'justageekwork'.<p>Delicious generates an RSS feed for any tag as well, just visit that URL and it gives you an RSS feed URL for that list of links.<p>Use the delicious firefox plugin for the one button click sharing functionality.",1233753999
465688,comment,464842,465398,0,0,soult,,,"Since the first 2 are quite common ""open trackers"" (where open refers to the fact that they track any hash you submit), it is often quite likely to find sources there, because other people add them as well when they want more sources.<p>Furthermore my comment will lead to more people, who might not have a DHT-supporting client, adding those open trackers.",1233753962
465687,comment,465222,465222,0,0,Andi,,,"I miss prepared queries. They speed up repeating queries a lot.",1233753926
465686,comment,465567,465567,0,0,liuliu,,,"After read the code of fluid, I think use hand-coded css is not good. However, the css framework for layout is neat and efficient.",1233753575
465685,story,,,10,38,JustAGeek,"A tool/webapp to recommend/share links with different groups of people?",,"I would like to share or recommend links to different groups of people.\nI know, there's delicious but it isn't quite what I'm looking for, I think, because everything you share is visible to everybody following your shares.<p>I've just checked out Friendfeed and it neither seems to be what I look for, for it simply aggregates anything you share and feeds it to everybody, doesn't it?<p>What I'd like to do is share, or rather, recommend a link to only a subset of the people I know.<p>For example, one link might only be of interest to my co-workers, while another might only be interesting for my friends.<p>Ideally, I'd simply click a button while being at the URL to share, pick the group to share with and -bam- it's shared.<p>The different groups would follow my shares via RSS or something similar.",1233753543
465684,comment,465508,465650,0,0,fzkl,,,Thanks,1233753389
465683,comment,465346,465346,0,0,mixmax,,,"I've done a bit of management consulting and found that a good formula for making a system that works is this:<p>1) Talk to management about what their goals are, and what kind of resources they have to get there.<p>2) Talk to the people that will actually use this system, and make sure that they all get to comment and put ideas into it - even if they are minor. These are the people that will be using whatever system is being built, so they know where it hurts.<p>3) Come up with a rudimentary plan of the system. I normally build a a simple mock-up in HTML so that it will be understandable to everyone.<p>4) Talk to the people that will be using the system again, and show them what you have come up with. Inevitably they will offer changes, because you didn't understand them right the first time or because they didn't explicitly know what they wanted, only the problem they have. Keep doing this for a few iterations changing your HTML as you go. Make sure to get buy-in from management along the way.<p>5) Use the HTML as a template for your spec.<p>6) Implement and test.<p>7) Deploy. This step is the easiest of them all, since all the employees (or at least a good part of them) have eagerly been awaiting the fantastic new system that will take away their itches with the old system. They know because they all helped design it. And since they all helped design it they are all eager to make it work.<p>I'm constantly amazed at how it seems that corporate systems are all designed and agreed upon by management and consultants without asking the users first. The author of the article seems to have fallen into this trap, and only just discovered this simple insight.",1233753352
465682,comment,465534,465534,0,0,ionfish,,,"It certainly looks a lot better than the old site.",1233753331
465681,story,,,18,7,robg,"Taking Traffic Control Lessons - From Ants",http://blog.wired.com/wiredscience/2009/02/anttraffic.html,,1233753228
465679,comment,465671,465671,0,0,mattculbreth,,,"Well I can tell you with our startup that we made a mistake--should have gone with the Master strategy around our product name.  Should have renamed the company to be that product name actually.  It's a cool name, precisely describes our offering, and I actually had people emailing me and asking if they could buy the domain.",1233753199
465677,comment,465653,465653,0,0,ahpeeyem,,,"I didn't expect to find inspiration to follow your dreams and do something that really matters to you in this video, but it's a great insight into the self-doubt Katz experienced while he took his family off to another state and lived off savings to create something awesome.<p>Really interesting presentation and I love the hand-drawn slides!",1233752997
465676,story,,,33,10,fromedome,"I'minlikewithyou (YC S06) hires new CEO, changing names. Next: Revenue",http://www.alleyinsider.com/2009/2/iminlikewithyou-hires-new-ceo,,1233752828
465675,comment,465671,465671,0,0,JayNeely,,,"It's hard enough to build one brand. As a startup, if you're trying to build product sub-brands while still promoting the company brand, you're frakking crazy.",1233752739
465674,comment,465580,465580,0,0,rs,,,"I do use automated testing, but trying to get more on TDD. I do slap myself in the face when something's not unit tested though.",1233752703
465673,comment,465346,465374,0,0,mixmax,,,"I think this is an unfair strawman attack on the author.<p>Consider this: <i>if a programmer speaks nonsense and there's no one there to hear it, is it still as useless?</i><p>Doesn't sound good does it?",1233752680
