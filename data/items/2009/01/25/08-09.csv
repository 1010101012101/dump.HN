ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
448948,comment,448294,448694,0,0,nazgulnarsil,,,"just launch it <i>is</i> just finishing it for a developer.",1232873865
448947,comment,448780,448780,0,0,liangzan,,,"From an employer's point of view, they don't like to take risks where hiring is concerned. Your wages are a sizable cost. That's why most would require you to work in a similar environment before they would hire you. Not many would want to spend $$ to train or risk hiring a lemon.<p>So going by reverse psychology, the best way to convince your future employers is to build projects similar to what the position entails. If you're looking for Java jobs, build something(substantial) in Java. It tells them 'Hey, this guy has done it before. He probably can do it""",1232873806
448946,comment,448821,448901,0,0,prakash,,,"YC startups can point to whichever website PG + JL register. That kind of google karma will easily put George as the #1 George on any of the search engines.<p>Now, if the YC companies are really creative, George will be the 1st result returned even if someone types in ""Eliezer Yudkowsky"" ;-)",1232873591
448945,comment,448363,448619,0,0,extension,,,"I commented about this on the linked site and it was deleted.<p>Adding a table strikes me distinctly as ignoring the root of the problem, which probably has more to do with safety standards and training. There has to be a more robust way to prevent accidents than luring people away from them.<p>So, ironically, this seems to be an example of asking too many questions, and we're not even at 5 yet.",1232873551
448944,comment,448780,448780,0,0,samyxp17,,,"Simple, been there before. I call it the ""Four Step"" career turn. \n- First pick a language you like, that could land you the kind of job you want and STICK to it.\n- Second, practice, write a few complete apps \n- Try to get any type of ""paid"" work that involved coding in that particular language... I recommend consulting...freelance.\n- Now you have a credible portfolio, finding a pretty serious Software engineering position in ur desired domain should no longer be a problem.<p>The whole process should take about year or less. And no you're not in a hole. If you know ur stuff u'll get noticed. Besides an addition to ur new knowledge u'll have 4 year of SAP ...nothing to sneeze at. For some companies that may just be the perfect mix. Personal bias (I recomend PHP)",1232873402
448943,comment,448722,448932,0,0,andreyf,,,"<i>but then I noticed that the article is dated April/May 2003</i><p>It's amazing how much has changed in the past 5 years. The web has definitely moved into a more social direction - message boards aren't a place where you post, they're a place you hang out. The 'net is morphing into a social environment, not completely unlike the one those envisioned in fiction [1] just 15 years ago.<p>1. <a href=""http://en.wikipedia.org/wiki/Metaverse"" rel=""nofollow"">http://en.wikipedia.org/wiki/Metaverse</a>",1232873402
448942,story,,,1,0,gaika,"Halifax Explosion",http://en.wikipedia.org/wiki/Halifax_Explosion,,1232873315
448941,comment,448722,448932,0,0,david927,,,"Could you elaborate on that?",1232873256
448940,comment,448875,448875,0,0,ardit33,,,"There is another way better way.  Program to interfaces.  Or write out all the methods you need, have empty bodies,  and implement them one by one.  From the lower level/helpers, to the higher level ones.  If any method becomes too large, or if there is a lot of redundancy, break it in smaller units.<p>I think TDD hampers design, as it places a penalty on every time you want to reactor code while you are still implementing it and it keeps you vested on current code, which is against the ""keep it simple, and easy to change"" principle. In languages like java, it may force you to break encapsulation and good design, just to have your code tested.  (how many times have you see this comment:  ""don't use this, just for testing purposes"") in side of methods.<p>If you must do testing, a functional level testing is much better. Where you test only the higher level methods that have are acting on the functionality,  but don't care about the lower level/helper methods.<p>Take the holistic approach, and don't sweat the details. If you do a good job on breaking the implementation in small/reasonable sized methods,  then it is easy to spot errors when you are developing.  Try the best to avoid methods with side effects (modifying shared resources), and keep the methods dumb: input in, input out, no side effects.. Just test the one method that is being called for that particular functionality, and if everything is working well, your overall test should come out as positive.<p>What I really hate is mandatory:  ""you must cover 90% of your code with unit tests"" type of orders by CTO/VP engineering types.",1232873174
448939,comment,448378,448378,0,0,mwerty,,,"fwiw, I built a facebook app on this exact premise (shame): <a href=""http://apps.facebook.com/friendlybets"" rel=""nofollow"">http://apps.facebook.com/friendlybets</a>",1232873134
448938,comment,448780,448844,0,0,azanar,,,"Advertising in general can be a no-win proposition. Posting ads for a 2-5 years of experience programming gig garners a similarly flood-like number of responses, and you get a near equal number of bad programmers. The key difference is now someone else has had to put up with them first.<p>There are worthwhile places to look though, anyway. Imagine yourself in the same position as a fresh college graduate, and imagine where they go looking. Past the obvious answer of asking friends, they visit career fairs and university career centers. Those or something analogous might work well for you, too.<p>As for garnering recommendations, I think they can be a very good source of leads. But, and I'm probably going to gain a lot of flak for saying this, I don't think they are a panacea. It'd be nice if people were impartial enough to only recommend colleagues they know are qualified and will work out well, and it would be equally nice if the people doing the recommending were clueful enough to know when someone <i>isn't</i>. Sadly, not everything is nice, and nepotism for social motives drives more of the recommending that I wish it did.<p>Thus, I and some of the people I know have developed a slightly thicker skin toward people recommended to us; a smile and thumbs up from someone the hiring manager knows isn't enough, and that not having that doesn't preclude your being considered. Who you know might help you get past human relations, but once you get to someone like me, <i>what</i> you know, and more importantly, <i>what you can learn</i>, really start to matter.<p>Oh, and mechanical_fish, I'm not trying to provoke you. Your two comments got me thinking the most of the one's I saw here, and so I decided to respond to them. :-)",1232873131
448937,comment,445959,445959,0,0,makecheck,,,"Customize the number of ""reply comments"" visible below each main comment.  Or maybe, a widget to show or hide a comment tree (with the option to be hidden by default).",1232872891
448936,comment,448780,448780,0,0,bayareaguy,,,"I don't know much about SAP.  All I've heard is that it's a beast big corporations seem to seek out and battle with varying results.  However I'm guessing there are likely places where a little Python or Ruby program could have made a positive difference in an SAP implementation.<p>Is there any way you can find the opportunity to do some non-SAP programming that would make an SAP system work better?  If so, then I would start there because that would allow you to build on what you've already learned.",1232872743
448935,comment,448821,448823,0,0,JMiao,,,"i was 8lbs 10 oz.",1232872503
448934,comment,448742,448916,0,0,nazgulnarsil,,,"it always looks like it's peaking if your growth is hyperbolic.  whether or not they're idiots or geniuses is determined by the market.<p>but if I was running twitter I would certainly take $150 million in cash.  If you still want to run a company well now you have cash and a success under your belt.  Funding should be an order of magnitude easier.",1232872237
448933,story,,,24,24,bdfh42,"Facebook screws iFart author",http://scobleizer.com/2009/01/24/facebook-kicks-off-ifart-author-for-having-too-many-friends/,,1232872179
448932,comment,448722,448722,0,0,bayareaguy,,,"I was very suprised by his first answer:<p><i>If you look with a squinty eye at most of personal computing today, you'll see we're basically just automating paperâ€”using digital versions of documents and mail.</i><p>but then I noticed that the article is dated April/May 2003.",1232872148
448931,comment,448767,448767,0,0,thingie,,,"Europe (every city) ;-)",1232872138
448930,comment,448780,448897,0,0,scorpioxy,,,"I don't quite agree on the first statement. I've known programmers who have been working with COBOL for the past 15-20 years. And they're good at it. Except that it seems that they've been living in a cave for the past 15-20 years and know nothing about current programming paradigms or technology and definitely not languages. So yeah, those people have pretty much placed coded themselves into a hole.<p>Of course, they might be good COBOL programmers, but that doesn't mean that they're good programmers. In my opinion, a good programmer would always be trying to enrich his knowledge by working on different ideas, different technology no matter what his day job is.",1232872043
448929,story,,,11,9,bdfh42,"A year with an Amazon Kindle",http://www.hanselman.com/blog/AYearWithAnAmazonKindleAndNewKindleCases.aspx,,1232871979
448928,comment,448742,448867,0,0,axod,,,"Have you run a website with that many users? Harder than it looks...",1232871967
448926,comment,448789,448789,0,0,gruseom,,,"Your analogy seems to me to go awry here:<p><i>you would start with cells</i> - sounds good<p><i>you would first have had to have divided the duck up conceptually into different parts in order to know that different cell types are needed</i> - does not follow.<p>I noticed that your premise assumes a requirements analysis that already nails down what the program is supposed to do. While that way of thinking is common in the corporate world (where, I note in passing, effective software development is not common - coincidence?), it doesn't fit well with the style of programming you're asking about. If you've read PG's piece on the subject (<a href=""http://www.paulgraham.com/progbot.html"" rel=""nofollow"">http://www.paulgraham.com/progbot.html</a>) you may recall that there's one passage in it that he emphasized. It begins:<p><i>It's worth emphasizing that bottom-up design doesn't mean just writing the same program in a different order. When you work bottom-up, you usually end up with a different program.</i><p>The program changes as it evolves and your understanding of what the program is changes as it evolves [~]. All sorts of interesting feedback loops result.<p>When I work this way, I listen to what the code is telling me. That is, I start with something primitive (your ""cells"" in the analogy) and sense where it's leading. Perhaps it's akin to riding a horse where there's a balance between what you want to do and what the horse wants to do; or to creating a piece of art where the creative process incorporates feedback from the medium itself and from the work as it's emerging.<p>That doesn't mean it's all spontaneous, with no guiding factor. If that were true, no system would emerge - you'd just keep going around in circles and finding yourself back at the primitive level. But the guiding factor is not at all like ""dividing the duck up conceptually into different parts"". It is more like having a felt vision of what a duck would be like. You have that vision and you keep referring to it as you go along. But the vision itself clarifies, and sometimes changes, in response to what happens in the code. You discover what the system is as you make it.<p>Learning to listen to what the code is telling you is one of the most interesting things you can do as a programmer.<p>([~] PG's piece doesn't say that your concept of what the program is changes, only that the constructs it's composed of will be different. I think the two are related though.)",1232871895
448925,comment,448821,448902,0,0,dmpayton,,,"georgegraham.com is taken, whereas georgelivingston.com is available (but not for long?)",1232871776
448923,comment,448780,448816,0,0,azanar,,,">And ""I could be productive with any of those languages"" is a very bad sales pitch. People don't want a generalist.<p>Which people? I'm not asking this to be provocative, but this one of those points where a lot of people seem to have strong opinions, both in blogs and off-line, and the sides seem pretty balanced in size. Even the advertisements seem split between very specialized work, and a company that just wants someone who is intelligent, for whatever internal value of intelligent they choose. The most notable characteristic I've seen for tending toward either side of wanting a specialist is the company's size.<p>My own thoughts on this are torn, but tend toward one of the sides.<p>On one hand, I can understand needing someone who is highly specialized in something simply because it takes so long to become highly specialized in it. Usually, this has much less to do with the language, though, and much more to do with the domain of the problem needing code to solve.<p>On the other hand, the claim that someone can hit the ground running if only they specialized in the particular language du jour is completely bogus. There is <i>far</i> more to understanding a system than understanding the language it was written in, and learning whatever technology they based the system on will disappear into the noise compared to trying to understand what they wrote on top of it if the system is of any size.<p>I can imagine that, in a lot of cases, a generalist would be able to get up to speed nearly as fast as a specialist. More importantly, they would be able to adapt to inevitable change <i>far</i> better than a specialist; the one thing that they perhaps specialize in is learning and drawing parallels. I think this skill is way undervalued in most development teams when hiring.<p>And all this specialization goes out the window when the system gets iterated to a new platform, and they fire the specialists, hire on an entire new set, and then become stunned again when these new people don't come in able to be maximally productive on the first day. I don't know that I'd want to work for someone who wants to hire people this way.<p>You'll forgive me for pontificating for a second here, but usually when I see the call for ""specialize, specialize,"" it is from someone who is looking themselves to find a very small niche, negotiate a massive salary based on their specialized knowledge, and live the good life once they have cashed out their knowledge capital in a few years. I'm not implying that the parent commenter holds this philosophy, but I've never seen this work. Either the niche vanishes or becomes less relevant, or they get thrown to the curb when the company ""re-specializes"" the IT group.",1232871744
448922,comment,448742,448867,0,0,siong1987,,,"So, you think that the people there are not competitive enough?",1232871729
448921,comment,448780,448780,0,0,dobes,,,"I think the best advice so far is in fact to learn other tools in your spare time and work on some open source and personal projects so you have something to show.  Start a blog to describe your experiences.  Send a potential employer to look at your blog and projects and they will see someone who (hopefully) communicates clearly and codes well and thus will want to hire you.",1232871704
448920,comment,448780,448780,0,0,scorpioxy,,,"Why does the employer have to take your word for it? Why don't you write something in the language/technology that you want to work with and post it up on your website...or contribute to an open source project that uses it...etc<p>The point is, code speaks louder than words. And your project doesn't haven't to be anything fancy or big, just something that you might need. A blog engine, an rss reader, a utility to do foo. Anything that shows that you can solve problems in this new environment as well as you can in a SAP based one.",1232871679
448919,comment,448767,448898,0,0,cdibona,,,"Probably because suggesting LA for a person who wants public transport is like suggesting they move to the maldives if they want great, low latency, bandwidth for their data center.",1232871628
448918,comment,448821,448910,0,0,tdavis,,,"I was going to simply reply with ""GG NO RE"" but I didn't think anybody would get it :P",1232871619
448917,comment,448780,448780,0,0,noel_gomez,,,"I am looking for someone to help me build a web app.  I think it may be possible to do by building or extending a module for Drupal.  If you are interested I would share my concept and you can see if it is appealing to you.  This way you can gain some experience and maybe we can create something great. :)",1232871533
448916,comment,448742,448787,0,0,axod,,,"Surely a valuation is meaningless until you are able to actually have a liquidity event.<p>If it was me, I'd recognize that the Twitter hype is probably peaking about now, and it's a good time to quit and take some cash.",1232871523
448915,comment,448767,448831,0,0,cdibona,,,"Cambridge is the only one with both jobs and usable public transport. If you are a decent cyclist, I may add Berkeley.",1232871515
448914,comment,448742,448838,0,0,axod,,,"I think it's more likely investors have believed the hype rather than actually do any rigorous business analysis based on potential profit.",1232871390
448913,comment,448742,448839,0,0,axod,,,"It's simply ridiculous. Maybe we'll soon see a return to the dotcom tactics of alladvantage,themutual etc,etc - Pay people to become your ""Users"" so you can get more funding.",1232871261
448912,comment,448767,448906,0,0,gravitycop,,,"OK. I didn't know. Thanks for the enlightenment.",1232871190
448911,comment,448767,448846,0,0,silencio,,,"I rip my hair out at this. I live close enough to Century City that I can generally walk to metro/santa monica/culver city lines if I can't take my car, but to most places I want to go to it's horrid and ends up taking more time and costing more as well. The only time I have never regretted taking a bus is in the super early mornings when I have an entire bendy Metro Rapid bus to myself all the way downtown, or when I can take the commuter express...both usually to get to some destination near downtown.<p>You need to live in very specific areas to benefit from existing public transit, and the inflexibility of the existing systems (and city sprawl) will not make you happy in those occasional situations you need to go to some kinda event that is way out of your way. Other than that, yes, maybe Metro itself is pretty awesome. Also, I have to mention that the flyaway service is awesome too, public transit from westwood to lax in the same time as a shuttle only paying 1/4 of the price? Yay!<p>I wish car sharing were more popular in this area, but flexcar/zipcar sort of fucked us over in that aspect.",1232871115
448910,comment,448821,448902,0,0,kajecounterhack,,,"LOL I just said the same thing --\nprobably GG, it's more BA",1232870992
448909,comment,448767,448767,0,0,theantidote,,,"I'm gonna go ahead and add DC to the mix. It has 3 airports, an excellent metro and bus system, Verizon FIOS, relatively cheap out in the exburbs or apartments in formerly sketchy neighborhoods, and great proximity to NYC.<p>The only issues are the lack of people and VCs. You can always do contract work for the government though!",1232870967
448908,comment,448821,448872,0,0,kajecounterhack,,,"Welcome to the world, Georgie! Man he's got the best choice of initials. GL for good luck, or GG for good game, haha.<p>Watch, his first language is going to be leetspeek.",1232870950
448907,comment,448539,448539,0,0,jwtanner,,,"CBC's Quirks and Quarks, great science radio show ( available in podcast ).<p><a href=""http://www.cbc.ca/quirks/"" rel=""nofollow"">http://www.cbc.ca/quirks/</a>",1232870891
448906,comment,448767,448903,0,0,tptacek,,,"A number of these are really small firms that don't lead on early stage tech investments.",1232870888
448905,comment,448789,448885,0,0,gruseom,,,"<a href=""http://images.google.com/images?hl=en&q=flying+ducks"" rel=""nofollow"">http://images.google.com/images?hl=en&q=flying+ducks</a>",1232870867
448904,comment,448780,448780,0,0,reg4c,,,"Also, having some kind of certification like Sun's Certified Java Programmer/Developer thing can be useful<p>IMO, you should write something cool and then apply for some jobs and if nothing works out then just wait a while, write something else, then apply again<p>Ow, and you are definitely not in a hole, SAP is an awesome company. If you're bored with what you do now ask for a transfer to a different department.",1232870825
448903,comment,448767,448817,0,0,gravitycop,,,"<i>Chicago's not a great place to get funding (we have JK&B and... nothing?)</i><p>The Funded says: <a href=""http://www.thefunded.com"" rel=""nofollow"">http://www.thefunded.com</a><p><pre><code>  Prism Capital\n  OCA Venture Partners\n  William Blair Capital Partners\n  Mesirow Financial Private Equity\n  Baird Venture Partners\n  SSM Ventures\n  ARCH Venture Partners\n  Adams Street Partners\n  ARCH Development Partners\n  Hyde Park Angels\n  i2a Fund\n  Apex Venture Partners\n  Fusion Capital Partners\n  Frontenac Company\n  IllinoisVENTURES\n  Merrrick Ventures\n  Dunrath Capital</code></pre>",1232870626
448902,comment,448821,448821,0,0,tdavis,,,"Is it George Graham (GG==Good Game) or George Livingston (GL==Good Luck)? I hope he enjoys our gift... take pictures! ;)",1232870525
