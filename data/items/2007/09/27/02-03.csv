ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
60132,comment,60048,60082,0,0,run4yourlives,,,"So does python ""on"" django, but python itself in no way forces MVC. ",1190861919
60131,comment,60040,60089,0,0,jey,,,"<a href=""http://paulgraham.com/equity.html"" rel=""nofollow"">http://paulgraham.com/equity.html</a>",1190861882
60129,comment,60128,60128,0,0,joe,,,"I typed this up in order to collect my thoughts, in hopes of eventually showing them to my coworkers. I am totally open to questions, comments, and suggestions, especially from YC readers.",1190861148
60128,story,,,24,25,joe,"The Problems With My Startup",http://awmf.blogspot.com/2007/09/problems-with-my-startup.html,"I typed this up in order to collect my thoughts, in hopes of eventually showing them to my coworkers. I am totally open to questions, comments, and suggestions, especially from YC readers.",1190861138
60127,comment,59988,59988,0,0,joshwa,,,"Who thinks they won't do a good job at doing a startup, but does it anyways? And thus, succeeds?<p>Healthy self-doubt is one thing, but are you supposed to be riding the line between self-doubt and giving up? (if so, I guess I'm on the right track) ",1190861081
60126,comment,60058,60112,0,0,chaostheory,,,"are both existing cofounders non-technical? (looks like one of you has good css + javascript knowledge or just css?)<p>rephoria looks like a decent idea and the design was done really well - I like the name too<p>the only question I have in my head is: how are you going to beat Yelp or even Insider Pages? I could be wrong but it seems like you guys are going head to head with them. Either that or u remind me of an old company called planet feedback",1190861027
60125,comment,59902,60095,0,0,joshwa,,,"Or at least CPC.",1190860913
60124,comment,60048,60048,0,0,chadboyda,,,"Python and Ruby are great. But if you are interested in PHP and like MVC (such as Rails), I recommend trying Symfony. I use it for a lot of projects. There are still plenty of good reasons to use PHP just as there are any other language. Use what's best for your project. Be sure to consider feature requirements, developer skill sets, and your timeline when deciding.<p>After enough experience at programming you'll begin to realize understanding 'how to program' is fundamentally different from knowing one particular language or another. It's a logical mindset and way of thinking or problem solving that ultimately matters. Language is just syntax and can be picked up in under 24 hours for most languages once you understand 'how to program'.",1190860780
60123,story,,,7,0,nickb,"Google Releases New Google Reader For iPhone",http://www.techcrunch.com/2007/09/26/google-releases-new-google-reader-for-iphone/,,1190860742
60122,comment,59794,59832,0,0,gregjor,,,"edw519: I'm not sure you got the point of my article. I am a programmer who happens to like relational databases. I have enough experience with RDBMSs (and the same half-baked alternatives you've run into) to at least have an opinion. My article was not criticizing RDBMSs or SQL, but rather giving my opinions on why so many programmers don't like or don't understand relational databases.<p>My anecdotal experience is that a lot of programmers bristle when they get into a technical area that actually has a mathematical basis or a demonstrably right way to solve a problem. Programmers are used to problems that have lots of possible solutions, none of them provably right or wrong. I've seen that attitude in the realms of databases, computer graphics, compilers, and algorithms.<p>A few years ago I worked with a programmer who actually set out to prove to me that bubble sort was more efficient than whatever Oracle was doing to sort rows. He was retrieving a lot of rows, unsorted, then sorting them with his own code. Even pulling out Knuth and trying to explain big-O notation to him had no effect -- that was just so much academic bullshit and opinion that didn't apply, according to him. Of course Oracle was able to sort the rows orders of magnitude faster than his PL/SQL bubble sort, and the <i>coup do grace</i> was delivered by a DBA who took the inefficient cursors out of the solution.<p>That kind of thing is played out every day between programmers, and when they run into something like relational theory their first instinct is all too often to dismiss it as old, inapplicable, ugly (see the other comments in this forum), rigid, etc. Those are all code for ""I don't understand it and I can't be bothered to learn it."" When a DBA who is charged with maintaining data integrity interferes with whatever bad idea the programmer has he or she is subjected to <i>ad hominem</i> attacks. Some DBAs no doubt deserve contempt but in my experience a lot of programmers can and should be learning from DBAs rather than sneering at them.<p>In the comments in this forum you'll see the ""Relational databases can't work with tree-structured data"" canard hauled out, as if this exact problem hadn't been addressed numerous times in the database literature (Joe Celko, Fabian Pascal, Chris Date, etc.). That's ignorance, and the older I get the more I suspect it's more willful than I'd like to think.",1190860375
60121,comment,59794,59819,0,0,gregjor,,,"I'm the author of the original article, and I admit that I failed to explain all of the reasons programmers don't like databases -- you came up with one I didn't list (don't want to use a lot of languages) and demonstrated one of the reasons I did list: Who Needs Theory?<p>Your analogy with writing an essay is off target. If writing a program is like writing an essay in English, the SQL/database part of the program are like mathematical formulas in the essay. You could use English instead of mathematical notation but it would be far uglier, less precise, and more prone to error and misunderstanding. In a typical web application (what I've been doing for over ten years) the database part is usually the only part that can be proved correct.<p>I can't help you overcome your misconceptions about relational theory or relational databases, or do anything about your opinion that relational theory is ugly. But you are just wrong arguing that relational databases are glorified arrays full of pointers and examples of premature optimization.<p>The ""best relational advocate"" is probably Chris Date, and if you take the time to read his books you'll at least discover proof that you are wrong.\n",1190859250
60120,comment,60076,60076,0,0,mechanical_fish,,,"On the one hand, I don't agree with this article. But that's easy for <i>me</i> to say - I have backups, and I've worked hard to make them work properly. I don't have to entrust all of my precious data to ""the cloud"" via my relatively slow network connection.<p>On the other hand, this article is saying what I've said for years: web apps are winning because most people have no idea how system administration works, have no desire to learn, and would happily exchange money, privacy, and freedom for a storage medium that doesn't die every two to five years, taking all of their data with it. <p>For most of the computer users in the world, it's not so much a question of whether backing up your data is ""dead"", but of whether it was ever alive in the first place.<p>Last week an Apple Genius told me that my Macbook's hard drive had crashed. He spoke in a sorrowful and apologetic tone, like a surgeon coming to tell me that my mom had not survived her appendectomy. This surprised me for a second, until I remembered that the typical customer regards the loss of a hard drive as a terrible tragedy, rather than as an excuse to thoroughly test the integrity of his multiply redundant SuperDuper backups.<p>(Incidentally: SuperDuper works great. And no, I do not own stock in the SuperDuper guy's company. :)",1190859120
60119,story,,,4,0,robg,"Computational Neuroscientist's review of Hawkins' On Intelligence",http://www.pubmedcentral.nih.gov/articlerender.fcgi?artid=526780,,1190858441
60118,comment,59788,59788,0,0,rms,,,"<a href=""http://www.youbethevc.com/rules"" rel=""nofollow"">http://www.youbethevc.com/rules</a><p>Doesn't sound worth it.",1190858402
