ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
23565,comment,23404,23520,0,0,Tichy,,,"Interesting, but does it still work if you are sending far more messages than you are receiving? I haven't used Twitter, but I imagine that for every SMS they receive they have to send out dozens of update SMS (to all ""friends"").",1179737605
23564,comment,23404,23517,0,0,ced,,,"In general, if a startup fails, that's part of the deal. The entrepreneur loses thousands of hours of work. He doesn't owe anything to his investors.<p>What's different about Evan's story that compelled him to repay them?",1179737362
23563,story,,,1,0,mattjaynes,"How To Crank Through Your Gmail",http://webworkerdaily.com/2007/05/20/how-to-crank-through-your-gmail/,,1179736909
23562,comment,23300,23553,0,0,ced,,,"True... And not having lazy evaluation encourages one to write Matrix.CalculateDeterminant() rather than Matrix.determinant, as it should be. But I don't think that has to do with reuse.",1179736780
23561,comment,23523,23548,0,0,far33d,,,"This is (sort of) a misunderstanding of how most buyouts work. Google, were they to ""acquire"" facebook for $6B would almost certainly structure it as a stock-swap merger. This way the acquisition isn't a taxable event, and they can use stock instead of cash. <p>At GOOG's current market cap, $6B of dilution would be pretty minimal. <p>Not mention the $10B of cash equivalents (and growing, fast) on their balance sheet to buyback stock or even do a full cash deal if they were feeling crazy. <p>",1179736266
23560,comment,23559,23559,0,0,far33d,,,"This is quite a provacative article. I don't think I agree with its conclusions, but still an insightful read.",1179735977
23559,story,,,5,16,far33d,"A Great Idea Lives Forever. Shouldn't Its Copyright?",http://www.nytimes.com/2007/05/20/opinion/20helprin.html,,1179735943
23558,comment,23300,23554,0,0,benhoyt,,,"Oh yes, and Forth has an elegant solution to Paul Graham's ""accumulator generator"" problem (though Forth isn't dynamically typed, so it only works for integers):<p>: accgen  create ,  does  tuck +! @ ;<p>From comp.lang.forth:\n<a href=""http://groups.google.com/group/comp.lang.forth/msg/f06370fed978abff?dmode=source"" rel=""nofollow"">http://groups.google.com/group/comp.lang.forth/msg/f06370fed978abff?dmode=source</a>\n",1179735807
23557,comment,23300,23554,0,0,jaggederest,,,"I have just started poking with forth, after seeing some network card firmware source written in it.<p>One of the most interesting things, to me, was the built-in disassembler: if you ask 'how is this word defined', and it's not defined in the current environment, it'll go disassemble the binary and show you that.<p>Pretty insane, if you think about having to write software to interface with old / undocumented / closed source libraries.",1179735706
23556,comment,23300,23331,0,0,jaggederest,,,"Ruby is so perlesque if you use all the $ variables, it's almost a push.",1179735508
23555,comment,23300,23446,0,0,jaggederest,,,"I may have misinterpreted what he wanted, but if you're asking 'how do I learn to hack', it's a whole different question than 'how do I learn to write mediocre web applications'<p>If your goal is to learn to build rails sites, start with rails; however, if your goal is to be good at programming and subsequently be able to build things that other people can't, in the sense of PG's hacker advantage, then you should learn to hack, not build rails apps.",1179735349
23554,comment,23300,23422,0,0,benhoyt,,,"I learnt to program by writing a Forth compiler in assembler (Dad taught me). It was a superb way to learn.<p>One of Forth's strengths is its ultra-simple syntax. If you thought Lisp had little syntax, think again. Forth is just tokens and whitespace. You can write a compiler than can compile itself in a few screenfuls of Forth (and I'm not talking about eval).<p>Forth is obscure but beautiful. It's reflective, meaning you can write code that writes code (macros). Also like Lisp, you can easily roll your own control structures or add an OOP interface. But it does lack good libraries and a decent-sized user base.",1179735230
23553,comment,23300,23421,0,0,jaggederest,,,"Well, if you avoid side effects assiduously enough, other languages can certainly have that sort of purity.<p>However, you have to remember, avoiding side effects is what enables lazy evaluation, which is a huge gain in terms of performance. If you're not restricting side effects, you can't default to lazy evaluation.",1179735213
23552,comment,23379,23379,0,0,Keios,,,"Thank you everyone for your responses :) I was worried about the visas, but I think I need to focus on the hacking instead..",1179734605
