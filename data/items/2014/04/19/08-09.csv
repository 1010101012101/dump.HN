ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
7612986,comment,7612686,7612947,3,0,throwawaykf05,,,"Thing is, as the courts and the USPTO found time and again, pretty much all subsequent solutions to that problem were non-significant variations of the Wrights&#x27; patent. Even Curtiss&#x27; own aileron patent was invalidated because the Wright patent was prior art.",1397897978
7612985,comment,7612686,7612969,3,0,jwdunne,,,"By preventing people from simply copying their solution with a patent on their method, which puts up a nice big barrier to entry to everyone except innovators such as Curtiss.",1397897936
7612984,comment,7603060,7603060,1,0,adam1234,,,"Hi, I&#x27;m from Seznam.cz and I&#x27;m in charge of Mapy.cz. Let me explain a couple of things and correct some misinformation:<p>1) As was already said above, Seznam.cz is not a startup, it&#x27;s been here longer than Google, and it&#x27;s one of the biggest Czech companies (over 1000 employees). In terms of monthly user counts, it is still number one on Czech internet, in front of Google.<p>2) the imagery is not taken by drones, nor helicopters, but airplanes. Nobody is able to take imagery of large areas (hundreds of kilometres) by drones, it is only possible by airplanes, in today&#x27;s state of technologies. We have our own imagery, not bought from anyone.<p>3) the 3D model is computed from the aerial imagery (ortofoto + oblique). No manual work is performed. It is a highly demanding computation, consuming months even on huge cloud of top-notch supercomputers - which is why it is not easy even for Google, to do it on large areas around the whole globe. The computation will run for almost one year, to create 3D model of thousands of square kms, which we plan to publish this year.<p>4) our maps earn money by selling our primary data, which we produce (ortofoto, oblique, Panorama, etc.), for commercial professional users (not only in Czech rep., but also abroad). The company as a whole earns money from selling media space on its 20-30 web sites (seznam.cz, firmy.cz, sreality.cz, novinky.cz, etc.). The company is highly innovative in terms of technologies (as I describe above), as well as in user interface (our GUI never copies other designs, we constantly create and test newer and newer GUIs).<p>Howgh :)",1397897832
7612983,comment,7611214,7611214,1,0,ttflee,,,"The way to explore a bunch of codes is really dependent to how much time and effort one can pour into:<p>- To grep it<p>- To debug it<p>- To read over it<p>- To rewrite it",1397897783
7612982,comment,7612783,7612930,1,0,kyberias,,,"OP didn&#x27;t say that &quot;degree&quot; increases the ability to learn! He said that the process of studying in an academic setting has some benefits especially since the curriculum is often designed to give a broad coverage on many important subjects. That does not in any way imply that some could learn well on their own as you have experienced.<p>Disclaimer: MSc in Computer Science\n(never really liked lectures myself, but I highly respect the process of forcing oneself to learn by completing a degree)",1397897778
7612981,comment,7612686,7612870,2,0,anewcolor,,,"this was my reaction after reading this article as well.",1397897703
7612980,comment,7612686,7612943,27,0,gojomo,,,"The US Constitution didn&#x27;t invent patents; it enabled them based on an earlier tradition. That tradition had come to include a descriptive/disclosure requirement, as part of the mechanism by which the patent promoted technological progress.<p>The US Constitution&#x27;s language is sufficiently open-ended –&quot;promote the progress of science and useful arts&quot; – that it covers not just incentivized conception but also the &#x27;progress&#x27; of knowledge-diffusion (disclosure). Also, in that era, before mass-manufactured products or even a proper understanding of elements and molecules, it was far less likely that the delivered product itself embodied enough information to reverse-engineer the processes that made it.<p>So:<p>• <i>not</i> a lie;<p>• the significance of disclosure is brought up because it was familiar to the authors of the US Constitution;<p>• the Constitution&#x27;s language is generic enough to include &#x27;disclosure&#x27; as one aspect of the &#x27;progress&#x27; it describes;<p>• modern reasoning about the supposed ease of reverse-engineering doesn&#x27;t apply to the early patent systems.<p>See, for example, <a href=""https://en.wikipedia.org/wiki/History_of_patent_law#Development_of_the_modern_patent_system"" rel=""nofollow"">https://en.wikipedia.org/wiki/History_of_patent_law#Developm...</a>",1397897688
7612979,comment,7611687,7611687,1,0,golergka,,,"Any news on Mono version update? May be these AOT bugs that make Linq unusable will be fixed at least, or compiler won&#x27;t crash at guessing generic parameters that often?",1397897639
7612978,comment,7611687,7611687,1,0,herokusaki,,,"Does Unity have its equivalent (however immature) of Apache Flex?",1397897637
7612977,story,,,1,0,rajacombinator,"Ask HN: Startup lawyer conflicts (with another startup?)",,"Is it bad if your startup lawyer is representing another startup in the same space? Consider the following example: imagine Uber and Lyft are both in pre-launch stealth mode and independently developing the same products. What kind of problems could arise from the two companies both using the same lawyer?",1397897581
7612976,comment,7611687,7612728,2,0,golergka,,,"Majority of games never break even, and that&#x27;s ok: it&#x27;s a high-risk, high-reward business. $90k isn&#x27;t even close to an adequate 3d mobile game budget of average+ quality, so if you gross so little , you&#x27;re fucked anyway, or you never had a serious product at your hands to begin with.",1397897560
7612975,story,,,5,0,ziodave,"Homebrew Cask, install OS X apps from the console",http://caskroom.io/,,1397897559
7612974,story,,,1,0,ziodave,"Set-up Docker on OS X, the no-brainer way",http://blog.javabien.net/2014/03/03/setup-docker-on-osx-the-no-brainer-way/,,1397897511
7612972,comment,7609323,7612778,2,0,coolsunglasses,,,"Most people aren&#x27;t good enough at backups for me to consider that enough to mitigate the risks.<p>The data needs to go somewhere other than ES before you considered it &quot;saved&quot;.",1397897459
7612971,comment,7612783,7612918,1,0,matthewmacleod,,,"I don&#x27;t like whiteboard exercises either, but I definitely have to agree with this. Three interview questions that I&#x27;ve found do a great job of determining how effective an engineer will be:<p>1. Describe the principles of a linked list. What properties does it have that are useful, and in what situations will using one cause a problem?<p>2. What&#x27;s the difference between this and a doubly-linked list? What are the benefits and downsides of using the latter?<p>3. How would you represent a tree in a SQL database? What are the properties of your representation?<p>(I especially like the last one, because it&#x27;s totally open-ended. Engineers come up with everything from naïve adjacency lists through to nested intervals and closure tables, and their ability to describe the tradeoffs is a really strong indicator of their programming ability. Of course, it&#x27;s not a suitable question for all positions.)",1397897456
7612970,comment,7612686,7612943,1,0,pcrh,,,"If you want protection for an invention, you have to disclose what that invention is.",1397897377
7612969,comment,7612686,7612947,1,0,option_greek,,,"But how do they benefit from the fact that they realized lateral instability is a problem that needs solving to achieve stable flight ?",1397897326
7612968,comment,7611878,7611878,2,0,rajacombinator,,,"good luck but when i read something like &quot;Our tax engine is built using artificial intelligence.&quot; it doesn&#x27;t exactly make me think &quot;this is a legit product&quot;",1397897307
7612967,story,,,4,0,chhap,"Maynard: a Wayland desktop shell for the Raspberry Pi",http://blog.barisione.org/2014-04/maynard/,,1397897294
7612966,comment,7611687,7612357,1,0,baddox,,,"It&#x27;s not for FPS&#x27;s (although it&#x27;s been used for that), but Starcraft 2 has really impressive modding features. I&#x27;ve been third person action games, arcade shooters, 2D platformers, and tower defense titles. There&#x27;s even a popular soccer game where each player is a unit from Starcraft.",1397897208
7612965,comment,7612783,7612942,3,0,ZoF,,,"If by &#x27;learning styles&#x27; you mean the formalized definitions of the term by educational theorists, sure those lack evidence...<p>I think the parent comment was using the literal definition though; that is to say he meant that people learn in different ways.<p>Are you saying that you think there&#x27;s little supporting evidence that people have different styles in which they learn? I would assume not as that would be a pretty ludicrous world-view; especially considering the article you linked even concedes that kids learn differently.  The only point of that article really was to point out the flaws in forming groups of children based on learning style; not because people don&#x27;t learn differently, but because any &#x27;learning style&#x27; categorizations thus far haven&#x27;t been proven sufficiently meaningful.<p>In summary, you have no reason to call him out on something he isn&#x27;t even promoting.",1397897201
7612964,story,,,1,2,babuskov,"Ask HN: Is there an open source project for geoIP visualization?",,"I searched but only thing I found was this SaaS:<p>http://batchgeo.com/<p>If there is nothing out there, I would like to build one and make it open source. I&#x27;m thinking to use MaxMind db and Google Maps. Any other ideas?",1397897064
7612963,comment,7612686,7612686,3,0,throwawaykf05,,,"No, the Wright brothers&#x27; patents did not hold up the US aviation industry:<p><a href=""http://papers.ssrn.com/sol3/papers.cfm?abstract_id=2355673"" rel=""nofollow"">http://papers.ssrn.com/sol3/papers.cfm?abstract_id=2355673</a><p>Although the introduction reads something like a conspiracy theory, this paper does a decent job of providing historical industrial data and references as evidence that despite the various patents at play, the aviation industry in the years leading up to and during WW1 was actually doing well.",1397897027
7612962,comment,7612783,7612899,1,0,kenster07,,,"&quot;The idea that you will learn more in industry than in a CS degree only applies if A) you are in a shitty CS program or B) you aren&#x27;t trying hard enough to learn anything.&quot;<p>Disagree. If you learn more in 3 years of college than you do 3 years on the job, you are a shitty employee.",1397896980
7612960,comment,7595440,7602456,1,0,zobzu,,,"well, now you get a better perspective of how bad the US ones are I guess, because it didnt take me much longer when i lived in germany (for many years) past the first year / reading how it works. sure maybe i could have saved 20eur more, but not anything sensible.<p>you guys have it good in comparison, you just dont realize how bad it is elsewhere.",1397896861
7612959,comment,7612783,7612816,1,0,jsmeaton,,,"Yes. But more importantly, I&#x27;ve worked on code, written by people without formal education, that could clearly have benefited from a different algorithm or data structure. I&#x27;m talking really simple stuff, like using a dict instead of a list for a lookup.",1397896861
7612958,comment,7612783,7612837,1,0,matthewmacleod,,,"<i>You&#x27;ll likely never have to implement a linked list in C in the real world…Any company that puts a bigger emphasis on linked lists and sorting algorithms in the hiring process than on OS and networking fundamentals is a good sign to start running away.</i><p>Not true.<p>Networking and operating system fundamentals are important, no doubt. But there&#x27;s also ample documentation, and it&#x27;s relatively easy to find practical examples about how to work with (say) multithreaded code.<p>But you&#x27;ll be better at exploiting your knowledge in this area if you&#x27;re familiar with the underlying tools and algorithms. For example, how are you going to write good multithreaded code unless you understand semaphores and mutexes? How are you going to parse and search data rom your network service, unless you know when it&#x27;s appropriate to store it in a doubly-linked list, or maybe a skip list…<p>I&#x27;ve known programmers to do preposterously inefficient things because they don&#x27;t understand the underlying constraints and rules of the system they are working with. In particular, developers I&#x27;ve worked with who don&#x27;t have a formal CompSci background tend to be more likely to implement complex ad-hoc solutions to problems where there are well-understood general classes of implementation (sometimes included in whatever stdlib or framework they are using!) which will solve the problem for them.<p>Understanding the principles underneath it all is something that all great programmers I&#x27;ve known share in common. That doesn&#x27;t mean that it&#x27;s impossible to be a good programmer without a CompSci degree, and it doesn&#x27;t mean that software engineering is any less important to an actual deliverable product. But writing it off in the way you do isn&#x27;t really justified.",1397896832
7612957,story,,,1,0,lebek,"Time is a Line",http://unicornfree.com/2014/fuck-innovation-take-2-the-obvious-fucking-fuck-fuckers,,1397896825
7612956,comment,7612686,7612870,6,0,amirmc,,,"It&#x27;s sufficiently well-veiled that I don&#x27;t see the link to Apple at all. I don&#x27;t know the detailed history you&#x27;re referring to but if you&#x27;re determined to see things through this lens then <i>everything</i> this author writes can be taken as a snipe at Apple (no matter how stretched). In other words, he&#x27;ll never be able to redeem himself in your eyes. Is that reasonable?",1397896816
7612955,comment,7612783,7612859,1,0,mattmanser,,,"The interesting question I have for you is what do you think is complicated?<p>1. The algorithm you spent 1/2 a day writing and designing that took me a day using google and common sense<p>2. The 20k LOC program we then spend a few months writing that contains that single algo in it but yours keeps falling over because you spent all that time learning algos instead of learning how to program<p>Swings both ways!<p>Managing complexity, practical experience and the &#x27;art&#x27; of programming are things that are not taught in a degree and far more fundamental and used far more frequently.",1397896791
7612953,comment,7612783,7612783,3,0,dschiptsov,,,"It is like literature - one have to read the best books of the best guys (roughly, Nobel prize winners and nominees).<p>Similarly, one have to study physics with Feynman lectures, etc.<p>One have to study concepts and ideas, not the &quot;tricks&quot; or &quot;classes&quot;, so, Smalltalk and ideas of Alan Kay behind it (message passing, not the cryptic syntax), Erlang, and Armstrong thesis it is based upon, all the great ideas behind Scheme - SICP, Brian Harvey&#x27;s course, and CL - pg&#x27;s books, especially On Lisp. Big ideas behind Haskell (syntax and semantics). Philosophy behind Python[3] and how it was followed. Dynamic, Lisp-like nature of Ruby (methods could be <i>added</i> and shadowed at run-time, &quot;true OO&quot; is of last importance). Go, and design decisions it was built upon.<p>One has to read parts of standard libraries of [great] languages. At least of Haskell (list functions) and of CL (usage of macros).<p>There is also Arc as a great example of bootstrapping of a language (and Clojure, but it is cluttered and messy compared to Arc). So at least <i>try</i> to understand arc.arc and core.clj<p>Algorithms and Data structures is the must. At least introduction to these topics, as they been taught by Brian Harvey&#x27;s CS61A. Then one could use a thick book (from MIT Press) as a reference.<p>This is so-called high level. There is also one in the middle.<p>The &quot;basic goodness&quot; of C (with asm snippets when needed), how executables (binaries) and shared libraries were created from &quot;object files&quot;, how dynamic linking works, and how FFIs are implemented.<p>One has to understand the process and thread abstractions (in terms of an OS), what is a syscall and an interrupt, etc.<p>There is also a machine level. One has to understand what is a machine word, what is an address (and pointer), what different encodings for different [machine] data types are (such as integers and floats) what are registers and how different machine instructions designed for different [machine] data types.<p>One <i>must</i> be able to follow and understand how a high-level code, such as in Lisp or Haskell is to be transformed into a machine code, and how C code is transformed into an executable file or a shared library for this or that particular OS and CPU architecture (EABI).<p>btw, these are just the very basics.)",1397896735
7612952,story,,,75,55,nullobject,"Reactive UIs with React and Bacon",http://joshbassett.info/2014/reactive-uis-with-react-and-bacon/,,1397896693
7612951,comment,7610829,7611532,1,0,baddox,,,"I&#x27;m confused by your terminology. My impression of the word &quot;renter&quot; is that it refers to monopolies, but Uber has several very well-known competitors, at least in major cities.",1397896676
7612950,comment,7612273,7612557,1,0,canatan01,,,"You can also follow those people on for example <a href=""http://www.nou.nl/hn/user/cperciva"" rel=""nofollow"">http://www.nou.nl/hn/user/cperciva</a>",1397896651
7612949,comment,7610829,7611501,1,0,baddox,,,"Even if that stuff eventually happens, there will still likely be genuine competition, making it almost certainly more efficient than the taxi system.",1397896431
7612948,comment,7612775,7612775,5,0,noelwelsh,,,"Disagree with the characterization of CSP. CSP as I understand it has channels as the main building block for interprocess communication. Channels can be synchronous or asynchronous, and bounded or unbounded. The important point is that a channel is a value (you can pass it to a method, return it from a method) and usually has a type.<p>Actors are like a simplified CSP where each (lightweight) thread has a single input channel. In the case of Akka this mean you lose type information because control messages are mingled with data messages and you can&#x27;t assign any useful type of them.<p>Disruptor is mainly a pattern and implementation for high efficiency -- big queues, minimum number of threads, and some tricks using CAS operations and the like. I wouldn&#x27;t call it a model of concurrency -- it&#x27;s basically a particular implementation of CSP.",1397896397
7612947,comment,7612686,7612939,9,0,jwdunne,,,"Yeah but the Wrights invented a method to solve the lateral instability problem. They shouldn&#x27;t be able to patent all solutions to a problem, just the solution they invented, surely?",1397896366
7612946,comment,7610527,7610527,3,0,HowardMei,,,"As far as I know, Huawei was the only real employee-coshared company on the planet issuing dividends attached &#x27;virtual&#x27; stocks to their employees where virtual means stock ownership validity tied to the employment.<p>Engineers working in Huawei bought shares priced at net asset value with salary or bank loans and gain dividends at a yearly ROI around 17%~75%.<p>This unique &#x27;communist&#x27; capital structure was created due to lack of venture capital and outside financing. It&#x27;s also an experiment before China fully adopting western style corporation law.<p>Huawei has a complicated capital structure of founder (1.42%) + employee union (98.58%) which scared many big investors away and hindered it from IPO.<p>Recently, Huawei adjusted the virtual stock policy to freeze its capital structure because the structure complexity incurred a lot of accusations from the US government and harmed its growth in several major markets.<p>Alibaba also failed to request change of Hongkong IPO rules to apply employee-partnership to protect its senior employees.<p>Therefore, employee equity isn&#x27;t merely about internal profit sharing or fairness at all. Investors or traditional capital markets don&#x27;t like the &#x27;communist&#x27; flavored capital structure.<p>Employee option is the only viable solution before some one totally disrupt the current capital market.",1397896339
7612945,comment,7610829,7611751,1,0,baddox,,,"Where are you guys having these bad experiences? I don&#x27;t use Uber much, but I have used Sidecar in SF about once a week for around two years without a single bad experience, and I would have thought Uber had an even higher standard.",1397896334
7612944,comment,7612923,7612923,1,0,megaman22,,,"You should probably figure out if you are even capable of learning CS and programming.  \nIn my experience, even many CS degree graduates never really learn to code.",1397896222
7612943,comment,7612686,7612869,4,0,guelo,,,"This is an oft-repeated lie. The point of patents, as stated in the US constitution, is to incentivize inventors by giving them a monopoly for a limited time. It says nothing about disclosure.<p>Promoting disclosure doesn&#x27;t make sense anyway since once an invention is commercialized it can usually be reverse-engineered.<p>I don&#x27;t understand where this idea comes from or why people always bring it up.",1397896123
7612942,comment,7612783,7612909,1,0,lomnakkus,,,"This might be a bit of a tangent, but &quot;learning styles&quot; have very little supporting evidence (if any): <a href=""http://www.danielwillingham.com/learning-styles-faq.html"" rel=""nofollow"">http://www.danielwillingham.com/learning-styles-faq.html</a><p>Just to be clear: I have absolutely <i>no</i> doubt that having ADHD will impact your ability to sit through lectures -- I&#x27;m just commenting on the generalisation to &quot;learning styles&quot;.<p>And, yes: CS has very little to do with actual programming unless you actively work towards that in terms of your chosen niche of programming.",1397896108
7612941,comment,7610221,7611212,1,0,dundun,,,"A possible way to look at Airbnb is that they have 200k properties and 200k contractors that get paid a percentage of the revenue they generate.<p>They aren&#x27;t in the hotel business, they&#x27;re marketers and matchmakers.",1397896104
7612940,comment,7586248,7587074,1,0,johnfactorial,,,"Non sequitur means &quot;it does not follow.&quot;",1397896096
7612939,comment,7612686,7612686,4,0,checker659,,,"If you invented it, you should be allowed to patent it. Especially, if it as ground breaking as flight would&#x27;ve been. I see no greed there. By that logic, the writer should head to North Korea and lead the life of a Comrade since the same could be said about capitalism too.",1397896093
7612937,comment,7612783,7612783,1,0,JonnieCache,,,"If you only take one computer science concept with you into industry, let it be the finite state machine.<p>More than one would obviously be preferable :)",1397895996
7612936,comment,7612923,7612923,1,0,lutusp,,,"Your question is too unfocused and general for a meaningful answer. Without specific questions, all I can say is, &quot;study computer science.&quot;<p>Here&#x27;s a suggested starting point:<p><a href=""http://www.bottomupcs.com/"" rel=""nofollow"">http://www.bottomupcs.com/</a>",1397895996
7612935,comment,7612783,7612783,2,0,kijin,,,"&quot;What skills do self-taught programmers commonly lack?&quot; is a very different question from &quot;What skills do self-taught programmers need to learn?&quot;<p>What you need to learn depends a lot on what you plan to do. Programming is a large field with lots of different specializations. If all you want to do is make web apps and mobile apps, there is probably no need to learn how to write an OS, you only need to understand how the various OSs differ from one another. On the other hand, if your passion is in systems programming, there is probably no need to learn about the latest CSS preprocessor. All of these things are good to know, but one person cannot, and does not need to, know everything.<p>Pick one or more specializations that you&#x27;re particularly interested in, and learn a lot about them. Don&#x27;t completely ignore all the other fields, but satisfy yourself with a high-level understanding of (1) what those fields are generally about, (2) why they&#x27;re important, and (3) when you should defer to the judgment of someone who is an expert in one of those fields.<p>Anyway, here&#x27;s one specific suggestion that I don&#x27;t think anyone has made yet: if you do anything web-related, learn what the various protocols that make the internet tick (http, smtp, dns, etc.) actually work under the hood. You should be able to create a text file, pipe its contents to a telnet session, have the machine on the other side return useful information, and be able to parse the result. Not because such a skill will get you a job, but because the insight you gain during the process will put you ahead of the majority of &quot;web developers&quot; who have no idea how much complexity Rails hides behind its ass. When you&#x27;re done with text-based protocols, move on to binary protocols. (Memcached is good for practice because it uses both.) Incidentally, this will also teach you a lot about commonly used data structures.",1397895925
7612934,comment,7612783,7612927,3,0,AdrianRossouw,,,"Rich Hickey&#x27;s presentation &quot;Simple Made Easy&quot; changed how I communicate about software complexity.<p>I got so frustrated about only having a 1 hour presentation to link people to, that I ended up writing some notes to be able to refer to them later.<p><a href=""http://daemon.co.za/2014/03/simple-and-easy-vocabulary-to-describe-software-complexity"" rel=""nofollow"">http://daemon.co.za/2014/03/simple-and-easy-vocabulary-to-de...</a>",1397895923
7612933,comment,7612783,7612783,2,0,noelwelsh,,,"What should a self-taught programmer study? The simple answer is: whatever you want. I have always found that I learn best when I&#x27;m motivated to learn about the subject. So I would suggest studying the things you find interesting. Where others&#x27; suggestions can help is in describing and motivating fields you might not have heard of, or might have dismissed. There are plenty of suggestions in this thread, or just look at the curriculum of a top CS program.<p>As for how you study -- just choose some and use it. There are many great texts, online courses, and so on. However it is far far more important to just start with something -- anything! -- than to waste time deliberating about the best method. The difference between a book and online course, for instance, is not so big that it&#x27;s worth spending time deciding between them.",1397895855
7612932,comment,7612783,7612783,1,0,AdrianRossouw,,,"I just started a series of blog posts that handle some of the more complex subjects in a clear and relatable manner.<p><a href=""http://daemon.co.za/2014/04/introduction-fullstack-fundamentals/"" rel=""nofollow"">http://daemon.co.za/2014/04/introduction-fullstack-fundament...</a><p>This is a roadmap, not a recipe book. I want to give people a bit of surface area to grab onto when learning these things, so they can figure out how all the pieces relate to each other.<p>here&#x27;s a trello of the planned posts so far (several outlines/drafts already): <a href=""http://i.imgur.com/txu4yd3.png"" rel=""nofollow"">http://i.imgur.com/txu4yd3.png</a><p>Any ideas about what I should write about would also be useful.",1397895811
7612930,comment,7612783,7612885,4,0,ZoF,,,"Interesting viewpoint. Overall, though, I disagree with your tone; particularly the importance you&#x27;re implying a degree has over your ability to learn.<p>I&#x27;ve found that, for me personally, learning with a group of peers interested in whatever aspect of computer science I&#x27;m learning has been far more beneficial than an academic setting or formal curriculum has.  That is to say, I learn faster and receive more accurate/timely feedback sitting in IRC than I do listening to lectures.<p>I don&#x27;t think college is necessary or even well suited for everyone, in fact I wish I didn&#x27;t personally feel obligated to check the box myself; it&#x27;s certainly one of the best places to meet people in your field though.<p>In the end I&#x27;d say I learn fastest when I a.) Don&#x27;t understand something and want to, or b.)Want to make something.  In both of those cases effectively using the resources available(docs/irc/mailing-lists/google)helps enormously.<p>That said, I think people learn in different ways so I&#x27;m hesitant to offer any concrete advice based on anecdotal experience.<p>I&#x27;d also be hesitant to imply that people without a degree are more susceptible to Dunning-Kruger effect.(especially when some of the most incompetent people I&#x27;ve faced are recent graduates with a lot of confidence)<p>Also that &#x27;well elaborating&#x27; post is under 500 words and consequently elaborates very little.",1397895596
7612929,story,,,1,0,Tsiolkovsky,"KDE Releases Applications and Development Platform 4.13",http://dot.kde.org/2014/04/16/kde-releases-applications-and-development-platform-413,,1397895592
7612928,comment,7612686,7612869,2,0,cortesoft,,,"For a lot of this stuff, trade secrets wouldn&#x27;t really keep people from sharing innovation.... Anyone could have looked at a Wright airplane and figured out how the lateral stabilization worked.",1397895586
7612927,comment,7612783,7612783,5,0,mbrock,,,"Depends on your goals.<p>Generally, if you want to work with product development, please learn the importance of good abstraction, readable code, clarity, doing the simplest thing, refactoring, and so on.<p>Most of the time, you can get away with just hacking away until it works. But code bases developed like that tend to develop tons of incidental complexity, weird logic, unintelligible ownership issues, etc.<p>Clever algorithms are awesome, but don&#x27;t let cleverness and complexity grow like vines. Code is like a bonsai tree or something: you have to be meticulous and responsible in pruning it.<p>Check out SICP. It&#x27;s a beautiful book that teaches very good design.<p>Also, take every opportunity to really learn about the languages you code in. Like, if you code JavaScript, you should understand its scoping rules, how its closures work, its peculiar object semantics, its various crazy quirks, etc.<p>Don&#x27;t underestimate the value of time. Learn when to take a shortcut, and how to isolate &quot;shortcut code&quot; into a module that can be replaced or improved if needed.<p>If you&#x27;re interested in design patterns, read Gabriel&#x27;s &quot;Patterns of Software&quot; -- <a href=""http://dreamsongs.net/Files/PatternsOfSoftware.pdf"" rel=""nofollow"">http://dreamsongs.net/Files/PatternsOfSoftware.pdf</a> -- for a more nuanced view than most courses and articles.<p>If you&#x27;re into OO design, read Eric Evans&#x27;s &quot;Domain-Driven Design,&quot; and take heed when he emphasizes the importance of domain language and concepts.<p>Learn how to use some structured to-do system efficiently. Don&#x27;t try to juggle dozens of random things in your memory. If you realize you will need to do something after you&#x27;re done with debugging or whatever, you should be able to quickly jot it down.<p>Learn methodical debugging. Learn to narrow down your problems.<p>Read books like &quot;The Pragmatic Programmer,&quot; &quot;The Passionate Programmer,&quot; &quot;Working Effectively With Legacy Code,&quot; and so on.",1397895562
7612926,comment,7612783,7612783,1,0,schrofer,,,"Programming != Computer Science<p>Programming is a tool used to solve Computer Science problems but Computer Science is in my opinion not a course in programming. If you eventually want do something else than programming but like the field I would advise you to pursue a degree.",1397895534
7612925,story,,,2,1,matt42,"Moore's Law limit hit by 2014? (2009)",http://www.cnet.com/news/moores-law-limit-hit-by-2014/,,1397895500
7612924,comment,7612783,7612783,2,0,smprk,,,"I would recommend very simple things really -<p>1. For Data Structures and Algorithms.<p>- Join this site where active job seekers hang around and share interview questions - <a href=""http://www.careercup.com"" rel=""nofollow"">http://www.careercup.com</a><p>- Solve a question a day and post your solutions, read through that of others and comment.<p>- This is an active community so you would get up and running with the basics quite fast.<p>2. For Design Patterns.<p>- Do a &quot;light reading&quot; of this book - <a href=""http://www.uml.org.cn/c%2B%2B/pdf/DesignPatterns.pdf"" rel=""nofollow"">http://www.uml.org.cn/c%2B%2B/pdf/DesignPatterns.pdf</a><p>- Explore opensource projects and see if you can identify patterns.",1397895402
7612923,story,,,3,8,pskittle,"How should a non CS person develop CS skills?",,"Hi , I&#x27;m looking to get deeper into CS and have a biomedical background with some introductory programming courses under the belt. Would appreciate advice. Thanks",1397895288
7612922,comment,7612783,7612783,2,0,hajile,,,"sicp is my recommendation",1397895287
7612921,comment,7612783,7612909,1,0,capkutay,,,"The people who invented computer science were certainly driven by theoretical and mathematical concepts. Lambda calculus, church numerals, etc all played a role in the formative days of cs",1397895269
7612920,comment,7609323,7610135,1,0,ithkuil,,,"I parsed the final &quot;/s&quot; as per second.",1397895243
7612919,story,,,2,0,matt42,"Graphene ‘spaser’ brings optical computing to the nano-scale",http://www.extremetech.com/extreme/180728-graphene-spaser-brings-optical-computing-to-the-nano-scale,,1397895177
7612918,comment,7612783,7612857,1,0,chacham15,,,"Perhaps, but as an employer I would run away from a candidate that couldnt code a linked list.",1397895044
7612917,comment,7610829,7610829,1,0,vl,,,"So, for uninitiated - &quot;Uber&quot; is cab, and &quot;UberX&quot; is gypsy cab? Is it correct?",1397895020
7612916,story,,,50,50,rb2e,"HMRC 'plans to share tax data with private firms'",http://www.bbc.co.uk/news/uk-27086401,,1397895016
7612915,comment,7612783,7612839,1,0,carucez,,,"Funny how that was one of the first few things I had to teach myself, as distributed systems was something that only the biggest businesses had when I started school, and so, the curriculum didn&#x27;t exist yet.<p>Hadoop is not exactly the best example of distributed, but it does contain all the core components. If you want a highly efficient, distributed system, then I suggest one tries to write their own. This ground is still being tested.<p>Sockets and asyncrony are tricky things, and I&#x27;m sure there exist better ways of achieving distributed computing.<p>1) Compute-intensive, job-centric?\n2) Compute-intensive, parallel reductions?\n3) Database-intensive, map-reduce?\n4) Database-intensive, sharded, non-normalized?\n...<p>The various forms of distributed systems is something that many people don&#x27;t fully grasp.  It&#x27;s rather easy to build your own #1 or #3 (hadoop). Facebook has done an alright job at #4.  Parallel reductions on distributed systems... I&#x27;m thinking million factor by billion-row matricies. That is something that we have yet to explore.  Sure, we&#x27;ve done thousand-factor by billion row no problem. That&#x27;s essentially a map-reduce.  But doing the matrix reductions on 1e6 by 1e9+ is not something typically done. ... at all.  One would need to find alternate ways of representing those 1e6 features as separate matrices... perhaps some form of Bernoulli/Bayes combination and increase the number of operations by 1000-fold.<p>// Forgive me for the rant. This is something I do like to think of in my spare time. You&#x27;re right in that self-taught&#x27;s don&#x27;t have this skill. My value-add is that a lot of school-educated don&#x27;t possess this skill either.",1397894916
7612914,comment,7612686,7612686,3,0,WalterBright,,,"Ailerons aren&#x27;t really conceptually different from wing warping, it just uses a hinge rather than bending.",1397894894
7612912,story,,,2,0,bjoerns,"Flying Angle of Attack",http://www.flyingmag.com/technique/tip-week/flying-angle-attack,,1397894758
7612911,comment,7612686,7612890,2,0,ghshephard,,,"I actually really liked the article standing by itself.  But, the article is without question a commentary on Apple&#x27;s recent litigious behavior, and, indeed, coming from other writer&#x27;s might have been insightful.  But I couldn&#x27;t help but read it as another in a long thread of articles by Joe Nocera trying to slam Apple.<p>Nocera&#x27;s treatment by Job, including his statements about his health is the <i>source</i> of Nocera&#x27;s ongoing diatribe&#x27;s against Apple.  The context is useful when reading essays knocking Apple by Nocera.<p>I might have a little more patience if Nocera was a random blogger/pundit, but, I expect more out of the NYT.  Yes, opinion, but balance and nuance is also important.",1397894743
7612910,comment,7612654,7612764,1,0,jestinjoy1,,,"That is a new information to me :). Thanks",1397894692
7612909,comment,7612783,7612885,5,0,antihero,,,"This comment is partially correct, and partially bullshit.<p>I&#x27;ve been to university and studied computer science. What computer science gives you is a foundation in understanding computing and what&#x27;s going on at various levels, which simply toying around with languages does not.<p>What a computer science degree generally does not do, is teach you how to be a particularly good programmer. There might be brief parts about patterns and whatnot, but I found there was bugger all about reusable, maintainable, elegant code. There is so much about &quot;programming&quot; that is very much removed from &quot;computer science&quot;.<p>This is where the bullshit part comes in - what stiff is saying about the Dunning Kruger effect is quite frankly obnoxious drivel. You can be an excellent programmer by learning to program via toying around, and a degree suits a very specific learning style. I&#x27;ve known many programmers who do not have a degree who are far better than those with a degree.<p>I found a degree very difficult as I have ADHD and am terrible at sitting in a lecture sucking up information, then vomiting it into an exam - it is also not particularly representative of how the knowledge is actually applied.<p>tl;dr CS degree gives you a good foundation and a bunch of in-depth insight into how computers work (and a are good tool to make you realise the breadth of the subject), but are not for everyone as people have different learning styles, and certainly do not make you a great programmer - and are not necessary in order to be one.<p>We just need to remember that the people who invented Computer Science did not have a degree in Computer Science.",1397894691
7612908,comment,7612567,7612567,1,0,gcb0,,,"I moved from yahoo mail exactly because they started to delete my email if i didn&#x27;t log in every 3 months... Sigh. There we go again.",1397894683
7612907,comment,7611617,7612510,3,0,rodgerd,,,"Like for like?  I was programming on Acorn Archimedes 310s back in 1987: an ARM 2 clocked at 8 MHz.  The memory and video controllers were discrete chips.  Acorn claimed that their ARM 2&#x27;s pipeline design let it run integer operations at the same speed as a 20 - 25 MHz 386.<p>IIRC it only had 23 instructions, making it the most pure RISC design to be available off the shelf.",1397894675
7612906,comment,7612783,7612846,1,0,kalms,,,"Without having attended a university, I would assume that one of the many advantages are the possibility for mentorship during self-study. Which is a scenario one could replicate in a daily routine.<p>I think mentors are extremely important, to inspire and to help you, when you hit a dead end. So you avoid many of the negative experiences, and keep a good flow when learning. It&#x27;s definitely the case for me.",1397894615
7612905,story,,,1,0,creynders,"Auto-loading test fixtures in node",http://creynders.wordpress.com/2014/04/19/auto-loading-test-fixtures-in-node/,,1397894606
7612904,story,,,1,0,grechj,"Squadio: new football (soocer) app launched",http://squad.io/download-the-app/,,1397894581
7612903,comment,7608273,7608840,1,0,ghshephard,,,"If I&#x27;m splitting cedar, white pine, or poplar - yes, I will split with a splitting axe - and I&#x27;ll go through it almost as fast as the demo, ex-knotty wood.  But, if I&#x27;m splitting larger (20&quot;+) gnarly pine logs (which, for whatever reason, seems to be the only wood we collect off the crown land next to us), it&#x27;s all about the maul, and, if I don&#x27;t make any progress with that - it&#x27;s the wedge+sledge hammer (which will split <i>anything</i>)",1397894460
7612902,comment,7609022,7612400,1,0,olalonde,,,"Oh god, that was the most hilarious (yet accurate) description of Quebec I have ever heard... Thanks!<p>> I probably make four times what they do but can&#x27;t see how they can afford it let alone me.<p>I&#x27;m sorry to break it to you but you are paying for it through taxes. Ok, that&#x27;s an over-generalisation but there is some truth to it. It&#x27;s very easy to get by without a salary in Quebec due to the multitude of governmental services (I recall reading that over 50% of Quebec&#x27;s economy is driven by the public sector). I have a friend who is on welfare and still manages to go to Cuba every year.<p>Personally, I&#x27;m a fan of the attitude (not caring too much about work/money) on an individual level. For a while, I was living the 3 months freelancing / 3 months vacation lifestyle and it was great. That being said, I&#x27;m not a fan of the governmental policies which promote it at the expense of other equally admirable attitudes (e.g. entrepreneurship/hard work). It&#x27;s not all fun and roses. The economy of Quebec has been suffering a lot from those &quot;big government&quot; policies and Quebec has now become one of the poorest province in Canada despite its abundance of natural resources and highly educated population. Of course, I implied here that there is a cause and effect between those policies and the economy but not everyone would agree with me on this. In fact, a sizeable fraction of the population (<a href=""http://en.wikipedia.org/wiki/Quebec_solidaire"" rel=""nofollow"">http://en.wikipedia.org/wiki/Quebec_solidaire</a>) actually advocates for economic degrowth... \nOk, I&#x27;m definitely going off topic now.",1397894459
7612901,comment,7610452,7611139,2,0,doktrin,,,"That&#x27;s a valid data point. Without moving the goal posts, I&#x27;d like to re-phrase the logic :<p>The crux of this argument is that the supply chain for illicit marijuana will be disrupted by legalization. In other words, legalizing will cause current (illegal) suppliers to go out of business and/or stop doing business with street / kid / high school dealers - thus reducing availability for underage kids.<p>My issue with this logic is that I can&#x27;t see why the demand for a product (marijuana) won&#x27;t continue to drive supply once it&#x27;s legalized. There will always be a way for a local high school dealer to find weed. Supply chains could easily re-route to accommodate demand in high schools.<p>What I <i>do</i> find to be a compelling argument, however, is the notion that demand could decrease post-legalization. This seems rational to me.<p>The alcohol comparison feels awkward, primarily due to the difficulty in trafficking in alcohol at the small scale. It&#x27;s bulkier and decidedly more awkward to manage. Therefore, it&#x27;s not exactly apples to apples.<p>At one point, I also considered the fact that legalizing could decrease profit margins. However, low level dealers really don&#x27;t have much of a profit margin to begin with.<p>However, you have solid data and I&#x27;m primarily speculating :)",1397894450
