ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
85239,comment,85185,85185,0,0,cellis,,,"<i>Of all the monsters that fill the nightmares of our folklore, none terrify more than werewolves, because they transform unexpectedly from the familiar into horrors. For these, one seeks bullets of silver that can magically lay them to rest.</i> - Frederick P. Brooks, Jr<p>I think people considering the switch to a new lang need to read No Silver Bullet, from those considering COBOL to those considering Rails or CL.",1196524669
85238,comment,84988,84988,0,0,kajecounterhack,,,"Actually, Gmail's reply button is placed physically before its reply to all button, and I usually find myself hitting that instead of reply to all.<p>Of course, it all comes down to how retarded your friends are, because they might hit it just to send everyone a message that you may or may not want to read. Personally I think it isnt about removing the button, just getting less-retarded friends.",1196524605
85237,comment,85189,85189,0,0,kajecounterhack,,,"I use the firefox plugin Chatzilla, only because I'm on linux and don't like xChat and all those other IRC clients. When I'm using windows (which is like...never...) I use MIRC.",1196524435
85236,comment,84950,84950,0,0,skmurphy,,,"The book the ""Artist's Way at Work"" by Mark Bryan, Julia Cameron, and Catherine Allen offers an approach called ""morning pages"" that is similar to a log but helps to overcome writers block (as well as act as a refinery for written pieces still percolating). Some references:<p><a href=""http://www.artistswayatwork.com/"" rel=""nofollow"">http://www.artistswayatwork.com/</a><p><a href=""http://www.amazon.com/dp/0688166350"" rel=""nofollow"">http://www.amazon.com/dp/0688166350</a><p><a href=""http://paperartstudio.tripod.com/artistsway/id3.html"" rel=""nofollow"">http://paperartstudio.tripod.com/artistsway/id3.html</a><p>although the book encourages you to write them in longhand I found that typing on a laptop in a coffee shop or library or anywhere that was different from where I normally worked  (to break association with work space) worked for me.",1196524095
85235,story,,,1,0,chwolfe,"Reinforcement Learning: An Introduction",http://www.cs.ualberta.ca/~sutton/book/the-book.html,,1196523650
85234,comment,85222,85222,0,0,jraines,,,"I want one.",1196522905
85232,comment,85204,85204,0,0,Goladus,,,"Your working environment influences your thinking.  You don't have to be typing all the time for a poor editor to interfere with your ability to get things done.  Try coding for 3 months exclusively in notepad and see how much productivity you lose.  (Or note what other tools you wind up using to make up for the deficiency)<p>The information you have visible on the screen and easily accessible in a keypress or two is also critical to thinking quickly and efficiently.  Yegge once mentioned that he had the perl documentation as emacs .info pages, meaning it probably takes him a few seconds to find a number of frequently used resources.  That means he'll probably be better at leveraging standard functions than someone who uses Google.  I find the split-screen function in emacs far superior than trying to have multiple windows windows open and arranged on the screen.  <p>One way that emacs is superior to Visual Studio is the keyboard macro facility.  I frequently find that I need to make some minor correction that needs to be repeated a few times.  Either it's too small a change to be worth refactoring completely using language abstractions or a clunky macro system like MS word, or too complicated to be suitable for copy/paste or find/replace.  In a lesser editor, you build up a subconscious resistance to making small corrections like that, so even though you may not be typing furiously all the time, the weaknesses of the editor still affect the way you think and the solutions you're willing to use.  <p>start macro(C-[), search to semicolon(C-s, ;), kill to end of line(C-k), move to beginning of the line(C-a), yank killbuffer(C-y), move to beginning of line(C-a), move down, end macro(C-]).<p>This is a quick macro that moves everything after the semicolon to the beginning of the line, and can be repeated for consecutive lines as often as necessary.  Suppose you had a section of code that looked like this:<p><p><p><p><p><pre><code>      do_thing(x, y, x); do_other_thing(a, b, c);
      to_the_death(j, k, l); to_the_pain(wfb);
      do_thing(c, f, e); do_other_thing(t, t, q);
      #etc for maybe a dozen lines.
</code></pre>
Suppose you need to swap the position of the functions on each line, such that ""do_other_thing"" comes before ""do_thing"" and ""to_the_pain"" comes before ""to_the_death.""<p>Without a keyboard macro facility like the one in emacs, you're stuck jumping around using copy-paste.  It will probably take a few minutes, and when you're done you'll have probably lost your train of thought.  So even though it may have had a small effect on the lines of code you produced within a given 5-10 minute period, it may significantly affect the trajectory of the entire session.  After you get used to emacs, using a macro like this is as easy as typing a line of code.<p>Visual Studio has its advantages.  It has a terrific runtime debugger, for example, and is great for visualizing data structures.  But it's worth talking about, and Yegge has some great insights.",1196521530
85231,comment,84951,84967,0,0,donal,,,"ha, I just used it to remember my username... :)",1196521211
