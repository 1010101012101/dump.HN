ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
9881,comment,9770,9770,0,0,Peter_G,,,"Like an Oliver Stone movie, this entry is interesting and fun to read despite being entirely wrong in every major respect.
",1175918229
9880,comment,9770,9770,0,0,chai,,,"""As Google becomes more and more application-oriented, it will look more like MS. While MS is pushing itself to be more web-based, it is snapping up Google's market share as well and therefore more Google-ish. The clash of titans will definitely be interesting. The winner will rewrite the rule of future computing platforms, while the loser will be left in oblivion and soon forgotten.""<p>Full text here:<p><a href=""http://not-your-cup-of-chai.blogspot.com/2007/03/distributed-vs-centralized-entities.html"">http://not-your-cup-of-chai.blogspot.com/2007/03/distributed-vs-centralized-entities.html</a><p>",1175918217
9879,comment,9837,9873,0,0,vlad,,,"Thanks!  Yes, that's more of the mental state I put myself in. :)  But I have to say that I have developed a pretty good feel about when something is ready for release.<p>My program has to run all day.  As soon as I release an update, I have to quickly run the old, installed version of my software to get the current update.  Then, I make sure it actually starts.  Let's say I add something that works great during testing, but crashes with a file access error on startup.  That means the user will come back to the computer and see an error.  At least if I introduce a bug that doesn't keep the program from loading, it means that I can then release another update later on which the update I just released will catch.  That's what I meant.  As long as the update doesn't make the program crash when it starts, the program will find any future updates to fix any bug I introduced, seamlessly.<p>I hope this helps somebody.",1175918118
9878,comment,9661,9661,0,0,epall,,,"I came away from it thinking ""Okay, yeah, I already knew that much. What's this nirvana you're talking about?"" I suspect I'm not the only one who has been exposed to lisp but hasn't really comprehended it. This article did little to convince me or help me along the path to lisp enlightenment.",1175918091
9877,comment,9837,9872,0,0,vlad,,,"I forgot to mention that the big use for ""don't install updates automatically"" is if a user has one of those firewall applications that likes to ask for permission all over again whenever a program has been updated.  Also, it means those who use Windows in a priviledged environment will be on the computer (not idle) to confirm Windows request for elevated rights.",1175917817
9876,comment,9770,9775,0,0,zach,,,"Someone tell Paul Graham he's made a huge mistake -- I just called Microsoft's phone number and got through!  Yup, Microsoft is as vital as they come.",1175917810
9875,comment,9770,9770,0,0,apansari,,,"Paul, excellent article. I have two additional reasons behind why Microsoft is ""dead.""<p>Reason (5): Steve Ballmer took over from Bill Gates as CEO in Jan 2000. Chief Sales Guy takes over from Chief Egghead and the company stops building products for its real users.<p>Reason (6): Web 1.0 hiring. Microsoft hired a huge number of people in 1998-2001, people who were too stupid or incompetent to get a job pretty much anywhere else. The good people all went to web startups then. This was the first crack in Microsoft's ""we have the world's best people"" armor. B players hire C players, and it goes downhill from there.
",1175917731
9874,comment,9770,9781,0,0,zach,,,"Come on, we're not talking about the homefront here, we're talking about the frontier.  This is the startup news site; we're not here to talk about the current industry standard.",1175917582
9873,comment,9837,9872,0,0,blader,,,"Sounds like an app I would like to use, and I don't even know what it does.<p>My only comment is the ""and don't introduce bugs"" statement ... that is a bit of a tough guarantee isn't it? =)",1175917563
9872,comment,9837,9837,0,0,vlad,,,"When my software starts, it auto-updates itself if necessary (takes only a few seconds.)  My software also checks for updates every half an hour.  If there's an update, it puts a notification into the status bar (of the program, not taskbar).  It checks to see if the software is idle.  If it is, it saves everything, shuts down, downloads and installs the update, and runs again.  It takes one click to go back to where the user was when they come back from being idle.<p>A user is also able to select ""don't install updates automatically"" in which case they will still be notified in the status bar and when the program first starts that they have an old version.  By clicking one button, the new version is downloaded and the program is restarted.  So, the user is aware they need an update.<p>Finally, the updates themselves add new features and don't introduce bugs.<p>This works better than iTunes (where you have to redownload the entire program), the anti-virus definition updaters (that popup a progressbar over your screen or fill up your system tray), and the Adobe Acrobat Reader downloader (a crazy screen that tells me to update a program I don't even use very often.)<p>The news page that shows when you start the program tells you any news, so the users are still aware that new features are being added, even though the process was seamless.",1175917201
9871,comment,9770,9782,0,0,zach,,,"The Xbox is a red herring.  Microsoft's ""Home and Entertainment"" division still loses millions a day, six years after the Xbox unveiling, and has very little to do with technology in the first place, much less software innovation.",1175917089
9870,comment,9770,9862,0,0,volida,,,"the fact that MS Atlas exists makes your AJAX hypothesis false.<p>Microsoft tried to kill XForms. The workaround of AJAX made Microsoft to open their eyes 10-12 months ago...",1175917032
9869,comment,9667,9667,0,0,theoutlander,,,"Once they have identified the promising ideas, they might look at the demos to narrow it down....",1175916768
9868,comment,9770,9775,0,0,mdakin,,,"The architecture example is a bad one.  While AutoCAD on Windows is by far the dominant setup there is a product for Macs called Vectorworks that is used by many firms.  Several in the Boston area alone.",1175916732
9865,comment,9837,9837,0,0,epall,,,"He's complaining about PCs, but I've noticed similar issues with Mac apps. They don't have a system tray to go nuts in, but half of the mac apps I run check for updates at launch and bug me right when I'm trying to opens something. Some are smart enough to go ahead and do the update and tell me afterward, but they're in the minority.<p>This feels to me somewhat like the Vista shutdown menu. The programmers writing the individual apps aren't asking themselves ""what if there were six apps like ours all asking to update constantly?"" Come to think of it, this tends to be a pretty major theme in software development: ignoring user experience when other people's code is involved. Opportunity for improvement!",1175915996
9864,comment,9743,9743,0,0,blader,,,"It depends on your software. In general, here are some questions I like to myself when I design a product in order to keep it simple:<p>1. What is the product supposed to do? A corollary is to ask, what can a user do with my product that he can't do without it? The answer to these questions should be a single, simple, focused answer.<p>2. What is the absolute minimum feature set we must have in order for the product to do what the user needs? Question EVERYTHING. If you're designing an email product, ask yourself if you even need folders. If you're designing a MS Word killer, ask yourself if you even need a Save. If you're designing a media player, ask yourself if even need a play/pause button.<p>After you have the minimum feature set, release the software and iterate quickly based on user feedback. Nothing can replace raw feedback from strangers who don't give a crap about you or your product. See what the users like and dislike about the product, based on first hand observation. <p>More tricky is keeping the product simple in response to user feature demands. Adding features is good, but only when you do it in such a way that it complements your answer to the original question: ""What is the product supposed to do?"" <p>You have to think about how each and every additional feature deeply integrates into your existing product, rather than tacking features on haphazardly. This is difficult to do. Google does this especially well (Search, Gmail).",1175915724
9863,comment,9241,9241,0,0,rebecca_d,,,"One of our co-founders is a wonderful web designer and, trends aside, the first question he asks his clients is 'who's going to be looking at this site?' The second question is 'who do you want to look at this site?' Everything from font to layout is designed to reflect the answers to these two questions. <p>I wonder about if websites in the future will be customized as the site loads to fit your personal tastes in color, font, style, content. An automated graphic design that can be deduced from your web behavior and that of others. All our Ycombinators would look different. Its seems both feasible and probable. Gate's recently talked about the 'personality' of the future computer. 
Reminds me of the Psychology of Crowds work Aggregate Knowledge is doing (per an earlier post on Kleiner Perkins). ",1175915632
9862,comment,9770,9853,0,0,amichail,,,"Well, apparently MS killed Java on the client:<p><a href=""http://java.sys-con.com/read/37121.htm"">http://java.sys-con.com/read/37121.htm</a><p>So yes, they could make life difficult for AJAX developers.
",1175915233
