ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
186441,comment,186290,186290,0,0,newt0311,,,"Interesting that many of the reasons listed for beginning programmers could actually apply to all programmers.",1210445821
186440,comment,185882,185882,0,0,richesh,,,"we are two technical co-founders who have just hired an intern to help us for the summer. We've decided to pay him going hourly rate based on the market.  But we have also told him that based on his ""impact"" on the product he is eligible for equity.<p>If you are going to get great contribution from them then it doesn't matter if they are an intern. And just like any other contributors to your product they deserve equity.<p>IMO, they are going to be helping your ""technical guy"" bring YOUR idea to life, which it seems you are not capable of doing yourself. Doesn't that deserve equity?<p>If they are smart and contribute then the possibility of equity makes them take ownership of your product which is something an offshore team or ""hacker for hire"" might not do.",1210445755
186439,comment,186133,186133,0,0,stealthstartup,,,"If you're selling things, you might consider an affiliate program.  In one of my startups, I had a couple of hundred affiliates signed on before I launched by giving away free copies.  It resulted in hundreds of thousands in income the week we launched.  Most of the sales came from the top 20 affiliates.<p>Potential affiliates are not hard to come by and you only pay if they perform.  Just pretend you are a customer, search for your product/service in Google and contact everyone who is on the first page as ads or natural search and give them a copy of your product and ask them to promote it if they like it in exchange for a healthy commission.  They've got the traffic, and many of them probably don't know how to monetize it.<p>It also helps to suggest ways for them to promote your product.  For instance supplying custom emails for them to send out to their list, promoting it in their blog, adding your product as an up-sell when their customers buy their stuff from them etc.<p>You can also setup things like cross-promotional auto-responder messages, where you have a message in your auto-responder promoting them, and they do the same for you.  No commissions required.<p>It all depends on what you're doing.  If I knew what you were doing, I'd have much better advice.<p>Despite what at least one person said, article writing is a great way of getting natural traffic and being slowly gaining traction in Google.  It just takes time and has to be done right.  Don't over post and make sure you post it to your own site and get it indexed by the search engines before syndicating it.<p>There are other things you can do as well, like buying domain names that have pagerank and putting content on them that references your site.  Risky if you ask me.  Google will eventually black-list everyone who does that sort of thing.",1210445350
186438,comment,186349,186349,0,0,jwr,,,"One bit of information is missing:<p>what's the price?",1210445088
186437,comment,186349,186349,0,0,gaika,,,"And the biggest reason not to: javascript is required. It causes really bad problems in IE: <a href=""http://blogs.msdn.com/ie/archive/2008/04/23/what-happened-to-operation-aborted.aspx"" rel=""nofollow"">http://blogs.msdn.com/ie/archive/2008/04/23/what-happened-to...</a>",1210444985
186436,comment,184549,186385,0,0,nostrademons,,,"I don't think we're really disagreeing, as usually the answer to ""How do I make sure this never happens again?"" is some sort of design change.  My point is that this is done iteratively, in response to <i>actual</i> problems, instead of hypothetically in response to imagined problems.<p>I should probably also make clear that experts don't throw away everything they've learned with each new project and start anew.  They do throw away <i>some</i> things, and part of being an expert is knowing what to throw away and what to keep.  It's sort of an unfortunate fact of software engineering that each problem is different: otherwise, you'd just use pre-existing software.  But there're some skills (like the C++ tricks I picked up from my Stratus friend) that you can take with you as long as you maintain the same technology platform, and others (like unit testing and clear component interfaces) that apply to all platforms.",1210444871
186435,story,,,1,0,Alex3917,"Cutting-edge DNA research as a window into Jewish origins",http://reformjudaismmag.org/Articles/index.cfm?id=1321,,1210444658
186434,story,,,25,32,dhs,"Microsoft to Limit Capabilities of Cheap Laptops",http://www.pcworld.com/businesscenter/article/145719/microsoft_to_limit_capabilities_of_cheap_laptops.html,,1210444429
186433,comment,186349,186349,0,0,Xichekolas,,,"He forgot the most important reason (to me): You can stick a fully functional comment system on anything without doing it yourself. Why reinvent the wheel and deal with managing your own when you can just tack on an excellent system by someone else?",1210444077
186432,comment,186081,186150,0,0,Hexstream,,,"Could be interesting to investigate what new (or old) approach to programming might act as a filter if functional programming ever goes mainstream.",1210443997
186431,comment,186314,186314,0,0,xirium,,,"A more active discussion of this topic is available by accessing <a href=""http://news.ycombinator.com/item?id=178748"" rel=""nofollow"">http://news.ycombinator.com/item?id=178748</a>",1210443632
186430,comment,186414,186414,0,0,xirium,,,"Dup. See <a href=""http://news.ycombinator.com/item?id=181392"" rel=""nofollow"">http://news.ycombinator.com/item?id=181392</a>",1210443436
186429,comment,186241,186241,0,0,workpost,,,"""a man isn’t ready to live until he accepts that he’s already dead.""<p>That's a good rule to live by. Not so sure about the rest of the article..",1210443345
186428,comment,186369,186369,0,0,workpost,,,"Godaddy has never let me down but, I'll admit, some of the stories floating around about them are frightening.",1210443088
186427,comment,184619,186104,0,0,wanorris,,,"Which open source stuff -- that's what I mean. I've used ActiveRecord in Rails and a few other open source data access technologies, but nothing I would consider to be a direct precursor to LINQ.<p>There are a lot of things that Microsoft makes that are derivative of open source -- ASP.NET MVC is effectively yet another Rails knockoff, for example.<p>But AFAIK, LINQ is something new and different, which is why I'm genuinely curious what you would consider to be similar to LINQ but predating it.",1210443082
186426,comment,186121,186121,0,0,signa11,,,"why not just use a separate branch for doing those experimental changes ? it just seems too complicated.",1210442988
186425,comment,186349,186417,0,0,quellhorst,,,"Disqus comments are included via javascript, so you don't have outbound links that diminish pagerank.<p>Comments won't be indexed by Google but your article text and links to the article from other blogs will have a bigger impact on where you appear in SERPs.",1210442945
186424,story,,,24,1,dood,"Extraordinary mathematician Alexandre Grothendieck celebrates his 80th birthday in self-imposed isolation",http://www.sciencenews.org/view/generic/id/31898/title/Sensitivity_to_the_harmony_of_things,,1210442622
