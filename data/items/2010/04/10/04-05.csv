ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
1254587,comment,1254474,1254538,0,0,eam,,,"And it validates!",1270875565
1254586,comment,1254455,1254455,0,0,bilbo0s,,,"I already commented on another one of these link bait articles here <a href=""http://news.ycombinator.com/item?id=1253870"" rel=""nofollow"">http://news.ycombinator.com/item?id=1253870</a>, but I'm reposting my comment here. Just because I felt let down after having clicked through to get the details on some 'juicy' new Java flaw. Only to find the reality to be less serious than advertised. I don't like feeling duped.<p>BTW - The last article was called 'Javocalypse'. Now with a name like that, when I test the exploit, it better deliver the goods.<p>I don't know.<p>That's just how I feel.<p>Anyway, here is the comment I left on that one:<p>----<p>I love all these 'embarrassingly trivially exploitable issues' that require me to set up my machine in just the right way to make them work. And for all that effort, you can't even own the machine using the exploit.<p>What has it been? 15 years? and this is the best they can come up with for java security holes?<p>You know, I don't like java, but the more stuff like this I read, the more I have to admit that it is smart for enterprises to use it so heavily.<p>An interesting comparison might be to look at the number of java security holes vs activex vs windowsxp vs apache vs iis vs php vs ruby vs (you get the picture). Maybe group by client side and server side. That would give a real 'data based' look at software security quality.<p>Though I suspect that the jvm would be at the top of the 'security quality' heap in both groupings. (ie-least number of holes). I think it would be interesting to see nonetheless.",1270875555
1254585,comment,1254525,1254525,0,0,r0s,,,"While not considered a true 'multitouch' device, the Nintendo DS had a software system to sense multiple contact points at once.  This is used for a puzzle solution in the first Hotel Dusk game.\nIt seems like the cursor would jump between the 2 points at some resolution.\nI assume many touch screen systems use something similar to filter inadvertent noise such as smudges on capacitive systems.",1270875510
1254584,comment,1253492,1253492,0,0,tetha,,,"And now, we can up the problem even further:<p>Build a tetris clone which forces the player to ""win"" with 13 lines scored.",1270875493
1254583,comment,1253234,1253680,0,0,tiffani,,,"S/he has a point.  I spent four years in college in DC eating at various Five Guys in the DMV area and they were all great. (And it had nothing to do with price--I'd spend $8-10 every time I went there which was fairly often.)  Then, I started venturing out after graduation to other places like NC and suddenly, you could tell the difference between Five Guys closer to their home vs. newer franchises that folks have open and begun to run like more familiarly crappy fast food chains.  I sometimes think (and of course, I could be wrong) franchising seems to be the death of a good thing and it's funny how the founder says he was against it because of the very thing I'm finding has slipped--quality. (When people are involved and so crucial to a process, does quality always scale?)<p>I haven't had a decent Five Guys experience outside of the NoVA/MD area yet.  It's always the worst things--the fries are often cold (I remember having to wait for them to be cooked fresh in NoVA), they'll mess your order up some other kind of way such as leaving something off your burger or forgetting a part of your order entirely (more common if you order lots of food at once), etc.  The experience just isn't the same.  No one I've taken there in my local area has been impressed unless they'd already eaten there in DC and just dealt with it--like I've <i>stopped</i> doing.",1270875432
1254582,comment,1253783,1254524,0,0,davidmurphy,,,"Could be faster in my experience. Not great.",1270875354
1254580,comment,1254378,1254406,0,0,jgilliam,,,"There's a new twitter petition asking for it to be open sourced. <a href=""http://act.ly/1w1"" rel=""nofollow"">http://act.ly/1w1</a>",1270875327
1254579,comment,1254474,1254474,0,0,csmeder,,,"Thank you!",1270875267
1254578,comment,1253783,1254562,0,0,brandnewlow,,,"Exactly.  Now it's more expensive to show up in search.",1270875211
1254577,story,,,3,0,helwr,"A machine learning theory dream team",http://amundblog.blogspot.com/2008/04/machine-learning-theory-dream-team.html,,1270875199
1254576,comment,1253810,1254017,0,0,124816,,,"It would be interesting to know how coarse the data exposed to mobile ad providers is -- does anyone have any experience here?<p>Were I implementing mobile ads, the precise location would stay on the device, and the information sent to the ad server would be city or at least zip level.",1270875160
1254575,comment,1253810,1254019,0,0,124816,,,"Nope, sorry. This has very little if anything to do with the user.<p>Apple wanted to buy Admob, but Google got them instead. This change will prevent Admob ads from being well targeted on iPhone, and will prop up their (assumed to be upcoming) rebranded Quattro mobile ads.<p>This smacks of anti-competitive practices. (That is, assuming Quattro ads are allowed to use location aware targeting.)",1270874908
1254574,comment,1254378,1254378,0,0,st3fan,,,"Pile of gold, eh? I guess this is why Tweetie for the Mac is still so extremely minimal. The developer got lazy because of his pile of gold. Bye bye motivation. Money makes people lazy.",1270874866
1254573,comment,1254378,1254539,0,0,cmelbye,,,"Why would they do that though? They could do a better job by building it into the site itself, and it would probably work out to be cheaper for such a simple feature.",1270874832
1254572,comment,1252594,1253098,0,0,Aron,,,"Another decent use, embodying synaptic weights in neuromorphic engineering. A decent description: <a href=""http://www.scidacreview.org/0804/html/hardware.html"" rel=""nofollow"">http://www.scidacreview.org/0804/html/hardware.html</a><p>I think eventually, if we want software that performs like a human mind, we'll want hardware that performs like a brain. That's probably the easiest way to get to a machine that can match us while consuming 30 Watts.",1270874575
1254571,comment,1246200,1246200,0,0,spaceman77,,,"I am 46 and had something similar happen twice in my life and it usually preceded a huge change, for the better.<p>tricky waters to negotiate they are (yoda)",1270874511
1254570,comment,1254113,1254113,0,0,armandososa,,,"Much praise for the multitasking UI on iPhone OS4, but I still think that the cards metaphor of webOS is much better.",1270874481
1254569,comment,1253810,1254024,0,0,jseifer,,,"It would also be very easy for you to uninstall the app. This is possible on my droid but I haven't really run in to it. If I were worried, I probably wouldn't install the app.",1270874468
1254568,comment,1252791,1254509,0,0,commieneko,,,"So in other words, you can't and don't intend to address the topic at hand.  bye bye...",1270874308
1254566,comment,1253234,1253602,0,0,chbarts,,,"Don't forget the free peanuts. They're different enough to serve as a hook to make sure people remember the business.",1270874185
1254565,comment,1254157,1254497,0,0,eru,,,"And probably a sophisticated understanding FP as well, if you want to apply it in such a hostile environment.<p>Not really a good idea when you are starting out, I guess.",1270874021
1254564,comment,1253783,1254524,0,0,dkubb,,,"FWIW, I just visited your link and with a cold cache it took ~5 seconds the status bar to report every asset was downloaded. Definitely not a scientific measurement by any means, but I thought you might like to know.<p>I also ran the site through <a href=""http://www.webpageanalyzer.com/"" rel=""nofollow"">http://www.webpageanalyzer.com/</a> (one of many such services), and it said on a T1 it would take approximately 6.5 seconds to load. It also provides a number of improvements to cut down the page size, and improve rendering speed.",1270873931
1254562,comment,1253783,1254553,0,0,easp,,,"Sounds like a business opportunity to me.  If only there were a site where...",1270873845
1254561,comment,1253490,1253880,0,0,naner,,,"> Adobe has never gone after these open source swf player projects.<p>They went after rtmpdump, a tool developed by the gnash devs after clean-room reverse engineering to eventually bring RTMP support (client video streaming) to gnash and other free players:<p><a href=""http://en.wikipedia.org/wiki/Real_Time_Messaging_Protocol#RTMP_client_software"" rel=""nofollow"">http://en.wikipedia.org/wiki/Real_Time_Messaging_Protocol#RT...</a><p>> rtmpdump is an open-source command-line tool that is designed to dump the full RTMP stream. It implements the RTMPE protocol, which Adobe believes to be an encryption and copyright protection scheme: however analysis of RTMPE shows that RTMPE is nothing of the kind. rtmpdump was removed from its original SourceForge page <i></i>due to Adobe issuing a Digital Millennium Copyright Act takedown notice, which Sourceforge did not have the resources to contest,<i></i> and could not place any other sourceforge projects at risk. flvstreamer is a fork of rtmpdump which removes all the code that Adobe believed was in violation of the DMCA (due to the belief by Adobe that RTMPE is an encryption mechanism). flvstreamer still allows users to download a stream of audio or video content from all RTMP servers, as long as RTMPE is not enabled on the server. rtmpdump development was restarted in October 2009 and is hosted at the MPlayer site[5]. It has much improved functionality and has been rewritten in C (was C++).",1270873829
1254560,comment,1253783,1254524,0,0,ShardPhoenix,,,"That page took several seconds to fully load for me (no more spinning thing) the first time, though the main content came up quicker.",1270873736
1254559,story,,,5,2,duck,"Textaurant Wants to Change the Way We Wait in Restaurants",http://www.nytimes.com/external/venturebeat/2010/04/09/09venturebeat-textaurant-wants-to-change-the-way-we-wait-i-43463.html,,1270873666
1254558,comment,1253783,1253876,0,0,ShardPhoenix,,,"It usually seems pretty fast to me, but maybe that's because I mostly browse outside of US peak hours.",1270873664
1254557,comment,1254189,1254189,0,0,__skyl__,,,"G-d forbid iFart be written in Ruby. Such important work should be left to C if you can't get all the way to assembler.",1270873365
1254556,comment,1252791,1252791,0,0,jpark,,,"""Today, we celebrate the first glorious anniversary of the Information Purification Directives. We have created for the first time in all history, a garden of pure ideology. Where each worker may bloom secure from the pests of contradictory and confusing truths. Our Unification of Thoughts is more powerful a weapon than any fleet or army on earth. We are one people, with one will, one resolve, one cause. Our enemies shall talk themselves to death and we will bury them with their own confusion. We shall prevail!""<p>How far we've come.",1270873300
1254555,comment,1254189,1254528,0,0,helwr,,,"thanks for the amazing link (I'm 100% with the 'dinosaurs' on that one), it is worthy of a separate post",1270873187
1254553,comment,1253783,1254197,0,0,brandnewlow,,,"Not too many writers can ""set up and tweak their caching strategy.""",1270873064
1254552,comment,1253490,1254226,0,0,sunchild,,,"Not really.  Native third party apps were originally a concession to demands from users/developers by all accounts I've heard.  Regardless, the original strategy was to encourage web-based apps.",1270872981
1254551,comment,1254378,1254539,0,0,abraham,,,"If Twitpic was well implemented I could see it but it has no design and little innovation.",1270872977
1254550,comment,1254113,1254358,0,0,barrkel,,,"I think that's a red herring, and static stuff wouldn't be duplicated in practice.<p>Let's break this down by chopping memory into roughly three bins:<p>a) File-backed pages from executables, libraries (i.e. typically shared)<p>b) Non-shared essential memory - the state of the application<p>c) Non-shared discardable memory - state which can be recomputed if necessary, e.g. caches, frame buffers etc.<p>What's the actual upshot difference between the OS doing the serialization (in the form of bulk paging, as opposed to on-demand paging), and asking applications to do it?<p>Memory written out:<p>* OS wants to write out (b) and (c), because it's tricky to express your discardable preferences in memory allocations - not only are the pages discardable, but references into the pages need to be zeroed out. (A GC would help a lot here.)<p>* App can write out (b), but it needs to work quite hard to get there. Likely it will write out a fraction of (b) but do a lot of execution on loading; there may also be bugs or design flaws which lead to less than perfect resumption.<p>Upshot: There should be little to no difference in random access for writing: both should be sequential writes; but less written for the App model. But the OS model has a different advantage: it can lazily be writing out less frequently written pages to disk, so come suspend time, it has less work to do.<p>Memory read in:<p>* OS will read in (a), (b) and (assuming we don't have that GC etc.) (c). (a) will be random reads, while (b) and (c) will be a bulk sequential read.<p>* App will read in (a) and (b). (a) will be random reads, while (b) should be a bulk sequential read.<p>Upshot: There should be little to no difference in random reads, while the App should have a little less sequential reading.<p>So as regards to FS access, I don't see <i>necessarily significant</i> differences in between these two models.<p>A different matter is resources. Things like sockets, open files, events - or god forbid, system-wide synchronization primitives, etc. Some form of managed memory with opaque handles that understand serialization events would help out in the OS front here. But it shouldn't be intractable; Smalltalk systems and the like have been working with persistent images for a long time.<p>I actually think a bigger problem is the dynamically available persistent storage space. Having a device that's supposed to have 8GB or 16GB of memory but finding it only has 6.5 or 13 or so, owing to GiB/etc., formatting and OS installation, is galling enough. But having potential 6x chunks of 0.1 or 0.25 going missing has got to hurt. Compression may help; but it's independent of strategy.<p>What I <i>do</i> think is that an OS and cooperative runtime / GC would do a lot better job of this in terms of user experience than the app writer, who has to balance this requirement with getting all the rest of their app right. The easiest way to do it for the app writer is something along the lines of a save game or a saved document - i.e. persist relevant state, but go through the normal loading cycle at startup before restoring state. Thing is, reinitializing everything is dog slow - many apps take too long to start up, no matter what platform they're running on, desktop or phone.",1270872973
1254548,comment,1254378,1254428,0,0,abraham,,,"Twitter has been eating their own dogfood with <a href=""http://mobile.twitter.com"" rel=""nofollow"">http://mobile.twitter.com</a>",1270872806
1254547,comment,1254378,1254539,0,0,ryanhuff,,,"The move to buy Tweetie surely ratcheted up the pressure for the likes of Twitpic to sell.  As the uncertainty begins to spread in the minds of these developers, the price will likely drop, and make a sale more palatable to Twitter.",1270872763
1254545,comment,1254157,1254329,0,0,orblivion,,,"I'm more or less a novice with FP, yet to learn a language more functional then Python, but this, and the article, are along the lines of something I was thinking of. Why exactly is it that I/O is stateful? A program, after all, is something that takes in input and spits out output, right? Why can't it be:<p>[Byte] -> [Byte]<p>main [data:rest] = ...<p>(sorry if I'm making up syntax or types, haven't properly learned Haskell yet). Well, my friends tell me, the problem is that often times you have to deal with timing, exceptions, etc. Well, fine:<p>[(Byte, Integer, Error)] -> [Byte]<p>main [(data, time, err):rest] = ...<p>As you said, no reason actual evaluation has to correspond to the logical order of evaluation.",1270872703
1254544,comment,1254113,1254413,0,0,barrkel,,,"Assume a constant rate of swapping of 128KB/sec evenly distributed across 16GB of storage space. How long before the whole system collapses, as a function of n write cycles?<p><pre><code>    16 * 1024 * 1024 / 128 * n = 131,072n seconds\n                              ~= 1.52n days\n                              ~= 0.0042n years\n</code></pre>\nSo constantly swapping (which is a very pessimistic scenario for a phone, which spends most of its life idle in your pocket) may expect a lifetime between 4.2 and 42 years, presuming between 1,000 and 10,000 write cycles. I would say it's acceptable.",1270872621
1254543,comment,1254378,1254539,0,0,brandnewlow,,,"Except that during a March 12, 2009 meeting, they discussed it and decided not to buy it, according to the Twitter notes leaked to Techcrunch.<p><a href=""http://techcrunch.com/2009/07/16/twitters-internal-strategy-laid-bare-to-be-the-pulse-of-the-planet/"" rel=""nofollow"">http://techcrunch.com/2009/07/16/twitters-internal-strategy-...</a><p>I always felt a little bad for the Twitpic guy for that.<p>Also, that conversation from the notes spelled out pretty clearly that Twitter would eventually start pulling things like this.",1270872507
1254542,comment,1253176,1253309,0,0,stevenp,,,"At least Apple doesn't pre-approve App Store descriptions! I commend them for their openness! :)",1270872470
1254540,comment,1254113,1254493,0,0,adeadcow,,,"If you really think about it, Apple has always been like this. They want to control every aspect of their hardware and software. The pride you felt was the result of marketing.",1270872212
1254539,comment,1254378,1254378,0,0,stevenp,,,"If I were a betting man, I'd be looking to Twitpic next.",1270872187
1254538,comment,1254474,1254474,0,0,jackowayed,,,"That's cool. I think the most surprising part, upon reading the CSS, is that the only special fixes are for Opera and IE8. So IE7 and IE6 just work.",1270872107
