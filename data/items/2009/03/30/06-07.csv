ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
538270,comment,538067,538178,0,0,zaius,,,"Agreed. If you're doing one tiny board, save the effort and use veroboard. For anything above that, get it printed.",1238396291
538269,comment,538239,538239,0,0,cwan,,,"Would be publishers will quickly realize that the actual printing is a small part of overall distribution.  It's great news though that the barriers continue to fall - I suspect that the applications will be for more generalized print applications (e.g. small run brochures, etc.).",1238396183
538268,story,,,1,0,calambrac,"Language-level Support for Software Configuration",http://jasonfager.com/?p=440,,1238396112
538267,story,,,4,0,soundsop,"Chrome for OS X: State of the Browser",http://arstechnica.com/apple/news/2009/03/chromium-for-os-x-state-of-the-browser.ars,,1238396040
538266,comment,537652,537969,0,0,mahmud,,,"CMU/Apple Dylan; they wasted a perfectly good CLOS successor and a kickass user-interface framework not to mention a great type-system, on a non-Lisp syntax. The rest, as they say, was history. An obscure and long forgotten history.<p>Lisp doesn't like to be dressed up.",1238396003
538265,comment,537652,537950,0,0,mahmud,,,"Tietelman was also famous and ran his own Lisp machine company, InterLisp, and probably had wads of cash and the social clout to push whatever he wanted. His Lisp with English-like syntax had a Futile And Ill Life.",1238395817
538264,comment,538120,538219,0,0,cameldrv,,,"I think that a huge portion of the success of YouTube is not just the not having a codec issue, but the immediate start of the videos.  Sites like iFilm in particular, were around for a number of years before YouTube, but before Flash 7, they all had buffering delays.  If you remember back with RealAudio 1.0, there was no buffering, and so every time a packet dropped, the sound would cut out.  The response to this was to buffer up for 15-20 seconds before starting playback.  This worked ok if you knew you wanted to listen or watch something, and it was long.  What Adobe seemed to realize was that you're better off starting immediately and building up your buffer as you go along.  You may get some stuttering at the beginning, but it's a small price to pay for starting immediately.<p>Starting the video immediately made YouTube addictive, literally.  Shortening the time between following a link and seeing something funny makes the user want to click again.",1238395552
538263,comment,538157,538248,0,0,mahmud,,,"Web development will expose you to the worst parts of programming: bug-compatibility, broken non standard-compliant systems, bad layering of one type system over another incompatible one (session management over state-less HTTP), and finally primitive edit-and-reload development process.<p>If you start with desktop application programming, even console programming, you will see what the fuss is really about. Once you have had your few years of honey moon doing stuff for fun and learning proper systems engineering, you can move on to developing web applications.<p>Ahhh fuckit, just learn PHP and you will be gainfully employed for a very long time, plus you will make useful things for other people. Also, avoid talking to people like me :-P",1238395515
538262,comment,538099,538251,0,0,lsc,,,"I thought that was exactly what 'Manifesto' meant.   Either way, they are using marketing speak, but for something targeted at management, I think it does say the right things.",1238395186
538261,comment,538120,538219,0,0,branden,,,"Indeed, I remember my first impression of YouTube was being dumbfounded at how easy it was to just watch a damn video.",1238395120
538260,comment,537727,537754,0,0,trezor,,,"I'm not on facebook, but does facebook have anything similar to Myspace music?<p>Myspace, while I'm not really a user of that service either, has its niechés which AFAIK isn't available on facebook and neither would they make much sense being there.",1238395116
538259,comment,538163,538163,0,0,davidw,,,"Read the comments - the distinction between a linked in driver and a port is an important one in Erlang, and is a concept that languages like Python/Perl/Ruby/Tcl etc... don't really have.  Not that you can't do it in those languages, it's just that pretty much all C code gets directly linked in, or an external program gets executed, usually with a preference for the first.",1238395074
538255,comment,538117,538226,0,0,nostrademons,,,"I thought kitesurfing was the new geek trend.  Read a bunch of articles about a bunch of Google bigwigs taking that up a couple years ago.  I'm still too chicken to try it, alas.<p>Where do people go for sailing class in SF?  I sailed in college and am looking to pick it up again...",1238394647
538254,comment,538157,538248,0,0,rms,,,"Python is more widely used which is a pretty big pro. The semantical differences between the two are pretty arbitrary and not worth debating. One nice thing about Ruby though is it has this great learning IDE available: <a href=""http://hacketyhack.net/"" rel=""nofollow"">http://hacketyhack.net/</a>.",1238394637
538253,comment,538099,538210,0,0,lsc,,,"hm.  Do you have other suggestions?  I do need to implement something, my current situation is clearly untenable (currently, my provisioning system is a guy named Nick.) and yeah, I don't particularly like EC2's abstractions, but they are a standard that many people know.  (and I certainly would like a situation where it's easy for EC2 users to switch between EC2 and myself.   As I'm much cheaper, I believe that would be a big win for me.  I was here before EC2.)<p>But yeah, I certainly am interested in other ideas.<p>what I'm not interested in is coming up with and marking my own API/abstraction layer.  Even if I released all the docs, it would be de-facto proprietary.  I want to use something that other people use.   I want something thought out by people smarter than I am.  I'd really like something that my customers alrealdy know how to use.  (That's what attracts me to Eucalyptus.   EC2 has a rather large customer base, some of whom are price sensitive, and thus who may wish to become my customers.)",1238394344
538252,comment,538157,538241,0,0,nostrademons,,,"I was gonna come back with ""And then someone asks you to write a GUI..."", but then I read your punchline.  Well played.<p>The irony is that your post basically describes what I did in college while avoiding my physics homework.  I learned Lisp, lambda calculus, Haskell, denotational semantics, SICP, continuations, 4 different ways of implementing continuations, multimethods, a bunch of different garbage collection algorithms, implemented a bunch of Scheme variants, combinator graph reduction, Ocaml, JoCaml and the join calculus, operational transformations, STM, and Erlang.  And then I went out into the real world and became a UI programmer.  The first thing I've gotta do when I get into work tomorrow is make this nifty JavaScript hack work with IE8.",1238394240
538251,comment,538099,538099,0,0,tomjen,,,"Whoever designed that homepage needs to be taken out back and shoot. Also a Manifesto isn't 6 pages full of corporate bullshit.",1238394228
538250,comment,538157,538221,0,0,snprbob86,,,"More generally, they say it takes 10,000 hours to become an expert at anything. If you were to spend half of each 8 hour working day programming (as opposed to other tasks) for 50 weeks a year, that is 1,000 hours per year -- 10 years! Sounds about right to me.",1238394080
538249,comment,538157,538241,0,0,sutro,,,"This reads like a core dump -- informative yet dense, verbose, and difficult to parse.",1238393999
538248,comment,538157,538157,0,0,danielzarick,,,"Where do all of you suggest someone to start who is new to programming and interested in web development? I am beginning with Ruby, but would like to know what some of you think. Python would be my second choice.<p>Any pros/cons in your opinion?",1238393946
538246,comment,538085,538231,0,0,snprbob86,,,"Granted, but my point was that you would think they are better at picking under performing teams than under performing individuals. It is much easier to see weakness in aggregate.",1238393841
538243,comment,538120,538120,0,0,kailashbadu,,,"In the video he touches on several points crucial for a successful startup including believing in your idea when no one does. Paradoxically, unlike many startup founders (Yahoo, Google, Microsoft) who left schools to focus on their business, he chose the opposite course and left business to join graduate school at Stanford just when YouTube was taking off. If he departed because he never expected YouTube to be a runaway hit (a belief augmented by initial hiccups YouTube met with) or if it was genuinely the allure of academia that he couldn’t resist is anybody’s guess. Does he regret having left YouTube in haste?",1238393422
538242,comment,538180,538180,0,0,patio11,,,"This is a common question on another forum I participate on.  I got tired of answering it so I wrote it up as a blog post:<p><a href=""http://www.kalzumeus.com/2007/08/15/banking-for-the-uisv/"" rel=""nofollow"">http://www.kalzumeus.com/2007/08/15/banking-for-the-uisv/</a><p>Short version: getting a US bank account for a non-US resident is possible and routine.",1238393419
538241,comment,538157,538221,0,0,mahmud,,,"Get into the semantics and formal methods side of things and you can pretty much ""learn"" all programming in ten grueling years. Start with lambda calculus, combinators, basic one-step operational semantics to reason about virtual machines, move to large-step operational semantics for the academic hand-waving, taste a little axiomatic logic stuff and proofs, maybe dabble in prolog-type resolution and inference, backward and forward chaining, take a deep breath and study a little syntax theory, mess with turing machines and automata, maybe pickup a little ""actual"" machine and write a compiler for a clean Algol dialect, say, Scheme (oh no I didn't just call Scheme an Algol dialect!) Yeah, like I was saying, do your first Pascal then do a little Lisp, like Scheme (wtf? didn't I just call scheme an Algol dialect? what is it?)<p>By now you're pretty much ready to mess with early Lambda papers, but before you start, grab Wilson and read up on Uniprocessor garbage collection techniques. Yeah, you pretty much ignored languages without automatic memory allocation, but you aren't missing much; ones with block structure and no heap allocation can be done with a strict stack discipline, pick up Hennesy and Patterson and play with SPIM, you targeted MIPS in your early pascal compiler right? right? And Algol type languages that need dynamic allocation usually need it for datastructures, and not executable code, so you wont have to worry about closures, again, read up on Wilson and implement that with the Unix brk(2) system call. Big boy! (or girl!)<p>It's time mess with a few real systems; you look at GCC and it's a mess, you opt for LCC and it's a well documented toy, you get bored with C and discover Common Lisp. Without even trying, you pretty much learned a bunch of scripting languages and tool syntaxes just to get things done. CMUCL keeps you busy for about 2 years during which you realize you're not really done with programming. So you ""learn"" denotational semantics. No one ever learns denotational semantics, not even Scott and Strachey. As a matter of fact, you didn't even learn lambda calculus when you said you learned earlier. Time for Barendregt! the big yellow book that falls apart in your hand. Worst binding ever. You spend six months in the first two chapters.<p>By now you have memorized CiteSeer, you have grown an afro and you're pretty much feral. You go back to fuck with combinators and you're side tracked to term-rewriting and all that jazz, stuff wacko British guys come up to milk Red-Brick institutions for grant money. Graph reduction is your next step and by now you're tethered to your last neuron, stretched thin. You're sick to your stomach of all this theory. You think more than you feel, so you go back to the basics and learn yourself mathematics .. but your ten years are almost over and you're still not a programmer. You know everything and nothing. You can hack on machines that haven't been invented yet.<p>All this hasn't prepared you for a career in web development, and now you're a lamer in SitePoint forums begging people to teach you CSS and Photoshop. The joys of being a startup hacker.<p>[Edit: inserted line-breaks for the meek]",1238393141
538240,story,,,32,1,arthurk,"PyCon: PyCon 2009 Videos",http://pycon.blogspot.com/2009/03/pycon-2009-videos.html,,1238393103
538239,story,,,17,4,peter123,"Do-It-Yourself Magazines, Cheaply Slick",http://www.nytimes.com/2009/03/30/technology/internet/30mag.html,,1238392966
538238,story,,,1,0,gne1963,"5 Vital Signs of Life",http://mast-economy.blogspot.com/2009/03/5-vital-signs-of-life.html,,1238392885
538237,story,,,7,2,peter123,"European Papers Find Creative Ways to Thrive ",http://www.nytimes.com/2009/03/30/business/media/30paper.html,,1238392861
538236,comment,537852,538227,0,0,quizbiz,,,"I started writing words backwards (among other things). Not as secure but I don't hit myself when cookies expire.",1238392853
