ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
87283,comment,87167,87167,0,0,edw519,,,"An incredibly powerful argument for the effectiveness of ""low tech"" approaches.  Whether it's health care, business, or technology, it's almost always counter-intuitive.  That's why it's often such a hard sell.<p>(Case in point at a client of mine:  When the parking lot was scheduled for paving, email was sent to everyone.  For whatever reason, about half didn't read it or know about it.  The next time, paper notices were posted on both sides of every door.  Not one person parked in the lot.  Who knew?)",1197129510
87282,comment,87019,87019,0,0,danw,,,"Out of interest who here uses Selenium or any other for of testing for the client side of web apps, such as JSUnit?",1197128384
87281,story,,,2,0,sanj,"Email hijacking",,"A lot of sites seems to have users sign up using an email address and password and nothing else. The admirable goal is to minimize the friction in signing up.<p>But it seems like that can invite a pretty serious issue that I've been callling ""email squatting"".<p>The problem is that these sites don't verify that the person who signed up with a particular email address is, in fact, the legitimate user of that email address.<p>Consider someone signing up with my email address: foo@bar.com.  Now I'm not going to be able to use that email address, because it is already taken.  Worse, if messages to that account, such as invitations, the attacker can accept them, since they typically see the invitations on the site in addition to it being sent to the email address.<p>As the legit user, I might see the invites, but won't be able to log in at all.  Worse things can happen: once the attacker signs up, they could make this email address secondary and add another, primary address so that they see all of the messages.<p>Here's a solution:<p>Rather than asking for an email address and password on the front page, have a ""Try It"" button and a box for the user to enter an email address.  When they click on the box, the system sends email to that address with an ""signup"" link, signed with an encrypted hash of the email address.  <p>When the (legit) user clicks on the link, they come back to a signup page, the system checks the encrypted hash and we're good to go.<p>I realize this adds another step, but the hijacking problem is real.  For sites dealing with any sort of sensitive information, it needs to be dealt with.<p>Are there better solutions that have less friction?<p>Or am I just being overly paranoid?",1197126418
87280,comment,87001,87001,0,0,rapind,,,"Surprised this isn't higher. Pretty cool tech behind this.",1197126065
