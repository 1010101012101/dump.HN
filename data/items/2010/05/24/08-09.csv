ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
1374155,comment,1373929,1373929,0,0,blub,,,"Terrible blog post: present a series of special cases where OOP is not the best fit => throw OOP away except for class libraries?<p>Thanks to Paul Graham's language abuse, dead is becoming a meme: ""X is dead"" = ""I don't use X"".",1274691593
1374154,comment,1373802,1373875,0,0,jacquesm,,,"I'm surprised that she would sue. After all, she must realize that she was treated fairly and that she's going to make it incredibly hard for the next female minority to get hired, who might be qualified <i>and</i> a nice person to boot. Stuff like that tends to linger, even if it is subconscious and against the law.",1274691513
1374153,comment,1373802,1373945,0,0,nailer,,,"> offered a statistical analysis of promotion and compensation that indicated a pattern of discrimination against older employees<p>How could statistics possibly indicate causality?",1274691386
1374152,story,,,1,0,pierrefar,"Does Your New Initiative Threaten Customers' Freedom?",http://blogs.hbr.org/research/2010/05/does-your-new-initiative-threaten-customers-freedom.html,,1274691351
1374151,comment,1374032,1374080,0,0,coldclimate,,,"Hmm, you're right it would probably run a bit faster as a JOIN, I just default to using subqueries by nature.<p>Re:Theme with massive paragraph - it was based on a magazine wordpress theme and we're yet to edit it down.",1274691338
1374150,comment,1373797,1373933,0,0,rimantas,,,"You can maintain it without any quitting: just think before you post anything.",1274691221
1374149,comment,1374031,1374031,0,0,_delirium,,,"You're conditioned to <i>right-click</i> on an object coming from an Apple ecosystem? Coming from a mostly PC background, but with an OSX laptop, the total <i>lack</i> of importance given to right-clicking (ctrl-clicking) or context menus is the thing I most associate with the Apple ecosystem.",1274691218
1374148,comment,1373802,1374086,0,0,nailer,,,"When I was involved in the Unix world I used to see this a lot: someone with 'x years of experience' who knew the 5-10% of the system they work with day to day really well, with no understanding, no interest, and no awareness of the rest of the system.",1274691143
1374147,comment,1373797,1374112,0,0,mike-cardwell,,,"If I quit, Facebook immediately becomes less valuable to my friends. The <i>only</i> value Facebook has to the vast vast majority of its users, is it's ubiquity.",1274691062
1374146,comment,1373028,1373102,0,0,Natsu,,,"That outlook actually helped me solve some of these.<p>Once I respecified the problem as ""accept .*BB$"" it became a lot easier to visualize.  In particular, it showed me that I needed a junction at the end which passes only an empty tape.  You can, in fact, code it up by creating a piece that accepts anything (except end of tape!), two pieces that accept blue, followed by one that accepts only the end of tape and wiring them together properly (which I leave as an exercise for the reader; I'd hate to spoil any of the problems too much).",1274691011
1374145,comment,1373969,1374069,0,0,JoachimSchipper,,,"If your non-crummy tools are so bad that C ends up eating your lunch by a factor of 100, I'm not sure that they really are non-crummy.",1274690925
1374144,comment,1372688,1372688,0,0,pramit,,,"Here are some book lists:<p>The 100 greatest books of all time everyone must read  <a href=""http://bighow.com/news/the-100-greatest-books-of-all-time-everyone-must-read"" rel=""nofollow"">http://bighow.com/news/the-100-greatest-books-of-all-time-ev...</a><p>Top 15 Novels About Work <a href=""http://bighow.com/news/book-list-top-15-novels-about-work"" rel=""nofollow"">http://bighow.com/news/book-list-top-15-novels-about-work</a>",1274690863
1374143,comment,1373969,1374106,0,0,JoachimSchipper,,,"I'm by no means an expert on the .Net platform, but are these equivalent? You generate ~20GB of garbage, about half of which could comfortably fit in your memory; more importantly, it appears that .Net, in some modes, does garbage collection in a different thread than the one running the program. And it's clear that using a different thread to zero memory is faster...<p>Also note that I was talking about <i>object</i> creation, which may be a lot heavier than array creation.",1274690830
1374142,story,,,38,4,luckystrike,"Ruby on Rails 2.3.7 Released",http://weblog.rubyonrails.org/2010/5/24/ruby-on-rails-2-3-7-released,,1274690809
1374140,comment,1373028,1373825,0,0,Natsu,,,"Seeing this comment made me try to answer that, just for fun.  For improvements, I know that I would have included a more obvious manual somewhere (I didn't know that you could flip the pieces, rather than rotating them with a space bar, until I read that in a YC comment).<p>The second question is more interesting to me, because I know regexes better than Turing machine variants.  I think I could give them the problem of accepting only balanced, nested ""parentheses"" with arbitrarily deep nesting or something similar (treating blue as open parentheses and red as close).  Though they asked something close to that with the nasty ""accept only bots with equal numbers of red and blue symbols"" so maybe I'm wrong and I should look for some angle with incomputable functions, like the Busy Beaver.<p>Or you can just cheat and give the play a board that's too small (or limit them to too few pieces) for the problem to make it unsolvable.<p>The ability to use yellow and green makes me wonder if there's some way to solve the balanced parentheses problem, though.  I quit to do something else before solving the ""accept only equal numbers of red and blue"" problem (alas, I wished it would let me <i>write</i> to balance the tape, then you could just loop until empty, write red blue and accept).<p>This would sure be a lot more fun than most programming tests.  I had a lot of fun designing things like a ""red eater"" which took care of the .* in the problem asking you to match .*BB$ and trying to shave parts.  I know I could get rid of several more if I had known how to flip them.  I just hate seeing something and knowing there ought to be a way to simplify it further.",1274690686
1374139,comment,1373929,1374117,0,0,blub,,,"...or maybe FP is a crutch for mathematicians and purists. You're making a huge mistake: we shouldn't adapt our thinking to computers, we should adapt computers to our thinking and make them easier to operate. According to your logic, writing hexadecimal code is the holy grail of computer programming.",1274690652
1374138,story,,,3,0,pclark,"The original spaghetti code",http://www.voidref.com/pub/images/early_programming.jpeg,,1274690476
1374137,comment,1372720,1372811,0,0,po,,,"If you saw the original Boston Dynamics BigDog Youtube video, should check out the version that researchers here in tokyo have come up with:<p><a href=""http://www.youtube.com/watch?v=X5BPrlOVX2o"" rel=""nofollow"">http://www.youtube.com/watch?v=X5BPrlOVX2o</a>",1274690368
1374136,comment,1373757,1373757,0,0,ErrantX,,,"This time I am going to wait to see what changes they bring<p>I'm still happy to give FB a break over this; they've done a lot to improve privacy in recent months and IMO get credit for that. I'm still having a hard time verifying the vast majority of ""privacy violations"" people seem to be finding; I suspect they don't really exist in the way they are presented. Obviously there are one or two that are a problem (and I hope they address that) such as the information that can no longer be hidden from search.<p>I've been playing the Facebook privacy game for a long time - and from that perspective most of this current reporting/outrage is either a) people getting on a bandwagon/following the crowd or b) misinformed. Amongst that <i>the smattering of genuine complaints has mostly been lost</i> to the noise. In a few months it will be back to a few of us pressing those issues again....<p>Bottom line is; the problem is in creating effective controls people understand. They really need to crack that, and if that is what the current fad achieves then great.",1274690331
1374135,story,,,1,0,Mafteianu,"The Ultimate Guide to Working Remotely: Part 1/5",http://www.mafteianu.com/2010/05/the-ultimate-guide-to-working-remotely-part-15/,,1274690302
1374134,comment,1373969,1374114,0,0,_delirium,,,"Those are both C++, not C, aren't they?",1274690154
1374133,comment,1373969,1374122,0,0,fleitz,,,"If you write parallel code you'll get a lot closer to free lunch. To me the transition is almost complete, you're starting to see that even the cheapest laptops these days have two cores.",1274690129
1374132,comment,1373028,1373028,0,0,branden,,,"This is amazing. You're forced to do some really complicated stuff. Here's my solution to Rocket Planes that uses all 4 colors, 4 subfunctions, and recursion: <a href=""http://dl.dropbox.com/u/6625091/rocketplanes.png"" rel=""nofollow"">http://dl.dropbox.com/u/6625091/rocketplanes.png</a><p>Is there a simpler solution to that one?",1274690025
1374131,comment,1374070,1374096,0,0,dejan,,,"You mention ""authentic digital artifacts"". To me this is the  most important thing missing in the web. How you address it is 2nd. However, I am not sure CCNX is the right path to go. While the need is there, their implementation doesn't make sense.<p>Something as fundamental should be ubiquitous and dead simple to use, without mentioning any code, programs, daemons or nodes to end users.<p>Also, they are very poor in sending a message. I don't have an hour to watch their video presentation just to figure it out what it is. (unfortunately I had to)",1274689995
1374130,comment,1373969,1373969,0,0,tumult,,,"This is really stupid.",1274689973
1374129,comment,1372720,1372912,0,0,po,,,"Perhaps you will change your mind after viewing this horrific weaponized version of BigDog:<p><a href=""http://www.youtube.com/watch?v=ptyV1cpE14o"" rel=""nofollow"">http://www.youtube.com/watch?v=ptyV1cpE14o</a>",1274689950
1374128,comment,1373969,1373969,0,0,gjm11,,,"The most surprising-looking thing here is the really wretched results from the Go version. But when you actually take a look at the Go code, that stops being so surprising; he's using a CSV-reading library whose author clearly wasn't thinking much about performance. It doesn't contain anything really super-dreadful -- O(n^2) algorithms for processing strings, etc. -- but it's full of gratuitous constant-factor inefficiencies compared with what you'd be likely to do in, say, C. Unnecessary temporary objects (presumably allocated on the GCed heap), building short strings by { read a byte, push it into a string-builder, repeat }, etc. It's the kind of code is makes sense to write in a higher-level language where (1) allocation overhead is likely to be swamped by interpretation overhead and (2) you know that for anything that really needs to be fast you'll punt to an extension library written in C. But Go is not such a language, even though it tries to offer some of the same conveniences as they do.",1274689936
1374127,comment,1373802,1374045,0,0,_delirium,,,"The historical reason, more or less, is that for several decades a large portion of the people who controlled almost all the jobs in a large region of the U.S. decided that they didn't want any black people in their companies, or at least not in any non-menial jobs. Eventually, resentment boiled over into the Civil Rights Act of 1964, which prohibited employment discrimination along with a bunch of other things. To make it not <i>solely</i> about race, and build a broader coalition over nondiscrimination, the Civil Rights Act included other categories. The original set was: ""race, color, religion, sex or national origin"". Age was added later, because once the original principle was established, it seemed like by analogy firing someone solely on the basis of their age was vaguely similar to firing someone solely because they were Romanian, or Buddhist.<p>I do think there's an alternate-history scenario where nondiscrimination laws might not have been passed in the US, if discrimination were mostly random and idiosyncratic. But when a huge portion of companies uniformly discriminated in the same way and ended up creating what amounted to a permanent underclass, it became a fairly unsustainable situation, and was eventually overturned. And it's fairly hard to go back now, because race relations haven't reached a point of sufficient trust: a lot of African-Americans believe that if the Civil Rights Act were overturned, companies would go back to not hiring them due to racism (at the very least, many would interpret overturning the Civil Rights Act as an action with unfriendly intent).",1274689876
1374126,story,,,1,0,soniasonal,"Apperian CEO: The Enterprise App Store is coming",http://reduxonline.com/theo/2010/5/24/apperian-ceo-the-enterprise-app-store-is-coming-apple-ipad-i.html,,1274689826
1374125,comment,1373757,1373757,0,0,paraschopra,,,"See the comments on this post on Facebook itself<p><a href=""http://www.facebook.com/posted.php?id=20531316728&share_id=125788394107023&comments=1#s125788394107023"" rel=""nofollow"">http://www.facebook.com/posted.php?id=20531316728&share_...</a>",1274689710
1374124,comment,1373969,1374106,0,0,runT1ME,,,"Very well said, and I believe what makes the G1 so brilliant is it will be able to tackle the mid-life crisis issue.",1274689686
1374123,comment,1372941,1373596,0,0,silversmith,,,"What's worst, these usually contain mission-critical code. I have had to tackle a 6k line one, in PL/SQL.<p>You open up a package, the line count reads 6k. You shudder. Then, you notice that the structure tree has only one entry. One procedure. Feeling of absolute defeat sets in.<p>Fortunately, it was only about 4k of actual LoC, because the previous developers had created a ghetto version control using comments.<p>Still, it took me the better part of the day to find what I was looking for in it.",1274689652
1374122,comment,1373969,1374064,0,0,runT1ME,,,">In 18 months a CPU that costs $200 will perform twice as fast as the current CPU for $200, I've never seen bang for the buck like doubling the performance of your code for $200. (Most apps are IO bound anyway, so you want to add disks not CPU)<p>2001 called, they want their answer back.  Ok, that's a little harsh, but really, you're answer was perfect for about six years ago, but if you've taken a look at chip performance recently, it has <i>certainly</i> not been doubling every year.<p>What you can get for cheaper is more cores, but that certainly isn't a free lunch, as many have pointed out.  Suddenly having a good language that can be per formant and scale matters (python anyone?).<p>Go is going to have a lot of catching up to do, as writing good multi threaded libraries are hard, and a good parallel GC is even harder. I don't mean to pick on your opinion, because its one shared by many, but things are going to get <i>very</i> interesting in the next 10 years as we really will see the end of moore's law in terms of linear CPU performance and instead get many-core processors to play with.",1274689502
1374121,story,,,1,0,vijaydev,"RFC 2119 - Keywords for use in RFCs",http://tools.ietf.org/html/rfc2119,,1274689359
1374120,comment,1373802,1373906,0,0,lionhearted,,,"> You're relying on a fallacy -- the law doesn't need to exist for the lawsuits to exist.<p>Do you mean this particular law doesn't need to exist for lawsuits to exist? Because all lawsuits need grounds to bring suit.<p>> Google is trying desperately to prevent a trial from taking place. Frankly, I'd like to see why.<p>Because they have literally nothing to gain from being dragged into court, paying legal fees, with a chance of being forced to pay millions of dollars and getting their reputation bashed, but gain nothing if they win? I think anyone sane wouldn't want that scenario to happen, it's lose/lose for them.",1274689351
1374119,comment,1373951,1373951,0,0,terminus,,,"This looks like cumulative lines of code for all the projects that go into Android (across all the platforms that they are supported on.)<p>For instance C#, DOS Batch, IDL etc are listed. I don't believe that Android has a runtime for any of these.",1274689250
1374118,comment,1373174,1373952,0,0,jessriedel,,,"No, Drexler doesn't think it's nonsense.  He just thinks that it will be <i>unnecessary</i> to make replicators for the manufacturing purposes he has in mind.  He says<p>>In particular, it turns out that developing manufacturing systems that use tiny, self-replicating machines would be needlessly inefficient and complicated. The simpler, more efficient, and more obviously safe approach is to make nanoscale tools and put them together in factories big enough to make what you want.<p>(note that he explicitly acknowledges the safety risk) and<p>>The popular version of the grey-goo idea seems to be that nanotechnology is dangerous because it means building tiny self-replicating robots that could accidentally run away, multiply and eat the world. But there’s no need to build anything remotely resembling a runaway replicator, which would be a pointless and difficult engineering task. I worry instead about simpler, more dangerous things that powerful groups might build deliberately - products like cheap, abundant, high-performance weapons with a billion processors in the guidance systems.<p>This does <i>nothing</i> to diminish the risk of replicators if they are, in fact, created.  And there are all sort of possible problems where replicators would be essential.  For example, we may want to release replicators into the environment to clean up certain kinds of pollution which can't be easily brought to a central facility.",1274689239
1374117,comment,1373929,1374099,0,0,derefr,,,"OO models exist because they reflect how we describe things when <i>not</i> talking to computers. ""This is Spot. Spot Is-A Dog. See Spot.run(). Spot.runs == :fast.""<p>They're a crutch for people who can't (or don't have the training to) think in terms of sets, mappings, graphs, combinators, etc.",1274689214
1374116,comment,1373443,1373443,0,0,wendroid,,,"I think it's a bit disingenuous to say that such dislike is nailed to Lisp. Mixing data and code in the memory of a running program is what has lead us to every exploit involving a buffer overflow or a stack smash.<p>I expoect a different class of problems in their place but self modifying code is rightfully highlighted as unprovably correct.<p>Lisp is not the only language that can build a string and throw it at an eval function.",1274689157
1374115,comment,1373772,1374085,0,0,fookyong,,,"I wish it were that straightforward :) Selling it and migrating it to the buyer would be a pretty draining experience.  I'd rather spend time on my other project :)<p>That and, none of the customer subscriptions are transferrable.  The new buyer would only earn money from new customers.",1274689141
1374114,comment,1373969,1374069,0,0,sandGorgon,,,"What about Boost strings - <a href=""http://www.boost.org/doc/libs/1_39_0/doc/html/string_algo.html"" rel=""nofollow"">http://www.boost.org/doc/libs/1_39_0/doc/html/string_algo.ht...</a><p>and RE2 for regex - <a href=""http://code.google.com/p/re2/"" rel=""nofollow"">http://code.google.com/p/re2/</a>",1274689122
1374113,comment,1373173,1373288,0,0,pclark,,,"whats your email? friend of mine is looking for great C# coders.",1274689062
1374112,comment,1373797,1373904,0,0,bootload,,,"<i>""... I don't care if they do better. It's not pointless quitting, I now no longer have Facebook in my life. ...""</i><p>But your friends might and that is the problem.",1274689056
1374111,comment,1373863,1374088,0,0,jacquesm,,,"Good catch, the dupe checker didn't catch it because of the 'blog' in the original link.",1274689024
1374110,comment,1373802,1374045,0,0,patio11,,,"<i>Why are there laws against age discrimination?</i><p>As a strictly positive rather than a normative statement: because ""old"" people vote, and ""old"" people see value in not getting thrown out of their jobs in favor of cheaper young people, and instruct their elected representatives as to their preferences in that regard.<p>In a parallel universe where young people voted and old people did not, one could imagine a law which made it illegal to pay 20 year olds and 40 year olds different amounts of money for the same job.  Hah hah hah, hah hah hah, hahahaha.  What a quirky universe that would be.<p>That parallel universe might also have very interesting discussions about, e.g., health care financing.<p>I rush to note that I am not necessarily in favor of the status quo policies of either our world or the parallel universe.",1274688993
1374109,comment,1373425,1373758,0,0,ericd,,,"Yeah, there are definitely cases when it makes sense, but I think that the majority of times when people think it's a good idea to make something look custom, it's actually not when looked at from a usability perspective.<p>I realize that I'm in the minority about this when I look around and see most of my competitors customizing the look of their markers, etc, but I think they just make it worse most of the time. This is granting much more power in that department.<p>I'm happy for the power, I just vehemently disagree that this is going to make map mashups much better overall.<p>I don't think ""outside embed"" is a bad thing when viewed from the eyes of the user - it's comforting familiarity for many. Making it seem custom is just an ego trip.",1274688817
1374107,story,,,47,25,sree_nair,"The quintessential rational mind: Buddha",http://www.hindu.com/mag/2010/05/23/stories/2010052350210600.htm,,1274688736
1374106,comment,1373969,1374061,0,0,barrkel,,,"I can't agree with the non-allocation of memory. What you don't want to do is create garbage that doesn't die until after a collection has already occurred - this is the mid-life crisis problem. But you shouldn't be unduly afraid of allocating memory which won't last long.<p>I wrote up a quick test sample: <a href=""http://pastebin.com/YmbT08Uy"" rel=""nofollow"">http://pastebin.com/YmbT08Uy</a><p>All it does is fill in an array with values from 0 to 511, then sum them up. The catch is that it zeros out the array before filling in the values, in two different ways: one (P), by re-using an array, and secondly (Q) by reallocating the array and letting the garbage collector zero it out.<p>Here are test run timings:<p><pre><code>    P: 8.749\n    Q: 7.070\n    Result: 0\n</code></pre>\nAnd in reversed order, to show that order of compilation didn't make a difference:<p><pre><code>    Q: 7.081\n    P: 8.746\n    Result: 0\n</code></pre>\nThe code using the GC to implicitly zero out the array is still faster than the code that reuses the array, even though the GC is having to collect a large fraction of the 10 million 2048-byte arrays allocated by Q. P, on the other hand, only allocates 100 of them.<p>Test machine: i7 920 @ 3.6GHz, 12GB memory, .NET 4 on Win7 64-bit.<p>Don't forget that time spent in GC is proportional to the amount of live data in the generation(s) being collected, not the amount of garbage. Collecting garbage is actually free; it's finding out what's garbage that costs. If you don't keep references around to memory (i.e. increase your live set), GC is very cheap.",1274688661
1374105,story,,,1,0,bensummers,"Apple and Efficiently Growing its Future",http://stevecheney.posterous.com/apple-and-efficiently-growing-its-future,,1274688603
1374103,comment,1373969,1374069,0,0,_delirium,,,"That's one way to avoid having slow or misused library functions kill you in benchmarks-- don't give the user many library functions. ;-)",1274688559
1374102,comment,1373478,1373706,0,0,gjm11,,,"They're ""free advertising with little downside"" in the same way that spam is.",1274688526
1374101,comment,1373757,1373948,0,0,prodigal_erik,,,"What he didn't say is that ""too fast"" is a risk they willingly take, not a problem they will even try to avoid. Their self-described mantra is ""work fast and don't be afraid to break things.""",1274688484
1374100,comment,1373863,1373863,0,0,gjm11,,,"Previous HN discussion (a couple of months ago): <a href=""http://news.ycombinator.com/item?id=1230768"" rel=""nofollow"">http://news.ycombinator.com/item?id=1230768</a>",1274688458
1374099,comment,1373929,1373929,0,0,fleitz,,,"The reason OO exists to the degree it does in my mind is that it makes it easier for Enterprise Architects to write code in Visio, this also lends itself to directly modeling the domain \nso managers don't have to think. Which leads to \npublic class Money {\npublic string Currency { get; set; }\npublic float Price { get; set; }\n}<p>""The money class is the root of all evil""",1274688441
1374098,comment,1373969,1374064,0,0,Legion,,,"I think ""generally pointless"" is overstating things a bit.<p>That said, I think it is definitely fair to say that these sort of benchmarks fall more into the category of ""interesting"" than ""useful"".<p>Usually fun to read, but just not something to confuse with information to base business decisions on.",1274688436
1374097,comment,1373802,1374045,0,0,jamesbritt,,,"<p><pre><code>    Let me ask a possibly unpopular question because\n    the answer is not immediately obvious to me:\n</code></pre>\nGood enough reason.<p>Here's an  explanation I've heard:  Yes, it's your business, your property, and in most things you're free to do as you like with it.  But it doesn't exist in a vacuum.  You can have a business and a good life because you live in a particular society, so you have some obligations back to that society.  That can take the form of, well, taxes (for example), but also as special protections for select groups of people.",1274688249
1374096,comment,1374070,1374070,0,0,dasht,,,"The notion of a content addressable network, where content is defined broadly enough to encompass services, is profoundly important.  Some of us have pushed towards for years and it is nice to see some PARC weight behind it.<p>For an example of the profundity, consider that all location-addressed content is intrinsically ephemeral. When the ownership or maintenance practices of the location change, the content can change or disappear.   With content addressability (in a uniform, stable, global way) we begin to have the possibility of authentic digital artifacts, addressable on the net by ordinary people in familiar ways (like following a link).<p>Or as another example of the profundity, consider the political, social, and economic power of ICANN - the ultimate sovereigns over the ownership of location names.   Content addressability provides an alternative to submission to those or any other humpty dumpty when naming things for others to find on the 'net.",1274688227
1374095,comment,1373802,1374045,0,0,shabda,,,"If there are  laws against discriminating on racial grounds, why should there be no laws against discrimination on age?",1274688171
1374094,comment,1373802,1373945,0,0,georgieporgie,,,"Thank you for providing significantly more information than a professional journalist did.",1274688151
1374093,story,,,11,2,bensummers,"WebM: Missing The Assurances Open Source Needs?",http://www.computerworlduk.com/community/blogs/index.cfm?entryid=2973&blogid=41,,1274688117
1374092,comment,1371548,1372153,0,0,Legion,,,"Perhaps, but that doesn't change my impression of the story: phone call is made, and <i>everything</i> is shut off in a flash immediately afterwards.<p>Even if not a literal 15 seconds, the phrase doesn't seem to imply that there was a length of time where someone on that end might have been investigating the issue. It implies that someone flipped the switch to ""off"" the instant one was able to get within reach of the switch.",1274688116
1374090,comment,1373173,1373394,0,0,adam-_-,,,"There are still a number of interesting companies in London depending on what you're interested in...<p>Web development: check out NMA Top 50 for Agencies.<p>Startups: Check out the WiredUK Silicon Roundabout article _and_ the comments!<p>Misc: Check out things like Times TechTrack.<p>Interested in a particular technology? Check out the official language job board and search for London (e.g jobs.perl.org).<p>There are definitely interesting companies you just have to spend some time finding them because they won't come to you.",1274688079
1374089,comment,1373413,1374055,0,0,limedaring,,,"You don't find it a good thing to test before launch? Heads up - everytime you put your app before someone else and ask what they think, you're usability testing. What if your customer gets to your homepage, goes ""huh?"" and leaves immediately - you'll be able to find those kind of issues and fix them before your app goes public.",1274688062
1374088,comment,1373863,1374072,0,0,andrewtj,,,"You and I both, especially since it's a repost <a href=""http://news.ycombinator.com/item?id=1230768"" rel=""nofollow"">http://news.ycombinator.com/item?id=1230768</a>",1274688002
