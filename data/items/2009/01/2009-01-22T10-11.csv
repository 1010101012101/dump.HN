ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
444622,comment,443948,443948,0,0,JulianMorrison,,,"ABCL, Rhino and JRuby provide a countercase by examples. Running on a VM is not enough, easy access to the VM libraries is not enough, and the version on the VM won't automatically be more popular.",1232621935
444621,comment,443948,444618,0,0,hassy,,,"which one? Squeak first appeared around the same time as Java. was there a free, open-source, solid Smalltalk VM back when Perl, Python or Ruby were started?",1232621743
444620,comment,174298,175095,0,0,yeti,,,"I agree, HK is great - low cost and good infrastructure, access to great, English speaking and globally aware talent",1232621723
444619,comment,174298,174675,0,0,yeti,,,"I'd agree with this.  Good tax system, government support, close to China etc... let me know if you need any feedback, my startup is based here",1232621664
444618,comment,443948,444532,0,0,rbanffy,,,"The Smalltalk VM comes immediately to mind.",1232621398
444616,comment,443791,444311,0,0,eru,,,"Interesting.  Could you have implemented drawTree with Language.Haskell.Pretty?  Also I get the following error with ghc:<p>yc.hs:35:34:
    No instance for (Monad (Either String))
      arising from a use of `mapM' at yc.hs:35:34-52
    Possible fix:
      add an instance declaration for (Monad (Either String))
    In a 'do' expression: keys <- mapM parseKey names
    In the expression:
        do keys <- mapM parseKey names
           return (toTree (zip keys values))
    In the definition of `paramTree':
        paramTree nameValues
                    = do keys <- mapM parseKey names
                         return (toTree (zip keys values))
                    where
                        (names, values) = unzip nameValues<p>(Edit: I'm sorry that the error message's whitespace gets messed up here.)<p>Also your groupings function is only used in conjunction with Data.Map.fromList.  Did you consider using something like 
  Data.Map.fromListWith (++)
instead?  Of course you'd have to wrap your would-be Map values in singleton lists first.",1232620689
444615,story,,,144,29,paul,"Paul Buchheit: Communicating with code",http://paulbuchheit.blogspot.com/2009/01/communicating-with-code.html,,1232620665
444614,story,,,2,0,peter123,"PepsiCo Figures Tropicana’s Carbon Footprint",http://www.nytimes.com/2009/01/22/business/22pepsi.html,,1232620539
444613,comment,444586,444586,0,0,pclark,,,"too little, too late.<p>Britannica should have partnered with Wikipedia, rather than attack them:<p>Mr Cauz characterised Wikipedia as containing ""plenty of cracks on it in terms of the quality"".<p>""It's very uneven, the facts are not always correct, the model contains a lot of pitfalls.""",1232620405
444612,comment,444032,444559,0,0,popschedule,,,"me too",1232620321
444611,comment,443791,444389,0,0,ichverstehe,,,"We also get drunk and do stupid things. Some of us also enjoys reading obscure poetry. Or listen to brain dead No Wave-music or spends two hours listening to this new awesome Japanese records played on two spoons. That's not 'attractive' or 'simple' or anything else that would fit into your hipster life in that black/white attic of yours, listening to 'hip' music and drinking that fabulous red wine (which probably sucks) and enjoying the shit out of your Good Life (tm)<p>The same applies for code.",1232620225
444610,comment,444555,444555,0,0,Hates_,,,"""When God gives you lemons, get a new God."" - I prefer that version.",1232620134
444609,comment,443948,444378,0,0,hassy,,,"you're right in that my argument can be generalized to most (new) programming languages:<p>unless your programming language <i>requires</i> a new VM for some good reason, build it on top of an existing one.<p>when would a new VM be required? well, Erlang for example just could not have been implemented on top of JVM (forget for the moment that it predates the JVM by a few years). BEAM, the Erlang VM, has an overhead of ~500 bytes per process -- try that with JVM. Factor, IIRC, outgrew the JVM very quickly too – though i forget how exactly.<p>most of Lisp's power lies in uniform syntax which manifests itself in Lisp macros. that's not a good reason to write a whole new VM.<p>the reason i talk about ""future of Lisp"" rather than all programming languages is that at the time i was thinking about Lisp & why it remains unpopular despite being an awesome language.",1232619919
444608,comment,442544,443136,0,0,ErrantX,,,"I have done the physics: or spoken to people that have.<p>In fact I have seen a successful small rocket launched from a 100 ft high ballon platform (the physics is painful but it is possible).<p>Other ideas like centrifuge acceleration I know have been discussed: and I personally see potential in them (Ammers & Myers, Oxford University Press, 2006 I think: I'll try and dig out a reference #).<p>With equal respect I suggest you actually try to think outside the box before posting vacuous statements stating it is impossible.... ;)<p>EDIT: BTW you do know NASA have recently been exploring the possiblity too.... admittedly for low earth orbit sattelites (and i <i>know</i> that a major problem is breaking that barrier - but it is proof of an initial concept....)<p>The crucial data is that ballons can carry rockets to a MUCH higher altitude than planes. The reduced drag at that altitude means a <i>lot</i> less propellant is needed (and even a solid fuel propellant could suffice).<p>NASA has plans for a ballon that can carry up to a ton of equipment to a height of 33Km which is pretty good!<p>You've also missed the point of the airplane: 600MPH is frankyl nothing (4% of the speed required for LEO). The important thing is the lowered drag and kinetic requirements to get the payload to LEO.",1232619912
444607,comment,443791,444322,0,0,eru,,,"Keep away from small children and tainted data.",1232619809
444606,comment,444374,444528,0,0,cmos,,,"We'll probably never know everything..<p><a href=""http://en.wikipedia.org/wiki/Michael_Connell"" rel=""nofollow"">http://en.wikipedia.org/wiki/Michael_Connell</a><p><a href=""http://www.wkyc.com/news/local/news_article.aspx?storyid=103520"" rel=""nofollow"">http://www.wkyc.com/news/local/news_article.aspx?storyid=103...</a>",1232619770
444605,comment,443650,443764,0,0,seertaak,,,"> In short, you can't debate with non-scientists in the sense you mean.<p>Yep, that's the conclusion I'm led to. In this case, it wasn't possible however: straight off the bat, for example, he declared that he's left-wing. I happen to be a republican from the libertarian wing of the party (we seem to be a dying breed of late), although I'm quite moderate. So the potential for consensus was small. The argument kicked off when he said ""thank god Obama is going to get in power because he'll redress the excess of hardcore conservatives"" -- which is a bit of a howler, and I took him to task for it. Now granted, I didn't back down, but nor did he! I don't see why <i>I</i> should be blamed for being rude simply for being better-informed. In fact, and my friend agreed with me on this point, at least <i>I</i> didn't engage in any underhanded debating techniques that I list elsewhere on this thread.",1232619608
444603,comment,444555,444555,0,0,PoweredByWill,,,"This is the First-person-shooter-era response to how one chooses to deal with Life's difficulties.<p>It begs the question on where one aims the cannon though...",1232619570
444602,comment,443727,443931,0,0,eru,,,"And in Forth:
  : square dup * ;",1232619461
444601,comment,443955,443955,0,0,popschedule,,,"Break your projects up into milestones<p>for example:<p>Milestone One (Prototype, wireframe, database development (if it's dynamic, or just design) then make them pay up front before you start this.<p>Milestone Two (Slicing and Integration, programming, etc) break that up into another payment.<p>and usually I make a final milestone for launch like:<p>Milestone Three (Testing, debugging, content integration, etc) and have them pay you before you launch the website on their server.<p>Some clients request contracts, use docstoc.com to find ""standard web contract"" or have a lawyer. As you get better at giving new customers a sense of trust you don't really have to bother, if they don't bring it up.",1232619424
444600,comment,444338,444483,0,0,ichverstehe,,,"This is practically unreadable on my Nokia 3200.",1232619421
444599,comment,444461,444461,0,0,Jem,,,"I think it's the passion for what they do that differentiates a ""rock star"" from someone who just does it for the pay. You can have passion without being holed up in your bedroom programming 24/7.",1232619234
444598,comment,443650,443679,0,0,seertaak,,,"That's assuming that your friends' behaviour is rational. For example, during the debate, while I certainly held my ground confidently, I didn't raise my voice, swear, engage in ad-hominem, belittle my opponent, or anything else that I would consider rude. What I <i>did</i> do is counter every statement he made that I considered false, which was quite a few statements. Clearly this riled him. But is it me who is to blame, or is it him for getting emotional about the fact that he is in the wrong?<p>I have been a great many arguments where I have found, eventually, that I am wrong. I can't provide any evidence, obviously, but I can assure you that I am gracious in defeat. I simply say: ""oh, that's interesting."" Or ""huh, I didn't know that, maybe I'll have to think about it again"". But again, I think that comes from a) being quite confident that I'm not stupid, so that I don't have anything to prove to anyone, and b) being a scientist and thus having had these types of arguments with, shall we say, the creme-de-la-creme of smart-ass debaters ;)",1232619225
444597,comment,443948,444476,0,0,hassy,,,"you answered your own question there. the community isn't bothered about the popular image of PLT Scheme as merely a Lisp for teaching. (whether they should be bothered or not is a whole different question, but choosing not to care ensures that PLT Scheme won't be a mainstream Lisp.)",1232619213
444596,comment,444461,444540,0,0,ardit33,,,"absolutely not.  The rockstars I know  (3 on my life), do really produce a lot of code, and get done things quickly (and two of them had to leave early from work, as they family and children to take care off, yet they could produce almost twice the amount of quality code from other people  and that's why they are so impressive.<p>There are people that are all talk, and no game,  but then they are people that can really produce code faster than you can think about a feature. 
Also, some of these people are able to do things that are too complex for any average programmer to even grasp.  Things like implementing a very efficient interpreter, parser for a dynamic language, it top of something else, is only domain of people that really know their stuff.
Sure, I worked on a interpreter, for a fictional language in CS class in college, but doing it for a production level language, is a totally different ballgame.<p>As I said, management might be impressed by people that know how to talk, but a good programmer will only be impressed by people that really can code and get done things better then them.<p>The only way to recognize one, is to work with one.",1232619073
444595,comment,443774,443774,0,0,pclark,,,"You know, I've love a service where I can ask hackers how to do <i>stuff</i>.<p>Like Yahoo Answers, but hacker answers.",1232619022
444594,comment,443948,444308,0,0,gruseom,,,"<i>It's going to make your developers a lot happier</i><p>That's pretty amusing, given that Clojure is a Lisp and we all know how unfriendly and unpopular and weird Lisp is. (You could look it up in that post you quite agree with.)<p><i>they still don't have a good story for GUIs, sockets, and a clean-up language</i><p>This reminds me of Gilbert Ryle's old line, ""She came in a flood of tears and a sedan chair."" What do these things have in common? And what on earth is a ""clean-up language""?<p><i>most CTO's will have a single question that's foremost in their minds [...] why is any of that going to change if OurCorp starts using it?</i><p>It just doesn't matter. Lisp (including CL) is what it is, an amazing tool for those who want to take the time to learn it and a competitive advantage for those who figure out how to leverage it on a problem. It probably isn't going to become popular, and it certainly isn't going to go away. The ignorance of CTOs isn't going to affect it much either way.",1232618980
444593,comment,443727,444518,0,0,eru,,,"At least not a pixel picture.",1232618910
444592,comment,443650,443747,0,0,seertaak,,,"That's funny, the example you gave sort of happened during the argument. I would painstakingly establish A. Then I would do something like A => B. Then I would remind my opponent that we'd established A, whence B followed. At that point, the opponent would deny that he'd agreed on A, and we're back to square on... very frustrating!",1232618893
444591,comment,444573,444573,0,0,pclark,,,"I think she'll be really good at this.",1232618725
444590,comment,443650,443655,0,0,seertaak,,,"In this case it wasn't; the discussion was about legal activism and judicial review. I've read several books on the subject, some essays, and several transcripts of supreme court cases, just because I find the subject interesting. On a more basic level, I can name the supreme court justices -- so in terms of factual knowledge, I'm quite confident I was on solid ground.<p>My debating partner, however, didn't really have any facts at hand, but instead had strong opinions and essentially parroted oft-repeated truisms, like ""the supreme court is full of ultra conservatives"", a claim that certainly begs some evidence.<p>During the argument, I made a persistent effort to back up any claims I made with examples or evidence. When my opponent said things that I thought were false, I would wait for him to finish, and tell him: ""I think you're wrong because of XYZ"". The first few times, it was ok, but as the argument progressed, he just got annoyed and would become irrational. For example, he would:
- say he hadn't said something which he patently had said just two minutes before. In other words, a po-faced lie.
- he would ask for evidence when I made a claim, and when I then provided evidence, he would say he knew it and didn't want to be bored with details, without acknowledging that it was a datapoint in favour of my position;
- he would claim I was ""oversimplifying"", and when I would ask him how, he would refuse to tell me, saying ""oh it doesn't matter"".<p>I personally really enjoy vigorous debate, and I'm quite happy to be proven wrong. Really. For two reasons:
- I learn something, and learning something is cool;
- I'm better prepared for the next argument!
And I think to certain extent, scientists are more at ease with the idea of being proven wrong. I think we realize that it doesn't mean you're stupid; far from, you're just entertaining a theory, and if the evidence contradicts it you have no particular emotional attachment to it. Whereas I've found non-scientists to be less accustomed to having their theory shot down, and as a result they become more defensive (and hence irrational), which leads them to use what I would regard as quite underhanded and dishonourable debating tactics, a la ""38 Ways To Win An Argument"".",1232618719
444589,comment,444100,444171,0,0,trapper,,,"It really does sound like he doesn't want to learn new things.<p>""I've never figured out how to get Visual Studio or Eclipse to produce a compact list of all the places where a particular string occurs throughout a program.""?<p>Come on. [in eclipse/variants] CTRL-H? Search menu for the blind?<p>The rest of the points are pretty general: Utility, availability, generality. This covers most good IDE's if you ask me.<p>What's needed is a study rather than an opinion. Compare two or more groups, experts in either emacs/vi + shell vs eclipse/visual studio and one common language. Look at the speed of completing basic tasks common to programming.<p>I would hypothesize that while differences amongst groups exist, no differences between means would be larger than a cohen effect size of 0.5",1232618600
444588,comment,443128,444190,0,0,olavk,,,"It's not really a case of TABLE-elements versus DIV-element. It's a case of semantic markup or not. If something is semantically a table (i.e. data which is not just liniear but structured along two axes) then use  table-markup.<p>A good rule of thumb is to decide if a structure is semantically a table, is to consider if it would make sense with headers (TH-elements) in the first row and the first column.<p>If something is <i>not</i> semantically a table - e.g. you have a linear list of items - then you don't use <i>either</i> DIV's or TABLE's, but rather the appropriate markup which is UL og LI elements. DIVs are semantically neutral, so you shouldn't really need them often. Mostly they are used precisely to overcome limitations in the CSS implementations in current browsers. DIVs are useful though when there is some structure which dosn't have an appropriate element defined in HTML, eg. there is no ""footnote"" or ""header""-elements in HTML, so you use DIV to mark these elements.<p>With proper semantic markup you can use CSS to control if your list of items should be displayed as a bulleted list (display:list-item) or as cells in a grid (display:table-cell) or whatever - without changing the markup. This is a pretty nice seperation. Again, it doesn't give you any new layout power but it allows you to structure your code in a more maintainable way and produce better markup.<p>Regarding screenreaders the issue has nothing to do with degrading. The issue is that a screenreader which understands table semantics may allow the reader to navigate in two dimensions, explain the headers in both dimensions associated with a cell and so on. But if table markup is used both for 2D data sets <i>and</i> for all kinds of layout purposes like positioning an image or whatever, then this feature becomes useless or at least annoyning.",1232618495
444587,story,,,1,0,nreece,"Researchers develop new ink for bendy screens",http://www.theage.com.au/news/home/technology/researchers-develop-new-ink-for-bendy-screens/2009/01/22/1232471475432.html,,1232618492
444586,story,,,5,5,nreece,"Here comes Britannica 2.0",http://www.theage.com.au/news/technology/biztech/here-comes-britannica-20/2009/01/22/1232471469973.html,,1232618485
444585,comment,444100,444535,0,0,gaius,,,"The re in grep <i>means</i> ""regular expression"".",1232618453
