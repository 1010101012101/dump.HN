ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
14970,comment,10748,13301,0,0,ryantmulligan,,,"Got it from Slashdot.com",1177048538
14969,story,,,1,0,knectar,"A new rss-based content aggregator",http://www.feedmashr.com,,1177048532
14968,comment,14947,14947,0,0,ryantmulligan,,,"I agree, I've learned at least 1 tip a week that has helped me get better at doing things in my life.",1177048452
14967,comment,14957,14959,0,0,rms,,,"I think the features request thread is overwhelming at this point. There's just too much there for new information to rise to the top.",1177048416
14966,comment,14605,14605,0,0,cratuki,,,"Allegro-cache looks interesting although I haven't tried it:\n<a href=""http://franz.com/products/allegrocache/index.lhtml"">http://franz.com/products/allegrocache/index.lhtml</a>\nI like the idea of having a powerful datastore within the same process as the application because you don't have the IPC overhead. Although, if you're using prolog you're probably going to be less likely to want to do complex things in memory as you sometimes are with SQL.<p>Some considerations that come to mind:\n1) Relational databases bring a form of 'automatic' documentation to a project in that somebody who hasn't touched it before can expect to make a reasonable start on understanding it by using known tools to look at the schema.\n2) You get powerful hot-patching tools with a relational database (sqlplus, psql, or similar) that have the safety of things like foreign key constraints.\n3) Major version upgrades. As you're developing you can track db changes by writing change scripts. Then when you do your upgrade you can 'pull the lever'. There's nothing stopping you from doing this with any other structure, it's just something to think about.\n",1177048374
14965,comment,14253,14933,0,0,rms,,,"Because I count two things, and two more things and see that there are four objects. I can observe with my own eyes that mathematics works. You can't ever see God, you have to take on faith that a book written almost 2000 years ago is absolute fact.<p>So why do you believe in the god of the Christians to the exclusion of all the other gods?",1177048343
14964,comment,14605,14943,0,0,anupamkapoor,,,"may you please explain why BDB sucks ? thanks !",1177048215
14963,comment,14807,14807,0,0,madanella,,,"From my experience, share grants, vesting and equity sharing are some of the hardest parts of the incorporation process and decision making. It's good to get as much thinking around them as possible because they are CRITICAL. ",1177047956
14962,comment,14852,14852,0,0,gyro_robo,,,"4 comments and 2 points?  C'mon, people, don't forget to vote up the <i>article</i> so other people see it.  The top comment has 5 points, which is what the article should have, if it's worth commenting on!",1177047904
14961,comment,14541,14881,0,0,johnm,,,"That's why these kinds of discussions are difficult. Not just the usual ""it depends"" but multiple levels of ""it depends"". As you say, if you're job mix is keeping a pipe saturated then raw latency is probably not your critical problem.  Though, of course, if, for example, you have one pipe for bulk transfer and one for control/meta-data.... :-)<p>The comment about handling data locally was trying to get to the issue of how much data needs to be going back and for across the cluster rather than just living on the individual nodes.  For example, we crawl millions of sites so there's an initial lump of intake data to each of the crawlers. On each crawler, that lump of data will get processed, redacted, expanded, and what not and only the resulting indexes and segments are ever transfered off the crawlers.",1177047145
14960,comment,14852,14852,0,0,gyro_robo,,,"A great question.  I was watching a Charlie Rose interview with Peter Jackson from after\nROTK came out, before he won the various Oscars for it.  He said his big motivating factor\nwas fear -- fear that he'd wasted hundreds of millions of other people's money producing\nthe most dreadful movie(s) ever made.<p>Being a big fan of the LOTR books myself, and feeling that the films' screenplays and\ndirection were both utter schlock, it occurred to me that this particular motivation may\nnot be conducive to doing your best work!  I was a fan of his previous films, which seemed\nto be done for the love of it.<p>We all try to gain pleasure and avoid pain.  Most of us will work harder to avoid pain,\nthough, making it probably the more powerful motivator.  However, letting it take too large\nof a role in your life means your quality of life is negatively affected because of living\nin constant fear.  It becomes a habit, which helpfully probably keeps you alive, but it\ndoes this by making you extremely risk-averse which also precludes future success!  You may\nnot want to do anything new.<p>One example of how letting pain-aversion become dominant affects you is that you may become\nextremely lazy.  Let's say you've already got enough money that you don't have to do\nanything.  Well, work requires effort, and effort requires energy expenditure, and that may\ninvolve some pain!<p>Of course previously you may have been excited to do the same kind of work, when doing it\nwas about gaining pleasure.  We tend to behave according to habits, and I would suggest\nit's not good to let yourself accidentally become habituated to using fear as a\nmotivating factor, because it will creep into all facets of your life.<p>So, very recently, I have consciously been trying to not react with fear and panic in\nsituations where I normally would.  There are so many situations that are really no big\ndeal, except for the mental model we use which we have trained ourselves to freak out over.<p>I'm getting to think that the majority of our large-scale behavior is due to unconscious\ndecisions, and that we decide very little of importance consciously.  So, in order to\neffect change, we may need to train and condition our unconscious via emotional responses.\nAlmost like Pavlov-dogging yourself, do multiple things you already <i>like</i> in conjunction\nwith some other behavior and you reinforce it: E.g. playing music and drinking Coke while\nhanging out with friends at the same time you're coding will reinforce your love of coding.\nConstantly think of negatives while coding and pretty soon you won't want to code on that\nproject anymore, and maybe at all for a while!<p>I know this sounds cheap and gimmicky but I think it's very likely to be the case that our\nstrings are pulled by our unconscious.  See the\nPrecognitive Carousel: <a href=""http://everything2.com/index.pl?node_id=1422464"">http://everything2.com/index.pl?node_id=1422464</a><p>Also see this book on NLP (some of the formatting seems off from OCRing):\n<a href=""http://www.scribd.com/doc/1984/Neuro-Linguistic-Programming-Using-Your-Brain-for-a-Change-Richard-Bandler-NLP"">http://www.scribd.com/doc/1984/Neuro-Linguistic-Programming-Using-Your-Brain-for-a-Change-Richard-Bandler-NLP</a><p>If you don't have a plan for your unconscious/subconscious drives, you can bet others do --\nadvertisers, religious and political leaders, and random authority figures will try to use\npain (mostly) and pleasure to get you to feel like behaving the way they want you to.<p>I'm aghast when I realize how much of my childhood was actually a job as a field sales\nrepresentative for Mattel.  They recruited me via television cartoons (ads) to direct my\nparents' income to their revenue stream, in exchange for various ""goods"" now seen only on\nRobot Chicken.<p>(World of Warcraft is the new Mattel, and they are Skinner-boxing away years of people's\nlives.)<p>By the same token, when you as a founder are rich enough to never have to work again to\nmaintain your previous standard of living, you'll find all sorts of expensive toys pushed\non you, playing on the same ingrained habits from your childhood.  You've been trained to\nbe fearful so that someone can sell you a temporary band-aid.  (There are evolutionary\nreasons why it's easier to push people toward fearfulness and pessimism -- ice age\nconditions were harsh!  The constant worriers didn't have much fun, but they stayed alive.\nWe're the descendants of people who got up and checked that the cave door was locked 57\ntimes a night so sabretooth tigers didn't eat them.)<p>TV advertising now has two main themes: 1. ""Look at these hot chicks -- now buy our\nproduct!""  And 2. ""You're not buying our product?  No wonder hot chicks don't want you,\nfatass.""  Survival is a given in our society so the next most monumental drive is\nreproduction.  Watch how many people who want money from you try to play on this.  Don't be\nmanipulated into fearfulness and insecurity.<p>If you're still young, try to be aware of when something is having an effect on how you\n<i>feel</i> about something.  If you can see how your feelings are <i>starting</i> to change on\nsomething, you may be able to counteract it before a pattern sets in.  If you're older, you\nprobably have to un-do a lot of stuff that's conditioned you without you even realizing it.\n",1177047082
14959,comment,14957,14957,0,0,jward,,,"The way to do this is to go to the feature request thread and put in your point.  People will vote it up there if they like it.  This keeps the rest of YC news clear of feature requests and focuses more on start up stuff.<p><a href=""http://news.ycombinator.com/comments?id=363"">http://news.ycombinator.com/comments?id=363</a>",1177046093
14958,comment,14421,14828,0,0,mdakin,,,"A non-SQL solution surely can work well and be a fine solution to some problems.  Especially problems that are very well understood (like problems at the optimization stage of the project).  <p>But can a minimal non-SQL solution provide the basic features that people want and expect from a persistent storage layer: transactions, allowing multiple process concurrent access to the data, relatively foolproof failure recovery procedures, etc?  <p>A decent RDBMS gives you those features out of the box in addition to allowing you great data manipulation flexibility.  It is this sweet spot of data manipulation flexibility and fault tolerance that makes SQL/RDBMS such a ubiquitous tool.<p>I suspect code you're ""skipping"" is the code that would give you those extra features that help with reliability and fault tolerance.  <p>While it is possible to implement those features without using the RDBMS-crutch it takes real code and real engineering effort to do it.  If you are writing ""way less code"" you are likely not providing replacement features.",1177045953
14957,story,,,54,24,mhidalgo,"Vote up if you would like news.Ycomb add a feature where users can save their favorite stories",,,1177045926
14956,comment,14947,14948,0,0,whacked_new,,,"You should add yourself to the thank you list :)",1177045622
14955,comment,14605,14732,0,0,mfhughes,,,"Here's an actual example, instead of all this pontificating.  It's not that impressive but it illustrates the point.<p>I had to write an external ""chat history"" module (i.e., always send the last N lines of a conversation to a client as soon as client joins) for an IRC server, in python.  (it's a long story)<p>Your standard RDBMS solution would probably involve the ircd logging directly or indirectly to a database, with a python script handling requests and doing selects out of that db.  On a network with thousands of users, this will load a db machine down with IO operations.  This also has to happen quickly, so that new text is added to the history log in near real-time.  Batching is probably out of the question.<p>My solution was to have the ircd pass off its strings to another program (in this case, I used python) via a named pipe (this could also have been done via a socket, to aggregate multiple servers or do other neat tricks), and then have the logger app load these into memory - in this case, a giant python dictionary keyed on channel name which pointed to a constantly-updated ring buffer class for each channel.  This ring buffer held the last N lines of conversation.<p>Writes were simple - h[c].write('text')<p>Lookups were simple - h[c].get()<p>Fast writes, fast reads, and disk i/o was batched for efficient logging to disk, at which point you deal with the data in batches and maybe store it into a db if you want to do something more advanced like with SQL.<p>Of course this could all be done with C within the ircd itself as well, using a hash table and ring buffers as well.<p>It was actually much faster (and logically simpler) than writing a DB solution, and I'm certainly no master hacker.",1177045493
14954,comment,14541,14883,0,0,johnm,,,":-)<p>If you're doing Java, Azul Systems does 192 cores in 5U.",1177045451
