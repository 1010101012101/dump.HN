ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
109157,comment,108861,109149,0,0,DanielBMarkham,,,"Oddly enough, there's something a little bit BS-like (EDIT: 1960s-ish) about PG's definition of ""powerful"". (I know Paul, you hate having to explain everything little thing you say, but bear with me here)<p>The word ""powerful"" is such a generic it doesn't work here. I guess the simplest way to explain is to look at what I think Paul is saying: as our languages evolve, it takes less ""stuff"" to tell the computer what we want it to do.<p>The problem here is that the amount of ""stuff"" required is as much a user interface problem as it is a syntactical one. Surely neural interfaces can render most coding obsolete eventually. Perhaps well inside our 100-year timeframe. So what, then, is meant by powerful? Is it our conversation with the computer we are trying to maximize, or our conversations with each other? In other words, am I trying to get to the quickest magic to get from my thoughts to code, or am I trying to get to the quickest magic from my team to a solution that we all understand? In the second scenario, the  ""power"" of a programming language is more about how well it can help the team discover, implement, and maintain solutions that have value. Not about the directness of my personal thought-to-code.<p>I think this second definition of ""powerful"" holds up better in the real world. My opinion only, though. I don't have a bunch of essays or a cool venture fund, so take it for what it's worth. I hate to be Mr. Definition Guy, but it's tough to have conversations like this without understanding what the heck we are talking about.",1202144365
109156,comment,109155,109155,0,0,iamwil,,,"Hi all, I've been working on my startup, Mobtropolis.  It's a service that helps you find, record, and share interesting experiences in the local world around you.  An easy way to think of it is as a photo scavenger hunt or photo dare site.<p>It uses social news and game mechanics to help coax you to experience the world and take pictures as proof.  Photos can be submitted through your camera phone or through the web from your digital camera.<p>It's at a point where I would like some feedback from YCers, so any feedback or insight (positive or negative) is welcome, so I can keep improving it.  And if you know of other specific groups of people that would find it useful or fun, please let me know.  Thanks. :)",1202144353
109155,story,,,20,35,iamwil,"Ask YC: Need feedback on my startup",http://www.mobtropolis.com,,1202144336
109154,comment,109120,109132,0,0,inklesspen,,,"It doesn't index the XML because it also doesn't provide any comparison methods for XML. Largely because string comparisons on XML tend to be less than useful, I think.",1202143925
109153,story,,,1,0,jmorin007,"Why I'm excited about the Google Social Graph API",http://bokardo.com/archives/why-im-excited-about-the-google-social-graph-api/,,1202143867
109152,story,,,2,0,jmorin007,"Lesson from Super Bowl XLII : ""4 Pts down is better than 3...""",http://foundread.com/2008/02/04/lesson-from-super-bowl-xlii-4-pts-down-is-better-than-3/,,1202143821
109151,story,,,1,0,engtech,"Social Networking Slowing Down in the U.S.",http://creativecapital.wordpress.com/2008/01/29/its-official-us-social-networking-sites-see-slow-down/,,1202143789
109150,story,,,1,2,screamingdigg,"Sun SPOT Overview",http://developerlife.com/theblog/?p=332,,1202143629
109149,comment,108861,109116,0,0,nostrademons,,,"I think that the actual basis for ""less code = more powerful"" is psychological.  You are less likely to want to write a feature if it requires putting up lots of boilerplate code.  People tend to do what they want to do (discipline is highly overrated ;-)).  So in a language that requires lots of boilerplate, you end up writing fewer features, even beyond the cost of typing (which is negligible for good typists).<p>Of course, there are other psychological factors at work.  You are less likely to work on a project where you have to keep lots of unknowns in your head at once, and adjust them all simultaneously.  (I suspect this is why Arc took 6 years to write.)  You are not likely at all to work on a project where you can't understand the required language features, or can't figure out the existing code base.  And it's no fun working on a project where every time you fix something, something else breaks.<p>The ""ideal language"", for me, would be the one that minimizes the sum of all these factors.  IMHO, Java goes too far with the boilerplate, eliminating the gains it makes in not having to keep much of anything in your head.  Arc makes for inscrutable code bases and requires that you keep the definitions of any macros you're using in your head.  Complex JavaScript tends to break when you make small changes.  Python hits the sweet spot for me, with liberal helpings of doctest and docstrings.",1202143525
109148,comment,108794,109117,0,0,wallflower,,,"I know some pharmaceutical reps - they say without irony - that they <i>push</i> (in the drug dealer sense) whatever drug their company wants them to.<p>America is the one of the only countries that allows pharmaceutical companies to advertise directly to consumers. <a href=""http://tinyurl.com/27y5df"" rel=""nofollow"">http://tinyurl.com/27y5df</a>",1202143419
109147,comment,108794,109033,0,0,scw,,,"The NSF isn't the primary fund granting organization for medical research, the NIH is -- with a funding level (28.7B) that eclipses the NSF (5.9B).  In 2003, NIH is estimated to have funded 28% of the overall medical investigation costs:
<a href=""http://www.medpagetoday.com/PublicHealthPolicy/HealthPolicy/tb/1767"" rel=""nofollow"">http://www.medpagetoday.com/PublicHealthPolicy/HealthPolicy/...</a><p>Pharmaceutical research in all likelyhood includes the cost of bringing drugs to market, currently around $800M per drug. Because of this high barrier, much of the Pharma energy goes into 'me too' drugs of a higher risk/reward ratio, again inflating the true spending on new research:
<a href=""http://freakonomics.blogs.nytimes.com/2008/01/24/what-dont-we-know-about-the-pharmaceutical-industry-a-freakonomics-quorum/"" rel=""nofollow"">http://freakonomics.blogs.nytimes.com/2008/01/24/what-dont-w...</a>",1202143209
109146,comment,109120,109120,0,0,aantix,,,"While I have enjoyed Postgres's reliability, the clients (for OSX) have left me feeling empty.<p>A majority of the time I just want to see the tables.  When using pgAdmin3, I am forced to expand Servers->Local Server->Databases-><the desired database>->Schema->Public->Tables<p>And then when I finally get to the table I want, if I double click it, it brings up the properties for the table?  Huh?<p>So I figure out I must click the table icon on the toolbar to bring up the table.  Instead of bringing up the data within the same pane, it pops up a second window? Grrr....<p>While the tool gets the job done, I'm starting to miss MySQL just for the sake of having CocoaMySQL at my side.",1202142953
109145,comment,108995,108995,0,0,yters,,,"No one's seen the disappearing square trick in math class?",1202142614
109144,comment,108433,109097,0,0,pchristensen,,,"I'm also curious.",1202142377
109143,comment,108723,108723,0,0,Kaizyn,,,"There's an author Morris Kline who wrote a number of fairly useful books on mathematics.  Particularly worth mentioning are Mathematics for the Nonmathematician and Calculus: An Intuitive and Physical Approach.  The former traces through the history of mathematics and places each of the math discoveries in their proper context.  The latter covers most of the topics covered in the first couple calculus classes.  What makes Kline's approach valuable is how he grounds the abstract math topics in practical examples and in ways making them more accessible than your typical textbooks.",1202142321
109142,comment,108475,108475,0,0,stcredzero,,,"If programming languages are for making programming easier, then it's clearly a mistake to use just one language to write programs.  Different languages are optimal for different areas of concern.  Rob Pike spent 6 months writing a language optimized for concurrency, then wrote an entire windowing system in just 300 lines.  If a programming language is a tool, then people have been advocating doing everything with a hammer.  What if we had a way of combining many different languages, so that each area of concern could be written in the language which is optimal for it?  I think one of the strengths of Lisp, is that it's its own abstract syntax tree.  In some ways it's more like a substrate for implementing other languages than a conventional computer language.  What if we had a substrate that let us use multiple languages together?<p>Google Tech Talk on Newsqueak & High level abstractions for concurrency:<p><a href=""http://video.google.com/videoplay?docid=810232012617965344&q=newsqueak&total=2&start=0&num=10&so=0&type=search&plindex=0"" rel=""nofollow"">http://video.google.com/videoplay?docid=810232012617965344&#...</a>",1202141979
109141,comment,109120,109120,0,0,sanj,,,"I've always been a fan of PostgreSQL.  The one bit that appealed to me was its erstwhile ability to 'shard', or partition data across tables.<p><a href=""http://enfranchisedmind.com/blog/2006/11/04/postgres-for-the-win/"" rel=""nofollow"">http://enfranchisedmind.com/blog/2006/11/04/postgres-for-the...</a><p>Any comments?",1202140855
109140,comment,108730,109127,0,0,Tichy,,,"I don't know, was Hotmail a billion dollar company with thousands of employees and thousands of servers? If not, maybe there is no point in drawing analogies.<p>I don't think MS wants to buy Yahoo for an opportunity to convert another server farm to Windows. Maybe they will convert, maybe they won't, but that is not really the most interesting aspect of the whole thing. Does it really make that much of a difference, anyway? The actual web servers and databases are available for both Linux and Unix, so application developers should not feel a difference. The rest is for the system admins to figure out.<p>Personally, I expect MS to switch to Linux eventually (might be a couple of years still). They did good research in User Interface design, which could come in handy for designing a fancy Gnome skin. With falling hardware prices, it seems difficult to sell Operating Systems in the future.",1202140832
