ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
126614,comment,126409,126409,0,0,Tichy,,,"""Every single element in a relation (aka table) has to be 
exactly the same type- no superclasses, no variant types.""<p>Hibernate offers several ways to deal with subclassing. It is also not just dumping objects in the database, like the person in the discussion does, it is mapping the objects to database tables.<p>True, there may be things databases are not good at (recursion), but overall, in my experience the mapping from objects to database works really well and feels quite natural.",1204361717
126613,comment,126502,126583,0,0,ivankirigin,,,"Who is to say what people need? You? What 48% of people think? Or what the majority of elected representatives in states I don't live in think?",1204361438
126612,story,,,4,1,emmett,"The Next Tinyurl",http://blog.emmettshear.com/post/2008/03/01/The-next-tinyurl,,1204361089
126611,comment,126360,126591,0,0,tokipin,,,"yep.  when i used mice i only used a particular microsoft model<p>if you do decide to try the unshifted symbol layout, be careful with desires to modify it.  for example, in standard layouts the ( and ) keys are together, so when typing a function call it's sort of a habit to hit shift and quickly tap them:<p>fncall()<p>it's nice and quick to type, so when looking at the programmer dvorak layout you might be tempted to rearrange them just a little bit so that you can keep doing that.  the issue is that the goal of dvorak is comfort over a statistical amount of typing, and by making a modification like that you may be sacrificing overall comfort for a tiny burst potential<p>i mention this because i've seen people make changes like that.  the layout is very well-designed.  caps lock for example shifts the numbers so it's easier to type long numbers, and it also locks the - into a _, which is desirable when typing constants (MY_CONSTANT)<p>i actually don't use the layout file on that page because it seems to be designed for (human) languages with many characters, so it has some dead keys and was making some keys such as ` hard to type.  i just redid the layout with MS Keyboard Layout Creator <a href=""http://www.microsoft.com/downloads/details.aspx?FamilyId=8BE579AA-780D-4253-9E0A-E17E51DB2223"" rel=""nofollow"">http://www.microsoft.com/downloads/details.aspx?FamilyId=8BE...</a>",1204361001
126610,comment,126540,126570,0,0,asdflkj,,,"This is a matter of culture, not race. Is culturism bad these days?",1204360369
126609,comment,122701,124182,0,0,marketer,,,"I use F# at work. Guess what? My code is basically C#, with a thin F# layer. Ocaml doesn't give you the luxury of the .NET framework, which can be seen as a blessing in disguise, because your code tends to be much more functional. The libraries make a huge part of the flow in a 'real' program. To some extent, it's good that scala tries to wrap the conventional standard libraries, to make the flow seem more scala-like.",1204359983
126608,story,,,34,28,mqt,"What Makes Finnish Kids So Smart?",http://online.wsj.com/public/article/SB120425355065601997-7Bp8YFw7Yy1n9bdKtVyP7KBAcJA_20080330.html,,1204359432
126607,comment,126360,126561,0,0,tokipin,,,"when i used two monitors (my expensive graphics card died T_T) i kept absolute positioning, which is one of the things i like about tablets.  you don't need to know where the cursor is, you just move the pen where you want the cursor to be and it's there, so it's more direct than a mouse.  it also feels more 'connective' in general.  when using scrollbars for example it feels like you're ""grabbing"" them rather than just interacting with them.  or at least it does to me<p>with the wacom software you can map multiple monitors to different sections of the tablet, so i mapped a large portion of the tablet to my work monitor and a smaller portion to the second.  something like:<p><pre><code>   _______________
  |               |
  |               |
  |               |  <-- monitor 1
  |               |
  |_______________|______
                  |      |  <-- monitor 2
                  |______|
</code></pre>
actually i don't remember if i used the wacom software to map or if it was something in the desktop settings.  in any case it's possible.  and of course, relative positioning works fine as well<p>i'm sure everyone is intimately familiar with the wrist pain  from mice usage.  it doesn't happen with pens because your wrists aren't contorted like they are with mice.  pens are  more flexible since the only thing that matters is where the point is, not where the whole unit is.  the hand/arm/wrist posture when using a pen is more natural than the posture you have to assume when using a mouse (notice you have to actually twist your arm thingie to use a mouse)",1204359317
126606,comment,122701,124166,0,0,marketer,,,"That's cool that you're a committer, I think scala/lift are very promising, and look forward to using them in the future.<p>If everything is working well, maven can be a huge productivity boost. I'm sure the decision to use maven was to make the learning curve smaller. But I get an uneasy feeling when maven is being used for every aspect of the project, including creating it, compiling it, running it, updating the libraries, deploying it, importing to eclipse, etc...<p>The best way to use maven is to set up a stable local repository, and be _careful_ when you update them. Archtypes can be upgraded server-side on the fly, and this can cause problems if you're not careful about versioning.<p>By default, however, people won't set up local copies of maven repositories. And despite the best intentions of liftweb.org, and ibiblio.org, neither organization has a vested interest in your project, and they suffer from downtime frequently. liftweb was down for over a day at one point. You couldn't create a blank project template, or update the dependencies. It's a risky dependency.",1204359071
126604,comment,126409,126419,0,0,bdfh42,,,"Without getting down into the details of any one such case - my inclination would always be to go with the solution that could run on ""less powerful hardware"". That sort of efficiency has a way of proving to be just that - efficient.<p>Efficient always trumps cool - unless you come from the developer generation where efficient is the only cool.",1204358437
