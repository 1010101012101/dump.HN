ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
2549744,comment,2548480,2549590,1,0,dzorz,,,"Wow, that is amazing. I honestly never tried that and assumed (because of short circuiting) that it can't be overloaded.",1305457164
2549743,comment,2548410,2549040,2,0,Peaker,,,"> Haskell is not actually a completely 'safe' language; it still has exceptions that can cause a program to ""go wrong"" and terminate unexpectedly. You can write 'fast' code with it, but it isn't as fast as what I could write in a lower-level language.<p>I never meant to imply Haskell was a ""completely safe"" language. That is an impossibility, even totality does not imply complete safety.  My zip example is actually a point against Haskell (as length-indexed lists are not yet actually in use in the Haskell eco-system).<p>Haskell can encode low-level programs that are almost C-level, and in that (ugly) style can probably reach the performance you can with lower-level languages (excluding hand-optimized assembly, perhaps).<p>> As the data structures get further away from algebraic data types, the type hackery gets more and more involved. If you start working with arbitrary mutable data structures that arise in practice, the type hackery becomes a topic for a PhD thesis rather than something usable in practical programming today.<p>Mutable data structures do not have to ""arise in practice"". You can have pure semantics with mutable performance (e.g: Clean's uniqueness types, or Haskell's ST).<p>Lots of people's PhD thesis are in actual use in practical programming today. A PhD thesis often discovers a technique and makes it accessible for real world programs today.<p>> I don't know of any compiler that actually does a reasonable job converting uses of data structures like lists and association lists into arrays and hash tables in general. I think this falls into the territory of the ""sufficiently smart compiler"" fallacy.<p>Converting these is <i>not</i> a good idea because you would change the complexities of the code (which is, IMO, the heart of the fallacy). A prepend of an a-list or a list is O(1), but to a list or hash table, it is (in the worst-case) worse.<p>But what Haskell's primary compiler, GHC, does do, is fuse together list processing such that lists can disappear altogether into efficient loops.<p>As for arrays and hash tables, these are not amenable to efficient ""pure"" modification (unless you use uniqueness types as in Clean), but they have reasonable alternatives that are pure and persistent:  Sequence allows O(logN) indexing, O(1) amortized (O(logN) worst-case) prepend/append.  Tries and search trees allow for quick lookups and quick pure modification.  These are easy to reason about.<p>> Also, making data contiguous is just the simplest of a common set of data representation optimizations.<p>This conflicts with O(1) prepend. If you want contiguous allocation, you can use different data structures.<p>> Does any compiler automatically convert a list into an intrusive doubly linked list or eliminate the use of a visited stack for DFS by stealing a bit from vertices or reversing pointers?<p>If you need to remove/insert items in the middle of a list, you would probably not use a linked list. So a doubly linked is not a good optimization to apply automatically.<p>If your point is that code with simpler mathematical semantics that is easy to reason about might cause a constant hit on performance in some cases -- then I agree. You cannot <i>always</i> have simplicity, verifiability, and speed.  But often you can.<p>Also note that purity affords many optimizations that are unavailable in non-pure languages (e.g: rewrite rules like: map f . map g --> map (f . g)).",1305457145
2549741,comment,2549195,2549195,1,0,shareme,,,"Like the article stated, the Judge could decide to wait 3 years until the patents under question are re-examined.",1305457005
2549740,comment,2549258,2549534,2,0,pstack,,,"Being a free service isn't exactly a reasonable justification for ""you get what you get"", though. You can pay for PSN+, but either way, it's still using the same network service and it's the only option. It's not like there's a pay-for option that you can say ""well, if you care about uptime, you should have subscribed to the pay-for PSN service"". Additionally, it's the service that is essentially part of and supplemental to the entire PS3 purchase. It's great that it's free, in that you're not losing anything with the downtime, but it's not even remotely the same thing as providing some sort of a free/beta community service website that goes down and being able to say ""hey, it's a free website, what do you want from us?"".<p>That said, I've been eager for PSN to get back so I can register my PS3 copy of Portal 2 to use on the PC and so that I could play Killzone. It's amusing that the only two titles I will probably buy on that platform in the entire year came out near the same time and were hindered by the outage.",1305456879
2549739,comment,2548410,2548410,1,0,rwmj,,,"Interesting they say there is no way to detect undefined behaviour in C code.  This is precisely what the following project is all about:<p><a href=""http://www.astree.ens.fr/"" rel=""nofollow"">http://www.astree.ens.fr/</a>",1305456799
2549738,comment,2547679,2548876,1,0,petercooper,,,"As a European I'd give up a non-essential body part for a mortgage like that. Even 10 year fixes are rare in the UK and we're coming off of a 2 year fix later this year. While we have plenty of leeway with our budget, it's pretty annoying not knowing the exact amount I'll be paying until the very end of the mortgage. I wonder why this concept doesn't exist here.",1305456723
2549737,comment,2548665,2549094,12,0,FrojoS,,,"No, the worst part is, that you wake up and find you only produced crap.",1305456719
2549736,story,,,4,1,yread,"Nuclear boy scout builds a nuclear reactor in a shed",http://www.youtube.com/watch?v=c8HTm_qhSBo,,1305456718
2549735,story,,,1,0,imleaked,"Mac OSD X Lion Wallpaper for iPhone , iPod Touch and iPad and Desktop [Download]",http://itechvision.blogspot.com/2011/05/mac-os-x-1067-lion-wallpapers-now.html,,1305456687
2549734,comment,2547679,2548331,1,0,pstack,,,"That may explain why renting is the norm in a lot of other countries and owning a home isn't considered a big deal (while, in America, it's almost an obligation before you can feel like you've made it). Shifting terms is unsettling. I don't know the history of loans in the states, but I wonder how much of the 30yr fixed was established in response to everyone returning from service after WWII and starting families and buying property?",1305456573
2549733,story,,,2,0,vlbeta,"Monitors DL activity on torrent networks and generates IP-based report",http://piracytracking.com/,,1305456570
2549732,comment,2549468,2549669,6,0,koko775,,,"Former Facebook intern. The number they track is number of accounts with activity in the past 30 days. Logging in to Facebook or performing some other action associated with your account is sufficient to trigger this.",1305456508
2549731,comment,2548480,2549704,4,0,tmp43522,,,"#define FALSE 0 is the common one",1305456392
2549730,comment,2549240,2549596,1,0,pilif,,,"Judging by the comments on that commit and the comments in this HN post, I would say that many of the performance regressions are only happening under ruby 1.8.x.<p>By this time, I wonder what the rails developers should spend their time with: making the framework better for people running the current version of the language or fixing performance problems due to shortcomings of the old version?<p>If you can't upgrade to 1.9 and the performance of rails 3 isn't good enough for you to upgrade rails, why don't you just stay with 2.3 and upgrade once you are ready to move to ruby 1.9?<p>That way your unwillingness to upgrade ruby doesn't ""waste"" the time of the rails developers by causing them to fix issues that don't even apply to more and more people over time.<p>Note: i'm talking about regressions that only affect 1.8",1305456336
2549729,story,,,1,0,herbatnic,"Gnome 3 - how to slow down your efficient?",http://forwardfeed.pl/index.php/2011/05/15/gnome-3-dont-like-in-8-reasons/,,1305456141
2549728,comment,2547254,2547937,1,0,mootothemax,,,"If it's that easy, why haven't you done it 10 or 100 times by now?",1305456065
2549727,comment,2549622,2549682,1,0,Hipchan,,,"Sorry man. I thought it was clear that it was says me. I'm just one data point obviously, but the speed differences on the sites I go to/make was clear. I removed the earlier comment, it probably sounded more authoritative than it should.<p>And I was referring to whatever Chrome web developer timeline calls 'paint'. FF could be faster in other parts of rendering, I don't know. But paint matters to me the most right now and FF disappoints there.",1305455908
2549726,comment,2549251,2549251,5,0,pstack,,,"A compelling answer to why we can't let ourselves waver from a scientific and exploration driven society, why real heroes are not Bret Favre, but guys you'll never hear of, and why every attack by certain groups on science should be taken seriously.<p>My money is <i>always</i> behind the species that makes its own ""miracles"".",1305455883
2549725,comment,2549077,2549584,5,0,ojosilva,,,"Here are some quick, unsophisticated benchmarks of a ""Hello World"" test web server. I ran it in our dev server (Centos 5.3 i386). Ran with ab -t 30 a few times and chose the fastest of the batch.<p>Perl 5.14, Dancer 1.3040, HTTP::Server::PSGI:<p><pre><code>   Requests per second:    856.48 [#/sec] (mean)\n   Memory after tests: 11296 (VSZ) 7632 (RSS)\n</code></pre>\nRuby 1.9.2, Sinatra 1.2.6, WEBRick 1.3.1:<p><pre><code>   Requests per second:    402.72 [#/sec] (mean)\n   Memory after tests: 20612 (VSZ) 10628 (RSS)\n</code></pre>\nI know. This is not, by any means, serious language benchmarks (ie. Sinatra, WEBRick, Dancer are interfering), but they give me a rough idea of how things can perform side-by-side for a given setup.<p>I'm also a fan of running quick string management tests to roughly benchmark interpreters at a given servers, since most of our codebase do a lot of string manip. Here's a 1MB mem alloc + cat test:<p>Ruby 1.9.2:<p><pre><code>  $ time ruby -e 'x=""\"; (1..999999).each { x << ""a"" }'\n  real\t0m0.313s\n  user\t0m0.277s\n  sys\t0m0.026s\n</code></pre>\nPerl 5.14:<p><pre><code>   $ time perl -E '$x.=""a"" for 1..999999'\n   real\t0m0.167s\n   user\t0m0.139s\n   sys\t0m0.020s\n</code></pre>\nAs I said, this is completely unscientific. There are much better ways of benchmarking languages out there.",1305455817
2549724,comment,2548410,2549116,2,0,Peaker,,,"Debug.Trace explicitly breaks referential transparency and its entire purpose is to penetrate the evaluation order out of the abstraction. It's a tool to penetrate the abstraction, much like a debugger. But the existence of such debugging tools does not mean the abstractions themselves are leaky, because these tools do not leak the abstraction as a side-effect, it is their only purpose.<p>Performance analysis of pure algorithms is not a leak of the abstraction, if you consider the abstraction relates to the semantics, the result of the algorithm, and not how much resources it takes to execute.<p>If you wish to know the resource use of your pure code, then none of the nice abstractions hold anymore, but most of the time, you don't need to.",1305455769
2549723,comment,2549076,2549194,7,0,ntoshev,,,"This is false. I've reverted to older firmware before. There's even a dedicated button in iTunes for that.",1305455715
2549722,story,,,1,0,wordmicrosoft,"My first time here - Webmaster Forums in Directory Junction",http://www.directoryjunction.com/forums/showthread.php?p=126209#post126209,,1305455607
2549721,comment,2528819,2530836,2,0,mvalle,,,"Case in point: Gaddafi",1305455601
2549720,comment,2549375,2549442,1,0,jackelk,,,"Nowadays we have ink cartridges instead of ink bottles which are thankfully much less prone to ink explosions. Ink cartridges do tend to cost quite a bit in the long run, but I think it's a good trade off, especially if you have an awesome pen. (I like Lamy)",1305455589
2549719,comment,2548747,2548747,1,0,ntoshev,,,"I enjoy Ben's posts a lot, but what has actually happened to Skype since eBay sold it?<p>IP lawsuit was resolved, the Skype network effects continued to work, the economy changed, is there anything else? It doesn't seem to me like much value was created inside the company for these 18 months, more like the perception of potential buyers changed.",1305455567
2549718,comment,2549240,2549671,2,0,justincormack,,,"Why dont you meeasure it? His microbenchmark basically measures the time to do 10000 database round trips to extract a field. So long as you dont overoptimise and request all the data in a single transaction.",1305455553
2549717,comment,2549468,2549468,1,0,surfingdino,,,"I agree. The Facebook API is a mess. It is too costly for developers to chase the changes and the API itself is too restrictive. It's like AppleScript, a great idea, pity you cannot do much with it.",1305455535
2549716,comment,2549403,2549709,2,0,piotrSikora,,,"Ryan said that the current version uses nginx's URL parser, so clearly not everything is new code.",1305455464
2549715,comment,2549462,2549690,5,0,raganwald,,,"Showmen (a/k/a Charlatans) are to be avoided. And excitable talented people are gold!<p>But an excitable person can learn. Or be directed into another role. How does one motivate a disinterested but competent person? I fear that motivation is a harder problem to solve than lack of talent.",1305455456
2549714,comment,2548410,2549700,0,0,gabi38,,,"This is bad because the optimizer ignores the imperfect reality about the big crowd of non standard programs. It actually punishes non standard programs (and probably the majority of programs out there are not 100% standard). So it is a bad and patronizing optimization",1305455383
2549713,comment,2549403,2549403,12,0,tzs,,,"I haven't done much open source (all I've got out there is a thing to suck a small newsfeed from an NNTP server, a simple NNTP cache, three Warhammer Online add-ons, and a Talisman calculator for Wahammer Online), as my job at a mostly closed source company raises enough challenges to occupy all of the time I have for programming.<p>However, Zed Shaw really tempts me to make time to get involved in open source, especially in projects that will have some tangential connection to him. That's because I haven't been in a really good flame war with a worthy opponent since the old usenet days. From what I've read, it seems he would be more than worthy and not too hard to provoke. :-)",1305455363
2549712,comment,2549077,2549583,4,0,jrockway,,,"Though with an infinite number of nines, it becomes Perl 6.",1305455326
2549711,comment,2548410,2548588,3,0,jrockway,,,"<i>Your machine has CPU registers and memory and such, so the entire ""statelessness"" of FP is subject to the underlying system-level implementation.</i><p>In the end, it's all a few billion transistors that need to be switched on and off at just the right time.  C is as far away from that as Haskell is.",1305455287
2549710,story,,,2,0,phreeza,"Bug - A minimalist command line bugtracker",http://vicerveza.homeunix.net/~viric/soft/bug/,,1305455280
2549709,comment,2549403,2549708,2,0,chapel,,,"Yeah, but what is the fun in that?<p>If it was rewritten, with all new code, why would there need to be attribution?",1305455230
2549708,comment,2549403,2549705,3,0,piotrSikora,,,"<a href=""http://bettween.com/ryah/zedshaw/May-07-2011/May-15-2011/asc"" rel=""nofollow"">http://bettween.com/ryah/zedshaw/May-07-2011/May-15-2011/asc</a> is far more readable ;)<p>But back on topic... Even if Ryan really rewritten all of the original mongrel's code by hand, then there is still issue with nginx-based portions. Why there is no attribution to <i>Igor Sysoev</i>?",1305455138
2549707,comment,2549240,2549678,8,0,johnb,,,"That's a fair call - I don't know you and I am speaking about character traits.<p>I don't feel your original comment reflected a position on knowing where to (or not) compromise, you made a strong assertion to take one option off the table in all situations.<p>In my experience, developers who are make blanket rules up front about what can and can't be changed in the future development of a system don't end up making much of value.<p>That's just my perspective, and I apologise if I've misread your character.",1305454986
2549706,comment,2548467,2549461,1,0,redthrowaway,,,"Motivation aside, there's pretty strong parallels between breaking into the PSN, and breaking into the PS3 hypervisor. Obviously the hypervisor was a much harder nut to crack and GeoHot is likely far more skilled than the PSN people, but he's basically a grey hat systems cracker.",1305454941
2549705,comment,2549403,2549403,22,0,chapel,,,"It is sad how this has been misrepresented.<p>First of all, this was an email conversation between Ryan Dahl and Zed Shaw. That you know. What you probably don't know is that Ryan first posted this tweet [0] about rewriting Zed's http parser. Zed then responded twice [1] & [2], vehemently. Ryan then responded with a single ""?"" to Zed's outbursts. That is when Zed said this: ""@ryah And don't make me bust out the fucking email you sent me trying to trick me into giving you a MIT license. I swear I'll trash you."" [3] Then shortly after another attack [4]. Ryan then again responded somewhat confused: ""@zedshaw http-parser uses nginx's url parser, and your external c api (it's a good api) but it's not a modified ver. of mongrel's http11. ??"" [5] After that he offered up the above link with the email conversation Zed alluded to [6].<p>If you know anything about the http parser, you would know that it was written by Ryan and is no longer an issue. That is why the license was changed, why give attribution to Zed if he didn't write anything? Not to mention after the above outburst.<p>The title of this post is wrong, misleading, and linkbait.<p>[0]: <a href=""https://twitter.com/ryah/status/69557901546631168"" rel=""nofollow"">https://twitter.com/ryah/status/69557901546631168</a><p>[1]: <a href=""http://twitter.com/zedshaw/status/69583774119239681"" rel=""nofollow"">http://twitter.com/zedshaw/status/69583774119239681</a><p>[2]: <a href=""http://twitter.com/zedshaw/status/69584110305284097"" rel=""nofollow"">http://twitter.com/zedshaw/status/69584110305284097</a><p>[3]: <a href=""http://twitter.com/zedshaw/status/69584284339544064"" rel=""nofollow"">http://twitter.com/zedshaw/status/69584284339544064</a><p>[4]: <a href=""http://twitter.com/zedshaw/status/69618172252274688"" rel=""nofollow"">http://twitter.com/zedshaw/status/69618172252274688</a><p>[5]: <a href=""http://twitter.com/ryah/status/69620659650699264"" rel=""nofollow"">http://twitter.com/ryah/status/69620659650699264</a><p>[6]: <a href=""http://twitter.com/ryah/status/69624489893314560"" rel=""nofollow"">http://twitter.com/ryah/status/69624489893314560</a>",1305454884
2549704,comment,2548480,2549525,0,0,asomiv,,,"#define FALSE 1 is not that uncommon in C because C in its infinite wisdom doesn't have true/false literals so people have to invent those by themselves.<p>Glib goes into great lengths to avoid namespace conflicts so it defines the GBoolean type and G_TRUE/G_FALSE. Whether that really is better than #define TRUE/FALSE, I don't know.",1305454884
2549702,comment,2549258,2549503,3,0,madaxe,,,"Huh? That <i>is</i> the entire world. And Canada.",1305454802
2549701,comment,2547254,2547254,0,0,pknerd,,,"A mobile web app mashup having a social layer+LBS on top could be quite good to earn revenue which you are looking for.",1305454761
2549700,comment,2548410,2549691,10,0,jrockway,,,"""Bad""?  You use C because you want speed above all else.  If you don't know the language and need hand-holding, don't use C.  Compilers are going to optimize C -- that's why it usually runs so fast.",1305454690
2549699,comment,2549570,2549570,1,0,Luyt,,,"Technology has come a long way.  I remember my first non-trivial graphics program: a running elephant, drawn with graphic characters, on a PET-2001.",1305454682
2549698,comment,2549240,2549684,3,0,fauigerzigerk,,,"All I can do is state my own point of view as clearly as I can. And my point of view is already a compromise. I didn't say make it as fast as possible even if you have to rewrite it in assembly. I didn't even say, don't write it in Ruby. All I said is don't make it significantly slower than it was before. That doesn't seem like such a big ask.",1305454664
2549697,story,,,1,0,alincatalin,"Startup Links: Week #2 ",http://mixreadblog.blogspot.com/2011/05/startup-links-week-2.html,,1305454583
2549696,story,,,1,0,iamnoon666,"Auto Link Juicer Review",http://iamsuryareview.com/auto-link-juicer-review-bonus/,"Auto Link Juicer Review",1305454581
2549695,comment,2546946,2548726,1,0,clyfe,,,"Maybe he uses a third party ?",1305454435
2549694,comment,2549240,2549240,2,0,tluyben2,,,"Offtopic; when opening this page I tried to clean my screen as there seemed to be gunk on it. Apparently it is the site design.",1305454420
2549693,story,,,1,0,ashfaqwsm,"Haber - Haber.gen.tr",http://www.haber.gen.tr/signin,,1305454340
2549692,comment,2548494,2548494,1,0,kalel120,,,"I can't agree more! My biz model changed 5 times during the past 2 years. It's the internet baby, quick to adapt or die!",1305454247
2549691,comment,2548410,2549674,0,0,gabi38,,,"This kind of logic is the exact cause to the optimization problem described. We all know that in practice MAX_INT+1 is negative, and that many ""non-standard"" programs depends on it, but still, the optimizer is sticking to the C standard that no one follows just because it gives it a nice optimization chance. Bad..",1305454208
2549690,comment,2549462,2549641,4,0,Zakharov,,,"Hiring based on interest will answer the question, ""does this person want to solve the problem we want to solve"". A good recruit is both willing and able. So, hire based on interest, but don't disregard credentials either. Focusing too much on interest risks getting showmen and excitable stupid people.",1305454169
2549689,comment,2549494,2549494,2,0,nextparadigms,,,"I hope that doesn't mean Microsoft will also need bailouts sometime in the future to ""save jobs"".",1305454152
2549688,comment,2548665,2549435,4,0,edoloughlin,,,"""you need a professional to guide you through this"" - I think that's probably enough depth?",1305454083
2549687,comment,2548670,2549482,2,0,tzs,,,"I did some profiling, and it looks like it is some Javascript that is trying to check to see if one of the Flash ads has loaded. It's being called thousands of times in a few seconds.",1305453956
2549686,comment,2549403,2549403,1,0,piotrSikora,,,"http-parser is based on parsers from mongrel and/or nginx (at least in parts), yet the LICENSE file says <i>Joyent, Inc. and other Node contributors.</i>... No mention of the original copyright holders (<i>Zed Shaw</i> and/or <i>Igor Sysoev</i>) <i>tsk</i> <i>tsk</i>",1305453877
2549685,story,2548399,,1,0,xnerdr,,,"I'd suggest it's partly a matter of time investment required.  If I could get a barber license in 4 weeks, or even 12 weeks, I wouldn't mind.  But at a year of study, it becomes a more serious venture.",1305453860
2549684,comment,2549240,2549678,2,0,asomiv,,,"Compromises from whose point of view? One man's good compromise is another man's bad compromise.",1305453722
