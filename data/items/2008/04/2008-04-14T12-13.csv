ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
163096,story,,,2,1,ssharp,"OpenMac Brand Offers Non-Apple Macs",http://www.scenta.co.uk/gadgets/news/cit/1719722/openmac-brand-offers-nonapple-macs.htm,,1208177972
163095,comment,163016,163016,0,0,mattjung,,,"... lack of sense for a good cost-benefit ratio?
Given that test code also needs to be maintained, blowing up the whole code base will make maintenance probably more expensive that needed.",1208177880
163094,comment,162803,162873,0,0,ojbyrne,,,"True. We were chugging along, growing about 20% a month, 4 months in, when that story appeared on digg and then got indexed by yahoo (we were no.1 and no.3 for the search ""paris hilton phone""). Traffic doubled instantly. That should underline the importance of SEO. Get your friends to link to your site.",1208177726
163093,comment,163016,163016,0,0,acrylicist,,,"I think it would really have to depend on what the tests were doing. If the tests were just goldbricking code testing random crap, yeah, 1:4 C:T is crazy. If you really are validating functionality and business logic, is 1:4 C:T so crazy?  I would feel a little more fearless about changing a system if the tests were that comprehensive.",1208177606
163092,comment,162703,162753,0,0,rufo,,,"I think they're using the EFI V8 emulator, which runs stock Apple kernels with zero modifications, and allows you to use Software Update without any mucking about before or afterwards.<p>You still need kernel extensions for hardware OS X won't recognize (often just modified Apple drivers to recognize different device IDs for sound/ethernet/graphics), but those can be maintained between OS updates, and so aren't affected by OS X updates.",1208177577
163091,comment,163016,163084,0,0,dgabriel,,,"I totally agree with everything you've said here.  I've built many, many web apps, and I've found that code coverage is NOTHING like code quality.",1208176467
163090,comment,163016,163016,0,0,Tichy,,,"I don't think it sounds healthy. But maybe writing tests is primarily a way to kill time? Like when I am not fully awake, I may not be able to concentrate hard enough to write some real code, but test code is less difficult.",1208176371
163089,comment,162803,162845,0,0,Tichy,,,"I remember that and I think it is interesting. I have bookmarked it, but somehow I did not check back often. For one thing, I am busy keeping up with Hacker News. But maybe there are other things at work - perhaps you just need to improve the design a bit, and give it more of a community feel (ie make it clear what it is all about)?",1208176099
163088,comment,162903,162903,0,0,prakash,,,"That's one way for people to like your product, release a successor that sucks;-)",1208176085
163087,comment,162987,163063,0,0,weemadarthur,,,"Complete Feynman interview - <a href=""http://www.sellsbrothers.com/fun/msiview/#Feynman"" rel=""nofollow"">http://www.sellsbrothers.com/fun/msiview/#Feynman</a>",1208176044
163086,comment,162884,162884,0,0,subwindow,,,"By far the best source I've had is to build real-life applications.<p>Two applications that I built in about a weekend each have netted me around 5 gigs around release time, plus about one per month.<p>People are much more likely to want to hire you based on seeing your work in action than anything else.",1208175976
163085,comment,162672,162800,0,0,tokipin,,,"these sorts of questions are common all over the place.  at bare minimum it's for the interviewer's entertainment",1208175864
163084,comment,163016,163065,0,0,maurycy,,,"My personal approach to tests combines few ideas.<p>First of all, it doesn't make too much sense to test everything, every single method, every single LOC etc. Your time's so valuable you should focus on things that are critical to the application, or pretty complicated. Testing whether 1.equal?(1) is not.<p>As you noticed, tests can limit your ability to incorporate changes quickly. I believe that more tests you have, less free you're to modify the code without a risk of breaking the tests set. This is about finding the gold equilibrium.<p>In case of Rails, I fanatically follow Fat Model approach, so most of the hard code is in the models. As they change less often than the views or the controllers, their tests tend to live longer, delivering better return on investment.<p>Personally I believe that writing tests is oftenly a very good excuse for not writing the real code, or improving the existing one, especially in case of web applications that are technically mostly trivial.",1208175802
163083,story,,,67,17,zinxq,"The Young Man's Business Model",http://paultyma.blogspot.com/,,1208174970
163082,comment,162851,163060,0,0,inovica,,,"Maybe visit their site? There's a book mentioned above also. Its platform independent (kind of) so you can use PHP, Perl, Python, Ruby........",1208174753
163081,comment,162987,162987,0,0,tokipin,,,"because manholes are round",1208174588
163080,comment,162803,162927,0,0,pius,,,"Hmm.  If you're right, I feel like a bit of a doofus.  That's not as I remember it, but I don't have evidence to back up my point except my (probably flawed) memory.  I will, however, stand by the weaker statement of being one of the first few from MIT.<p>And don't worry, that's not much of a parade to rain on.  ;)",1208174481
