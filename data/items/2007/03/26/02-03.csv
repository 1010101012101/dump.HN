ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
6251,comment,6198,6198,0,0,dmnd,,,"I made this decision about two weeks ago: in my final year of an engineering/computer science double degree, I've decided to take a leave of absence and pursue some of the web startup ideas I have.<p>The decision was made when I saw other people successfully implementing ideas that I was trying to get done in my spare time. I still feel a bit reckless because I don't have <i>the</i> idea, just a lot of smaller potential ones, but the absolute worst thing that can happen is that I graduate one year later.<p>Lots of people told me that I should be careful that I don't throw away my degrees, but I can only see that happening in two ways: (a) I am wildly successful, in which case the degrees won't matter; or (b) I think that I'm on the verge of significant success right when the time comes to go back to uni. The latter is probably the most dangerous part of taking this path, so be sure that you can make a rational decision if (b) does happen.",1174877761
6250,comment,6236,6236,0,0,nostrademons,,,"It's funny, when he describes how he wrote Apple BASIC, it's <i>exactly</i> how a textbook compiler implementation works.  His incremental symbol table is just a handwritten DFA.  Then his noun stacks and verb stacks are basically how you'd write a parser, though they're usually just generalized into a single stack for a CFG.",1174877169
6249,comment,6196,6196,0,0,staunch,,,"I thought #1 was great and the rest felt like watered down or badly written versions of standard advice.<p>The focus on ""algorithms 101"" is pretty thinly veiled snobbery IMHO. If he knew math itself really well he'd probably claim that was of <i>vital importance</i> to all programming at Google too. Instead he falls back on what he does know that feels like ""real computer science"".<p>My experience is that most programming is usually pretty unscientific and that things like great taste in design are far more important than the scalability of any given algorithm.<p>I'd bet there are a 100 CS PHDs at Google for every truly challenging problem solvable by a more scalable algorithm.",1174876948
6248,comment,6189,6224,0,0,phil,,,"it's funny that the quote got reported as ""we're not doing a mobile phone,"" when in his second sentence he pretty much says ""because handsets suck right now and we'd rather replace them with something completely different.""",1174876227
6247,story,,,2,0,staunch,"YCN Feature Request: Best of Day/Week/Month/Year",http://perlmonks.org/?node=Best+nodes,,1174876035
6246,comment,6198,6198,0,0,nostrademons,,,"This is a hard question.  I considered dropping out multiple times in college, but ended up sticking it out and getting my degree.  I'm still not sure if it was the right choice, but it seems to be working out so far.  Anyways, I have no answers, but I have some observations.<p>One of my main fears in college was that I would graduate, take a soul-crushing job, and then lose all desire to start a startup.  This hasn't happened.  I still want a successful startup just as much as I did in college, or maybe even more.  You're not going to stop wanting what you've always wanted just because you have a degree, a job, money, and options.<p>OTOH, having a job and an income fucks with your perceptions a little.  I was lucky (smart?) and didn't change my spending habits; over the past year and a half that I've been working, I banked close to 90% of my take-home pay.  Even though I'm financially much more secure than I was coming out of college, it feels much more precarious - I've gotten used to having a certain amount of money coming in each month.  Quitting my day job wouldn't be an issue if I didn't have a day job.<p>Don't underestimate the experience you'll learn on the job.  I feel like I've benefited significantly from working in somebody else's startup for a year and a half before trying my own.  It also creates a sense of momentum and gets your brain in gear; you'll need all the focus you can have when starting your startup.  <p>Don't overestimate the book learning you'll get in college.  Honestly, I don't think a single thing I learned in the classroom has helped me with my startup.  <p>OTOH, a lot of college learning occurs <i>outside</i> the classroom.  My impossible quest to complete a computer science major in one semester while the department would not let me declare one turned out to be <i>exactly</i> what startup life is all about.  There will be many moments when you have to work like hell for what feels like zero payoff.  It's a good experience to really fuck up and then recover from it, because you do that a lot with startups.  If you skip the recovery part in college, how do you know you'll be able to do it with your startup?<p>Also, I met my cofounders in college.  Had I left after freshman year, I would never have known them.  Had I left later, I probably wouldn't have kept in touch.<p>Probably the biggest factor in my decision not to leave is that I didn't have a clear idea what I would do instead.  That's probably the biggest determinant: if you know <i>exactly</i> what you'll be working on instead (like Michael Dell, Bill Gates, or Mark Zuckerberg) do that instead.  If you don't, stay in school, because you'll probably end up doing nothing instead, and nothing isn't a particularly good teacher.",1174875997
6245,comment,6198,6198,0,0,volida,,,"You should realize a few things first and weight them:\n1. your wants \n2. if you are satisfied or not, if you feel not doing what you love or depressed or pressed\n3. your determination, be ready to fail and few other questions PG pointed out in his speech.<p>Thus examine if pursuaing through a break a startup could fulfil what is missing from your life, and if its worth it contrary to what you may miss if you didn't take time off. <p>It can be both an easy and a very difficult decision. And you shouldn't let anyone affect you, because remember most people of your surrounding are not aware and cannot think the same way you do, no matter how close they are to you.",1174875886
6244,story,,,7,3,staunch,"Consider Adding a Filter to Your Randomly Generated CAPTCHAs",http://img341.imageshack.us/img341/8034/feedburnerhp1.jpg,,1174875879
6243,comment,6225,6226,0,0,staunch,,,"I wouldn't consider Ruby a risky choice for implementing something like DabbleDB -- I'd call it the safe choice. Choosing the technology is one of the greatest perks of doing your own thing.\n",1174875441
6242,comment,6205,6205,0,0,Alex3917,,,"When investing in early stage companies, you put in less money and the upside is much greater. If this were the full picture then obviously early stage ventures would be a better deal. Of course, many more early stage companies go under than late stage companies. This extra risk is supposed to balance out the greater reward. But does it?<p>To borrow Kedrosky's terminology,  VC investing is really a combination of two separate skills: picking and poking. Picking is choosing which startups to invest in, and poking is helping the startup along to further its chances of success. <p>The vast majority of people investing in early stage ventures are friends, family, and fools. Because these people aren't very good at either picking or poking, their risk level is very high. This in turn drives up the cost of capital. <p>You can reduce your risk by becoming better at picking. You can also reduce your risk by becoming better at poking. And if you can become better at both, you can reduce your risk a huge amount. Because there are so few investors who are good at both, these people are barely even taken into account when determining the cost of capital. Which is why if you are good at both, it's an arbitrage opportunity for the investor.<p>For late stage ventures, there is much more money on the table which means much less amateur investment. Because you don't have as many dumb people pumping up the cost of capital, there isn't really any arbitrage opportunity. <p>Incidentally, PG has reduced his risk even further by creating news.YC so he can get to know the founders a little bit before investing. Theoretically, if a founder knows that PG has less risk because of this, the founder should be able to use this as leverage to get a better valuation. However, this doesn't work in reality because the shortage of PGs creates a market inefficiency (in favor of PG). However, I suspect that anyone who can successfully clone him will have a good arbitrage opportunity. ",1174875409
6241,comment,6163,6163,0,0,staunch,,,"Alexa let their technology stagnate and now there are quite a few startups about to run past them. Unless they buy out the competition Alexa will be totally irrelevant very soon.<p>This kind of big company coldness is just accelerating their demise.<p>",1174874654
6240,comment,6198,6208,0,0,nostrademons,,,"Hah, multiple wives?  You sure that's only quadratic?",1174874559
