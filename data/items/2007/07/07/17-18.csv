ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
32967,comment,32880,32880,0,0,mikesabat,,,"I'm not a huge GK fan, but I don't agree with YC disliking him so much. I think that he writes for a different audience.<p>I'd compare his books with Entrepreneur Magazine (does he write a column for them?). Practical, yet oversimplified, advice for the average joe. <p>We are the Wired and Business 2.0 crowd. I bet that 90% of Kawasaki readers have never even heard of del.icio.us, let alone YC.",1183830654
32966,comment,32949,32957,0,0,gibsonf1,,,"Nice!  :)",1183830039
32965,story,,,3,0,tomh,"Google threatens to close German office in reaction to internet surveillance law",http://halcy.de/past/2007/6/23/google_threatens_to_close_gmail/,,1183829762
32964,comment,363,32963,0,0,cwarren,,,"Perhaps I should've elaborated a little. Here's a follow-up that I posted on reddit:<p>\n both of them violate the user model in subtle ways[1]. Most people don't expect numbers to act as functions. If a bug crops up because of it, more than likely they won't check to see if that's the problem. Again, I'm not against brevity. Just don't make functionality implicit in situations when the programmer isn't expecting it. If you use it so much, use a symbol prefix like `--I don't care. Just make it explicit.\n <p>In python's case, it's because it treats tuples and lists differently. Tuples and lists are almost always identical in python. The user's assumption is that they will also be identical in this case, when in fact they aren't.<p>\n[1] User interface design is surprisingly helpful when designing programming languages. It's fairly obvious why, but most people don't realize it.",1183829465
32963,comment,363,32946,0,0,Zak,,,"Arc seems to take a very implicit approach to things - rather unlike Python. I haven't written anything non-trivial in Python, but it looks like the problem with the list formatting operator is that it's an infix operator that depends on similar looking characters (paren and square bracket) for its syntax. I think it might be less confusing as a function or method:<p><pre><code> list_format(""%s"", (""a string"",)\n list_format(""%s"", (""a string"",)\n (""a string"",).format(""%s"")\n [""a string""].format(""%s"")\n</code></pre>\nLooking at it on the screen, making it a method call looks far less confusing. Arc treating constants and sequences as functions doesn't seem like the same kind of thinking to me.",1183827960
