ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
33210,story,,,5,0,andrew_null,"Andrew Chen: Facebook apps are the next generation of UGC",http://andrewchen.typepad.com/andrew_chens_blog/2007/07/oh-snap-social-.html,,1183970798
33209,comment,33183,33183,0,0,dfens,,,"The advice of having one point per slide and using an image instead of lots of text should be in a message that pops up everytime someone starts Powerpoint.",1183969953
33208,story,,,3,0,iamwil,"People often repeat web searches",http://glinden.blogspot.com/2007/07/people-often-repeat-web-searches.html,,1183968941
33207,comment,33105,33105,0,0,zach,,,"That's great.  He should work up a hack on the gravity sensors so you can scroll web pages with inertia -- you give your iPhone a single quick shake and Safari goes down a page or so.  Perfect for reading web pages while holding a subway strap, umbrella, dog leash, etc.",1183968713
33206,comment,33037,33037,0,0,zach,,,"You know, if they started with 70 and eliminated all but three or four of them reality-show style, I would be totally sold on it.  Now that's something one of these YC clones should try.",1183968441
33205,comment,33071,33122,0,0,rzwitserloot,,,"??<p>I'm not complaining about code appearance. My code is completely different from his code; I use the same principles as the stuff he uses in K - create a UNIQUE set and check if the size of the unique set is smaller.<p>Trivial examples have a fundamental failure in that programming in general doesn't scale up without side effects. It's like special effects: If you try to run a scene by creating miniatures, certain effects, such as wind blowing across water, and speed, do not remain the same. You need to tweak stuff endlessly to make it 'look right' and even then there are practical issues.<p>I get that screencasts can't very well delve into a 3-man-year project. This does not mean that because the issue cannot be represented in a screencast, that it doesn't exist.<p>Take static typing for example. For trivial-to-small code samples, static typing is completely useless cruft. In LARGE (man-month or 3 with multiple developers), it's definitely useful. This is somewhat hard to explain in a screencast.<p>I've gone toe to toe with Slava Pestov of Factor recently regarding a JSON parser and a basic non-blocking I/O webserver, both from scratch, and factor code was smaller than java code by a factor of 90%. In other words, where I had 10k LOC, he had 9k LOC. That's a virtual wash in my book, and nothing like the usual numbers claimed.<p>It also depends on programming style. I find this perfectly acceptable java:<p>someContainer.add(title = new Label(""Title Goes Here""));<p>whereas most java programmers would rip this up into two lines. This goes into the meaning of a 'line of code'. A massive perl one-liner clearly is much more heavy than something like ""a = 5"". Almost all java vs. other code contests I've seen, the relative weight of each java line is on average way less. Just because a language likes to use a lot of punctuation doesn't mean it's inferior.<p>I'm not apologizing for java - in fact there are tons of changes I'd like to see. I'm just saying that trivial examples and pointless comparisons (LOC comparisons without any form of context or attempt to normalize vs. statement complexity) aren't convincing.
",1183968395
