ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
82652,comment,82477,82477,0,0,cmars232,,,"All of this and more would be feasible if there were better cross-browser support for vector graphics.<p>These whimsical designs might be ok for niche markets, but they require tedious Photoshop skills and they don't scale.\n",1195700324
82651,story,,,1,0,codeslinger,"Facebook's Future",http://blog.cbcg.net/articles/2007/11/21/facebooks-future,,1195699939
82650,comment,82645,82645,0,0,bootload,,,"<i>""... Each new generation doomed to re-discover basics ...""</i><p>Got pinged by Ed Yourdon today checking if I had some of his books in photo of a bookshelf (I did, 'Structured Analysis'). And I come across this particular presentation on his website (<a href=""http://www.yourdonreport.com"" rel=""nofollow"">http://www.yourdonreport.com</a>).   It's an interesting report because it takes a similiar approach Tim O'Reilly used to define Web 2. Analyse the current market and draw conclusions from them. [0] What I particularly like is the themes overlayed on a map with published book images used to support the problems. <p>One idea that immediately sticks in my mind as being a bit odd was the theme of code re-use. Programmers are notorious for perpetuating <i>""Obsolete culture""</i> in the hope that re-using code can save them time ignoring the possibility the code they are going to re-use is crap. [1]<p>The presentation can be found here:<p>- google doc (requires permission, yuk) ~ <a href=""http://docs.google.com/Present?docid=dd2trp3s_42cwb9js&fs=true"" rel=""nofollow"">http://docs.google.com/Present?docid=dd2trp3s_42cwb9js&f...</a><p>- pdf (19Mb) ~<a href=""http://www.yourdon.com/downloads/CompAidTopTenJAX.pdf"" rel=""nofollow"">http://www.yourdon.com/downloads/CompAidTopTenJAX.pdf</a> <p>- bonus Interview (200Kb)  ~ <a href=""http://www.compaid.com/caiinternet/ezine/edyourdoninterview.pdf"" rel=""nofollow"">http://www.compaid.com/caiinternet/ezine/edyourdoninterview....</a> <p>\n[0] Tim OReilly Web 2.0 definition, 'What is Web 2.0?' ~ <a href=""http://www.oreilly.com/pub/a/oreilly/tim/news/2005/09/30/what-is-web-20.html"" rel=""nofollow"">http://www.oreilly.com/pub/a/oreilly/tim/news/2005/09/30/wha...</a> <p>[1] Alan Cooper, Inmates running the Asylum, CH8 An Obsolete culture, Reusing code pp 106-109. ",1195699866
82649,story,,,4,0,ivankirigin,"Hacker News Item ID=1",http://news.ycombinator.com/item?id=1,,1195699704
82648,comment,82629,82629,0,0,amichail,,,"How much freedom does Facebook provide for its software engineers?  Do they get something like 20% freedom?",1195699469
82647,story,,,5,0,bct,"Tim Berners-Lee - Giant Global Graph",http://dig.csail.mit.edu/breadcrumbs/node/215,,1195699437
82646,comment,82547,82576,0,0,zaidf,,,"Some of us are less lucky. Our last month's bandwidth cost was around 4k--all pushed to our credit cards.",1195699388
82645,story,,,3,1,bootload,"Top 10 Software Engineering ideas (Ed Yourdon)",http://www.yourdonreport.com/index.php/2007/10/16/top-ten-software-engineering-ideas-in-jacksonville/,,1195698996
82644,comment,82629,82629,0,0,mxh,,,"From the article:  ""Entrepreneurs want to work at the hottest place on earth and right now that's Facebook.""<p>I see at least two false statements in that sentence.\n",1195698736
82643,comment,82477,82554,0,0,tlrobinson,,,"<a href=""http://www.ajaxflakes.com/web-20/top-100-online-generators-web-20/"" rel=""nofollow"">http://www.ajaxflakes.com/web-20/top-100-online-generators-w...</a><p>I challenge someone to create a ""web 2.0 generator generator"". Or a generator that uses these generators to generate a ""web 2.0"" site without any interaction from the developer.<p>Not unlike the CS research paper generator that these guys wrote: <a href=""http://pdos.csail.mit.edu/scigen/"" rel=""nofollow"">http://pdos.csail.mit.edu/scigen/</a> Some of the papers were actually accepted into conferences.\n",1195698679
82642,story,,,10,0,rms,"Possibly the only CEO ever described as anti-establishment, a communist, and a socialistic anarchist",http://www.craigslist.org/about/jim.buckmaster.html,,1195698556
82641,comment,82477,82477,0,0,jsmcgd,,,"I agree that the sites shown are prettier but I'd argue that they are much more of a visual work out. I think content is paramount, everything else is secondary. Anything that gets between you and the content begins to grate and should be removed.",1195698515
82640,comment,82477,82506,0,0,jsmcgd,,,"Yeah, the rest of the article seems to contradict the beginning.",1195698206
82639,comment,82629,82629,0,0,ardit33,,,"""They are going back to Microsoft!"" -- facebook has a lot of ex-microsofties already.  Anyways, I hope it doesn't get polluted too much with the ms mentality.  The facebook experience and the newsfeed are loosing their simplicity and  looking more and more like windows live.",1195697920
82638,comment,82547,82547,0,0,BitGeek,,,"Because they hire too many people. The more people you hire, the less you get done per unit people.  With development, the more people you hire the less you get done period. <p>Virtually every startup that raises more than $100k is wasting half the money its spending.  Most of them don't even realize it. <p>I love the comment by the guy who said ""founders aren't willign to forgoe the $100k job they had"" LOL.  If your founders wouldn't rather have equity than a salary, then your startup isn't getting their bet... and they have the inside info. <p>The more money you take, the less equity you have.  Thus, if you believe in your idea, you don't want to take any money....logically.<p>But the reality these days-- especially in ""Silicon Valley"" where the reality distortion field sets in-- is most startups are just built to flip- they want the big vc money the big burn rate and the quick exit to an acquirer... they aren't started by people who want ot build a business.<p>This is why SF is not a good place to build a company and why you shouldn't listen to the ""spend lots of money"" advice you tend to get (eg: you need a lawyer you need lots of employees, you need office space, you need to buy servers, etc.)",1195697787
82637,comment,82626,82626,0,0,cperciva,,,"As a general principle:<p>1. Distribute an RSA public key with your software.<p>2. Using the associated private key, sign the hash of the latest version of your software, and put that signature online.<p>3. Each time you update the software, replace said signature with the signature of the hash of the new version.<p>4. Have the client software periodically fetch that signature file over HTTP, verify the signature, and check that it is up to date.<p>5. For the love of ${DEITY}, don't install updated versions automatically.  If someone steals your RSA signing key, you don't want to hand them a convenient automatic worm distribution system; and in any case, users are generally much happier if they can say ""not now please"".<p>Beyond that, approaches vary depending on the complexity of your software.  If your software is a complete operating system, you'd probably want something like the FreeBSD Update utility which I wrote; if your software is just a single executable with no data files, you'd probably want something much simpler.",1195697549
