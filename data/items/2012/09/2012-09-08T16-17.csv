ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
4493331,comment,4493126,4493126,9,0,smoyer,,,"Rolls eyes ... Is anyone else shocked that a CannaMed doctor thought he was a perfect candidate for cannabis?  If he'd visited a Chiropractor, I'm sure he would have gotten manipulated and I bet a psychologist would have suggested bi-weekly sessions.<p>I don't want to start a debate about the value of medical marijuana, but you do need to consider the motivation of the people giving you recommendations.",1347123572
4493330,comment,4491766,4491766,1,0,johnohara,,,"Picture #30: Clicking the Google Map link shows three bridges that cross the river today. The center bridge appears to be the one from the photograph.<p>Those stone piers are beautiful and my guess, still fully functional 100 years later.",1347123551
4493329,comment,4492899,4493221,4,0,_dps,,,"You're probably aware of LuaJIT (<a href=""http://http://luajit.org/"" rel=""nofollow"">http://http://luajit.org/</a>) already but I'll toss it in for other readers: as a former heavy user of ctypes, after discovering LuaJIT and its FFI I haven't touched ctypes again. For people who need to do this kind of work, it's worth looking into (enough so that one of the core PyPy developers is emulating LuaJIT's FFI design in the project Python CFFI <a href=""http://cffi.readthedocs.org/en/latest/index.html"" rel=""nofollow"">http://cffi.readthedocs.org/en/latest/index.html</a>).",1347123549
4493328,comment,4491766,4493236,1,0,agumonkey,,,"IIRC, the guy had connections in the USA so he could grap some very early color tape to film the beginnings of the Normandie. Thanks to whoever was involved in this process.",1347123511
4493327,comment,4492899,4493230,1,0,cdavid,,,"I would say that idiomatic python code often does not overuse objects. Lack of immutable data is indeed something I miss (especially COW dict/list/set).<p>One thing that is clearly overused in python code is dictionaries to pass data where the set of keys is fixed and known, or worse passing dict with different set of keys instead of proper 'modelling'. Things like traits (<a href=""http://code.enthought.com/projects/traits"" rel=""nofollow"">http://code.enthought.com/projects/traits</a> - disclaimer, I work for Enthought ), or even simple libraries like remoteobjects (<a href=""https://github.com/saymedia/remoteobjects"" rel=""nofollow"">https://github.com/saymedia/remoteobjects</a>) can be helpful in those cases.<p>I myself don't use IDE much: I am too entrenched with vim to gain enough from an IDE, although pycharm is quite nice. I would much rather see libraries around things IDE do ('live' 'AST' of a whole project, good refactoring, debugging) so that one can integrate them in whatever environment people use. I think we are going there (<a href=""https://groups.google.com/forum/?fromgroups#!forum/python-static-type-checking"" rel=""nofollow"">https://groups.google.com/forum/?fromgroups#!forum/python-st...</a>).<p>Go does look nice, but it misses two killer features for me: NumPy and the whole scipy ecosystem, and C integration (in both directions). I think the python community itself does not realize how big and significant the scipy ecosystem is (nothing comes anywhere near in any common language AFAIK).",1347123510
4493326,comment,4492687,4492900,1,0,slig,,,"Also, it would be great to notified about ALL your blog posts, not only this series. :-)",1347123507
4493325,comment,4493126,4493313,3,0,mistercow,,,"I'm confused. Would you say that someone who takes their doctor-prescribed dose of xanax, vicodin, or ritalin was ""getting high""?",1347123504
4493324,comment,4493126,4493313,3,0,EliRivers,,,"I think you missed the point in a big way. In the news today; getting high makes some people better parents and, frankly, better people.",1347123501
4493323,comment,4493133,4493300,1,0,HumanamuH,,,"Interesting idea. If one doesn't want to leak any profile information, one could only show the number of results to non-users but not the actual profiles.<p>Of course, it's very hard to prevent any malicious use of the profile data.",1347123497
4493322,comment,4493319,4493319,1,0,mol2103,,,"Would love to hear HN's thoughts on the idea that less is more earlier on and more is more later on in the product development life cycle.",1347123493
4493321,story,,,2,0,nonne,"APIs for Manufacturing",http://amandapeyton.com/blog/2012/09/apis-for-manufacturing,,1347123483
4493320,story,,,2,0,ZephyrP,"Anti-Dumping, tampering with VirtualSize to defeat VirtualAlloc() n' friends",http://waleedassar.blogspot.com/2012/09/anti-dumping-part-3.html,,1347123479
4493319,story,,,2,1,mol2103,"I hate wasted documentation",http://productguys.tumblr.com/post/31131221045/how-to-reduce-documentation-in-product-management,,1347123428
4493318,comment,4488162,4489479,1,0,pavedwalden,,,"The two comments that frame this as an over-reaction to a helpful list of links have a valid point. But, for what it's worth, my first read of esolyt's post was that it was a terse reprimand for reposting, and in that mindset I definitely appreciated your reply.<p>I'm pretty sure that in another time and place (perhaps reddit, several years back) I too would have presumed that esolyt had a friendly intent. I wonder if I've stopped giving the benefit of the doubt in general, or if my perception of the vibe in certain comment threads is darker.",1347123354
4493317,comment,4492687,4492687,2,0,zackmorris,,,"I've messed around a bit with the Bullet physics library and was wondering if anyone knows how it works under the hood.  It's not brute forcing the collisions, because it can handle thousands of objects.<p>Does anyone know how they do the approximation?  There is a fudge factor you can set for say a 10% boundary around an object, where it's almost like it moves all of the objects and then takes a best guess where they should be placed for the next physics frame.  But I'm curious what their approach is called, if it's a general solution.",1347123340
4493316,comment,4491766,4493223,1,0,001sky,,,"<i>my brain is blown away that there was so much color</i><p>-These image captures are 3 layer BW stills, the color is from a secondary process.  Its a logic thing.  The colour you are seeing is from photoshop[1,2,3].  Its about as 'real' as the latest issue of XYZ magazine's cover art.[4]  That's not to in any way disparage it, but the reason they look ""contemporary"" is because of the way the images have been post-processed in photoshop.  It would be trivial, for example, to make them look like they came out of instagram.  Just a tech-point.  Its slightly odd nobody else pointed this out, that's all.  The guy was ahead of his time in thinking through the RGB seperation process, that's what is really brilliant...no doubt about that.<p>[Edit: Obviously, the presence of measurable electromagnetic radiation on the Earth's atmosphere, and/or its reflectivity, is the same now as it ever was.  BW light sensitive emulsions have been very good for a long time. Viz, Ansel Adams, Ed Weston, etc.]<p>_________________<p>Notes:<p>[1] <a href=""http://en.wikipedia.org/wiki/Gamut"" rel=""nofollow"">http://en.wikipedia.org/wiki/Gamut</a><p>[2] <a href=""http://en.wikipedia.org/wiki/Color_space"" rel=""nofollow"">http://en.wikipedia.org/wiki/Color_space</a><p>[3] <a href=""http://en.wikipedia.org/wiki/Adobe_RGB_color_space"" rel=""nofollow"">http://en.wikipedia.org/wiki/Adobe_RGB_color_space</a><p>[4] Literally.  Digital sensor = BW.  They are filtered into RGB monoochrome images, just like this guy pioneered.  Then, they are reconstructed using SW.  So, to the end user, it does not matter if you are starting from digital and/or analogue base images.  The end images are literally the function of the SW and the Display (ie, all modern).  If they were prints, they would be constrained by the tech of the print medium, etc.",1347123311
4493315,comment,4492899,4493050,1,0,eru,,,"It doesn't do that for the interpreter / compiler.  But it's a common enough idiom that the human reader can rely on it.",1347123290
4493314,comment,4492899,4493027,1,0,orangecat,,,"Practicality beats purity. Python should support better function literals for the same reason that it supports the ""implicit"" [1,2,3] instead of making you explicitly create a list and call append. I'd say self falls into the same category, although I haven't found it as much an annoyance as some.",1347123277
4493313,comment,4493126,4493126,5,0,carbocation,,,"In the news today: some people enjoy getting high.<p>The only remarkable thing in this story, in my opinion, is that it is a reminder that there are cannabis dispensaries in California.",1347123248
4493312,comment,4492687,4492954,1,0,Steuard,,,"Right, chaotic behavior is a valid issue. But in any realistic situation, you'll have lots of effects that inevitably get left out of simulations that contribute larger perturbations/errors than this rounding error would. (Heck, I suspect that even the thermal motion of the individual atoms in an object would have a larger effect.)<p>So no simulation will <i>ever</i> get exactly the ""right"" answer at that level. For practical purposes, all we care about is getting an answer that's within the ensemble of reasonable outcomes for initial conditions like ours.",1347123213
4493311,comment,4492941,4492941,10,0,stmpjmpr,,,"I'm not sure why Guido Van Rossum bothered to answer at all.",1347123166
4493310,comment,4492287,4493043,2,0,lvh,,,"The principal difference of opinion is that pass thinks usernames and sites are public information. Some of the alternatives do not.<p>While in some cases the difference is moot (I'm sure I have a bunch of registrations on things like forums where membership is public anyway), there are cases where it's not.",1347123165
4493309,comment,4492899,4493162,1,0,btilly,,,"What do you mean by ""usable function literals""?  Because Python has them, even if you have to do a bit of work to get them.<p><pre><code>    def demo (n):
        def multiplier (m):
            return n * m
        return multiplier

    x5 = demo(5);
    print x5(4)
</code></pre>
You can do anything in the inner closure that you might want.  The only surprise is scoping - if you want to modify state you need to use a mutable data type because otherwise you'll be instantiating a private variable.  But that hoop is easy to handle.<p><pre><code>    def demo ():
        counter = [0]
        def increment ():
            counter[0] += 1
        def peek ():
            return counter[0]
        return (increment, peek)

    (increment1, peek1) = demo()
    (increment2, peek2) = demo()
    increment1()
    increment1()
    increment2()
    print peek1()
    print peek2()
</code></pre>
So there.  Function literals.  They work.<p>But, you say, you really want anonymous classes?  Well look up metaprogramming then.  Python really has quite good support for it.  There is no trouble creating anonymous classes on the fly with their own attributes, functions, and so on.  They can even inherit from each other.  <a href=""http://www.voidspace.org.uk/python/articles/metaclasses.shtml"" rel=""nofollow"">http://www.voidspace.org.uk/python/articles/metaclasses.shtm...</a> might be a good starting place on this for you.<p>(Note, I do not recommend metaprogramming unless the solution you make will be reused a lot.)",1347123163
4493308,comment,4492899,4493245,3,0,eru,,,"That actually makes sense.  Because the joining is something that a string knows how to do.  Why should arbitrary lists know about string manipulation?<p>By the way, your example has an error, since you can't join a list of numbers.  You can only join lists of strings.  I.e.<p><pre><code>    ' '.join(""Hello"", ""World"")</code></pre>",1347123163
4493307,comment,4492914,4493118,3,0,zachalexander,,,"I imagine this varies with the kind of work. I suspect creative work degrades more quickly beyond 40 hours/week than repetetive work does.",1347123158
4493306,comment,4491216,4492581,2,0,rurounijones,,,"MechCommander 2 source also available: <a href=""http://www.microsoft.com/en-gb/download/details.aspx?id=11457"" rel=""nofollow"">http://www.microsoft.com/en-gb/download/details.aspx?id=1145...</a>",1347123152
4493305,comment,4492914,4493268,2,0,christiansmith,,,"That's a good point. It sucks to work overtime constantly when you had other plans, commitments, etc, especially when the bosses are ungrateful.<p>On the other hand, when working on something that you know upfront is going to be an enormous challenge, and you really love what you're doing, the hours don't seem to matter. The problem for me becomes more of a physical thing. I can work a 70+ hour week or two, but then it takes a week to get back to the same level of output.",1347123120
4493304,comment,4492914,4492914,10,0,MarkMc,,,"This is a great article, full of interesting details you wouldn't get from an interview with the CEO of Ford or Toyota.  The 'bastard investor'; the knight-in-shining-armour who rescued the company; the big-name suppliers who 'can't get their shit together'; Musk's personal attention to detail and quality of every single car.  If he writes an autobiography I'll be the first to buy it.",1347123054
4493303,comment,4491766,4491766,1,0,combataircraft,,,"This is not Russia!",1347123021
4493302,story,,,67,16,peofre,"Util-linux cheat sheet",http://www.catonmat.net/blog/util-linux-cheat-sheet/,,1347122893
4493301,story,,,1,0,davewiner,"To TechCrunch hackathoners",http://threads2.scripting.com/2012/september/toTechcrunchHackathoners,,1347122870
4493300,comment,4493133,4493296,1,0,lubutu,,,"Perhaps you could only share a limited amount of information to non-users, like the topics they'd like to talk about, and an ""about you"" or something. Just enough to catch one's interest.",1347122866
4493299,comment,4493133,4493293,1,0,HumanamuH,,,"I'm glad you like the idea. I am working near full time on it. Who needs weekends anyways?",1347122836
4493298,comment,4488162,4488469,1,0,georgemcbay,,,"This isn't just a problem with you, this is really a problem in the ecosystem of build tools, primarily those that target C/C++ code (though the problem exists with other languages and their build tools as well on a lesser scale).  And I say this as someone who spent over a decade coding in nothing but C and C++ (thankfully that is in the past).<p>Go has essentially solved these problems, but only for Go code and in the process threw out (for now, at least) the notion of binary linkable libraries that your code can access, which may or may not be a bad thing depending upon how you feel about dynamically linkable libraries.<p>I don't think the problem is practically fixable on existing languages whose basic toolset wasn't built to deal with these sort of things.  And there is a cultural element in addition to the technical one -- even if you managed to create such a build toolset for languages like C/C++, some (large) subset of C/C++ programmers are going to want to hold on to their hard-won mastery of all things configure/autconf/make and stick with them, even if those tools are all completely horrible (which, IMO, they are).",1347122781
4493297,comment,4492287,4492562,2,0,gwkoehler,,,"I agree. Also, a common misconception is that your passwords are uploaded to a server with 1password. They are not! They are local on your machine, and you can optionally sync across your devices via your own dropbox account.",1347122760
4493296,comment,4493133,4493287,1,0,HumanamuH,,,"Yes, I understand your point. I didn't want to share the user profiles with non-users. I also haven't looked into how easy it would be to harvest profile pictures and profile data. Any thoughts on this?",1347122739
4493295,story,,,1,0,bringking,"Product survey for a lean startup event- take a min to fill out and help out",http://www.surveymonkey.com/s/5N5BJ3M,,1347122735
4493294,story,,,1,0,001sky,"Its not that I dont suffer, its that I know the unimportance of suffering",http://www.feld.com/wp/archives/2012/08/the-vomit-moment.html,,1347122726
4493293,comment,4493133,4493133,1,0,juanbyrge,,,"This is an amazing idea. I think it has infinite potential. Are you working in it full time ?",1347122719
4493292,comment,4492991,4492991,5,0,lsc,,,"I am consistently amazed by the durability of this ""cloud"" hype.   I mean, it's been at the peak of the hype cycle now for what, six years?  I have been expecting a backlash for most of that time, and even now, when I make comments that are not glowing about ""cloud""  I get funny looks.<p>Part of this is that 'the cloud' is now how we refer to perfectly ordinary services that have been around as long as the web, like FTP space.   I mean, I walked in on a group of guys discussing their 'time machine' backup scheme for their mac.   Now, being a service provider with a whole lot of disk, my first thought, of course, was ""can I sell some kind of standards-based something that will let people time-machine to my hard drives in a datacenter?""    I got about half way through asking if such a thing existed, and they said, ""Oh, you mean backup to the cloud?""  at which an involuntary scoffing noise escaped my throat.<p>(the upshot is that apparently you can backup the time machine data to 'the cloud' but the people I talked to did not know what mechanism was used to upload/store the data.)",1347122695
4493291,comment,4492899,4493225,1,0,eru,,,"In theory, your IDE/editor should cooperate with the compiler and display the inferred types for you, if you choose so.",1347122583
4493290,story,,,56,39,daegloe,"Hong Kong Backs Down on Moral Education Plan",http://www.nytimes.com/2012/09/09/world/asia/amid-protest-hong-kong-backs-down-on-moral-education-plan.html?_r=1&hp,,1347122562
4493289,story,,,2,0,sew,"Needle beam could eliminate signal loss in on-chip optics",http://www.seas.harvard.edu/news-events/press-releases/needle-beam,,1347122536
4493287,comment,4493133,4493139,3,0,lubutu,,,"I think it would be much more inviting if you could at least search for people without having made an account. As it stands I have no idea what kind of people I could talk to, so I have no idea if it would be worth giving up my email address.<p>Edit: Interesting idea, though. With social networks like Facebook you really need to have met in order to befriend  it doesn't encourage random meetings. When I was younger I would find likeminded people by chance on odd websites; I think that's become harder as I've grown older.",1347122466
4493286,story,,,2,0,Adrock,"Going Dynamic on JVM: JRuby vs. Groovy",http://rubysource.com/going-dynamic-on-jvm-jruby-vs-groovy/,,1347122463
4493285,comment,4492899,4493037,4,0,orangecat,,,"With duck typing, that shouldn't matter. Lots of methods in the Python standard library take ""file-like objects"" that have read() methods and no common superclass, and that works fine without read being a top-level function.",1347122448
4493284,comment,4491408,4491996,4,0,tptacek,,,"Out of character for a scientist? You mean, besides Werner Heisenberg, Freeman Dyson, Francis Collins, Richard Smalley, and Donald Knuth? This meme needs to die.",1347122420
4493283,comment,4493240,4493240,2,0,dollar,,,"I have owned every Kindle including the Fire, but I will not purchase a device with mandatory ads.",1347122406
4493282,story,,,2,0,bennesvig,"These are some things I just assume are Internet habits",http://bombtune.com/post/30719613845/these-are-some-things-i-just-assume-are-internet,,1347122400
4493281,comment,4493091,4493234,1,0,gav,,,"I find the reviews themselves helpful, the scores less so.<p>It seems that scores follow an interesting distribution, people mostly review things they love or hate. People rarely seem to want to take the time to point out something is just ok.<p>You see this bimodal distribution for Yelp restaurant reviews. Reading through the reviews I find the reasoning of a lot of reviewers quite spurious. I think it would be an useful application of machine learning to determine the validity of claims and generate a real score, an automatic Zagat-machine.<p>It's worse for complicated products, if I was a manufacturer I'd want to be able to rebut them. For example, I was looking to buy a coffee grinder and the reviews were all over the place. It's obvious that a lot didn't read the instructions or had higher expectations than a product at that price point would provide. People complain that a $30 item is made mainly of plastic.<p>One of the advantages of Amazon is the sheer quantity of reviews for most items, the outliers--whether positive or negative--get lost in the noise. It does penalize products with only a couple of reviews, it starts to make you nervous and reconsider the purchase.<p>This really is the tyranny of choice, you waste a lot of time looking for the ""perfect"" product, when traditionally you'd just walk into your local store, make a decision based on imperfect knowledge, and probably be happy with what you ended up buying.<p>A good example is my recent purchase of a nail brush from Amazon. It's a sub-$10 item that in the past I'd have just walked into my local drugstore and picked up the cheapest out of whatever they had in stock. The category[1] has 843 products that I wasted a good hour deciding on the ""best"" to purchase.<p>[1] <a href=""http://www.amazon.com/s/?url=node=11063531&rh=n:3760911,n:!11055981,n:11062741,n:11063461,n:11063531"" rel=""nofollow"">http://www.amazon.com/s/?url=node=11063531&rh=n:3760911,...</a>",1347122399
4493280,story,,,252,98,craigkerstiens,"So I Made A Mashup, And Then",http://stevestreza.com/2012/09/08/so-i-made-a-mashup/,,1347122382
4493279,story,,,1,0,svjunkie,"Should the Boss Learn to Code?",http://online.wsj.com/article/SB10000872396390444273704577633551681201754.html,,1347122373
4493278,comment,363,363,1,0,jcr,,,"When all commenting is closed on a submission, all of the 'reply' links
are replaced with '----'.<p>It would be better to use '(closed)'.<p>When your anti-flamewar code kicks in to slow down posting by preventing
replies, the 'reply' link is also replaced with '----'.<p>It would be better to use '(paused)' or '(wait)' or best of all,
something more informative to describe what is going on. Simply not
being able to reply to a post and the 'reply' link showing as '----'
fails to instruct the user of the reason, so you're wasting a valuable
opportunity to teach them something.<p>You could even replace the 'reply' link with a link to something else
(instructions, guidelines, faq, ...) as well has have more descriptive
text for the temporary anchor.",1347122366
4493277,comment,4492905,4492905,3,0,drub0y,,,"I really don't know why people are so surprised/amazed by this kind of stuff. As soon as JavaScript had access to pure image data in the browser there was nothing else holding it back from these kinds of algorithms. It was always the sandbox that was holding it back, not the language.<p>Cool none the less...",1347122352
4493276,comment,4492899,4492899,5,0,tikhonj,,,"My biggest problem with Python is not that it's a bad language but that it isn't a great language. Why is this an issue? Simple: it's one of the most highly rated--and, frankly, <i>over</i>rated languages today. And, try as I may, I can never seem to get away from it: at least in my circles, it's even <i>more</i> endemic than Java!<p>I really wish people liked OCaml or Haskell that much instead.",1347122350
4493275,story,,,1,0,bennny,"Twitters API changes are messing up my startup  and Twitter",http://venturebeat.com/2012/09/08/twitters-api-changes-are-hurting-my-startup-and-twitter/,,1347122330
4493274,comment,4492899,4493171,3,0,masklinn,,,"> I'm reasonably sure there was an implicit ""and be productive"" in there.<p>Right, let's move the goalposts and reduce the target, was there also the implicit assumption that the language should have a C-style syntax, be statically typed, run on a JITted runtime and be maintained by a big company?",1347122295
4493273,comment,4493087,4493087,2,0,flexxaeon,,,"The reason you're getting requests for a ""tablet version"" may be because (when I tested it out) you're redirecting tablets to the m. version of the site. As you said, a tablet can handle much of what  a desktop can, so tablet users tend to be a little annoyed when they are forced onto a version of the site that is clearly made for smaller devices.<p>I think if you alter your redirection rules to allow tablets to go to the main version of the site, that may satisfy most of your users until you can get a responsive design going.",1347122287
4493272,comment,4493091,4493091,0,0,quomopete,,,"only somewhat. But techcrunch cant think outside of superlative and hyperbole.",1347122272
4493271,comment,4488848,4489892,1,0,WayneDB,,,"They do interrupt a certain amount of my bandwidth, which they must use to download the ads.",1347122271
4493270,story,,,1,0,lazydon,"Ask HN: interesting tech people you follow on Twitter?",,"Whom all do you follow (or have  them listed) for those interetsing tech realted nuggets of wisdom - developers(any programming language), founders, funders etc. Some thing like HN-lite on twitter.<p>Here are a few from my list:
@paulg
@sivers
@jack
@codinghorror
@spolsky
@mfeathers",1347122218
4493269,comment,4492532,4492772,1,0,Evbn,,,"Semantic spacing (indent with tabs and align with spaces) is the standard in Go, enforcrd by gofmt. The compiler doesn't distinguish whitespace, though.",1347122206
4493268,comment,4492914,4493022,3,0,acgourley,,,"Well at least he's upfront about it. Better than an org that says you should work 40 hr weeks then presses deadlines so hard you have no choice than to go over.",1347122203
4493267,comment,4491766,4492537,4,0,sjwright,,,"Which is so funny because when music is produced digitally (99% of the recordings in the past decade) a CD can be a bit-perfect copy of the original mastering.<p>A vinyl record is a stamp of a stamp of a stamp of a scraping of the original master. Better than a CD? Evidence of complete mental breakdown, more like.",1347122169
4493266,comment,4492899,4493230,1,0,masklinn,,,"> Pyflakes looks easier.<p>Look up flake8, it runs both pyflakes and pep8, and can optionally warn about cyclomatic complexity as well.",1347122168
4493265,comment,4492899,4493020,2,0,tikhonj,,,"I think ""scripting language"" is not the fairest identification. But not for the reasons most people don't like it: quite the opposite! For me, the issue is not that you can use Python or JavaScript for general-purpose development--although, of course, you can--but that you can actually use Haskell for scripting. And it's actually very good at it, too!<p>I've been replacing my shell scripts with Haskell scrips lately and the transition is going well. Soon the only two languages I will ever need are Haskell and elisp!",1347122159
4493264,comment,4492899,4493252,1,0,pbiggar,,,"Why? To be honest, I used to think that, but then I actually tried it and haven't had any problems there.",1347122103
4493263,story,,,1,0,daegloe,"New York City says cabs cant use Uber app for collecting fares",http://news.yahoo.com/blogs/technology-blog/york-city-says-cabs-t-uber-app-collecting-010024652.html,,1347122071
4493262,comment,4492899,4492957,1,0,ninetax,,,"Could you give some examples?",1347122056
4493261,comment,4492899,4493257,4,0,masklinn,,,"> JavaScript also has much better scoping<p>Though I generally agree, that's as long as you mandate linting. JS's implicit globals are even worse than Python's implicit scoping.",1347122045
4493260,comment,4492899,4493024,2,0,masklinn,,,"Not that I want to distract of your righteous rant, but threads also work without issues when doing mostly IO: C libraries and implementations are free to release the GIL (and often do). So if you want to e.g. fetch a bunch of things concurrently, those will be done concurrently. And your<p>> have to run concurrently, even though they never do.<p>is way off base.<p>Likewise, if you're doing CPU-heavy crunching (likely implemented in C or Cython), you can release the GIL and let the interpreter run some other bytecode at the same time.",1347121982
4493259,comment,4492532,4493095,1,0,Evbn,,,"No, because space alignment only happens within blocks of common indent level. It works, try it.",1347121962
4493258,comment,4492914,4493022,2,0,nightski,,,"That is looking at it from the perspective of the individual.  But the company can choose to not care about its individuals and just try to get the most out of them until they burn out.  While not optimal this is pretty common in some startups in my experience.",1347121962
4493257,comment,4492899,4493162,1,0,tikhonj,,,"JavaScript also has much better scoping--Python's using = for both defining and setting variables makes life much more difficult.",1347121961
4493256,comment,4492899,4493226,2,0,pbiggar,,,"I agree it's not wonderful for command-line tools. We're writing a fairly large app with it (everything behind <a href=""https://circleci.com"" rel=""nofollow"">https://circleci.com</a>). Instead of single-run command line tools, you write functions that you call from the REPL. Took me a while to get used to it, but it's pretty great once you switch over.",1347121919
4493255,comment,4488869,4490599,1,0,eru,,,"Adding an OCaml-inspired ability to have multiple modules per file, might be good enough to get the namespacing right.",1347121890
4493254,story,,,1,0,mroling,"The failure of fly-outs",http://feistygoat.com/blog/2011/07/the-failure-of-fly-outs/,,1347121869
4493253,comment,4488682,4491794,2,0,aptwebapps,,,"Maybe you meant something more specific, but you seem to be implicating yourself. Here's what you said above:<p>""If a UX designer produces mocks and designs, they're a designer. If they produce software prototypes, that's called an engineer.""",1347121812
4493252,comment,4492899,4493166,4,0,kisielk,,,"The Clojure language is great, but the dependency on the Java ecosystem and the JVM are deal breakers for me.",1347121801
4493251,comment,4492899,4493184,1,0,masklinn,,,"> More frustrating to me is that there isn't an imap/ifilter builtin<p>FWIW, alongside the demotion of reduce to the stdlib Python 3 changed that, the builtin `map` and `filter` now return lazy ""views"" (as do e.g. `dict.items`, `dict.keys` and `dict.values`):<p><pre><code>    # python 2
    >>> map(sys.stdout.write, ['foo', 'bar', 'baz'])
    foobarbaz[None, None, None]

    # python 3
    >>> map(sys.stdout.write, ['foo', 'bar', 'baz'])
    <map object at 0x10071cfd0></code></pre>",1347121772
4493250,comment,4492914,4492914,11,0,sixQuarks,,,"I think Elon Musk has surpassed Steve Jobs as the best entrepreneur of the century (IMHO)",1347121764
4493249,comment,4492899,4493205,2,0,fauigerzigerk,,,"True, but it has to be said that for NLP, scientific computing and datamining, Python is used as a job control or glue language. The actual algorithms can't be written in Python and that is Python's biggest drawback for me.",1347121741
4493248,comment,4492532,4492621,1,0,Evbn,,,"There is huge programmer bigotry against writing code in a readable font. I do not understand why.",1347121729
4493247,story,,,1,0,jsonmez,"Tie Your Shoes and Pull Up Your Pants",http://simpleprogrammer.com/2012/09/08/tie-your-shoes-and-pull-up-your-pants/,,1347121700
4493246,comment,4492244,4492819,8,0,rbanffy,,,"Also worth pointing out this is <i>one</i> cheaply preventable dangerous medical treatment.<p>If people start going to doctors before they get sick, we<p>a) save a huge amount of money<p>b) create an incentive to advance preventive, low-cost medicine<p>c) get a better understanding of how medical conditions evolve within the community<p>All three are worthy goals (and b may even spur a very profitable industry)",1347121670
4493245,comment,4492899,4493002,2,0,FuzzyDunlop,,,"Similarly weirdly, the string join method really confuses me:<p><pre><code>    ''.join([1, 2, 3])</code></pre>",1347121656
4493244,comment,4492529,4492529,1,0,noamsml,,,"When I'm travelling about, I might not have easy access to a printer. This penalizes low-income and high-mobility travelers.",1347121654
4493243,comment,4492999,4492999,3,0,AznHisoka,,,"Check out the site Cookers for Engineers.",1347121600
4493242,comment,4492914,4493022,1,0,BasDirks,,,Ironic?,1347121568
4493241,comment,4492991,4493219,2,0,eru,,,"> (number of transistors per chip doubles every X amount of time)<p>That's closer, but still not there.  Moore was more specific: He talked about the chip that currently has the lowest price per transistor.<p>What really amazes me, is that Moore's law works backwards, too, for much longer periods than Moore had fitted the data to.  You need to relax the definition of transistor somewhat, though.  But punch-card looms still fit the pattern.<p>On a tangent: I wonder how long exponential progress in falling prices will last in the fields of genome sequencing and synthesis.  (I've also read that rechargeable batteries currently improve by around 8% a year.  I don't remember by which metric exactly, though.)",1347121552
4493240,story,,,5,5,cooldeal,"Amazon confirms: All new Kindle Fires stuck with ads",http://reviews.cnet.com/8301-3126_7-57508526/amazon-confirms-all-new-kindle-fires-stuck-with-ads/,,1347121544
4493239,story,,,1,0,tstandard,"Amazon Announces New Kindle Family with Audible and X-Ray Technology",http://torontostandard.com/technology/amazon-announces-new-kindle-fire-hd-and-kindle-paperwhite,,1347121536
4493238,comment,4492899,4493020,6,0,wonderzombie,,,"I endorse Go as a substitute for Python. Seriously! It may read like a spiritual successor to C, but in practice, with type inference, GC, and struct/map/slice literals, it's very (as the golang people put it) light on the page.",1347121508
4493237,story,,,1,0,suneel0101,"10 Principles of Effective Web Design",http://uxdesign.smashingmagazine.com/2008/01/31/10-principles-of-effective-web-design/,,1347121468
4493236,comment,4491766,4492757,1,0,shawnc,,,"Thanks for the link!!!  That too, is awesome.",1347121467
4493235,comment,4492899,4493092,1,0,masklinn,,,"> The code to call super is awkward. Instead of saying super(MyClass, self).foo(), I would rather just say super.foo().<p>That's been changed in Python 3. Although it brings other issues.<p>> Creating a class method using a method decorator. Using a decorator to do something like this seems like a hack to me.<p>Why? Even more so, why is a decorator more of a hack than adding a new keyword (java) or special-casing method declaration (ruby) itself? Note that you can also create class methods without decorators if you wish to, by using a metaclass (I believe the method won't be accessible from the instance though)<p>> This seems weird and inconsistent with the how method declarations work.<p>It's actually very coherent: every binding created in the class scope is collected and set on the class object, as if passed as the third argument to `type`. That's it. Some objects (functions) are processed a bit more, but they still end up in the same place.<p>>  methods only become class methods when a decorator is used<p>That's because the decorator is basically a flag to tell the attribute-resolution process to handle this method differently from the normal method-resolution process.",1347121443
4493234,comment,4493091,4493091,3,0,agscala,,,"When I'm browsing products on Amazon, I've found the reviews there to be very helpful and they've saved me from buying a lot of terrible products.<p>And on the flipside, I've never bought something because of good reviews that all turned out to be lies when I had the product in my hands a couple of days later.",1347121433
4493233,comment,363,363,2,0,jcr,,,"When a submission is new and has no comments, the link to the discussion
page reads ""discuss"".<p>When a submission is active and has comments, the link to the discussion
page reads ""# comments"" where the ""#"" is the number of comments.<p>After some period of time (yes, I know it's more complicated than just
time), the comments on a submission are disabled. Of course, this is
good, and it stops the stupid bot that always posts ""This is why we
can't have nice things.""<p>The trouble is when comments are disabled, the various submission
listing pages reads ""comments"" without the leading number. Since we're
trained to expect seeing a leading number from active threads, the
expectation when seeing just ""comments"" is that there are no comments at
all. It would be better if closed submissions are marked ""# closed"" or
better ""# comments (closed)"".<p>Although it seems you have a special exception for this ""Feature Request""
thread to allow submissions even though it's ancient, it still reads 
just ""comments"" without the leading number, and hence, we've got no clue
how much reading we might have to do.",1347121429
4493232,comment,4492999,4492999,2,0,japhyr,,,"Tartine Bread
<a href=""http://www.amazon.com/gp/aw/d/0811870413"" rel=""nofollow"">http://www.amazon.com/gp/aw/d/0811870413</a><p>The Bread Baker's Apprentice
<a href=""http://www.amazon.com/gp/aw/d/1580082688/ref=mp_s_a_1?pi=SL75&qid=1347121401&sr=8-1"" rel=""nofollow"">http://www.amazon.com/gp/aw/d/1580082688/ref=mp_s_a_1?pi=SL7...</a>",1347121426
4493231,comment,4492914,4492914,21,0,hinathan,,,"<p><pre><code>  It was a difficult thing that was made more difficult
  by one of our investors who was just an absolute
  bastard, nobody should ever take money from them.
</code></pre>
Anybody know whom he's referring to? Pretty harsh.",1347121410
4493230,comment,4492899,4493096,1,0,wonderzombie,,,"I've been digging into Clojure and reading Paul Graham's <i>On Lisp</i>. So I've been wondering about Python vs. Lisp lately, esp. on the topic of dynamism. I wish I knew more about Lisp to delve into this further, but your first para caught my eye.<p>Is it not the case that in Lisp people <i>tend</i> to use values lists of (probably immutable) data  rather than objects? Objects are in and of themselves their own flavor of custom, specialized language for interacting with a data structure. In Lisp, the language for interacting with lists of lists or what have you is, well, Lisp.<p>IME duck typing is not a real answer in this situation; that helps when you are programming to an interface in the standard library, or in an API you are using. Otherwise I end up hunting down information about a data type through N layers of method and function calls. Not a good time. :( This actually drove me towards Go as a language with comparable productivity but with a type checker, et al.<p>I'm not sure where Lisp macros fit into this, if they do. I expect they have a tendency to boil down frequently repeated patterns into something very compact and less error-prone.<p>As for IDE support, Rob Pike suggested (not in so many words) that if you <i>need</i> an IDE for your programming language, it suggests that something's probably wrong with that language. He's not disputing that people genuinely need them, because yes, jesus h, I really <i>do</i> need Eclipse when you're programming against a reasonably large API. I think I find this line of reasoning more convincing than I would have, say, a year or two ago.<p>Anyway, for my part, ST2 was enough of a Python IDE for me.  And thanks for the tip about Pyflakes, by the way. There's guard[1], which I figured you could rig up with python -c or whatever the flag is to compile. Pyflakes looks easier.<p>[1]: <a href=""https://github.com/guard/guard"" rel=""nofollow"">https://github.com/guard/guard</a>",1347121371
4493229,comment,4492619,4492909,1,0,robodale,,,"Thank you for this link.",1347121367
4493228,comment,4492619,4492619,2,0,robodale,,,"This was a very good article.  I have never thought about or considered looking at potential costs this way.  Thanks.",1347121337
4493227,story,,,1,0,Arkid,"Creating wordpress dump(.wxr) using unix and mysql",http://stackoverflow.com/questions/12332372/creating-wordpress-dump-wxr-using-unix-and-mysql,,1347121323
4493226,comment,4492899,4493166,5,0,fauigerzigerk,,,"For some people the JVM is a deal breaker. I can't say it's a deal breaker for me, but I do understand some of that sentiment.<p>You can't write command line tools in any JVM language because of that long startup and warmup period, and you're always going to suffer from excessive memory consumption.<p>Also, lack of easy access to C/C++ code is problematic for some types of software.",1347121302
4493225,comment,4492899,4493096,3,0,dkarl,,,"<i>What I have seen happened on badly engineered large projects is people blaming it on dynamic typing because there is no documentation and no structural integrity in the project.</i><p>This can be a problem in static languages with good type inference, too.  When reading code in older static languages like C++, you'll find a bunch of variables and types declared, but powerful and concise languages such as Scala have much less use for intermediate variables, and type inference means that  intermediate variables are almost never declared with a type.  Field types and method return types often aren't declared either.  I don't know if this is a good thing because it forces you to read a lot of code, or if it's a bad thing because it forces you to read many unrelated bits of code when you're trying to get something simple done.",1347121297
4493224,comment,4492619,4493113,1,0,dbot,,,"Agreed.  I would be interested to hear thoughts on this as well.  As an example, if Coca-Cola uploaded its secret formula to a Dropbox, the damages resulting from a data breach would seem to be immeasurable.  But I'm sure Dropbox's TOS limits damages to cost of the service (no extraordinary, consequential, etc.)  Is this amount what's at issue here, or is there something I'm missing?",1347121294
4493223,comment,4491766,4492919,4,0,shawnc,,,"It's not 'just' the work of Photoshop tho.  There is a link to ones closer to the original in this discussion thread, and those are still extremely impressive.<p>All in all, I stand by my statement.  These are accurate depictions of the color at that time, and as ludicrous as it seems - my brain is blown away that there was so much color.  I know obviously there was - but years and years of my visual representation of that time period tries to tell me differently.",1347121278
4493222,story,,,2,0,001sky,"A Note on Convertible Debt",http://www.avc.com/a_vc/2012/09/convertible-debt.html,,1347121258
4493221,comment,4492899,4492899,7,0,tptacek,,,"""It's far from the metal""? No it isn't. It has <i>ctypes</i>, which is one of the best FFIs I've worked with. I wrote a trampoline-injecting kernel debugger in it. I don't love Python, but that answer disqualifies itself.",1347121241
4493220,comment,4492899,4493206,1,0,masklinn,,,"> Well in my case foo = Foo(); print foo.bar will print 1<p>Of course it will, Python's attribute-resolution (as do most languages) tries the instance, then the class, then the superclass, then... why wouldn't it work?<p>> I just remembered there to be some case where it didn't behave the way I expected it to (e.g. instance member assignment overriding the content of another instance)<p>Only two way I see for that to happen:<p>1. Re-setting the member on the class itself, not the instance<p>2. Or having the member be mutable and mutating it, since it's set on the class it's shared by all instances.",1347121200
4493219,comment,4492991,4493195,3,0,noamsml,,,"Moore's law as commonly understood (single-threaded computing power doubles every X amount of time) is already false.<p>Moore's law as originally stated (number of transistors per chip doubles every X amount of time) is probably only true for a short while longer.",1347121086
4493218,comment,4492899,4493189,4,0,masklinn,,,"Lower syntactic and semantic overhead, pretty much all of the language semantics are built from two properties/behaviors (and hooks into the interpreter): blocks and sending messages.<p>Sending messages are method calls, the difference is mostly contextual. Blocks are first-class functions with closures <i>and nonlocal returns</i>. That part's important when you're trying to implement e.g. loops (otherwise you have to add flags or throw exceptions, as in Javascript).<p>In Smalltalk, iteration is a message and a block:<p><pre><code>    aCollection do: [item|
        ""process item""
    ]
</code></pre>
but that's not exactly rare these days. On the other hand, a conditional is a message and two blocks:<p><pre><code>    aBoolean ifTrue: [ ""code if true"" ] ifFalse: [ ""code if false"" ]
</code></pre>
A repeat loop is a message to a block on a block:<p><pre><code>    [ ""dynamic condition"" ] whileTrue: [ ""repeat while true"" ]
</code></pre>
and so's a try/finally:<p><pre><code>    [ ""a piece of code which may blow up"" ] ensure: [
        ""error recovery code"" ]
</code></pre>
or a try/catch:<p><pre><code>    [ ""a piece of code which may blow up]
        on: SomeError
        do: [ :sig| ""error handling"" ]
</code></pre>
What this means is that there are very few special cases in the language, and the user of the language has the same power of expression as the <i>designer</i> of the language (much as in Lisps or Forths), the only limit is the hooks into the runtime but that's about it.<p>Also, message cascading is a minor but way cool (and pretty much unique) feature of Smalltalk, it lets you have your cake (return interesting values from methods) and eat it too (chain calls):<p><pre><code>    someObject
        aMessage
      ; anOtherMessage
      ; yetAnOther
      ; andOneMore
</code></pre>
will send all 4 messages to the same `someObject` <i>no matter what the previous message returns</i>.<p>That tells you what the language's priorities are.",1347121064
4493217,comment,4491766,4492555,2,0,sjwright,,,"I didn't say it had passed, I said it was competitive... there may be some edge case scenarios where medium format film is still justifiable.<p>But when you factor in the convenience and availability of products like the D800, 5D3 and 1Dx, and combine that with the cost and quality of compatible glass, medium format starts to look like a marginal call indeed.<p>(Bear in mind, medium format DIGITAL is another thing altogether. That stuff kicks the pants off any of the pathetic baby toys made by Canon and Nikon.)",1347121058
4493216,comment,4492875,4493187,6,0,middayc,,,"Red was announced and started last year in March. It's basically 2 languages and until last month development was going towards compiled low-level dialect Red/System. I was actually impressed by speed of things moving in Red/System and many members of small REBOL community contributed to it. (It had GTK bindings, ZMQ, port to android, while it was still in development).<p>The announcement this week about ""print 1"" is about the fact that now the ""Red"" (higher, rebol-like level) language is also at the brink of working.",1347121010
4493215,comment,4488946,4490289,1,0,mikeash,,,"The irony of your crushingly ignorant post nearly killed me.",1347120988
4493214,comment,4492875,4492987,7,0,barik,,,"> If Carl had the presence of mind back in 1998 and open sourced enough of the Rebol eco system to be useful for web platform development, then /index.r rather than /index.php might have been one of the most popular default documents in the world.<p>Not only that, the price point is incredibly high at $249.00. I say this as a person who actually has a REBOL/Pro license. It was never clear to me what the business model for this product was, especially since the free version of REBOL was often more up-to-date and feature-complete than the paid product.",1347120938
4493213,comment,4492532,4492532,1,0,dickbasedregex,,,"Indenting with spaces is like carving your own girlfriend out of a block of pine. And insisting that everybody else make out with her.",1347120864
4493212,comment,4492899,4493208,3,0,pbiggar,,,"Same problem - I have to rewrite my lovely list comprehension  instead of just adding a statement to the body.",1347120845
4493211,comment,4492899,4493037,3,0,Flow,,,"There's no need for a super class to have a len() method. I don't get your reasoning here, Python is not a statically typed language.",1347120816
4493210,comment,4492899,4493188,4,0,pbiggar,,,"Right, I meant using statements, sorry. It's been quite a few months since I wrote python, so I think I've forgotten most of the details.",1347120767
4493209,comment,4492687,4492774,2,0,mburns,,,"<a href=""https://developer.mozilla.org/en-US/demos/detail/bananabread"" rel=""nofollow"">https://developer.mozilla.org/en-US/demos/detail/bananabread</a> - seems to be quite performant for a javascript 3d fps.",1347120647
4493208,comment,4492899,4493180,1,0,Daniel_Newby,,,"Just define a nested function above and call it in the list comprehension.",1347120621
4493207,comment,4488561,4488561,1,0,finalcut,,,"I realize I'm pretty late to the game on commenting here.  I don't comment often.  I've been on HN for 1558 days and have a karma score of 7.  But here are my thoughts.<p>I use reddit for entertainment purposes (for the most part) and I use HN for educational and inspirational purposes.  That was why I started using HN and it is still why I do.<p>Sure, as the community has grown, there have been more comments that add no value - but they are just more obvious now.    It isn't that hard to ignore them and to find the meaningful or useful comments.<p>On the surface the ""cost karma to post"" idea sounds great - it certainly wouldn't have much effect on me - but I agree with the various others who think it would discourage unpopular but still very useful and (at times very correct) comments.<p>If the price to pay to get a well rounded discussion is the presence of vapid commentary - then I'm willing to continue to pay it.",1347120621
4493206,comment,4492899,4493042,1,0,DeepDuh,,,"Well in my case foo = Foo(); print foo.bar will print 1, so it does 'kinda' work as a default value. And that's ok, I just remembered there to be some case where it didn't behave the way I expected it to (e.g. instance member assignment overriding the content of another instance), but I wasn't able to reproduce it right now.",1347120608
4493205,comment,4492899,4493158,4,0,Alex3917,,,"You can use it to make websites, do scientific computing, NLP, email processing, datamining, big data, etc. If you're just trying to throw up a website then Ruby or Javascript are fine, but if your backend involves lots of different types of computing then Python is pretty much your only option. So if you have an idea for a minimum viable product but you don't really know where you want to take it two or three years down the road, then it really just seems like the most pragmatic option.",1347120564
4493204,comment,4492899,4493013,1,0,aptwebapps,,,"To elaborate on masklinn's answer, you need to add the @classmethod decorator to get a class method instead of an instance method.",1347120535
4493203,comment,4492899,4493051,2,0,whalesalad,,,"I'd like to think/hope that no one would ever judge a language on it's FTP library =)",1347120534
4493202,story,,,1,0,unixroot,"BASTARDS | The Hacker News - Security Blog",http://thehackernews.com/2012/09/bastards.html,,1347120498
4493201,comment,4492287,4493043,1,0,zvzgfghvjvthfzt,,,"Wait, you password directory is stored unencrypted. Not the way to go.",1347120471
4493200,comment,4492899,4493162,2,0,whalesalad,,,"I've been heavily involved with python and javascript for most of my programming life and find them to be very similar. It's a joy to write in either language.",1347120470
4493199,comment,4492899,4493173,1,0,masklinn,,,"Although you can also (and that can be rather neat when e.g. mapping or filtering) use the method as a function, if you get it from the class:<p><pre><code>    f = Foo()
    Foo.bar(f)
</code></pre>
note that it will typecheck the first argument to ensure it's an instance of `Foo`, it's not a function, it's an <i>unbound method</i>:<p><pre><code>    >>> class Bar(object): pass
    ... 
    >>> b = Bar()
    >>> b.n = 66
    >>> Foo.bar(b)
    Traceback (most recent call last):
      File ""<stdin>"", line 1, in <module>
    TypeError: unbound method bar() must be called with Foo instance as first argument (got Bar instance instead)</code></pre>",1347120457
4493198,story,,,2,0,craigkerstiens,"O/R modelling interlude: PostgreSQL vs MySQL",http://ledgersmbdev.blogspot.com/2012/09/or-modelling-interlude-postgresql-vs.html,,1347120441
4493197,comment,4492991,4492991,23,0,btilly,,,"3 of the 4 are good.<p>The last is not.  Reed's law is a extremely optimistic version of Metcalfe's law which gives clearly nonsensical results.  And Metcalfe's law in turn seems to be overly optimistic.  See <a href=""http://spectrum.ieee.org/computing/networks/metcalfes-law-is-wrong"" rel=""nofollow"">http://spectrum.ieee.org/computing/networks/metcalfes-law-is...</a> for evidence that the real scaling law tends to be more like n log(n).  (See <a href=""http://www.dtc.umn.edu/~odlyzko/doc/metcalfe.pdf"" rel=""nofollow"">http://www.dtc.umn.edu/~odlyzko/doc/metcalfe.pdf</a> for several other lines of argument leading to the same result.)<p>Note that when I say ""tends to be"" I mean that, depending on the details of a social network, the scaling law can differ.  In particular a network that relies on relative strangers having interactions with other relative strangers, as happens with eBay and Airbnb, is going to scale much closer to Metcalfe's Law.  By contrast one that depends on developing a circle of friends, such as happens with Facebook, the scaling law will be closer to n log(n).<p>Disclaimer, I have a bias here since I'm one of the co-authors of the n log(n) law.  (Andrew Odlyzko did all of the work.  And then we found out that Bob Briscoe had independently arrived at the same conclusion based on data that he had access to at British Telecom.)",1347120416
4493196,comment,4492619,4493012,22,0,delano,,,"Just a side note for people like me: CYA is cover your ass.",1347120402
4493195,comment,4492991,4492991,1,0,MojoJolo,,,"When I read about geeky law, the first thing come to my mind is ""Moore's Law"".",1347120382
4493194,comment,4492244,4492424,9,0,nivertech,,,"This was figured not by Hebrews (ancient Israelites), but by ancient Egyptians.<p>Cysticercosis was endemic in ancient Egypt. Pork was a 
staple food for common people in Egypt, but priests had strict dietary laws and they knew that Cysticercosis caused by tapeworms from swine.<p>Ancient Israelites just adopted a lot of customs from Egyptian Priestly caste, like circumcision, calendar and dietary laws. Not surprising, considering Moses was raised as Egyptian.",1347120377
4493193,comment,4492687,4492687,4,0,Simucal,,,"I wrote something like this a couple years ago[1]. I also attempted to support ball-to-ball collisions.  I rarely do any graphics type programming so this was a fun diversion.<p>However, the simulation would slow down considerably after adding a few dozen balls.  This was largely due to the quadratic nature of my naive collision detection.  In order to remedy the speed problems I implemented[2] a quadtree I found online to assist me in culling a lot of my expensive collision checks. The bounds of the quadtree sections will appear as you begin to add balls.<p>Unfortunately the quadtree wasn't the performance savior I expected it to be.  I didn't notice a dramatic improvement in the number of balls I could support.  I also introduced a bug with the quadtree version where certain collisions are missed entirely.<p>Perhaps I should revisit this simulation and see where I was off.<p>[1] - <a href=""http://jsfiddle.net/simucal/RvA9w/33/"" rel=""nofollow"">http://jsfiddle.net/simucal/RvA9w/33/</a><p>[2] - <a href=""http://jsfiddle.net/simucal/RvA9w/"" rel=""nofollow"">http://jsfiddle.net/simucal/RvA9w/</a>",1347120360
4493192,comment,4462659,4463651,1,0,msh,,,"I had a PDA with a similar strong arm CPU, it was dog slow for complex pages with opera. Of cause I can't rule out the os as the culprit.",1347120346
4493191,comment,4492687,4492687,1,0,viraj_shah,,,"Thanks for putting up the email subscriptions",1347120265
4493190,comment,4492991,4492991,2,0,bshep,,,"Loved the youtube clip",1347120264
4493189,comment,4492899,4493067,1,0,recursive,,,"What's right with smalltalk and self that's wrong with c# and java?  This is a serious question asked out of a desire to learn the answer.",1347120241
4493188,comment,4492899,4493180,1,0,masklinn,,,"> it wont let you break it over multiple lines<p>?<p><pre><code>    result = [
        (value, process(value), process(key, value))
        for key in generator
        for value in generate(key)
        if some_condition(key)
        if other_condition(value)
    ]
</code></pre>
or did you mean something completely different? Maybe the problem of not being able to use <i>statements</i> in comprehensions (or lambdas)?",1347120235
4493187,comment,4492875,4492979,3,0,barik,,,"It may be the case that Red was created for the reason you state, but it simply doesn't appear to have the necessary momentum. And that's unfortunate, because REBOL does not have a lot of interesting and smart features, such as having mini-DSLs (""dialects"") for things like GUIs.<p>To date, Red can't even run without already having REBOL installed on your system. The project has been around for almost two years now, and only a few days ago has it successfully been able to do the program ""print 1"".",1347120137
4493185,comment,4492899,4493177,2,0,masklinn,,,"or `mkdir(p=True)`, maybe",1347120092
4493184,comment,4492899,4492969,3,0,emidln,,,"map and filter still exist. reduce was demoted into the stdlib instead of being builtin in 3.x.<p>list comprehensions generalize to other types (generator expressions (aka ""lazy sequences""), set comprehensions, dict compresions)<p>Compare this syntax (using dict comprehensions in 2.7):<p><pre><code>  {k:v for k, v in something.iteritems() if v == 3}
</code></pre>
to this syntax using map/filter:<p><pre><code>  dict(filter(None, 
           filter(lambda x: x if x[1] == 3 else None,
           something.iteritems()))
</code></pre>
More frustrating to me is that there isn't an imap/ifilter builtin (I understand that it's in stdlib, I'm just lazy).",1347120063
4493183,story,,,1,0,cool-RR,"Programming in the zone",http://blog.amir.rachum.com/post/31127785679/programming-in-the-zone,,1347120025
4493182,comment,4492678,4492678,2,0,espeed,,,"It does take a while to build understanding. Maybe the reason many people's understanding is so ""fragile"", as Feynman observed (<a href=""http://books.google.com/books?id=7papZR4oVssC&lpg=PP1&ots=esR08asR_V&dq=surely%20you%20must%20be%20joking%20mr%20feynman&pg=PA37#v=onepage&q=fragile&f=false"" rel=""nofollow"">http://books.google.com/books?id=7papZR4oVssC&lpg=PP1&#3...</a>), is because they don't spend enough time building it and so they only have surface-level understanding.<p>But once you get over the initial hump in whatever area you are digging in to, once you've explored it from every angle, you'll be able to move faster and make better decisions.<p>Rich Hickey spent a year researching and building his understanding before writing Clojure, and another before Datomic.  This practice would seem to go against the lean startup methodology, but maybe we shouldn't be starting a startup until we have done this for the technologies we are using.",1347120012
