ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
12828,comment,12828,9770,0,0,gRm,,,"Old news...<p>2005? Man you HAVE been under a rock haven't you? Hacker? Sigh...ok here's some coaching for you the next time you want to front.<p>1. - ""Hackers"" don't call themselves hackers, poseurs call themselves hackers. (and anyone reading this saying ""but I'M a hacker.."" guess wha? YOU r a poseur.)<p>2. - Web 2.0 is just another BUZZWORD. Like AJAX, LAMP and (gasp) blog. Duh, it's the web dummy, it's made of ALL KINDS OF TECHNOLOGIES.<p>3. - PHOTOSHOP over the web? Not for a LONG time buddy, IF EVER. Oh wait, lemme guess: ""The network IS the computer"" right? When will you hypemasters get the drift that not EVERY app is right for a BROWSER? Let me put this nice and easy for you, SOME APPS WILL GO TOTALLY WEB, MOST WON'T. You can't whittle every peg to fit your web-hole...you webhole.<p>4. - Google became BMOC BEFORE their IPO. If you were any good as a venture capitalist you would have seen that.<p>5. - SURPRISED to see lamers running windows? What, did you think they would be running Linux (sorry, GNU)? Not everyone wants to spend the $$ for a Mac. (Disclaimer: I do.)<p>C'mon man, smarten up. Oh, and yeah, IBM lost it's monopoly WAAAAY B4 2005. I think it was called OS2...maybe they should have hired a rock band...anyone have one of those Win95 discs with Weezer on it?<p>You were right about one thing. This is OLD NEWS. Dumbass.\n",1176526665
12827,comment,12774,12774,0,0,IMorgothI12,,,"This is partly why I can't understand my rejection. Google is looking for Crazy ideas.",1176526659
12826,comment,12619,12686,0,0,shiro,,,"You're half right.  Tuned Lisp code can be as fast as C, but you have to know the compiler so intimately that you can tell what kind of machine insturctions it is generating; you'll use ""disassemble"" a lot (""disassemble"" is a part of CommonLisp standard---you may get a sense how Lispers are performance freak).  Usually the bottleneck part is tuned to the point that it won't do any allocation and run-time type dispatch at all.<p>There's one big advantage of using Lisp over C for performance: Macros.  During optimization it is typical that you have to write several versions of code, changing bits and pieces, and run benchmarks to see what is optimal.  Macros allow you to generate different versions of code from simple changes of parameters, without incurring overhead of function call/variable reference etc.  (You can do similar thing in C++ templates, but Lisp macros allows much more).  If you can easily parameterize your code, you can try more ideas and run more benchmarks, so it is more likely that you'll find better optimization.<p>AN example: Allegro CL version 7 and later has Perl-compatible regular expression library, purely written in Lisp, that runs faster than Perl (at least at the moment I wrote it, using benchmark suite came with PCRE).\n",1176525753
12825,comment,12679,12679,0,0,dfens,,,"Sounds good to me.",1176524660
12824,comment,12556,12694,0,0,ias,,,igorsyl@gmail.com,1176523948
12823,comment,12507,12610,0,0,phil,,,"I think it's actually not a bad review of us if you filter the anger out. The only part of their post that actually stung was the bit about spellcheck, because it's not done. I wanted to have it finished for launch, but we felt it wasn't worth delaying for. But, we've rolled out two new versions so far today and we're gonna keep iterating fast.<p>The post also reminds me of this classic Kathy Sierra graphic: <a href=""http://headrush.typepad.com/photos/uncategorized/loveandhate_1.jpg"">http://headrush.typepad.com/photos/uncategorized/loveandhate_1.jpg</a>\nThese guys are talking about how much we suck, and around the world a blogger in France said ""je dois dire que je suis seduis par la legerete du systeme."" My French is poor, but I'm pretty sure that's ""I must say I was seduced by the system's simplicity."" This beats a collective shrug any day.",1176523948
12822,comment,12507,12507,0,0,ashu,,,"Uncov is the FOX News of the tech world.\n",1176523821
12821,comment,12619,12628,0,0,busy_beaver,,,"If Scheme will do, Chicken, Bigloo, and Gambit all compile to C code as an intermediate step (which you then run through gcc or whatever to generate the binary). Bigloo will also generate JVM and .NET output (.NET is still experimental).<p>I haven't worked much with Gambit, but have fooled around with both Chicken and Bigloo. Of the two, I found Chicken to be the friendliest (it also seems to have a somewhat more active community). Another possible advantage of Chicken is that it's directly supported by SWIG. There was some activity  on the Chicken mailing list a few months back about porting some game libraries. I don't know what the current status of that might be.\n",1176523261
