ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
108484,comment,108315,108315,0,0,marvin,,,"Seriously, what the <i>hell</i> is wrong with these comp.lang.lisp guys? All the citations I have ever heard from that place consist of derision, ridicule and wiping the hard drives of unwary readers. Do they want their language to ever become anything but an intellectual curiosity used exclusively by hardcore hackers?",1201993055
108483,comment,108433,108454,0,0,gibsonf1,,,"I'm very interested in the Arc vs. Lisp comparisons. (especially vs. CL)",1201992969
108482,comment,108368,108462,0,0,mixmax,,,"Well it's really hard to point to one, or even a few things that made the difference. But I'll give it a shot in no particular order:<p>1) Build something people want now - Notice the ""now"". My first startup revolved around searching and indexing information (think somewhere in between Google and del.icio.us). We did this before google came onto the scene and while altavista was still the king. Nobody understood what we were trying to do because we were a few years ahead of the pack.<p>2) Know your tech - I don't know how much it applies here since this is a pretty technical crowd. I'm a business guy (was anyway, in the startup I'm working on now I do the damn programming myself...) and in my first venture I didn't really have a grasp of the technology involved, which led me to some bad decisions. In the second one I purposefully absorbed technical information, and had a good grasp of what was going on in the technical department. Which wasn't easy since it involved both embedded programming, Phone carrier networks, hardware development and web programming. The same probably applies if you are the tech guy - learn bookkeeping, marketing, etc. if you don't know it.<p>3) Luck<p>4) Experience - having failed the first time it was much easier to see upcoming problems and what to do about them in the second.<p>5) Execution - In the first startup we thought we had the greatest product on earth and that it would sell itself as soon as somebody gave us the money to build it. In the second one I had learned that what matters most is execution. Making sure investors are happy, taking care of cashflow, making and keeping schedules, bookkeeping,  extuingishing fires of different sorts, etc. The idea isn't really that important - it's all about how you execute it.<p>6) Don't get too many ideas. In the first startup we had a great idea, and then another, and another, and another. And we lost focus. In the second we stuck with the idea, unless there was a good business reason not to.<p>7) People - My first startup was with a guy that was really smart, but in the end just didn't have the stamina to go through all the boring everyday stuff and all the downturns that inevitably faces a startup. This dragged the whole venture down, since I eventually ended up having to do everything. Second time around all three founders worked their asses off. Oh, and make sure you start a company with people that can do stuff you can't. If you are the tech guy do a startup with a business guy. Make sure you have as many bases covered as possible in this respect.<p>8) Patents only matter to investors. Give me a week and I will come up with ten ideas that can be patented. But nobody really cares about that. All customers care about is your product. And ultimately your customers will decide whether you are a success.<p>Hope it helps :-)",1201992482
108481,comment,108411,108465,0,0,pg,,,"A flight instructor once told me that flying single-engined piston planes was statistically about as dangerous as riding motorcycles, which I assume is more dangerous than driving cars.",1201992365
108480,comment,108470,108472,0,0,davidw,,,"I think I've noticed it a lot more as of late, but of course it could be that once I noticed it, now I notice it more often...<p><a href=""http://www.google.com/trends?q=web+properties"" rel=""nofollow"">http://www.google.com/trends?q=web+properties</a><p>This seems to vaguely support the theory that widespread use of the term is more recent, although it only goes back to 2004.",1201992201
108479,comment,108328,108328,0,0,bayareaguy,,,"His new rules:<p>- The big bounce is gone.<p>- Television ads don't matter as much as they used to.<p>- Technology allows a candidate to raise money quickly and inexpensively.<p>- Debates are a great way to come on late and make up for a lack of resources and endorsements.<p>His old rules:<p>- Appealing to one part of the party isn't enough.<p>- Adapt or die.<p>- Bad exit polls shape coverage.<p>- Win early somewhere or run darned close.<p>- Joining the race a lot later than everyone else doesn't work.<p>- Money still cannot substitute for likability or message or broad appeal.<p>- Ideas still matter.<p>Some of these seem remarkably similar to startup company tips we've seen here many times.",1201992123
108478,comment,108368,108429,0,0,fortes,,,"How do you pick an idea (from the many) to follow?<p>How do you pick your team and hire?<p>(I've asked many people, always good to get another opinion)",1201992015
108477,comment,108427,108427,0,0,spif,,,"Just updated with Google's Social Graph API and NoseRub.<p>BTW anyone starting to get a bit nervous about Social Graph API?",1201991928
108476,comment,108433,108456,0,0,dfranke,,,"How about this: make news.yc look right in Dillo (<a href=""http://www.dillo.org"" rel=""nofollow"">http://www.dillo.org</a>).",1201991829
108475,story,,,31,20,lisper,"What are programming languages for?",http://rondam.blogspot.com/2008/02/what-are-programming-languages-for.html,,1201991605
108474,story,,,5,0,drm237,"Social Graph visibility akin to pain reflex",http://radar.oreilly.com/archives/2008/02/social_graph_pain_reflex.html,,1201991331
108473,comment,108470,108472,0,0,aristus,,,"Spot on. The re-organization along old-media lines accelerated when Semel took over, all the way down to separate budgets, server allocations, and almost no communication between the ""properties"".<p>Frankly, I don't know what the fuck they were thinking... the most obvious effect of the internet on business is how it dissolves structures like that.",1201991056
108472,comment,108470,108470,0,0,pg,,,"They called them that at Yahoo in 1998.  I think it's derived from the entertainment industry, which Y was then trying to imitate.",1201990596
108471,comment,108115,108115,0,0,amrithk,,,"Interesting to see the things people are doing.<p>A few months ago, 2 of my friends from college and I came up with an idea for allowing people to create polls online and give them tools to look at the results in more detail. Only problem was none of us knew anything about web programming and design. We learnt a lot from reading forums, through w3schools and other websites. After more than 6 months of tinkering and working pretty much on weekends (2 of us work as bankers), we came up with PollBag (www.pollbag.com). Its probably a bit amateur but would love to know what you think. We are always looking to get constructive feedback.",1201990412
108470,story,,,5,4,davidw,"When did web sites become ""properties""?",,"Seems like one of those faddish language things.  When did it come to pass, exactly?  I suppose it appeals because ""property"" sounds a lot more concrete than ""web site"".",1201989630
