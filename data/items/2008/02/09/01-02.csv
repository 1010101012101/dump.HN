ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
112475,comment,112215,112401,0,0,imsteve,,,"The trick is, don't make conclusions about the article based on its title.<p>I found comfort in his anger towards the difficulty of developing for current web application platforms. The situation is obscenely bad.",1202522255
112474,comment,112129,112415,0,0,idea,,,"I've learned Haskell by reading online tutorials and articles, but a new book (Real World Haskell) will be published and will likely be a good introduction to Haskell.",1202522121
112473,comment,112296,112296,0,0,klocksib,,,"GNU Emacs. :)",1202521845
112472,comment,112355,112355,0,0,menloparkbum,,,"losers like this are why I quit using rails. well, that and the whole ungodly slowness thing.<p>rails doesn't provide any facility for testing the stuff that is actually hard to test - the frontend javascript/flash/ui layer. it makes it easy to test stuff that shouldn't need testing.",1202521767
112471,comment,112215,112215,0,0,bootload,,,"<i>""... You may actually discover that your customers actually want to host the software themselves, even though it’s a web app, in which case you have to do #terrible things# [0] to make your dorkus malorkus customers happy. ...""</i><p>When I read this bit with link to the Joel on Software article on Wasabi I realised the author missed the finer point of why.  From Joels article ...<p><i>""... And we have the ability to add any feature to the language that we want easily... this is the same power Paul Graham talks about in On Lisp, the power to invent new language features that suit your exact application domain. Lisp does this through a mechanism called macros. ...""</i> [1]<p>Wasabi was a summer project by a super bright Intern who created a real compiler. [2] Meaning if the need arises to port the application to another language it can be done.  For the price a one summers project Wasabi FogCreek can change languages without major re-writes.  Wasabi also means the source code can be released. The customers get the benefit of access to the code they run. FogCreek still get to charge hard cash.<p>Never underestimate Joel.<p>[0] Wasabi, <a href=""http://www.joelonsoftware.com/items/2006/09/01b.html"" rel=""nofollow"">http://www.joelonsoftware.com/items/2006/09/01b.html</a><p>[1] Wasabi, Ibid<p>[2] You can read more ""Up the tata without a tutu"" ~ <a href=""http://www.joelonsoftware.com/articles/fog0000000026.html"" rel=""nofollow"">http://www.joelonsoftware.com/articles/fog0000000026.html</a>",1202521160
112470,comment,112215,112347,0,0,xirium,,,"Hot pocket ( <a href=""http://www.urbandictionary.com/define.php?term=hot%20pocket"" rel=""nofollow"">http://www.urbandictionary.com/define.php?term=hot%20pocket</a> )? I wasn't famaliar with this phrase. Perhaps, I shouldn't have consulted the Urban Dictionary.",1202521093
112468,comment,112456,112456,0,0,aaroneous,,,"Congrats! :]",1202520785
112467,comment,112313,112313,0,0,kogir,,,"Yes, up to a point.<p>I've used two 19"" 1280x1024 monitors, two 20"" 1600x1200 monitors, three 20"" 1600x1200 monitors, and one 30"" 2560x1600 monitor.<p>The most productive, and what I use now are the two 20"" monitors.  With three there was always one on the edge I didn't really use, and the 30"" was horrible because minimize and maximizing windows was no longer useful.  Rarely if ever do you want something to be 30"" in size.<p>I'd guess what works best varies person by person, but once you have to move your head more than a little to see something, it's far enough away that you won't use it.",1202520730
112466,comment,112342,112409,0,0,a-priori,,,"Count me in on the git crowd. Having tried most of the distributed source control systems out there (hg, mtn, darcs, arch), I have to say git is my favourite. I've been using it daily for about 3 months now.",1202520623
112465,comment,112215,112307,0,0,vlad,,,"I suggest you revisit the handheld arena with an open mind in 2008.  Some things still apply, but with bigger screens, always-on internet connectivity, and built-in web browsers that support full html and sometimes flash and ajax, handhelds are trending towards relying on web apps for mobility and extensibility.  A web app should be the first mobile solution for a handheld because it is cheaper, easier, less wasteful in development, that also allows you to easily track statistics about which apps and features are being used, and how.<p>Then you can create a native version for the blackberry and iPhone to take advantage of one of the two things I believe make a native app advantageous at a later point in time:<p>1) synching the handheld's data with your web app, or\n2) saving data to access if you're without an internet connection.<p>As far as GUI elements go, the iPhone lets you make your program look like a native application.<p>As far as speed of access, launching an app on an older treo model would take at least 2-5 seconds, especially a database application.  You can load a web page over Wireless-G in today's handhelds in that time.",1202520444
112464,comment,112296,112296,0,0,bprater,,,"Ultraedit+WebDrive was my wet dream. It was the only thing holding me back from switching to Mac 100% of the time, until Panic churned up Coda.",1202520339
112463,story,,,1,0,dkokelley,"Steve Ballmer Should Focus",http://www.macobserver.com/article/2008/02/08.8.shtml,,1202520311
112462,comment,112456,112456,0,0,wallflower,,,"Congratulations!!<p>I'm an armchair film aficionado. I went to a pitch competition featuring pre-vetted aspiring film makers last year and it was fascinating enough to make me start wondering about the whole process and if I really could write a  potential screenplay.",1202520197
112461,story,,,11,4,luccastera,"Heroku | the Ruby on Rails Podcast",http://podcast.rubyonrails.org/programs/1/episodes/heroku,,1202520129
112460,comment,111956,112290,0,0,yariv,,,"Thanks :)",1202520047
112459,comment,112296,112296,0,0,aaco,,,"Vim. Both for Windows and Linux I use it, it's a good and very powerful editor. However it's not the type of editor that you'll get how to use it in 5 minutes (well, this is true for the very very basic use, just press ""i"" to insert text).<p>Download the self-installing executable here:<p><a href=""http://www.vim.org/download.php#pc"" rel=""nofollow"">http://www.vim.org/download.php#pc</a>",1202519821
112458,comment,112456,112456,0,0,jawngee,,,"Most difficult project of my career, almost a year and a half from idea to launch.<p><i>wipes sweat from brow</i><p>Thanks to hacker news for keeping me occupied when I should have been coding.",1202519813
112457,comment,112430,112430,0,0,nostrademons,,,"It's very hard to reliably obfuscate JavaScript because the language is dynamic enough that you might refer to object fields or function names through dynamically-computed strings.  Any attempt to obfuscate these runs up against the halting problem.  So you have to rely on conservative approximations...<p>Packer (<a href=""http://dean.edwards.name/packer/"" rel=""nofollow"">http://dean.edwards.name/packer/</a>) will rename all local variables to single characters, along with removing all whitespace and optionally base-62 encoding the text.  It also has a compression scheme, but it's trivial to defeat this by replacing eval() with document.write().  I think that's the best you can do with any JavaScript-only compressor.<p>I should probably mention that even JSMin'd text is a real pain to go through.  Someone that's dedicated enough could do it (just like how people were reverse-engineering the Google Maps frontend), but nobody wants to read through a lot of code with no indentation.<p>Also, you're much better off with one large JSMin'd file than a bunch of streamed sections.  Aside from being simpler, it's more to look through.  Otherwise, people can sniff the stream through Fiddler or Analyzer and take a look at <i>when</i> segments are loaded, which often gives them more information than they'd have otherwise.  And re-indenting 500k is a lot more of a pain than re-indenting a 500-byte segment.",1202519786
112456,story,,,14,20,jawngee,"We launched: massify.com",http://massify.com/competitions/machine/,,1202519758
112454,comment,112129,112225,0,0,mfp,,,"... but they use OCaml to prove that there are no run-time errors (RTE) in their code :-)<p><a href=""http://www.astree.ens.fr/"" rel=""nofollow"">http://www.astree.ens.fr/</a><p>""In Nov. 2003, ASTRÉE  was able to prove completely automatically the absence of any RTE in the primary flight control software of the Airbus A340 fly-by-wire system, a program of 132,000 lines of C. [...] From Jan. 2004 on, ASTRÉE was extended to analyze the electric flight control codes then in development and test for the A380 series.""",1202519084
112453,comment,112355,112355,0,0,awt,,,"I know of rails app that was sold last year for a decent price that was untested.  Are the people who wrote it idiots?",1202518859
