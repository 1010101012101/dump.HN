ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
380768,comment,379948,380528,0,0,GHFigs,,,"I daily thank sweet merciful Christ that this isn't reddit, but the more people like yourself I find here, the less I'm able to believe that. Being accused of being a ""one man downmod squad"" <i>as if I even remotely gave a shit about moderation</i> is a big red flag. I care fuckall for a popularity contest, and I find it personally offensive that your argument has fallen to suggesting that I do.<p>Additionally, you have no idea what my political affiliations are, and I'm not about to explain them, because I am not interested in having an argument over politics, just as you formerly claimed to be. To be clear: I may or may not have voted for Obama, I may or may not be of voting age, and I may or may not be a U.S. citizen.<p>Personal attacks aside, you're still wrong.<p>Of course my analogy is ridiculous.  I thought the ""lizard person"" bit gave that away.  The point was that your unorthodox interpretation of the original text is itself nearly as ridiculous in that it completely discards every other statement prior or subsequent in favor of a reading that while <i>literally</i> unambiguous in isolation, is very unlikely to be accurate.<p>Consider this sentence: ""All Jews will die."" On the one hand, it's factually accurate. On the other, it can be read as a threat. Context is vital, and is not to be ignored. It is in fact most important when potential interpretations are most disagreeable.<p>At no point did I deny that that the text formerly read as it did. What I deny is that your interpretation of that text accurately reflects the intent of the message.  I've given reasons above and in my prior posts, none of which you have contradicted. That changes have been made is not in question, but as your point rests in the idea that ""major, substantial"" changes are being made, and your evidence for that substance is demonstrably flimsy, I don't see where you have done anything more than confirm the statement you were responding to in the first place.  That, and insult me.<p>(Incidentally, how do you know the site did not once unambiguously advocate euthanasia and consumption of the elderly? Isn't it central to your case that this is currently unknowable? Aren't you just making an assumption based on the improbability that Obama would suddenly make such a significant change to his agenda only to shortly thereafter remove it?)",1228035322
380767,comment,379942,379942,0,0,Ezra,,,"You're mistaking the first term of university with the University™ that everyone else is talking about retrospectively.<p>What they mean by University™ is usually ""the last 2 years of university"".<p>Year one, if your experience is like mine was, is where you get the breadth part of your education in.  My first year was 20% philosophy, 20% English, 20% math, 20% CS, and 20% political studies.<p>And it was all mostly tripe.  The math was basic calculus; the English was Donne, <i>Gawain</i>, Shakespeare, and some other BS; the philosophy was Socrates and Aristotle; the CS was basic ""this is a for loop"", and the politics was Locke, JS Mill, Engels, etc. ...<p>All extremely basic.  The first year is unlearning what your retard HS teachers told you, giving you some basis in the ""you're supposed to know this text""-texts in each field, and getting everybody up to a base level to continue from.<p>Of course you're going to be bored...  the three golden rules to surviving are 1) finding out what profs are good, and then taking their classes, 2) not scheduling a lecture before noon (at my school they put nearly all the first year math classes at 8:30 ... brutal) and, most importantly, 3) playing Super Smash TV with the other smart kids.<p>You don't learn anything because you (you being the average student) are a fucking retard.  This becomes especially clear years later when you (you being the smart kid) serve as a TA for some first year class.<p>This problem is especially apparent in CS, because there is, depending on where you live, and what school you went to, either a) absolutely no curriculum at all, or b) some retard teaching kids goto in BASIC on crappy 80's computers, or worse.  You can learn decent CS in HS, but that's far from typical.<p>And when you put the kids with no exposure whatsoever to programming in the same class as people with a decade of experience ... of course the smart kids are going to be bored; you're supposed to be.<p>So, in first year you get the hammer.<p>The second year is more interesting because you actually might learn something.  Or, at any rate, will be required to work.  This year is usually when they separate the people who think they want to be an X, from the people who actually do.<p>This year you take 30% math, 50% cs, some physics or chemistry, and (if you're like me) more philosophy.  In your CS, if it's like where I went (when I went), you a bunch of new stuff... I went from a shaky understanding one and a half programming languages, to being pretty good in a few ... if you make it through.<p>Also, by this time you've learned all about requirements engineering if your professors are as ""evil"" as mine were.
<a href=""http://portal.acm.org/citation.cfm?id=1121475"" rel=""nofollow"">http://portal.acm.org/citation.cfm?id=1121475</a><p>Still, you're not learning anything that interesting, doing (relatively) toy apps in assembly, prolog, Eiffel; but you learn more advanced procedural and OO stuff at this point, and can begin to postulate on the pros and cons of multiple inheritance, and tail v. head recursion, for instance.<p>Again, nothing ground-shaking, but you learn how to swing that hammer you got earlier in a useful manner.<p>Third and fourth year are where you begin to specialize, and most of the classes are awesome.  Also, by this time, you're old enough to drink (in Canada).  You're taking 60% CS, 10% math, and pursuing your interest in X with the other 30%.<p>All of your classes are taught by pretty much the most intelligent and passionate people around, and everybody is there because they want to be, and interested in learning, and you're learning about stuff that's actually cool.<p>And you spend all of your ""free time"" playing with robots (or kernels, if that's what you like, or compilers, or whatever), and building stuff with your friends.<p>University's awesome. (I finished in October.)<p>About the fourth year student thing ... some people are fucking dumb but manage to scrape by with ""group projects"" that their smart friends complete, and middling test scores... whatever.  This is not a phenomenon exclusive to ... anything, really.<p>And I know tonnes of smart people who suck at programming contests ... they're not real.  It's kind of like having a waitress who's a world champion at stacking cups ... I can't really see it hurting, but I'd rather have someone who gets the orders right, and brings the food out while it's still warm (and flirts with the programmers!) than who can stack cups quickly.<p>The biggest thing to realize is that even if you're at a shit university, there is someone there who's incredibly intelligent and passionate about what they do ... and they have a propensity to like others who are intelligent and passionate about what they do.<p>They want to help you learn more than almost anything; the caveat being that you have to want to learn.<p>Ask to help them out ... they might even give you money for it.<p>Or, if that's not your alley, spend all day trying to break something, or create a monster (with your friends, of course).",1228035288
380766,comment,380681,380681,0,0,gruseom,,,"Looking back, I'm amazed at how long it took me to awaken from the dogmatic OO slumber. One of the things that snapped me out of it was realizing how mechanical and low-level the GoF patterns are. Combine that with the tight coupling you get in object models (a foo has a bar and a collection of bazzes, each of which has a bizzat, and they each tell two friends, and so on and so on) and you end up with very rigid code. That medium is concrete and concrete hardens awfully quickly.<p>Nowadays, my programs are orthogonal sets of functions that I can combine any way I want to, with no object model to wrestle into submission, and my world is blissfully design-pattern-free.<p>Freud said sometimes a cigar is only a cigar. I say sometimes a function is only a function.<p>Edit: I exempt Smalltalk from this generalization about OO. I've met too many smart, well-informed people who prefer Smalltalk (at least half a dozen!) to believe that what Smalltalk programmers do is OO of the kind that I experienced. Alan Kay's writings on the subject confirm that.",1228034952
380765,comment,380558,380618,0,0,apu,,,"I would actually argue the opposite: the IBM job (or some equivalent big-company job) will always be there. The startup opportunity at [name your startup here] is only available now.<p>Big company jobs tend to be alike in many ways (due to their size), whereas startups vary so significantly that it's deceptive to think of all startups as interchangeable.<p>So yes, there will always be <i>some</i> startup opportunity available, but if you know that there are good people working at this one, or if they're working on interesting things, then I think it's a better option.",1228034574
380764,comment,380686,380760,0,0,sh1mmer,,,"Sigh. And this is why I shouldn't stray outside of my realm of expertise late at night, even if it seems like an interesting diversion.<p>Thanks for the correction :)",1228034529
380763,comment,380558,380558,0,0,apu,,,"I haven't faced this problem myself, but I have a few friends who've been in somewhat similar situations before. Most were more interested in the smaller company, but due to various reasons (rationalizations?), ended up picking the bigger company job (ibm/microsoft/amazon/google). Despite their stated intentions to only work for a few years to learn how things work in the ""real world"" and, of course, make some money, they seem to have no real intention of leaving now.<p>At the same time, with the exception of one of the Google people, none of them are particularly interested in the work they're doing. So it seems that earning the big money and having relatively stable, secure, and only slightly challenging jobs becomes a local maximum that is hard to escape from.<p>So while it's true that you'll probably have many jobs over your career and in the end what you choose may not matter as much as you might think, it does seem tougher to go from big company -> small startup than the other way.<p>Another data point (anecdote) about IBM specifically: I know 4 people who work (or have worked) at IBM, on the software-side of things. None of them says that it's very hard. One actually quit because he said it was ridiculous that everyone just constantly slacked off and nothing got done. On the other hand, the one person I know on the hardware side of things at IBM says that the work is interesting, challenging, and fairly busy.",1228034316
380761,comment,380740,380740,0,0,nreece,,,"Maybe in the middle of a server migration and/or IP propagation.",1228033936
380760,comment,380686,380746,0,0,randomwalker,,,"Damn. I think you managed to get every single number wrong :-)<p>First of all, FLOPS is not the same as FLOPs / cycle. Note the lowercase 's'.  The former is floating point operations <i>per second</i>. The latter is per cycle. To convert the latter number into FLOPS, you have to multiply by the clock speed. That gives you 10^10 FLOPS, or 10 gigaflops. Now that's <i>per-core.</i> You said quad-core, so it's 40 gigaflops per processor. 4000 processors, so it's 160 teraflops. Much higher than the slowest on that list, but much lower than the fastest.<p>The other thing you got wrong is that if it were a mere 20 megaflops, it would have been a factor of a <i>million</i> slower :-) Tera is 10^12.<p>Anyway, I think this whole thing is apples-to-oranges because actual supercomputers have a much more tightly inter-connected grid (I believe) than the sort of loose cluster that Hadoop typically runs on, and further, they have a different programming model (Fortran with MPI and things like that.)",1228033851
380759,comment,380599,380755,0,0,wheels,,,"It's used by a lot of enterprise software -- like the kind that will still be running more or less unchanged a decade from now.<p>I find it a pain in the ass to write SOAP interfaces, but I don't mind at all working with them.  Running a compiler on the WSDL file for my programming language of choice is often a lot faster to get up and running than wrapping a REST API and WADL seems not to have really taken off.",1228033644
380758,story,,,38,14,astrec,"The SEC",http://blogmaverick.com/2008/11/30/the-sec-2/,,1228032469
380757,comment,379460,379821,0,0,neilk,,,"Sure. It is often due to dysfunction, but it can even happen to good teams.<p>Imagine you have to fix a simple bug, like the description of an option in an HTML page.<p>Imagine that: the codebase is a bajillion lines of Java or C++ that no one person truly understands any more.<p>Imagine that: fucking up is considered bad. Maybe you're protecting important user data, or maybe it's just code for the online store, and even an hour of downtime can wipe out the day's profits.<p>The team is so big that your feature is scheduled for deployment along with four or five others this week.<p>As usual, management has skimped on QA so there are not enough of them to go around. Also, QA was added late, so there's no fast automated test suite. It takes them a full week of manual and semi-automatic testing to go through all regressions.<p>After that week of testing in development is over, then it goes to staging, where it's tested with real live data and staging subsystems.<p>At least somewhere in this, something breaks (something is always breaking) and a fix is produced. Then the new build is tested all over again, with the basic smoke tests as well as any test suites that are applicable to that unit of code which broke.<p>This is causing another trainwreck because we promised feature X to client Y by end of the month. What do we do? Emergency team meeting! Let's rebalance the work schedule.<p>Meanwhile, your change, which just a simple HTML fix, languishes as this build goes into its second round of testing.<p>Oh, and did we mention that you have to have submitted your code in time for translation into six languages? I'm afraid that the French translator did not produce a satisfactory translation in time, so we're going to have to hold your change back. Can you revert this and put it in next week's build? Thanks.",1228032408
380756,comment,380435,380745,0,0,jhancock,,,"More likely examples are hacking into sites that don't use two factor auth, like your domain registrar or web mail accounts.<p>If you are using any form of online banking without two factor auth, find another bank!!!  Even paypal offers a security token these days.",1228032031
