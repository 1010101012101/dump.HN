ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
45843,comment,45833,45833,0,0,palish,,,"<i>""I wonder if sometimes it's worth ignoring the extra information entirely, and solving a simpler version of the problem instead?""</i><p><i>Yes</i>. Always.",1187902787
45842,story,,,15,3,byrneseyeview,"An Independent Journalist solves a 2400-year-old Mystery",http://www.law.umkc.edu/faculty/projects/ftrials/socrates/ifstoneinterview.html,"I. F. Stone was an amazing guy.",1187902601
45841,comment,45799,45799,0,0,jsjenkins168,,,"I honestly hope I will never have to worry about stuff like this... Ugh.",1187902597
45840,comment,45833,45833,0,0,brianmckenzie,,,"Yes, I get these too. Pretty much every time I talk to someone who takes an interest in my startup, they raise some issue that I either hadn't thought of at all or hadn't thought about in the same way. That doesn't even cover the hacking-related 'oh crap' moments, but most of mine have been conceptual so far. It's to be expected: there are tens of startups in my space, I assume that some are technically better and many are worse.<p>As you point out, the hardest thing may not be the 'oh crap' moment but rather what conclusions you should draw from it, if any. In most cases I have elected to go simpler when in doubt. Other times I've decided to re-think various aspects of my project, but these are in the minority.",1187902523
45839,comment,45698,45698,0,0,eusman,,,"The most interesting article I read from PG the past year.<p>Holding as much of the program in your head gives you the power to identify what will give you the best optimization.
Also this may be the short explanation why good software is written by teams of max 2-3 people!",1187902468
45837,comment,45721,45721,0,0,portLAN,,,"> <i>To maintain intellectual honesty and consistency, MIT should announce that it would henceforth stop requiring formal credentials in evaluating candidates for this and other similar jobs. In other words, future candidates like her, who feel confident in their ability to perform the job, shouldn't feel the need to invent degrees on their resumes. Come on, you may say, how are they supposed to find out who is a good candidate and who is bad. Well, they hired her based on an invented degree, didn't they? Didn't she work out OK for 28 years? Then why pretend that the degree was actually needed in order for her to perform her job?</i><p>Exactly.  I do have an answer for that, however: If they didn't require degrees for the job, they would undermine their own degree-selling business.<p>A majority of college students are in college because a degree is supposed to help them get some unspecified job, sometime later, out of a job pool which purports to pay better on average than the jobs that let you in based on mere ability.<p>In effect, colleges have taken on some of the characteristics of shady employment and modelling agencies, the ones that tell candidates to pay a fee and they'll help them get placed.  We always hear how the legitimate ones don't charge fees in advance.<p>If college was only about teaching people what they desired to learn, enrollment might drop by an order of magnitude or more.  Like any business, it wants to grow, and so they find ways to market themselves (""you need a degree to get a good job!"") and arrange guaranteed contracts for themselves (encouraging you to take on debt) to further their own interests, not yours.  Hence they tack on mandatory fees for all sorts of things you may not want and they establish mandatory requirements in <i>quantity</i> of ""units"" (as if 3 ""units"" of English or Computer Science makes any sense).  Required classes are essentially a jobs program for professors of the less-popular subjects, guaranteeing enough sign-ups to keep the money rolling in for people who would otherwise be unemployable in that capacity.<p>You can learn <i>most</i> academic subjects out of the book.  Having someone read the book at you and write a few phrases from the book on a chalkboard doesn't add information.  All it takes is a tiny bit of initiative on your part to learn it on your own without someone else telling you to do it.<p>If you don't have that initiative, it's probably because you spent K through 12 always waiting to be told what to do by someone else.  The usual classroom method is generally inefficient and it purposely stops you from developing self-direction.  Why?  Because a good employee needs to do what s/he's told and take direction from a ""superior"".  They don't want you to be self-directed -- how's a megacorp going to exist if there're a million little start-ups running around?
",1187902333
45836,comment,45506,45506,0,0,pfedor,,,"I think the replacement for the high school system should be based on similar principles as the chess clubs. I don't know if there is such a thing in the US so let me tell you a few words about how chess clubs worked in Poland (and I assume in all countries of the soviet block).<p>First of all, they were open to any child. I was never any good at chess, but I had this friend who was quite good so I wanted to be like him so I decided to enroll. I showed up and declared that I wanted to become a chess player. They told me to play a game against my friend to asses my level (I remember at the same time there was another kid who came without a friend, so they made him play against a computer; the chess computer was big, easy to beat and manufactured in East Germany). Then they assigned me to a group. The number of children in my group was varying between three and five during my time there. Each group had a coach. Our coach was an international master and former champion of Poland--it's a bit like assigning university professors to teach you fractions; but that's how it was. We met twice a week and our coach would teach us all the important stuff, openings, endgames, combinations, strategy. He would analyze our games with us and give us homework. He would tell us what to concentrate on and gave specific tips on the effective practicing. The club had a nice library of chess books. It also organized tournaments. And, the clubs were competing against one another.<p>It was fun. Not all kids were good players, but we were passionate about it, we would play blitz tournaments, discuss various topics and argue about our favorite openings (which felt a lot like arguing about programming languages, now that I think about it). The fact that we got to meet other kids who played chess made us more excited about it. The whole experience was wonderful on many levels and, while not all of us made much progress, some did.<p>I imagine how great it would be if instead of compulsory schooling there was a system of math clubs, hacking clubs, physics clubs, chemistry clubs and so on. I don't think it would cost more than the current system.<p>Now, you may object that since this system would not involve coercion, many children wouldn't enroll to any clubs and they would remain terribly uneducated. I don't think in reality that would cause much difference. Let's do a thought experiment. Imagine you approach random 100 people in your city and ask them to complete two tests: one on chemistry and one on chess. Both tests would cover very basic questions as well as more advanced (of course, the decisions which questions represent the same level of difficulty is arbitrary, but let's skip over it and say we are using some common sense approach). What do you think the results would be? Would more people know the answer to ""How does a Knight move?"" then to ""What is the valency of carbon?""? How about, say, King's Indian Defense vs. nucleophilic substitution? Personally, I think that on average people would score better on the chess test. But I have never really performed such experiment, so I may be very wrong here.
",1187902264
45835,comment,45636,45829,0,0,bmaier,,,"Stuff like this makes my brain hurt. Ok, so you wrote a post that essentially yells at people, good job.  What value does this add? what problem have you solved here?  Let's keep hacker news to submissions that are relatively content rich and engaging.",1187902227
45834,comment,45773,45809,0,0,jmzachary,,,"Maybe. It also borrows alot from ""Teaching Software Engineering"" (linked to in the article). However, I think it is very useful and has legitimacy because it's backed by experience. It's not the typical spew from 90% of the blogs out there.",1187901731
45833,story,,,19,16,joshwa,"The ""Oh Crap"" Moment: How do you know how much you know? ",,"with apologies to Kathy Sierra...<p><a href=""http://joshwand.com/files/ohcrap2.png"" rel=""nofollow"">http://joshwand.com/files/ohcrap2.png</a><p>I've had this experience with several of my startup ideas now... I learn more and more about a given problem space/market, and eventually I start feeling like I have a decent grasp of the situation. The new learning tapers off, until one day, I discover a whole new dimension I've never thought of, and I realize just how little I know about the problem. <p>I've come to expect a few of these ""oh crap"" moments early on, but I wonder what conclusions I should draw from these moments later on in the process? They tend to be rather discouraging, as plans need to be modified/rethought, and sometimes the viability of the entire project comes into question, as when you discover that there are a whole slew of other startups trying to solve the same problem as you, all of them further along than you are!<p>I wonder if sometimes it's worth ignoring the extra information entirely, and solving a simpler version of the problem instead? The extra information might not even be relevant if the project doesn't expand in that particular direction. <i>EDIT: this doesn't apply as easily to the situation where you discover your competition...</i><p>Does anyone else experience these moments, and what have you learned from them?<p>UPDATE: added axes/legend to graph",1187901693
45832,comment,45773,45809,0,0,eusman,,,"Greenspun's class goes back as much the online communities started to become reality. It's among the first, if not the first in academia, for engineering internet applications in a time nobody even considered collaboration and online communities worth.
One thing it doesn't need is advertisment!<p>Nonetheless, your arguments collide. If the percentage of people who get employed by Goog and Ms is the same as of those MIT students not taking it, then your argument that this is advert of the course is fault. So, you cancel your own argument.",1187901668
45831,comment,45698,45698,0,0,twism,,,"its like he knows me",1187901624
45830,comment,45815,45815,0,0,jsjenkins168,,,"Thanks for doing this! I actually printed out calendars and have been making X's but this is so much cooler...",1187901525
45829,comment,45636,45826,0,0,wschroter,,,"way to support your empty argument above.",1187901511
45828,comment,44580,44635,0,0,jdvolz,,,"I'm surprised that people disagreed with my C recommendation (although, note that I did say Python or Ruby if you want to get something done quickly).  Learning C isn't really about learning C, it's about learning how the computer actually does things (aka pointers, memory management, etc.).  Knowing C lets you understand concepts in higher level languages easier.  For example, ""pass by reference"" is easy to understand once you have passed around some pointers.  It helps you understand what the garbage collector is doing, and why it's doing it.  It helps explain why even in managed languages sometimes you need to ""free()"" something (an example is bitmaps in C#).  <p>Would you rather start programming on the surface (not knowing what is happening underneath) or would you rather start by learning the hard stuff underneath?  I, personally, would rather know what is happening underneath.  Is there an argument for learning the more surface stuff first?  Maybe I'm off nuts and have a slanted view because I learned Java, Scheme and then C.  ",1187901433
45827,comment,45619,45819,0,0,rms,,,"College students are an exception. There's a lot of social pressure to not drop out of college to start a company and YC provides a socially acceptable excuse for postponing college. This made PG and co increasingly uncomfortable over time which is why they started preferring college graduates. I realize that someone truly dedicated could still work an idea full time while in college. But this is hard, and it's even harder to get a team to hack with you.",1187901326
45826,comment,45636,45805,0,0,menloparkbum,,,"This is ""Hacker News"" , formerly ""Startup News"", not ""Small Business Bad Advice News"". Your post doesn't contain any real content, it is just SEO spam for your website. ",1187901263
45825,comment,45616,45654,0,0,falsestprophet,,,"big mistake! downmod for not being a PG fanboy.<p>edit: (seriously)",1187901255
45824,comment,45698,45698,0,0,JB318,,,"I have an alternative explanation on why taking breaks can be beneficial.  I'm less of a fan of the subconscious theory--it can certainly happen but I think it's much less common than people estimate.<p>What I think is more likely is that you get fresh insight when returning to a problem after a break, because the mental model that was constructed in your head was subtly wrong.  It's happened to me a bunch of times: ""OK, where was I?... the grommit plugs into the foobar, and the whatzit sends a message to the widget... wait a minute, no it doesn't, it sends to the frobnosticator first!  WHY on earth was I thinking that for all that time before the break??""<p>Sometimes it's as simple as the famous case of getting somebody else to look at your code and immediately point out what's wrong that two hours of staring at the screen couldn't accomplish.<p>Other times it's a lot more subtle, high-level and abstract.  Since, in those cases, it's often difficult to discuss the problem with somebody else, you don't get a) the outside feedback to speed things along and b) the humiliation factor that makes you remember how the insight came about. ;)  So the meta-revelation of how you came to that revelation might be lacking, and it's attributed to the subconscious instead.<p>",1187901138
45823,comment,45769,45769,0,0,byrneseyeview,,,"Could you add a question mark to the title? What kind of alchemy turns a first-hand rumor into a second-hand fact?<p>Edit: <i>poof</i>",1187901105
45822,comment,45666,45666,0,0,jdvolz,,,"I use //TODO: in my Visual Studio stuff.  VS will find them for you automatically, I don't even have to grep for them.  <p>I also try to write code so small and simple that it approaches the complexity of ""Hello World.""  That way, it's easy to find the bugs.",1187901005
45821,comment,45644,45659,0,0,andreyf,,,"If I remember right from high school physics class, hitting it at a greater angle will get you a better reflection, and hence better sound quality.",1187900961
45820,comment,45721,45721,0,0,aston,,,"I can take the argument that credentials don't tell the whole story. In fact, I think Marilee Jones pretty much changed the face of college admissions (in a good way). Also, she let me in, which means I owe her a pretty large debt...<p>However, it's really tough to argue for Marilee Jones' job in this situation. She had decades to tell someone that she had falsified her resume and chose not to. Instead, she was found out by some 3rd party and everyone acted in order to save face. MIT fired her, but let her resign. She admitted to lying, but blamed it on a youthful mistake when it was really a continual withholding of information she knew to be pertinent. I suspect had she admitted this wrong doing a long time ago, and without the threat of a PR nightmare from an outsider's expose, she might still have a job now.",1187900902
45819,comment,45619,45619,0,0,uuilly,,,"If you apply and get rejected and don't go after your idea anyways then they were right to reject you.  I know that sounds harsh but failure and rejection are common-place in startups, YC or not.  If your idea can't sustain rejection from a program as competitive as YC then it is the wrong idea or you are the wrong person to make it happen.  It's like saying, ""I didn't get into MIT so I'm not going to engineering school.""
",1187900893
45818,story,,,2,1,nickb,"Linux vs. BSD: Huge difference in UI responsiveness",http://www.linuxdevcenter.com/pub/a/linux/2007/08/23/linux-vs-bsd-whats-the-difference.html,,1187900863
45817,comment,45618,45618,0,0,seiji,,,"The exact date reddit became cesspool-ized was October 31, 2006.  Getting bought put reddit at the top of slashdot and other sites creating the eternal september effect.<p>After October 31, reddit started having hundreds of votes and hundreds of comments on articles.  Now we get to wake up to the front page's top five links being [pic] along side the never ending banter of it's-a-conspiracy/it's-not-a-conspiracy.",1187900813
45816,comment,45815,45815,0,0,brett,,,"The post: <a href=""http://lifehacker.com/software/motivation/jerry-seinfelds-productivity-secret-281626.php"" rel=""nofollow"">http://lifehacker.com/software/motivation/jerry-seinfelds-pr...</a><p>I tried a paper calendar on my wall for a few days after I read that. Then I decided this was a good chance to do something in python which I've been looking to learn. <p>Looks like palish is working on something based on the same post: <a href=""http://news.ycombinator.com/item?id=45374"" rel=""nofollow"">http://news.ycombinator.com/item?id=45374</a>",1187900763
45815,story,,,43,42,brett,"Remember that Lifehacker post about Seinfeld's productivity secret? I made a small site based on it.",http://dontbreakthechain.com/,,1187900687
45814,comment,45619,45782,0,0,Laurentvw,,,"Since you quit, do you mind telling us the idea or their website?",1187900493
45813,comment,45799,45799,0,0,rms,,,"Does anyone here remember the three martini lunch? It seems ridiculous enough that I find it hard to believe it actually existed.",1187900463
45812,comment,45577,45781,0,0,aston,,,"+1 for reading TFA. More of that FTW.",1187900463
45811,comment,45698,45698,0,0,edw519,,,"Thank you Paul!  AFAIC, this was your best essay ever.  (And that's saying alot).  You have just described what has been in my head for most of the past year, but I didn't have the words to describe it.<p>A good friend of mine is a artist.  He claims his secret is, ""I paint every day.""  I tried that.  It didn't work for me.<p>I have tried every combination of pens, tablets, paper, sticky notes, and electronic approach to distill my thinking and none of it has ever made much difference.<p>Only when I get the entire program in my head (level 0 only), do things get cooking.  I rewrite everything 3 or 4 times.  Sometimes I rewrite just to understand.<p>This approach reminds me of Jessica Livingston's chapter on Steve Wozniak in ""Founders at Work"" (required reading).  Only when he could get the entire Apple II into his head did it become the breakthrough that it was.<p>I used to be afraid to exercise because it took time away from programming.  What a mistake.  I walk up and down steps for 35 minutes every morning WITH MY PROGRAM LOADED INTO MY HEAD.  THAT'S when I do my best design work.  I didn't realize what was happening until just now.  Thank you!",1187900459
45810,comment,45647,45792,0,0,rms,,,"So how do you think this will be settled? The easiest and most logical thing to do is to allow the banks to process the off-shore casino transactions but I'm afraid that Bush would rather take down the WTO as one of his last major actions.",1187900422
45809,comment,45773,45773,0,0,aston,,,"Reads okay until you realize it's an advertisement for Greenspun's class. His proof of how well it works is that most people who take it like it (not surprising, given its reputation as too much work unless you know you like it) and that most people who take it work at Microsoft and Google (he fails to note just how many MIT grads do the same thing without his course). <p>There was enough blatant self-interest here that I couldn't make it through to the end.",1187900271
45808,comment,45698,45742,0,0,projectileboy,,,"Very nice analogy, and I think it captures why some ""agile"" teams I've worked on felt so productive - a small group could jam on something and have a shared understanding of the problem as we were working. However, as with a band, there's definitely an upper bound. 2, 4, 6 programmers - awesome. 12 programmers - starts to fall apart pretty quickly.",1187899809
45807,comment,45636,45806,0,0,wschroter,,,"We all know Silicon Valley is the quintessential barometer for how all companies are funded and started.",1187899798
45806,comment,45636,45805,0,0,rms,,,"I think his point is that companies that can't get funded usually won't be successful, because there has to be something wrong with them to not get funded. Only someone who lives in the Valley and sees how easy it is for someone reasonably connected to get funded could have this attitude.
 <p>This isn't always true but there's at least some truth there.",1187899405
45805,comment,45636,45800,0,0,wschroter,,,"How do companies get funded then that:<p>1. Aren't VC funded
2. Aren't angel funded<p>Before you answer, keep in mind that 550,000 businesses are started EVERY MONTH in the U.S. alone.  VC's fund less than 4,000 of those each YEAR.  <p>You must have some kind of insight that 23 million small business owners don't.",1187899268
