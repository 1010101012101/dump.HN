ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
1544929,comment,1544822,1544822,0,0,traskjd,,,"I find ""remember you <class> 101 course"" pretty pointless. Nearly every class I ever took began with simple stuff and then the following years you learnt why that was all wrong, not quite the truth, or how you work around those rules :-)",1280030388
1544928,comment,1544581,1544581,0,0,K3G,,,"Nope. I'm a hardware guy, but I found this place to be a great source of good news and reading.<p>Rather than code, I do machining, CAD, and design control.",1280030387
1544927,comment,1544822,1544822,0,0,VengefulCynic,,,"An intelligent attempt to encourage amateurs to avoid speculating about things they know nothing about.  As with anything vaguely complex or esoteric, the media talking heads are pretending that they can break down a complicated issue (like contract law) into 30 second talking points and thus end up oversimplifying and misleading the general public.<p>Fortunately, this sort of issue (esoteric, complex and intractable to 30 second analysis by 24-hour news networks) tends to fade quickly from the headlines, so with any luck, we won't have to endure the idiotic platitudes of news anchors and their paid analysts for much longer.",1280030329
1544925,comment,1544785,1544785,0,0,chacha102,,,"I think the author got a little too caught up in flickr's cleverness of making an ID based on different information. For instance, the first letter is the post type, then a group of letters is date, and then there is the post number for that day.<p>The fact is, not many people are going to go devise their own URL shortening algorithm and implement it. While it is a good idea, I just don't think many people will put in that kind of effort.<p>What might work is a more general algorithm. An algorithm that can reliably shrink and unshrink any URL.<p>I'm not sure, but this might not be possible considering that many people have invented compression algorithms, and the general rule is that if you compress data, you are going to loose data. (I'd like to hear someone's opinion on that considering I haven't dove deep into compression)<p>Edit: By 'possible' I mean 'meaningfully possible'. Taking a URL around 50-80 characters and making it around 20-30.",1280030187
1544924,comment,1544581,1544581,0,0,zafka,,,"I program in C. Also Assembly, I have programmed in CHILL also. Sometimes for fun I call myself a research engineer. When people idly ask me what I do, I tell then I grow flowers.",1280030113
1544923,comment,1544771,1544771,0,0,shirtless_coder,,,"vaporware alert",1280030112
1544922,comment,1544100,1544915,0,0,IgorPartola,,,"And then we would not have this conversation :(. My advice is to at least learn about pointers and virtual memory. It will make a lot of sense out of a lot of things and it can serve as a nice foundation to actually jump into C one day.",1280030079
1544921,comment,1544581,1544758,0,0,oconnore,,,"I didn't down vote you, but I am guessing that the reason is because this is off topic. You are welcome to make your own thread though!",1280029876
1544920,comment,1544663,1544663,0,0,bbuffone,,,"Over the last six months, I have been traveling back and forth to beijing for 2.5 months at a time.  When in beijing, I don't have a phone, let-a-lone a smart phone.  The one thing I have noticed is that I used to go to my phone anytime there was a millisecond of downtime, in line, waiting for a check...<p>Now, I just sit and watch the world that is around me, and I find the real-world local to me is way more interesting than what is happening on techcrunch, perezhilton...<p>There is some much information being created and consumed that whether intended to be or not it's really just become entertainment.",1280029869
1544919,comment,1544338,1544453,0,0,IgorPartola,,,"I do something similar. I actually often spell out code that I want to write while away from a computer. To me it also feels wrong to go through what you call mode A and not have the project working (unless it is in really early stages). So I get the basic structure set up, refactoring 3-10 times in the process, then write a list of features. Each time I get to code I knock put at least one feature and commit to the VC repo. Of course sometimes I add new features so the list gets longer. I know I am wrapping things up when it starts getting shorter (knocking out more features than inventing new ones). It doesn't always work so I end up leaving the code base without the feature completed. If this happens I end up being obsessed with the unfinished feature to the point where I spell out code in my sleep. Good to see that someone else is using this pattern.",1280029865
1544918,comment,1544726,1544726,0,0,Niten,,,"I'm not a remarkable programmer by Hacker News standards, but I have experience in what I think is a decent variety of languages.  I've done C and assembly; I've done a stack-based language; I've done the popular dynamic imperative languages (Perl, Python, JavaScript, a little Ruby); I've done Lisp and Haskell.  Heck, I've even programmed in Visual Basic.<p>And in all my programming adventures, AppleScript has to be the weirdest, most backward, hardest to figure out language I've ever had the misfortune of using.  I think Gruber nails it here -- English and other natural languages are not nearly precise enough to express program text, and the problem is exacerbated when you try to support multiple natural languages simultaneously.  Visual Basic may not be a terrific programming language, but at least it's internally consistent.<p>To quote Einstein, ""Everything must be made as simple as possible, and not simpler.""  AppleScript's designers tried to simplify away the essence of programming, and wound up making scripting much, much harder than it should be.<p>To anyone out there who needs to script OS X, save yourself a great deal of pain and avoid the temptation of using AppleScript just because it's OS X's ""native"" scripting language (this is was my mistake).  Access OSA through a sane language like Ruby or Python instead.",1280029806
1544917,comment,1544581,1544581,0,0,anto1ne,,,"I do occasionally program stuff, even though that's not what I prefer.\nI'm a sysadmin really, and to some extent, I'm sometime a dba, a network admin, a web designer, etc..\nhow do I call myself something without limiting myself.\nAlso I'm wondering how much of the HN crowd are more sysadmin than programmer.",1280029798
1544916,comment,1544338,1544453,0,0,melling,,,"Try working out the amount of code you write in an average day, or week.  If you're writing, say 500 lines per hour, for 4 hours a day. At 5 days a week for 50 weeks, you've written 500,000 lines of code in one year.",1280029788
1544915,comment,1544100,1544893,0,0,jblochjohnson,,,"I would be tempted to agree; I've wanted at times to go and learn C, so I can know what my Ruby is really written in; but there's always more complexity underneath; I could and should learn how computers themselves work, but there will come a time when I will need to, and for now there's only so much time. Put quickly, I'm using a magical black box to type to you right now, and if I started from the beginning, I'd never have the time to use it.",1280029726
1544914,comment,1544737,1544737,0,0,nitrogen,,,"I felt like a small part of humanity died when we lost commercial supersonic transit, as I hate seeing our race lose any kind of technological capability.  Though I doubt I'd use it myself, I'm glad to see someone is trying to bring supersonic flight back, and targeted at those who will benefit most: executives whose time costs more than plane tickets.",1280029311
1544913,comment,1544663,1544895,0,0,aaronblohowiak,,,"I have found solitude to be what you make of it.  That's the point, I suppose -- less external forces impacting you.  I've also wasted a lot of time with nothing to show for it and not coming out particularly de-stressed and never got into the re-centering flow.  there may be some element of practice to getting the most out of time alone, that will help you to enter that restorative mode.  Not much compares to it when you get there, though.",1280029274
1544912,comment,1544100,1544840,0,0,bphogan,,,"Kinda, but no. You can do simple things quickly with Rails. That means you get to the harder things faster. You very quickly discover that you have to learn Ruby if you want to do anything beyond scaffolding. I think that's what he means by being a ""productive"" Rails programmer.<p>But a person who has done Rails development for 6-9 months, ad has used Git, and knows how to deploy an application to Heroku... they will really be able to do a lot of cool things very quickly. Just watch what happens in October during the Rails Rumble.",1280029178
1544911,comment,1544338,1544898,0,0,ayb,,,"When I took CS101 (Summer 1993) we actually wrote Pascal code on paper for the exams :-)",1280029178
1544910,story,,,4,3,happybuy,"Ask HN: Best way to find good beta testers?",,"I've recently created a new site which helps people find bargains online and am currently finding it difficult to find good beta testers.<p>I have put up a landing page at www.happybuy.com for sign-ups and attempted to find some interested beta testers via appropriate forum postings etc, but am finding the going slow.<p>Was wondering what other HN users experiences are in regards to finding good beta testers?<p>What works? What doesn't? Are there any particular sites, communities or strategies you'd recommend for connecting with interested users?<p>How many beta testers are a good number - for my purposes I'd like a relatively large number to get a good cross-section of opinions and interests.",1280029075
1544907,comment,1544831,1544866,0,0,ddoonie,,,"Do you have a 'how to' for creating Gantt charts with Latex??  I use it for my papers, but pretty much do the charts in excel..",1280028879
1544906,comment,1544822,1544822,0,0,jasonlbaptiste,,,"This provides no new insight or any real insight at all. Of course we don't know what the clarity of the contract is yet.  No one is claiming it's clear either.  That's the purpose of the courts and a judge.",1280028784
1544905,comment,1543880,1544108,0,0,silentbicycle,,,"This is a gotcha in Lua, too, but there it makes a bit more sense - tables (""dicts"", if you prefer) explicitly have a key/value part and an array part - if you have a table with keys 1* to N, it's handled internally as an array (with O(1) lookups), but #, the length operator, explicitly gives you the upper bound for the array portion. In practice, this isn't a big deal, since the very different performance etc. means that they're usually used in very different ways.<p>It sounds like Javascript has the same downside, but without any upside.<p>* Yeah, Lua is 1-indexed. Nothing's perfect. Lisp has all those parens, Python has the whitespace thing...you get over it. :)",1280028780
1544904,comment,1543147,1544535,0,0,w00pla,,,"> Sure, but in another 50 years many of their children will have just as much land through none of their own doing.<p>Can't people give their wealth to whomever they want (while they are alive or dead)? In a system such as yours (where the state comes and takes all property like a vulture after someone dies) it means that every old person should spend all his money before he dies. He should also stop working (as many old people (at least in my country) spend their lives working for an inheritance for their children).<p>I guess such a thing such as working to provide for your children and grandchildren is wrong in your books.<p>Here is another example in my country: many farmers have children and teach their children farming. This is the only skill that some of them can transfer. The children works on his father's farm. If there are two sons the father will try and buy extra land. The children inherit and divide up the farm after the father’s death. You thus get people living generations on the same farm.<p>In your ideal communist system, the child will lose his home, his father and his job (through the sin of inheritance).<p>> It's possible life could have been better for everyone if not for inheritance.<p>If all wealth is divided up after inheritance, the best (evolutionary speaking) strategy would be to have as many children as possible. That way, your offspring can have a larger share of someone else’s inheritance.<p>The idea of the far left, of trying to steal someone’s property after he dies is pretty reprehensible for me. What is worse is their motivation for it. The idea that an individual’s rights (and property) are subservient to the majority. What you are basically saying is that if something is good for the majority, the minority or individual does not have rights.",1280028778
1544903,comment,1543057,1543057,0,0,njharman,,,"Readability is important.<p>Maintainability (and by corollary readability) is PARAMOUNT.<p>Post mentioned most programming is string manipulation.  Well even more code must be maintained.  It is the #2 tool feature / programmer skill.  (#1 is being able to get shit done and thus create something needing maintenance).",1280028727
1544902,comment,1543818,1543818,0,0,necrecious,,,"I think this judge's decision should be used to instruct people about the difference 'idea' and 'execution.' Nothing like a few billion dollar price tag to make that clear.",1280028722
1544901,comment,1544100,1544803,0,0,bphogan,,,"Well, we run RailsMentors (<a href=""http://www.railsmentors.org"" rel=""nofollow"">http://www.railsmentors.org</a>) for that reason, stop by, sign up, and see if you can find someone to mentor you. It's all volunteer, there to help newcomers get excited about Rails. Doesn't cost you a think, except for your time. Of course, the mentors will expect you to put some effort in, and they won't do your work for you, but the idea is to help people like you get up and running.",1280028663
1544900,comment,1544389,1544389,0,0,synacksynack,,,"While pthreads is indeed a great, simple, and easy to use API, I find it bizarre that it is without a portable timed join.  It's functionality that I expected to be in a threading API, and even though it's not too difficult to work around it, it's tarnished my views of it.",1280028492
1544899,comment,1544581,1544581,0,0,atomical,,,"I voted for both because as a programmer I sniff out bugs like last night's leftover curry.",1280028487
1544898,comment,1544338,1544338,0,0,dkersten,,,"That depends. Sometimes I write significant amounts of code in vvery very short spces of time, other times it takes much much longer. When I was studying CS, I often did my assignments literally fifteen minutes before the deadline. Sometimes I can work extremely well (and fast) under pressure.<p>But heres the catch - programming is more than just writing the code. Its about solving problems. Its about architecting abstractions, algorithms and modules. Its about thinking.<p>Even though I may sometimes write substantial amounts of code in fifteen minutes or half an hour or an hour, an order of magnitude more time has already went into solving the problem in my head. Coding doesn't take much time when all you're doing is copying a solution from your head to the computer.<p>As an example, I found my first-year CS programming lab exams funny. They forced us to ""do it on paper"" for the first fifteen minutes, before you were even let touch the computer. Having already been programming for a few years prior, I could have done these assignments in my sleep, so I'd look at the spec for a moment, solve it in my head and sit there dong nothing until we were let use the computers. Then I'd copy'n'paste the solution from my head to the computer and walk out a minute or two later. The problems were easy enough to solve in under fifteen minutes and the ""coding"" was just dumping text from my head to the editor.<p>So, yeah, programming is more than typing into an editor. Most of it is done in your head.",1280028486
1544897,comment,1544664,1544664,0,0,wipt,,,"Impressive. I'll continue to dream about Big Blue.",1280028362
1544896,comment,1544548,1544812,0,0,vlaskovits,,,"I think Giff nailed it in his comment to you.<p>You might want to frame your thoughts around where you think you are in terms of Product/Market Fit -- that is, do you think you are pre- or post-?",1280028340
1544895,comment,1544663,1544799,0,0,MikeCapone,,,"You know what, for a second I was jealous of you after reading your comment, but then I caught myself and realized that this is a case of ""the grass is always greener.."".<p>If that's what I really wanted, I could also do it, and I wouldn't even need a boat-house. It wouldn't be too hard to go somewhere quiet for a few days and enjoy the peace. I guess I don't want that enough to actually go out and do it.<p>Maybe I should so I can see if what I imagine it to be and what it actually is are anywhere close to each other.",1280028309
1544894,comment,1544726,1544726,0,0,celoyd,,,"“Scripts are stored in a language-independent internal representation. A dialect defines a presentation for the internal language. Dialects contain lexing and parsing tables, and printing routines. A script can be presented using any dialect – so a script written using the English dialect can be viewed in Japanese. For complete localization, the application terminologies must also include entries for multiple languages. Apple developed dialects for Japanese and French. A “professional” dialect which resembled Java was created but not released.”<p>— <a href=""http://userweb.cs.utexas.edu/~wcook/Drafts/2006/ashopl.pdf"" rel=""nofollow"">http://userweb.cs.utexas.edu/~wcook/Drafts/2006/ashopl.pdf</a> . The example it gives for the “professional” dialect is “{ words | style == bold }.character[1]”, which as far as I know would have made it one of the first non-research languages to use pseudo–set-builder notation like that.",1280028199
1544893,comment,1544100,1544886,0,0,IgorPartola,,,"If I was to start over again I would go like this: C, Python, HTML/CSS, JavaScript, jQuery, SQL, Django. For me it's imporant to understand how something is put together on at least some basic level. E.g. I more or less know how Django's ORM translates into SQL, or how a Python inerpreter translates Python code into bytecode (at least very theoretically). I hate the idea of using something as a magical black box.",1280028177
1544892,comment,1544663,1544663,0,0,amanfredi,,,"Twitter, texting, cell phones, etc. don't cause rudeness, they just make it more obvious.",1280028131
1544891,comment,1543885,1544447,0,0,MikeCapone,,,"Because I thought that of all places, a site dedicated to entrepreneurship would attract people who understand that it isn't true that the only way to make money is to ""exploit the proletariat"", but rather that the proletariat would be a lot worse off without successful entrepreneurs.",1280028078
1544890,comment,1529572,1529914,0,0,fossuser,,,"There's a $40/month difference in price if you use google voice for texting and get the $10 data plan.  (You change your phone online to one eligible for it and change the APN on your nexus one)",1280028011
1544889,comment,1544581,1544755,0,0,petercooper,,,"Sure, but this thread was about what it's ""advantageous"" to call yourself. Calling yourself a ""hacker"" in front of 99% of clients is not going to get you off to a good start.",1280027972
1544888,comment,1544663,1544663,0,0,fossuser,,,"The article seems a bit alarmist to me.  One person on the phone in traffic and someone who watches movies on their laptop while driving?  These don't seem indicative of the common case to me.  As far as his complaints about cell phone overuse, the fact is that most people don't have much to say.  Most situations like the one he described are long and relatively boring.  Is keeping your self occupied such a bad thing?",1280027894
1544887,comment,1544100,1544803,0,0,IgorPartola,,,"Does it need to just function or does it need to be an easy to maintain, versioned, self-documenting effecient debugged, QA'ed, UX designed, accessible web app? If the former then you are in luck. If the latter, you are better off paying someone to do it for you an working a different job for six months.",1280027801
1544886,comment,1544100,1544100,0,0,jblochjohnson,,,"It's funny to read this, 'cause in many ways I started programming (flailingly) with Ruby/Rails, and then worked backwards from there. I read Peter Cooper's Ruby for Beginners book, which ended with a little Rails, and then I read some HTML. I didn't know a lick about JavaScript for a while, and so there were all these Rails helpers and shortcuts, and they were a complete mystery! Rails has so much ""magic"" to it that I often found myself confronted by problems that I could not understand, because I was at a level too abstracted to really know what was happening. In an odd way, though, it was really helpful – it was like walking around in a giant robot suit, being able to make greater strides than I really should have been able to on my own strength, and then having it break down from time to time and forced to understand pieces of the nitty gritty. Eventually it broke down so much that I had to do a lot of the background reading I should have done from the start; but what's nice is that I could never imagine coding a project of any sort without some sort of strict organizational system like Rails'.",1280027788
1544885,story,,,3,2,UXMovement,"What Minimalist Really Means",http://uxmovement.com/philosophy/what-minimalist-really-means,"A completely minimalist design would have the highest possible SIGNAL-TO-NOISE ratio.  The SIGNAL is the information that's communicated, the NOISE is any extraneous information that dilutes the signal.  The goal in minimalist design is to have maximum signal and minimum noise.",1280027738
1544884,comment,1543372,1543372,0,0,samratjp,,,"Highly recommend Omniplan for Mac.",1280027716
1544883,comment,1544785,1544785,0,0,nitrogen,,,"I like the algorithmic reversibility, but this seems to depend on a specific site layout.  Would something like this be possible for abitrary URLs without actually making them longer?<p>Simply converting to base 60 or 64 wouldn't work, but since most URLs have characters that are close to each other, what about storing the differences between characters and/or using Huffman coding (or something similar) to give shorter symbols to the most common characters/differences?  Maybe a preshared dictionary of common URL components?",1280027613
1544882,comment,1543057,1544257,0,0,elblanco,,,"I really have to agree with this. The Python community has really embraced clarity of code and style as a core principle of the language, while Perl has embraced a more...""do it how you want"" philosophy.<p>It's a bit like the subtle philosophical differences between two dialects of the same language, say Received English and an inner-city slang.",1280027464
1544881,comment,1544527,1544527,0,0,ari_,,,"Too bad you lifted this directly from SEOBook (<a href=""http://community.seobook.com/business-development/11259-handy-list-money-niches.html"" rel=""nofollow"">http://community.seobook.com/business-development/11259-hand...</a>).\nBehind a paywall, but since I started that thread, I can safely attest that you lifted most of it.",1280027463
1544880,comment,1544581,1544773,0,0,samratjp,,,"1) Learn python with these two resources: a.This is for absolute beginners <a href=""http://ocw.mit.edu/courses/electrical-engineering-and-comput.."" rel=""nofollow"">http://ocw.mit.edu/courses/electrical-engineering-and-comput...</a>.<p>b.Do these exercises for some extra oomp - <a href=""http://code.google.com/edu/languages/google-python-class/exe.."" rel=""nofollow"">http://code.google.com/edu/languages/google-python-class/exe...</a>. there are some video lectures if required<p>They're much more better and practical than any ole paperback.",1280027453
1544879,comment,1544663,1544663,0,0,credo,,,"On a related topic ""Your Brain on Computers\nHooked on Gadgets, and Paying a Mental Price"" <a href=""http://www.nytimes.com/2010/06/07/technology/07brain.html"" rel=""nofollow"">http://www.nytimes.com/2010/06/07/technology/07brain.html</a> is a very interesting read.",1280027419
1544878,comment,1544726,1544726,0,0,watmough,,,"This may not address all the issues, but it certainly allows a more concise syntax. rb-appscript allows you to utilize apple scripting / apple events from Ruby.<p>The instructions on this page for building and testing worked fine for me.<p><a href=""http://oreilly.com/pub/a/mac/2007/02/27/replacing-applescript-with-ruby.html"" rel=""nofollow"">http://oreilly.com/pub/a/mac/2007/02/27/replacing-applescrip...</a>",1280027218
1544877,comment,1541005,1542304,0,0,InclinedPlane,,,"Yup, they create potential for abuse of power. They also erode trust in legislating bodies and the law in general.<p>See also:\n<a href=""http://www.amazon.com/Three-Felonies-Day-Target-Innocent/dp/1594032556"" rel=""nofollow"">http://www.amazon.com/Three-Felonies-Day-Target-Innocent/dp/...</a>",1280027182
1544876,comment,1544338,1544564,0,0,mmaunder,,,"edw is obviously a smart guy and I too have not heard of BASIC used in production or for anything recently for that matter, so I find myself very curious and would love to know more about how you're using it.<p>I'm a Perl developer btw and many here consider that on a par with BASIC and might ask the same question of me.",1280027141
1544875,comment,1543145,1543868,0,0,alextp,,,"I'm not sure I agree. In most NLP papers I've read the real meat of the paper is not in the code, but in a couple of equations that, with a lot of mostly-mechanical wrapping around, implementing, debugging, and plugging into well-understood parts should make sense and be a contribution in and of themselves.<p>And for these other things, it might be good to see code a couple of times, but mostly at first, and to get up to speed in an area.<p>I think a problem is that, if you force all papers to include source code, due to the fact that science builds upon itself, you'd find that the average paper length for an area should climb a bit (going back down when a paradigm shift happens, because then the tricks stop working, but climbing all over again), and most of it would just be repeats of what's already there. Comparing to maths, it's like asking every paper proving a theorem to prove their lemmas, even very basic ones: sure, it'd help a novice understand what's going on, but it'll hinder progress more often than it'd help it. There's a place for introductory writing and a place for stand-in-the-shoulders-of-giants writing, and papers are mostly of the last sort.<p>For example, a couple of decades ago every paper that used a naive bayes classifier would derive the equations, describe feature selection, weighting, etc; today, most just say ""I use a naive bayes classifier for this, that, and that"" and move on. Likewise for SVMs---you don't want to see the full code for most papers that use that, since it's a mess of kernel caches and dual variables that mean nothing whatsoever to the problem at hand (but the algorithm won't work without it).",1280027108
1544874,comment,1544734,1544734,0,0,TheSOB88,,,"This refutation of a book I've never heard of is not particularly interesting to me.",1280026990
1544873,comment,1544664,1544804,0,0,Retric,,,"IMO what's interesting is the 94MB of L4 cache shared among 80 usable cores at 5.2Ghz.  Latency is really just a question of the speed of light and there are workloads where this could be 20+ times as fast as that 8 CPU cluster in a 3U box.  The value is ""GPU with cache"" not a fast x86.",1280026981
1544872,comment,1544175,1544655,0,0,seancron,,,"That actually looks pretty cool, but you might want to add a summary of what it is in your comment. Not everyone is willing to click through and read your entire manifesto.",1280026927
1544871,comment,1543057,1543236,0,0,elblanco,,,"I think a lot of it has to do with the language, when written very idiomatically, tends to rapidly become hard to maintain. Part of this perhaps is the history of Perl as a fantastic one-off tool language (I'm not a developer for my company, I have other responsibilities, but when we need a fast one-off tool for some data processing, the C++, C, Java, Python and Ruby guys all come to me to hack off something to just get the job done because I can do it in a few minutes vs their half a day).<p>I've looked back at some of those one-offs, and for the life of me I can't tell what they are supposed to do.<p>On the other hand, I have written some largish projects in Perl, and when I constrained myself to a very explicit dialect of the language (almost Javaish in verbosenss), I found it to run fast, and be highly maintainable. I cracked the code open to a 20k line project I wrote 4 years ago and was able to jump right in.<p>In that respect it's a bit like C++ in that you can write code to be unreadable or you can write it to be readable if you constrain yourself to a non-idiomatic subset of the language. But unfortunately, the Perl community tried to embrace and open attitude towards this (there's more than one way to do things) that ultimately ended up embracing the ""get it done now and in as few lines as possible"" idiomatic unreadable code style.<p>I think other than that, OO is an important factor, Perl's OO system was so hard to do right, and other languages OO just seemed to embedded and clean to work with, but also Perl has not really found itself (for some reason) in many embedded systems, in GUI programming, on client-side systems (e.g. Javascript), etc. all places where it could have done well, but for whatever reason just never found a good comfort zone the way it does for sysadmin type tasks (and a few very small domains like computational linguistics). The Perl community seems to have spent a decade endlessly spinning around the drain of supporting backend work, and never approached the more sexy applications of the language.",1280026886
1544870,comment,1544737,1544737,0,0,fondue,,,"I vaguely remember that after the concorde was in service a few years some engineer said that there was no way it could be repeated. He was asked, ""Because of the technology?"" and replied, ""No, there are so many regulations now it would be impossible to complete a design.""",1280026872
1544869,comment,1544787,1544787,0,0,nitrogen,,,"I would see myself ordering a bunch of Ubuntu systems from someone like Dell if I were a large business issuing them to my employees.  Since I'm small, I always roll my own.  I see the reasoning behind their decision, though I don't have to like it.<p>IMO the best way to get Linux in the hands of the masses is through devices that almost replace PCs, but aren't PCs themselves, like phones, tablets, home media servers, etc.",1280026844
