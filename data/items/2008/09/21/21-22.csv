ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
310615,comment,310561,310561,0,0,ii,,,"Python already has Psyco[1] and some people claim[2] that Python+Psyco is faster than V8.<p>[1] <a href=""http://psyco.sourceforge.net/introduction.html"" rel=""nofollow"">http://psyco.sourceforge.net/introduction.html</a><p>[2] <a href=""http://groups.google.com/group/comp.lang.python/msg/f90342f5c3edb453"" rel=""nofollow"">http://groups.google.com/group/comp.lang.python/msg/f90342f5...</a>",1222033923
310614,story,,,2,0,raganwald,"Let's Hope It Works (And Even Then It's Painful)",http://continuations.wenger.us/post/51143271/lets-hope-it-works-and-even-then-its-painful,,1222033917
310613,comment,310350,310383,0,0,rms,,,"At least the photos are credited",1222033846
310612,comment,310350,310383,0,0,river_styx,,,"Yep, nothing says India like weird plants.",1222033684
310611,story,,,1,0,bootload,"Wingman: In-Browser Validation",http://radar.oreilly.com/2008/09/wingman-in-browser-validation.html,,1222033564
310610,comment,310511,310513,0,0,steveplace,,,"That doesn't make any sense. The current bagholders have much more motivation to get rid of them. And since the US is the only buyer (unless they do set up an auction) then they have all the power to set price.<p>Take each asset, calculate fair value, apply 30-50% discount, and put in a limit bid. If someone wants to buy them, let them.",1222033499
310609,comment,310538,310538,0,0,bbb,,,"Hypothetically, it is really easy get away with something like this:<p>1) Go to a well-trafficked coffee shop that you've never been to before. Pay with cash.<p>2) Use a bootable Linux CD or a virtual machine for the actual ""attack."" (Xen, VMWare, anything.)<p>3) Spoof your wireless MAC address. (if you are paranoid)<p>4) Perform your ""special investigation."" Post your info to wikileaks.<p>5) Reboot without the Linux CD or securely delete the virtual machine when you are done.<p>6) Don't brag about it.<p>See, you don't even need a proxy. It's not that hard.<p>How can anyone be so stupid to get caught anyway?",1222033492
310608,comment,309446,310367,0,0,mariorz,,,"I think you're confused, here is the robots.txt from this site (linked by you)<p>User-Agent: * Disallow: /x? Disallow: /vote? Disallow: /reply?<p>user is not disallowed anywhere, vote? and reply? and x? are, but they are not content, they are actions, basically all of the content of this site is indexed.<p>Your idea of site owners being selective about SE makes no sense to me. Would users then have to use 5 or 6 different search engines to accommodate all possible webmaster preferences?",1222033096
310607,story,,,1,0,bootload,"Silicon Valley's resiliency might get tested  ",http://www.sfgate.com/cgi-bin/article.cgi?f=/c/a/2008/09/21/BU0R12T9V7.DTL,,1222033031
310606,comment,310514,310576,0,0,osipov,,,"Lets say you could go to UK. What are the objective terms in which UK is worse than US?",1222032765
310605,comment,310467,310564,0,0,jlouis,,,"(1) Erlang, Ocaml, Common Lisp, Scheme, and Haskell can all, with relatively mundane code, parse a TCP/IP packet in 4 lines, nicely formatted, and some of them gets it type-correct at the same time. The problem isn't that you cannot do it in C, the problem is that you are wasting your time doing it. When it is reasonably fast as well, there is no excuse.<p>(2) Indeed.<p>(3) JIT and tricks from Self will not make the code faster than a well-implemented Ocaml. Also, the complexity of said implementations leaves much to be desired. If you know how little optimization the Ocaml compiler does when compiling to native code you are pretty amazed that it is so damn fast.<p>The point here is: will $LANG scale along the speed axis? <i>Currently</i> (it may change) Python doesn't. It scales up to a point at which you go write your code in C/C++. JSON decoders/encoders that are fast happens to be a nice example. Contrast that with Haskell, Ocaml, Common Lisp where you can improve your program and scale it far more on the speed axis before you have to succumb to Fortran77 for your libatlas ;)<p>For most problems, this scalability is not that important. But then again, there are some where it is crucial you can get that extra speed.<p>Personally, I program in both Ocaml and Python at work. We have most web-stuff written in Python whereas some backend parts, where correctness and speed matters, are written in Ocaml. We could have used C/C++ at the backend, but our development time is much lower in ML with a fraction of the effort required.<p>On the other hand, the Pylons framework does wonders for the web-frontend. We don't need the type-correctness as much there, the speed doesn't matter that much either as long as we can serve pages up quickly enough. I would be sorry using Ocaml there as it would hamper the development speed and take more time.<p>Bottom line: I dual-wield!",1222032503
310604,story,,,1,0,acangiano,"Peter Norvig at Startup School 08",http://www.omnisio.com/startupschool08/peter-norvig-at-startup-school-08,,1222032482
310603,comment,310359,310412,0,0,delano,,,"The benchmark is useless because the machine was testing itself.",1222032181
310602,comment,310467,310467,0,0,time_management,,,"OCaml's type-checker is pretty awesome. You get the benefits of static typing, although you almost never have to declare types.<p>This also makes interfaces easier to understand. You can often understand what a function does without looking at the documentation or code. For example, let's say you've never heard of a map before, and you peek in the .mli file for the List module and see:<p>List.map : ('a -> 'b) -> 'a list -> 'b list.<p>This means that it takes a function (whose type signature is 'a -> 'b) and a list of 'a, and returns a list of 'b. Your first guess is that it produces the item-for-item image of a list under a function, e.g. f [a0; a1; ... an] -> [(f a0); (f a1); ... ; (f an)]... and you'd be right.<p>Pattern-matching is also a huge plus of the language, because it saves you from having to do a lot of ugly if/then kung fu and makes the code more readable.",1222031253
310601,comment,310350,310350,0,0,Tichy,,,"Neat, but I suspect there are underwater worlds that look even more alien.",1222031057
