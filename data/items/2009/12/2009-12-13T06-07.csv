ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
992508,story,,,1,0,chaostheory,"New strategies at AOL and Yahoo: Back into the fray",http://www.economist.com/businessfinance/displayStory.cfm?story_id=15065499,,1260687596
992507,comment,992293,992293,0,0,diN0bot,,,"it's also worth checking out<p><a href=""http://www.websequencediagrams.com/"" rel=""nofollow"">http://www.websequencediagrams.com/</a><p>i've found it very useful in the past. offers more features, which was crucial (grouping, notes). the theming is also nice.",1260687483
992506,comment,992283,992283,0,0,mahmud,,,"Paul Graham has a peculiar Lisp style which is NOT mainstream. He is succinct, clever, and usually performance-agnostic. He writes expository code like we write one-liners in the repl to quickly test something out.<p>That example you linked to is confusing because: 1) You don't know the syntax to read it out like a formula, and 2) he uses the names <i>prod</i> and <i>probs</i> which look the same and strain the mind of a newbie.<p>The way you read ""hard"" Lisp code, specially one in Graham's style is to read from the last line upwards. The tell-tale is the deep indentation, btw.<p>Start at the last line, which is the body of MAPCAR, you know mapcar is MAP which applies its first argument function to successive elements of its second-argument, which should be a list.<p><pre><code>  (mapcar #'(lambda (x) 
               (- 1 x)) probs)
</code></pre>
Make a mental note about the free variable, <i>probs</i>. You can recognize the function as the usual arithmetic step of converting integers to probability values between 0 and 1. The sharp-quote, #', is an archaic style and unnecessary, so let's wrap up these two lines into a function and change the names to be readable.<p><pre><code>  (defun normalize-probabilities (probabilities)
    (mapcar (lambda (x)
              (- 1 x))  probabilities))
</code></pre>
Ok.<p>Look up further and notice the result of this function call, a list, is being reduced to an integer. APPLY applies its first argument, a function, to its second argument, a list. For example, (apply #'+ (list 1 2 3 4)) means sum of the first four digits.  C programmers should find this familiar: (apply #'main argv)<p>Where MAPCAR returns a list, apply returns whatever its function argument is supposed to return. We know the function #'* takes a list of numbers and returns their product. So, the snippet is just multiplying the list of probabilities, or reducing to a scalar.<p><pre><code>  (apply #'* (normalize-probabilities probs))
</code></pre>
Then:<p><pre><code>  (+ prod (apply #'* (normalize-probabilities probs)))
</code></pre>
And here something called <i>prod</i> is being added to our scalar. Hmmm.<p>Look up a bit and see where that's coming from. The nearest binding form for <i>prod</i> is in the LET body on top. Looks very similar to something we have seen before. Another application of multiplication to the list named <i>probs</i>. This is not a Lisp issue, it's a Bayesian statistics or perhaps a PG issues. You continue reading the paper and discover his formula in English prose. Aha! :-)<p>You can move code around, tuck it into functions and do whatever you want with it. See if you recognize the code snippet now:<p><pre><code>  (defun normalize-probabilities (probabilities)
    (mapcar (lambda (x)
  	    (- 1 x))  probabilities))

  (defun pg-foo-fomula (product)
    (/ product (+ product
  		(apply #'* (normalize-probabilities probs)))))

  (defun main ()
    (loop
     (let ((probabilities (eval (read))))
       (when (listp probabilities)
	     (print (pg-foo-formula (apply #'* probabilities))))
       (princ ""OK > ""))))

</code></pre>
Typically you don't do that; you don't make silly repls and you never ever write a MAIN or any other program entry function. You write libraries, that you use in other libraries, and you orchestrate them all via interactive use and deploy in a custom image.",1260687441
992505,comment,992293,992491,0,0,jordyhoyt,,,"You can also specify a phrase as a node by putting it in quotes",1260686992
992504,comment,992410,992410,0,0,chipsy,,,"This is what I do at the moment(for a personal project, but it could easily adapt to an early-stage startup): Maintain a task list for the product/business - ""action items"" that can be taken care of each day. Pull a grab bag out each day and resolve to complete them. So when you want to work on the product itself, you come up with technical tasks, research tasks, maintenance tasks, etc. Or when you want to seek funding, advice, or partners, you create tasks for those. Create scheduling milestones as well. You want to keep moving forward, making decisions, while retaining a balance. Having the schedule helps you to say with confidence, ""this is good enough for now,"" ""I can wait on this until later,"" or ""this is critical and has to be done to hit my goals.""<p>It's the decision-making that moves the business forward - as you get used to that, the process of doing the work itself, meeting people, research, etc. will quickly become background elements of what actually happened that day. If you can't make a decision yet, then you need to gather more information. You're either doing one or the other.<p>An example list of tasks from your starting position would be:<p>-Research implementation strategies(self-built, outsourced, with co-founder)<p>-Evaluate early customer needs(example: are you selling a bells-and-whistles ""experience,"" or will no-frills functionality be sufficient to solve customer problems?) and pick a core focus for product development.<p>-Plan style of external communications - which audiences will be addressed, how to maintain the best relationships over time<p>-Plan internal organizational structure over some time frame(how big, how quickly, what kind of culture, when do you exit)<p>-Establish motivations of all potential co-founders vs. self, and identify possible conflict points so they can be addressed early.",1260686920
992503,comment,991968,992487,0,0,nostrademons,,,"You know how they say, ""anything you say can and will be used against you""? Lawsuits are like that too.  Often it's better to say nothing than something that can be used out of context in court.",1260686864
992502,comment,992293,992491,0,0,ThinkWriteMute,,,"Use <->, <-, ->, and --.<p>Example:<p>Fear -> Dark Side
Fear -> Hate -> Suffering -- Dark Side<p>OR<p>Fear -> Dark Side
Fear -> Hate
Hate -> Suffering
Suffering -- Dark Side",1260686687
992501,story,,,1,0,carnevalem,"Why Emperor Palpatine Wasnâ€™t as Wrong as You Think",http://www.ordinary-gentlemen.com/2009/12/why-emperor-palpatine-wasnt-as-wrong-as-you-think/,,1260686681
992499,comment,992170,992234,0,0,sreque,,,"Neither javascript or python or fast enough to matter. Look at the alioth tests (<a href=""http://shootout.alioth.debian.org/u32q/benchmark.php?test=all&lang=all&box=1"" rel=""nofollow"">http://shootout.alioth.debian.org/u32q/benchmark.php?test=al...</a>). V8 is still 25 times slower than C. Does it really matter if you're 25 times slower than C vs 50 or 60 times slower? No, not at all. Using either on the server side you'd have to resort to native code to do the real heavy lifting. Plus, if unladen swallow keeps its promise of doubling CPython's speed, then the gap between the two languages will once again be fairly narrow.<p>There are more client-side Javascript developers than Python developers, maybe, but not more server-side or general purpose Javascript developers. Google's primary server-side languages are C++, Java, and Python, by the way.<p>Plus, as a language, Python is superior to Javascript. While the best languages rarely win, hopefully it'll help keep Python in the game for a while longer!",1260686424
992498,story,,,4,0,tokenadult,"Scientists put psychic's paranormal claims to the test",http://www.guardian.co.uk/science/2009/may/12/psychic-claims-james-randi-paranormal,,1260686319
992497,story,,,1,0,nir,"The Pancake Project",http://thepancakeproject.blogspot.com/,,1260686284
992496,comment,991897,992015,0,0,sandGorgon,,,"Which OCR - opensource or paid?
What was your flow ?",1260686117
992495,story,,,2,0,rcfox,"""Newly-Weds on the Job""",http://twitter.com/newlywedsontjob,,1260686110
992494,comment,991961,992128,0,0,sandGorgon,,,"Here is a zshrc with almost zero switching cost - especially with the esc-backspace behavior for path deletes, setenv declarations and integration with Ubuntu's command-not-found.
Additionally, it displays the version-control information of a directory (works for svn, git, etc.)<p><a href=""http://sandeep.wordpress.com/zshrc/"" rel=""nofollow"">http://sandeep.wordpress.com/zshrc/</a>",1260685752
992493,comment,992170,992247,0,0,mahmud,,,"Mark, you're a polyglot. I would say for the last 20 years you have been a C++, then Java author more than a Lisp programmer.<p>The first C++ book I ever owned was yours, the one about artificial agents that had a sculpture on the cover, and that must have been 15 years ago.<p>If you're in the business of education, your ""toolbox"" is essentially whatever people need to learn. You wouldn't hear an English teacher in Korea with 25 years of experience saying she is done teaching English, because teaching Spanish is so much more easier. That doesn't make any sense. At the time you wrote the published Lisp books, it was the height of AI-bubble and people needed to learn Lisp and Prolog. Then you wrote an Smalltalk book (IIRC.) then C++, Java .. all dictated by what the public needed.<p>Btw, you still have the literary and expository prowess to teach today's hot technologies as well. But that doesn't say anything about Lisp, Prolog, Smalltalk, C++, or Java except that you are no longer in the business of teaching them.<p>And I mightly thank you for the Agents book, btw. I didn't know what I was doing and just typed in the code into Borland C++ 4.5. The diskette was missing when I bought it, and I am sure I tried to download the source code from the Addison-Wesley ftp site (it could have been a Prentice Hall book as well)<p>Cheers!",1260685615
992491,comment,992293,992466,0,0,omouse,,,"Hmm, sounds naive. Maybe there should be a list of keywords that specifically create connectors...",1260685498
992490,comment,992293,992293,0,0,joseakle,,,"i tried including accents but they were shown in a weird way, take a look 
<a href=""http://www.diagrammr.com/edit?key=dJdweCWOpEC"" rel=""nofollow"">http://www.diagrammr.com/edit?key=dJdweCWOpEC</a>",1260685476
992489,story,,,5,1,jshieh,"Ask HN: Review my secret santa site",,"I just launched a simple tool to organize a secret santa gift exchange and would love to hear reviews and comments from you all.  Thanks!<p>http://www.secret-santa-organizer.com/",1260685280
992488,comment,992023,992312,0,0,zach,,,"No, I think ""stupid"" is right because it speaks to the prejudice that bright people hold against these kinds of endeavors.  It is social conditioning but rarely examined as such.",1260685181
992487,comment,991968,991968,0,0,ramchip,,,"<i>Uncomfortable topics are tricky. A few topics are taboo for good reason (again, legal issues are a good example).</i><p>I didn't get that bit. What does the author mean by legal issues and why should it be taboo in a meeting?",1260685084
992486,comment,992170,992383,0,0,mark_l_watson,,,"I used to worry more about good runtime performance. Now I prefer to use a language that is easier and faster to use in development.<p>re: pluses and minuses:<p>Lisp:<p>+ better interactive development style; I'll keep a Lisp repla open most of the day. For Ruby, irb is not something that I live in.<p>+ really great runtime perfromance<p>- not as many libraries for web frameworks, database, etc.<p>Ruby:<p>+ very concise and fun to develop with<p>+ many great libraries and frameworks<p>- poor runtime performance",1260684931
992485,comment,992293,992396,0,0,gottlieb,,,"Works better as a sequence diagram: <a href=""http://www.diagrammr.com/edit?key=dEWNUvFXUEy"" rel=""nofollow"">http://www.diagrammr.com/edit?key=dEWNUvFXUEy</a>",1260684905
992484,comment,992253,992394,0,0,mahmud,,,"Gravatar has avators for all its users, which could potentially include everyone online. File types icons are much more limited.<p>The rank of the first set is in the multi-hundred millions, while the later can be ~50. There is enough room in my /var/www/pub/images for 50 x ~40kB. (my entire disk storage, 300GB, can only hold avatars for 63M people.)",1260684785
992483,comment,992231,992325,0,0,dzuc,,,"please explain why this is using the word ""music"" loosely?",1260684385
992482,comment,991834,992175,0,0,ramrod,,,"Sorry but you're the CTO at open DNS and Google is a direct competitor to you now. I would rather hold out for information from a more unbiased source.",1260684343
992481,comment,992223,992223,0,0,mattyb,,,"Basically a dupe:<p><a href=""http://news.ycombinator.com/item?id=991627"" rel=""nofollow"">http://news.ycombinator.com/item?id=991627</a>",1260684294
992480,comment,992253,992393,0,0,mahmud,,,"Yes, those two have saturated the web and they are the #1 reason why the ""Top N Free Icons"" blog articles are written.<p>My suggestion is to use something else free but a bit more obscure, until you have enough money to get a custom look and feel for your brand.",1260684232
992479,story,,,1,1,r5416,"The Latest News - Tech4000 Has something to Give",http://www.twitter.com/tech4000,"Let us give you the gift of information!  Delivered to your twitter!!  Follow us on twitter and get the latest in Tech News Delivered right to you Absoutley FREE!",1260684229
992478,story,,,76,57,bytebot,"Help save MySQL",http://monty-says.blogspot.com/2009/12/help-saving-mysql.html,,1260684030
