ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
232818,comment,232730,232730,0,0,jgamman,,,"now that we've been conditioned into thinking this security theatre is relevant we can now buy a different bag as a 'solution'.  horse/cart ref here.",1214902721
232817,comment,231954,232520,0,0,pavelludiq,,,"this is a little of topic, but its not just that. I know a lot of stuff about American history, i also know people that have lived in different parts of the country. I could write an entire essay about stuff that i don't find normal in American culture, but you can do that with almost any country. There are stuff in America thats just weird.(i mean weird not from my point of view, i mean weird in any point of view, i think the ""most powerful nation in the world"" thing has gone to your heads, power corrupts.)",1214902686
232816,story,,,1,0,dc2k08,"New deal makes “invisible” Flash content visible to search",http://venturebeat.com/2008/06/30/new-deal-makes-invisible-flash-content-visible-to-search/,,1214902449
232815,comment,232622,232688,0,0,fallintothis,,,"<i>ci"" deletes the inside of parentheses</i><p>I think you mean inside quotes, by the way.<p><i>I find the idea that there are 100 vim commands every programmer should know a but ludicrous though.</i><p>Especially considering that the ""100"" commands were all compositions of simpler vim commands anyways.  I don't think this is actually that great a submission, for this reason.  How many ways are there to rehash some really specific example -- say, counting both "":set syntax [on|off]""?  Vim is so much more general than that.  It seems inaccurate -- even discourteous -- to treat this as some laundry list of commands in your bag of tricks (except in the case of, say, muscle memory).  From my experience, you don't memorize some long string of letters as a command; you think of what each tiny bit does in and of itself, then compose that into whatever you want to accomplish.  Rather than commit the string ""ggguG"" to your brain, vim users think of it as ""go to the beginning of the file (gg), then uppercase (gu) to the end of the the file (G)"".  Granted, vim gets more complicated as you delve into the realm of motions, .vimrc level configurations, ex command line, etc.<p>Also, it seems that vim users would be the real ones who need to know such things, not every programmer altogether.  The title feels cheap / sensationalized that way.<p>If there were some REAL list of vim commands ""every programmer should know"" (well, vim-user), I'd at least start by recommending the alphabet...",1214902439
232814,comment,232351,232675,0,0,wallflower,,,"> Their influence is greatly overstated.<p>But doesn't being TechCrunch'd help your googleability/google page rank?",1214902389
232813,comment,231722,232584,0,0,benhoyt,,,"You might be right for birthday lists, but I think for weddings, $20 is not bad. Part of the reason I made Gifty is so people weren't forced to buy from a particular shop, or buy online, or whatever -- there are lots of such wedding registry sites our there already.<p>You're probably right about it being off-putting to put prices on there for things I don't yet offer. Fixed, thanks. :-)",1214902364
232812,comment,231722,232045,0,0,benhoyt,,,"Mainly because I've undercharged too often for things in the past. I like giving stuff away, but this time I thought I'd have a go at making it a bit of a business up-front.<p>If I simply get no-one over the next wee while, I'd consider making it free. But I don't care too much either way -- I mainly made it for a friend who's getting married.",1214901873
232811,comment,232810,232810,0,0,DaniFong,,,"One particularly moving passage:<p>The tech world won't know the final impact of Raskin's work until several more months, perhaps years. At the time of his death, he was working on what he hoped would be his biggest mark yet: a new type of operating system called Archy. Friends and co-workers describe it as his longtime vision of easy-to-use computing brought to life.<p>Last December, funding from an unnamed international company came through at almost the same time his pancreatic cancer was discovered, and Raskin threw himself into completing the framework of the system in his final months, says David Burstein, who's making a film about Raskin's life and did dozens of interviews with him late last year and early this year.<p>Raskin was programming up until he could no longer type, about a week ago, says his 21-year-old son, Aza Raskin, who worked with him on Archy for six years. ""Jef largely ignored being sick,"" he says. ""He thought it was more important to keep his work going. The only thing that happened was he worked harder if that's possible.""",1214901763
232810,story,,,7,1,DaniFong,"Jef Raskin: He thought different. (2005)",http://www.businessweek.com/technology/content/mar2005/tc2005031_2111_tc120.htm,,1214901718
232809,comment,232533,232647,0,0,ntoshev,,,"You would need voting data to make anything with the nice properties of pagerank.",1214901393
232808,story,,,1,0,zen53,"Top 10 secrets of successful digital entrepreneurs ",http://www.smartcompany.com.au/Premium-Articles/Top-Story/20080620-10-secrets-of-successful-digital-entrepreneurs.html,,1214901116
232806,comment,232725,232741,0,0,DaniFong,,,"Why is a fully fledged language a bad thing, in this case?",1214901036
232805,comment,232759,232781,0,0,DaniFong,,,"Definitely.<p>It's funny. I mean, basically none of the startups profiled by jl in founders at work did this. The statistics seem to imply that if you followed this advice literally, you're doomed.",1214900886
232804,comment,232623,232778,0,0,gruseom,,,"I'm no XP fan, but this comment is ignorant. It's entirely possible for two people to concentrate together on a hard problem, and when it works well you get a ""two heads are better than one"" effect. It matters a lot how big the codebase is on <i>any</i> software project (and XP is well aware of this). Collective code ownership is advocated for a number of good reasons, such as that it mitigates risk and increases quality (think open source). The vast majority of ""large groups of average programmers"" are not doing XP and would hate the idea of it just as much as you do, and for some of the same reasons. Plenty of XP projects have above-average programmers. (Edit: Oh, and by the way, when I was paying attention to this stuff the corporate types were the source of greatest <i>resistance</i> to XP, while most of the people advocating it were technical. So it's a little rich to hear XP described as a corporate conspiracy to impose a drone state on creative programmers. Perhaps it's changed since then.)<p>XP provokes a lot of one-sided emotional reactions from people, some in favor, most against. (I'd include the OP in this.) In fact, I've noticed that some of the most cultish XP people turn out to have been the ones who had knee-jerk negative reactions at first. Once they decide they don't want to sit in a room by themselves all day after all they flip one bit to the other and become evangelists of the opposite. The irony is that much of what they say both pre- and post-koolaid is actually true. But it gets spoiled by rigidity.",1214900629
232803,comment,231758,232047,0,0,narag,,,">It's SBCL. And we have really excellent models for tools. If someone would extract SLIME from emacs and into an editor with less history behind it and more popular appeal, you'd have most of the tools you need.<p>SBCL port to Windows is a work in progress. And what you're saying about tools is more or less that they doesn't exist... yet. And comparing what you need to know and set up to start working with open source Lisp and other environments is... not fair.",1214900443
232802,comment,232625,232698,0,0,DaniFong,,,"I just discovered Aza and Jef Raskin's webspaces a little while ago, but they are truly great sources of ideas.",1214900414
232801,comment,232181,232342,0,0,davidw,,,"> makes a lot of people respond to legitimate criticisms with tribal defensiveness.<p>That's true for pretty much any computer system, whether it's Tcl, Emacs, Ubuntu, Postgres or whatever.<p>BTW, I loved the descriptions of Perl and Java users - it's not often that I get that good a laugh when reading something.  And I agree with you completely about Ruby hitting a 'sweet spot'.",1214900337
232800,comment,231758,232076,0,0,narag,,,"That could fill the requirements for ""enterprise"" software, the kind of work that people happily convert to web apps. Making desktop software can be much much more demanding.",1214899973
232799,comment,232727,232727,0,0,wallflower,,,"And there could be a popular yet-to-be-written Firefox or GreaseMonkey extension to neuter it in case web advertisers start adopting it.",1214899584
232798,comment,232622,232622,0,0,davidw,,,:q!,1214899496
232797,comment,232622,232622,0,0,blackman,,,"Isn't a patch on <a href=""http://rayninfo.co.uk/vimtips.html"" rel=""nofollow"">http://rayninfo.co.uk/vimtips.html</a>. Looks like most of it has been taken from here anyway. Is it really necessary for a programmer to rot13 his code??",1214899453
232796,comment,232615,232736,0,0,timr,,,"It's only shocking if you haven't lived through it before.<p>Google's growth will slow, and the most ambitious employees will move along or retire (this is already happening), leaving the careerists to take over.  As the management structure of the company ossifies, the young employees will stop working quite so many hours (why bother, if it's not going to make you rich?), and a job at Google will become Just Another Daily Grind (tm).  Over time, the free food and massages will look as dated and manipulative as the free soda at Microsoft, and the company will become an elaborate, kabuki-theater version of its youthful mythology.<p>I think you know you're on the bad side of this narrative when you start to see Audis and Volvos in the company parking lot.  Clunkers are good (the employees are young and hungry) and ridiculous sports cars are okay (the employees are newly rich and brash), but luxury sedans are the death knell for innovation.  (And yes, in case you're wondering -- the lots at Microsoft are positively <i>filled</i> with them).",1214899404
232795,comment,232623,232623,0,0,gruseom,,,"XP does have a social bias. Eric Evans once suggested ""social programming"" as a more accurate name for it. When combined with the formulaic nature of software ""process"" (do these 12 things, code must be written in pairs, etc.) this aspect can turn weird or even cultlike. That's unfortunate because the best and most fun software projects are indeed (in my experience) highly collaborative. But compulsory socialization isn't fun at all.",1214899344
232794,comment,232192,232192,0,0,Tichy,,,"Is Prolog still relevant? I am still curious about it, but never got round to checking it out.",1214899322
232793,comment,232703,232703,0,0,fauigerzigerk,,,"I'm not sure I understand this, but it appears to me that the consequence would be a reversal of defaults. Now we assume that a sequence of commands is the default and parallelism has to be explicit. He proposes to make parallelism the default and sequence explicit.<p>My question would be, is parallelism really the more frequent case? I mean if we take all the instructions in a program and analyse which ones are just accidentially sequential and which ones have to be sequential to be correct, would we have more parallel pairs or more squential pairs of instructions?<p>I believe we have more sequential pairs and that it'd be very cumbersome to default to parallelism. But there may be special cases where defaulting to parallelism is beneficial.",1214899268
