ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
873064,comment,872283,873057,0,0,antonovka,,,"<i>> The Erlang virtual machine has what might be called 'green processes' - they are like operating system processes (they do not share state like threads do) but are implemented within the Erlang Run Time System (erts). These are sometimes (erroneously) cited as 'green threads'.</i><p>Erlang processes' implementations share internal mutable state, despite the fact that the inter-process messaging API available via the runtime does not expose this. They have to -- internal cooperative context switching can't be implemented without shared mutable state.<p>They're threads.<p><i>Going back to Ruby, sure, threads might be theoretically better than processes, but in practical terms, other things are the real bottleneck, so it ends up not really mattering that much.</i><p>I'm not sure I follow. Is this something like ""ruby is really, really slow, so no need to worry about concurrency"" ?",1255157932
873063,comment,872860,872941,0,0,jfarmer,,,"<i>shrug</i><p>It's a bet either way and anecdotes are anecdotes, but Netflix has lots of data and personally this is how I behave.<p>I've dropped TV entirely for Hulu.  What I can't get on Hulu I order from iTunes.<p>If every movie on Netflix were streaming, I'd watch it that way, even at a lower quality.<p>So, YMMV, maybe you're 100% the opposite and/or you know lots of people who care about 780p, 10455p, and whatever else.  But I don't think I'm from Pluto, either.<p>From a strategic perspective I think he's right in the limit.  Bandwidth is going to infinity.  If consumers prefer timeliness to quality they'll put up with lower quality and wait for bandwidth to improve.<p>The end game is the same: high-res everything, instantly.",1255157830
873062,comment,870944,871920,0,0,aerique,,,"I don't know what has happened to most of my fellow countrymen for the last 10 or 15 years but they don't really give a shit. They're of the ""if you've got nothing to hide, you've got nothing to fear""-mentality.",1255157710
873060,story,,,24,6,cwan,"Would a Ratting System Work?",http://dilbert.com/blog/entry/ratting_system/,,1255157551
873059,story,,,1,0,rickmans,"Piano stairs - The fun theory",http://dontmindrick.com/asides/piano-stairs-the-fun-theory/,,1255157508
873058,comment,872301,872898,0,0,antonovka,,,"<i>Ruby isn't the issue here - most of the hardware spend (tiny as it is) went toward master and slave databases. Our database isn't huge, but it isn't small either. The working set doesn't fit in 32 GB of memory - lots of memory and fast disks are critical (even with caching and all that) and that takes 2 non-cheap servers.</i><p>7 machines is getting into part-time sysadmin territory.<p>My estimate of peak load was somewhat generous in averaging it across only 5 hours -- could you elaborate on the actual peak load?<p>I'm surprised that something that's orders of magnitude slower than the alternatives isn't at least part of the issue, given the amount of front-end stack required, hired employees, and 3 6-core (6?) 40 GB front-end webservers required for 10 million hits/day.<p><i>I worked on Java web apps for 8 years before starting Ravelry and I definitely don't regret choosing Ruby for this project :) Did I have to buy 1 more server than I would have had to with Java? Yeah, I think so. ...but the trade-off was definitely worth it.</i><p>The JVM truly doesn't require Java, Spring, or J2EE, and it's an incredibly impressive piece of technology to just discard.",1255157473
873057,comment,872283,873051,0,0,davidw,,,"> Likewise, erlang's lightweight processes are exactly the same -- threads. The fact that they can be modeled to arbitrary numbers of operating system threads is irrelevant to the nature of the model -- one in which execution of a thread can proceed independently of others, implemented via context switching of execution state across those threads, able to access shared state.<p>From Wikipedia:<p>> The Erlang virtual machine has what might be called 'green processes' - they are like operating system processes (they do not share state like threads do) but are implemented within the Erlang Run Time System (erts). These are sometimes (erroneously) cited as 'green threads'.<p><a href=""http://en.wikipedia.org/wiki/Green_threads"" rel=""nofollow"">http://en.wikipedia.org/wiki/Green_threads</a><p>Going back to Ruby, sure, threads might be theoretically better than processes, but in practical terms, other things are the real bottleneck, so it ends up not really mattering that much.",1255157277
873055,comment,872635,872954,0,0,simonw,,,"I don't see how digg is similar to kuro5hin or delicious - kuro5hin was about essays, delicious was primarily about serving personal needs (saving bookmarks) first. They seem very different to me. Digg also inspired a bunch of similar sites using the same mechanism (like Reddit and Hacker News) which suggests that digg had something genuinely new to offer.",1255157076
873054,comment,872860,873041,0,0,DarkShikari,,,"Usually it's from a master.  But the quality loss due to broadcast compression is great enough that the difference between a master and Blu-ray source would hardly be visible.<p>HDTV is usually better than a DVD though if it's a premium channel from a good provider.",1255157060
873052,story,,,1,1,omouse,"Go read a Web page. Who paid for it? Why advertising is not the answer",http://www.eastgate.com/HypertextNow/archives/Advertising.html,,1255156813
873051,comment,872283,873040,0,0,antonovka,,,"<i>In other words, threads are a nice boost to Erlang, but not really the secret to its success.</i><p>I think you missed my meaning. On FreeBSD 4.x and Linux 2.0.x, threads were implemented entirely in user-space. They didn't allow for true concurrent execution of multiple threads on multiple CPUs, but they were still very much <i>threads.</i><p>Likewise, erlang's lightweight processes are exactly the same -- threads. The fact that they can be modeled to arbitrary numbers of operating system threads is irrelevant to the nature of the model -- one in which execution of a thread can proceed independently of others, implemented via context switching of execution state across those threads, able to access shared state.<p>However, in the fork model as described in the original article, processes are the only form of concurrency. A blocked request will, in turn, block a process, and unlike threads, far fewer processes may be run concurrently due to their significantly increased resource constraints. Furthermore, those processes are much more limited in their ability to implement low-cost inter-thread communication via shared mutable state.<p>If the processes actually relied on their own internal M:N scheduled green threads, then at least that part of the concurrency problem would be (mostly) solved, and fewer processes would be required. IPC is still an issue, and of course, there's the multi-decade demonstration of the high difficulty in implementing a 'performant' general-purpose M:N scheduled thread system.",1255156738
873046,comment,871777,872219,0,0,jedediah,,,"Sadly, most of us have to code for IE, just as we have to code for the ""good browsers"".",1255156550
873045,comment,872986,872986,0,0,nikz,,,"I think you need to be particularly careful when approaching a technical audience (like HN) for something like this.<p>I'm not saying that I feel this attitude in particular from you, but posts of the ""I'm the business guy, I need a tech guy"" nature often come across as condescending to me, as a technical reader. I think the implication is ""anyone can make the tech work"", when in reality a technical cofounder probably feels like they'll have <i>at least</i> as much input into the startup as you.<p>Or this could just be a personal attitude I've adopted after too many proposals of the ""here's 1%, now go do all the work"" nature (""I'm worth more because I'm the business guy!"")<p>:)<p>In any case, best of luck finding someone.",1255156499
873044,comment,872347,873024,0,0,apsurd,,,"I think my comment still applies. The comparison is not even equal in my opinion. Not to take credit away from slinkset at all, I have an account there =).<p>You are right, I have not used the stackexchange platform, but seeing the end result of both makes me fail to see how there is even any comparison.<p>Slinkset says it creates social news sites.
StackExhange says its a knowledge exchange platform.<p><i>To me</i> I read that slinkset intends to be a handy social media tool. Stackexchange intends to be wikipedia for questions and answers.<p>Hardly similar.<p>So to answer your question. All the people stackexchange is likely targeting and intended for, probably don't even put slinkset in the same conversation based on their needs.",1255156264
873043,comment,872986,873030,0,0,adrianwaj,,,"The crux of the matter here is that I am bringing a complete idea to the table, and have already worked it through with a talented developer who doesn't have the capacity to go further with the idea.<p>It says in the YC rules that a remote co-founder is permissible. Although this may be construed as biased, for someone that wants to potentially solve a massive and pressing problem, I am offering the opportunity to do so with someone knowledgeable and passionate about it, in a valued context that's associated with this forum.<p>There's no downside in working with me, I'd prefer established teams of two. What's the worst thing that can happen? How am I wrong? I am an affable person.",1255156230
873042,comment,872589,872869,0,0,listic,,,"Interesting. The idea looks similar to Art. Lebedev's Verbarius clock, but more low-tech and more pricey.<p><a href=""http://www.artlebedev.com/everything/verbarius/"" rel=""nofollow"">http://www.artlebedev.com/everything/verbarius/</a><p>store: <a href=""http://store.artlebedev.com/office/gadgets/verbarius/"" rel=""nofollow"">http://store.artlebedev.com/office/gadgets/verbarius/</a><p>I wonder if Biergert & Funk heard of Verbarius. Seems like Art. Lebedev was first with the idea?",1255156210
873041,comment,872860,872968,0,0,MikeCapone,,,"One more question; do you know if the movies we see on TV have been encoded from a ""master"" provided by the studios or something like that, or if it's a re-compression of something like a Bluray or a DVD..?",1255156195
873040,comment,872283,873032,0,0,davidw,,,"Threads are a 'nice extra' for Erlang.  They're definitely a plus, no arguments there, but in your M:N mapping, N is fixed at the number of CPU's in the system.  So if you have one CPU, Erlang doesn't really use threads at all, and yet it is still very scalable.  The scalability on our one-CPU system comes from being able to use a nice, compact, select/poll based system and keep everything in one OS process, <i>without</i> spawning additional threads or OS processes.<p>So, threads are really just an optimized case of launching N Erlang vm's, where N is the number of processes, and splitting the work between them.  They were a late addition to the language too - this only happened several years ago, if I recall correctly.<p>In other words, threads are a nice boost to Erlang, but not really the secret to its success.",1255156069
873039,comment,872860,872932,0,0,elq,,,"Reading comprehension for the win - 
""DVD will only be the ""primary delivery format"" at the company for the next two years, though he did add that it would stick around in some fashion for the next decade or two.""",1255156053
873038,comment,866586,866939,0,0,ash,,,"I haven't tried, but according to <a href=""http://eventlet.net/doc"" rel=""nofollow"">http://eventlet.net/doc</a> (used Google cache - it's down for me at the moment):<p>Areas That Need Work<p>* Not tested on Windows<p>* There are probably some simple Unix dependencies we introduced by accident. If you’re running Eventlet on Windows and run into errors, let us know.<p>* The eventlet.processes module is known to not work on Windows.",1255155882
873037,comment,872986,873029,0,0,adrianwaj,,,"I appreciate your response and interest. My original posting basically spells out my position. There's plenty of work for me to do. If you're vaguely interested then I can sell myself more to you either in public or private.<p>I am going to develop this project, I just want to maximize my chances of success, rather than have someone come along and copy me down the track who's in a more commercially viable position (like an incumbent, someone VC-backed, or someone with deeper pockets).",1255155730
873036,comment,872442,872936,0,0,gnaritas,,,"I think your definition is a bit off.  If I recall correctly, a species is a group that <i>does</i> interbreed naturally and produce fertile offspring, not just can.",1255155720
873035,comment,872872,872872,0,0,alexjmann,,,"I'm looking for a technical cofounder for my company, AM Analytics. We're based and incubated out of Berkeley. Please email me if you would like to discuss details:<p>alex@amanalytics.com",1255155665
873034,comment,872283,872960,0,0,brett,,,"He has been kind enough to share about his setup quite a lot about lately. In fact, looks like it's on the HN homepage right now: <a href=""http://news.ycombinator.com/item?id=872301"" rel=""nofollow"">http://news.ycombinator.com/item?id=872301</a>",1255155471
873033,story,,,4,0,DaniFong,"Quantum computing may be useful for systems of linear equations",http://web.mit.edu/newsoffice/2009/quantum-algorithm.html,,1255155456
873032,comment,872283,873004,0,0,antonovka,,,"<i>Erlang is not really an argument for threads.</i><p>Solaris 2-8 implemented a general purpose M:N thread scheduler mapping user-space threads to kernel threads. This is the exact same solution Erlang implements for the less general purpose use-case of actor messaging.<p>Is Solaris' M:N thread implementation somehow not 'threaded'? If it is threaded (and it is), then how is Erlang's implementation not also an argument for threads?<p>To elucidate rather than rely on Erlang as an example, the argument for threads over processes:<p>1) Extremely low-cost alternative to IPC. Threads <i>allow</i> (but do not <i>require</i> the use of) shared mutable state. This is a much, much cheaper way to communicate between concurrent entities. You can achieve the same effect with processes and shared memory, but it's significantly more complex to implement and subject to the disadvantages listed below.<p>2) Extremely low memory foot-print. A thread costs a stack plus minor OS book keeping. A fork(2) can leverage COW pages, but almost invariably the number of non-shared pages will be significantly higher than with a thread. If an operation blocks a thread, it's cheap to create more. If an operation blocks a process, you'll hit resource constraints far more quickly trying to fork() more.<p>Of course, leveraging shared memory and other operating system tools, you can turn a fork(2) implementation into a thread alternative -- but then, you'd have ... threads. This is what Linux's clone(2) syscall was intended for -- a thread-implementation friendly fork(2) alternative -- and the pthread library was built on top of it.<p>... for a while, you could call setuid() in a Linux ""thread"" and the new uid would be a thread-local change, because the thread was actually a 'process'.<p>This is effectively not an argument against fork(2) (although it's an expensive route to the same solution offered by threads), but rather against scaling models that will block an entire OS process for the sake of a single request.",1255155000
873031,comment,872447,872797,0,0,catch23,,,"It is somewhat man-in-the-middle, but not much different than your browser-side plugins...  some browser side plugins load external javascript into your webpages so it wouldn't be significantly different.  Wesabe.com (personal finance site like Mint) allows you to enter in your financial data directly into their system, and also provides a firefox plugin that will fetch that financial data should you be worried about Wesabe's security.  However, few people have used their firefox plugin for doing it.",1255154959
873030,comment,872986,873019,0,0,frisco,,,"A startup is not a small business.  A startup is attempting to build something of tremendous value for a large number of people.  At that level, you can't treat internet systems as a black box: the skills needed to successfully launch a webapp and manage it with users are very non-trivial. Put another way: you can't manage devs who are an order of magnitude more deep technically than you are.  Outsourcing works when there's local management who can make sure everything isn't falling apart and can vet the code submitted.",1255154813
873029,comment,872986,873019,0,0,chrischen,,,"I think the particular thing about startup founders that is emphasized here and by Paul Graham is that they have to be exceptional, or at least offer something that most people don't have.<p>Anyone can hire developers and anyone can apply to YC. I'm not saying you have no worth, but you haven't really given a good reason for anyone to join you yet. If I personally know you, that might be a good reason, but I don't, and the fact that you're calling out on HN means you're not looking for someone you know.<p>So if you do have an urge to work on a startup, get someone you know or do it yourself if you absolutely don't know anyone. Or at least tell people specifically what you can do and make sure it's something that's not easy to find everywhere.<p>I would love for a cool people to work with but we're talking about splitting the company with a whole other person, and if you are not able to offer even a fraction of the other founders' worth (because at this point technical founders will be doing most of the work), then it's a hard sell.<p>Do you have a degree? Do you have a good idea? Are you objective? Anything to show that you have value? Frankly if all you have is an idea that's not even enough value for you to be a co-founder.",1255154791
873028,comment,872635,873018,0,0,jv2222,,,"I thought lots of people who don't have booths pay for a ticket with the express purpose of networking. I didn't think you could get in without paying $1.5-$3k for a ticket? Maybe I'm wrong but that was the impression I had.",1255154757
873027,comment,872946,872962,0,0,rglovejoy,,,"* Anthony Julius - Author, Literary Critic, Attorney<p>* Donald Knuth - Mathematician, Typographer, Musician, Philosopher<p>* Rudy Rucker - Mathematician, Science Fiction Writer<p>* Alex Kozinski - Federal Judge, Essayist, Humorist<p>* Murray Gell-Mann - Physicist, Mathematician, Linguist",1255154753
873025,comment,872868,872868,0,0,JCThoughtscream,,,"You have become my new favorite person. This'll be a very useful list in the present and near future...",1255154676
873024,comment,872347,872881,0,0,bayareaguy,,,"Not to be any more snarky, it seems to me that you're confusing the stackoverflow <i>site</i> with the Stack Exchange <i>platform</i>.  Put simply, the latter ""powers"" the former much the way news.arc ""powers"" Hacker News or Wordpress ""powers"" countless specific blogs.<p>Perhaps I should rephrase my question: what makes Stack Exchange worth the price they charge when Slinkset is free?",1255154592
873023,comment,872447,872826,0,0,catch23,,,"Actually, I was just bored.  I meant to take it out but forgot about it...  I was trying to get a high score in YSlow ;-).<p>If you look into the CSS, it still references the non-CDN images and Safari is actually somewhat stupid -- it loads both sets of images even if the CDN images override it.  The homepage actually loads slower with the CDN images (but I get a higher score on YSlow :-P )",1255154543
873022,comment,872872,872990,0,0,JCThoughtscream,,,"As a current student, former intern, and somebody with a high baseline of paranoia, I note that not describing how you're planning to take over the world first tends to make minions distrust your intentions.<p>Minions, even students, would also like to know if they'll get paid for it.",1255154509
