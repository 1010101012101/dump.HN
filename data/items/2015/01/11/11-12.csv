ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
8869751,story,,,2,0,ckyildiz,"How to Make a Ruckus in 2015 Inspired by Seth Godin’s 99u Q&A",http://www.powerfulnonsense.com/make-ruckus-2015-inspired-seth-godins-99u-qa/,,1420977567
8869750,comment,8869167,8869661,0,0,david-given,,,"Because it allows (in some situations) dynamic memory allocation where the compiler can reason about when the memory becomes unused, thus guaranteeing that it&#x27;s freed. In other words, you get to use algorithms which allocate off the heap without risking a memory leak. Plus a whole bunch of other useful features like Lisp-style structural macros, parametric polymorphism, compile time bounds checking, and other awesome stuff stolen from the functional programming world.",1420977532
8869748,comment,8854608,8856325,0,0,dogma1138,,,"Yes because some where in my sentence i was referring to a 980 or a 780ti some where? Maybe it was a Titan Z, no maybe it&#x27;s still the GTX 690 Ti which is still the fastest single card they made, or maybe that statement was referring to their latest COMPUTE card the Tesla K80 which costs 5000$, and contains 2 new Kepler cores (GM210) and requires about 300 watts of juice to run....",1420977383
8869746,comment,8867741,8867741,0,0,kartikkumar,,,"The 3-body problem never ceases to amaze me. I&#x27;ve had so much fun playing with choreographies over the last few years, and detecting chaos. Despite the N-body problem being age-old, there&#x27;s still so much cutting edge work being done on figuring out where various patterns and (sub)structures come from. The Kepler dataset [1] has provided a brilliant starting point to probe a lot of seemingly insane planet configurations.<p>One of the most fascinating restricted problems I&#x27;ve worked on is the Sitnikov problem [2].<p>[1] <a href=""http://exoplanetarchive.ipac.caltech.edu/docs/KeplerMission.html"" rel=""nofollow"">http://exoplanetarchive.ipac.caltech.edu/docs/KeplerMission....</a><p>[2] <a href=""http://www.scholarpedia.org/article/Sitnikov_problem"" rel=""nofollow"">http://www.scholarpedia.org/article/Sitnikov_problem</a>",1420977296
8869745,comment,8869167,8869661,0,0,jnbiche,,,"> but why on earth should any one use rust in kernel development<p>Because that&#x27;s explicitly one of the things Rust was developed for.<p>Here&#x27;s a whole list of kernels and other OS projects that have been created using Rust:<p><a href=""https://github.com/rust-lang/rust/wiki/Operating-system-development"" rel=""nofollow"">https://github.com/rust-lang/rust/wiki/Operating-system-deve...</a>",1420977251
8869743,comment,8868035,8869347,0,0,mikerichards,,,"Unfortunately or fortunately, I don&#x27;t live in Spain so that&#x27;s not an option ;)",1420977246
8869742,comment,8868709,8869337,0,0,pron,,,"Because diversity isn&#x27;t intended to make class photos more colorful but to include members of marginalized communities in more powerful circles.",1420977198
8869740,comment,8869608,8869721,0,0,antonpirker,,,"Yes, right! I forgot about this in the blog post. We counted the rows of some tables. Unfortunately we could not do this with all tables because we had dead data in the old database (ex: child rows without parents). But with the new database we made sure to have all the database features and checks in place to guarantee referential integrity. We also did spot tests to make sure the data is as expected.",1420977165
8869739,comment,8869401,8869683,0,0,Stratoscope,,,"> Microsoft is about as marmite as you get in software (along with Oracle perhaps)...<p>Sure, I have fond memories of the days when trendy developers would see me using a ThinkPad instead of a MacBook and ask, &quot;Mike, when are you going to move away from the dark side?&quot;<p>Not so much any more. People I talk with seem reasonably impressed with the way Microsoft has been open sourcing .NET and other projects, making Visual Studio Professional free (as in beer), etc.<p>Now Oracle, that&#x27;s a different story. We all still love to hate them!",1420977040
8869738,story,,,57,3,abishekk92,"Tesser – Clojure reducers, but for parallel execution on distributed systems",https://github.com/aphyr/tesser,,1420977036
8869736,comment,8867575,8869040,0,0,klibertp,,,"I don&#x27;t know how true it is, but the language author claims that it made it into space, on board of some satellite or spacecraft. If that doesn&#x27;t make it &quot;production ready&quot; then I really don&#x27;t know what would.",1420976802
8869735,comment,8869221,8869703,0,0,moe,,,"<i>Progress?</i><p>Yes. For the companies selling the parts and the repair services.",1420976769
8869734,story,,,1,0,porphyry3,"Show HN: Rn – a handy file renaming tool",https://www.npmjs.com/package/node-rn,,1420976733
8869733,story,,,3,0,underyx,"In Hungary, telling the truth is getting difficult. Here’s a plan to change that",https://medium.com/@direkt_36/in-hungary-telling-the-truth-is-getting-more-and-more-difficult-heres-our-plan-to-change-that-e8985cdb65a6,,1420976673
8869732,story,,,174,147,forloop,"Scientists say they’ll soon extend life ‘well beyond 120’",http://www.theguardian.com/science/2015/jan/11/-sp-live-forever-extend-life-calico-google-longevity,,1420976652
8869731,comment,8869572,8869572,0,0,tomp,,,"Moreover, as pointed out by mjbshaw [1], it also contains &quot;You&#x27;ve met with a terrible fate, haven&#x27;t you&quot; [2], which is apparently a <i>The Legend of Zelda</i> quote [3], almost certainly still under copyright.<p>[1] <a href=""https://github.com/rust-lang/rust/issues/13871#issuecomment-67676376"" rel=""nofollow"">https://github.com/rust-lang/rust/issues/13871#issuecomment-...</a><p>[2] <a href=""https://github.com/rust-lang/rust/commit/29ad8e15a2b7e2024941d74ea4ce261cb501ded9#diff-a9fca94e278fcf3b55ad199ccfdd9bdeR79"" rel=""nofollow"">https://github.com/rust-lang/rust/commit/29ad8e15a2b7e202494...</a><p>[3] <a href=""http://zeldawiki.org/Happy_Mask_Salesman#Powers"" rel=""nofollow"">http://zeldawiki.org/Happy_Mask_Salesman#Powers</a>",1420976643
8869730,comment,8869305,8869589,0,0,eps,,,"You clearly commented on a title alone.<p>Go and read the NYT article linked from the app&#x27;s page.",1420976622
8869729,comment,8869265,8869265,0,0,kayman,,,"It was interesting to hear he never saw red star OS.\nFrom the recent link, I was under the impression that red start was the defacto OS of DPRK.<p>And the have their won TLDs. (top level domains)\n.web sounds cool",1420976601
8869728,comment,8864747,8869563,0,0,rasz_pl,,,"both screens use eDP, you can drive them with ordinary DisplayPort, all of those those &quot;driving boards&quot; started with Polish Warsaw Hackerspace dude (Emeryth) publishing his findings concerning ipad screen<p><a href=""http://emerythacks.blogspot.com/2013/04/connecting-ipad-retina-lcd-to-pc.html"" rel=""nofollow"">http://emerythacks.blogspot.com/2013/04/connecting-ipad-reti...</a>",1420976595
8869727,comment,8867600,8867600,0,0,trymas,,,"I&#x27;ll just leave this right here: <a href=""http://xkcd.com/936/"" rel=""nofollow"">http://xkcd.com/936/</a>",1420976578
8869726,comment,8868597,8869713,0,0,seanmcdirmid,,,"Haskell is 1990, Erlang is 1986, OCaml is 1996, F# is 2005. So it really only predates F# by more than a decade.",1420976485
8869725,comment,8869608,8869608,0,0,dschiptsov,,,"It is not that simple and comes back to the same old maxim - as long as the only documentation of what the system is doing and why is its source code, you are doomed.<p>If you have a written detailed guidelines of what you are doing and why, which design decisions were made and why, which data representation is used and why and what corresponding algorithms are and why, then one could re-write parts of the system in different languages/frameworks just for fun or to explore and compare.<p>Coding or rewriting is second to deep, hierarchical  understanding of hows and whys. This is how the most of programming exercises are designed - once you have understood how it should be, which results each procedure should return (wishful thinking and tests before code, to define domain and range of a procedure - ideas as old as SICP) then coding is the most trivial part.<p>Look at antirez - he is a rare example of a guy of deep understanding before code.",1420976461
8869724,comment,8869265,8869265,0,0,brainburn,,,"&quot;uhhh&quot;.<p>Makes it really hard to watch this.",1420976443
8869723,comment,8869167,8869483,0,0,giovannibajo1,,,"On the other hand, rust has no standard library (&quot;batteries&quot;) by explicit choice, so once the ecosystem will evolve, there would likely be multiple json or http libraries (just to name &quot;low-level&quot; libraries with widespread usage), and you might end up linking a few of them in a binary as indirect dependency.",1420976401
8869722,comment,8867600,8868712,0,0,bigbugbag,,,"The bitcoin blockchain relies on the assumption that the mining power is honest and no single entity will hold the majority of the mining power. This has proven to be an issue with the selfish miner case and when a single mining pool reached 51% of the total mining power.<p>In the world of security you simple cannot assume honesty and build security on top of this assumption.",1420976358
8869721,comment,8869608,8869608,0,0,Fumzz,,,"To number 2 (Migrating the database is hard) I would also add that it is important to verify the integrity of the migrated database in some way afterwards. Even a simple assertion like &quot;the number of user accounts (or whatever) is the same in both databases&quot; will help greatly.",1420976353
8869720,comment,8869401,8869644,0,0,josteink,,,"You mean like. Application Lifecycle Management? ALM? Bug-tracking, release-management and stuff?<p>Which they now will be using Github for? Oh. That&#x27;s <i>definitely</i> interesting.",1420976337
8869719,comment,8866794,8868606,0,0,jinushaun,,,"I was expecting hard science but got a monster movie instead.",1420976332
8869718,comment,8869305,8869364,0,0,sago,,,"That would completely defeat the object. The point of this exercise is not the transfer of information, but the practice of intimacy.",1420976275
8869717,comment,8869401,8869663,0,0,josteink,,,"Github has its own issue-management, which I quite frankly find way better than anything Codeplex has, because of how it interacts and links with the source-control commits themselves. Github also supports per-project wikis, and if people aren&#x27;t using them to write documentation on Github, they wouldn&#x27;t be writing documentation on Codeplex either.<p>The reason you see more Github repos without documentation is because writing documentation is &quot;boring&quot; work, and mostly bigger organizations can afford the staff to write and maintain documentation.<p>And most codeplex repos were Microsoft&#x27;s own, where they had an interest in keeping their stuff documented. On Github anyone can (and does!) open a repo.<p>So missing documentation has nothing to do with Github itself as much as the users and organizations it primarely attracts.",1420976260
8869716,comment,8869608,8869608,0,0,curiously,,,"I rewrote my product 6 or 7 times in the past 6 years. 4 of those years were written in isolation by myself. 1.5 years I worked as a developer which I HATED and fired from (refusing to work excessive overtimes and as a result impossible to find a job in this competitive labor market) and working on my product again. I open sourced the old code that I &quot;threw&quot; out to start all over.<p>Technically, never reached market until 5 months ago. I have of course, launched after each time the product was finished but would give up due to being burnt out etc. An entire year spent starting from scratch which would be my 7th attempt.<p>3 month in after launch I was going to rewrite it again, I decided, this would&#x27;ve been my last attempt in the software business. I decided that enough was enough, this is it. I ALMOST rewrote it again but having done that 7 times already, instead of doing that, I just ripped out a lot of code, made architectural changes and reused what I could, whatever was tested. 8 times a charm....<p>My lesson learned from past 6 years pursuing insanity, restarting from scratch means you will have to solve the same problems again and again. A blank canvas is NOT a solution. Don&#x27;t do that, it&#x27;s insane, I was insane but not anymore.",1420976212
8869715,comment,8867600,8869237,0,0,A1kmm,,,"If you physically protect your book sufficiently and don&#x27;t let anyone who is a threat see it, and choose strong passwords (which baNana3 isn&#x27;t for most purposes - it&#x27;s only 7 characters long, and based on a dictionary word with minor modifications) then yes.<p>If someone willing to put in the effort to do some cryptanalysis obtains a copy of your book, then no, you are most likely not safe. Firstly, the Vigenere cipher is extremely vulnerable to a known plaintext attack on the key - if the person who obtained your book knows your password to just one site (for example, because it was lost in a compromise and published on the Internet), they can work out your master key and then get all your other passwords. Even if they don&#x27;t know any passwords, if you use passwords that are not made up of equiprobably randomly selected characters (and especially if they are dictionary words), the attacker will usually be able to use that bias to work out the master key. For example, the attacker might cycle through all words in the dictionary to obtain the key that decrypts aykwmy to the word, and try the master key they obtain on other entries in your book until they find one that yields a lot of other dictionary words.",1420976026
8869714,story,,,3,0,make_now_just,"Show HN: Kotlin's Quine without using Literals",https://github.com/MakeNowJust/quine2/blob/master/Kotlin/quine_noliteral.kts,,1420976000
8869713,comment,8868597,8869559,0,0,andolanra,,,"Haskell predates all of Erlang, OCaml, and F# by a pretty large margin (by about a decade! [EDIT: for OCaml and F#; see child comment]) and uniquely among most of the languages mentioned is a <i>lazy</i> statically-typed functional language. There is a large qualitative difference between optional laziness and laziness-by-default. Haskell was originally intended as a teaching language, and in particular as a less-license-encumbered version of the language Miranda, which was a popular teaching language at the time. So the original reason the language needed to exist was, &quot;We want a lazy, statically-typed language for research and teaching uses.&quot;<p>Is there a different rationale now? Well, there still aren&#x27;t many lazy-by-default languages, and Haskell is a good way of showing that there are some big advantages as well as some big disadvantages to that approach. One consequence of laziness is a really hardcore commitment to functional programming—where OCaml can cheat and have implicitly stateful functions, Haskell has to use alternatives like monads or effect systems—which means that Haskell is a fascinating language for exploring and developing new programming concepts in the functional space. So maybe Haskell&#x27;s one-line selling point is, &quot;We need to deeply understand functional programming and the idioms it affords us.&quot; I personally think this is a worthwhile endeavour regardless of how much it pays.",1420976000
8869712,comment,8868304,8869395,0,0,Vivtek,,,"This screed is essentially pure-quill mental imbalance. I was in school in America in 1979, too. I subscribed to BYTE, Science 80, the whole nine yards. My teachers were ecstatic about my love for science, not even once trying to dissuade me from my eager pursuit of the future.<p>So right on the face of it, you&#x27;re just flat wrong.  And then you go <i>right</i> off the rails screeching about Communist influence as though this were anything but raving paranoia.<p>I&#x27;m a liberal Quaker (Quakerism <i>far</i> predates Communism) and - you know what? - I seem to have been left off the distribution list from Moscow.<p>Basically, all I can think when I read this is that you need to get back on your meds. &quot;Pathologically insane ideas,&quot; my ass. How anybody can view <i>liberalism</i> as an attack on the Enlightenment - when it <i>is</i> the Enlightenment - is frankly flabbergasting.",1420975977
8869711,comment,8868597,8869679,0,0,exDM69,,,"In a classic Hindley-Milner type inference algorithm, you can&#x27;t have a function &quot;add(int, int) -> int&quot; and &quot;add(float, float) -> float&quot;. E.g. in Haskell, you&#x27;d need a type class for this.<p>Modern functional programming languages use a type inference algorithm more sophisticated than the original H-M algorithm which are more flexible than the original algorithm. The link you gave as an example is Haskell with a handful of language extensions related to the type checker - something entirely different to the H-M algorithm.<p>There can be other ways of implementing a similar type checker in a different manner, this was just a fun idea I came up with.",1420975955
8869710,comment,8869401,8869640,0,0,josteink,,,"In a non-sarcastic world it&#x27;s called &quot;community&quot; and it increases the chance of getting collaborators contributing to your project.<p>You know, the point of open-source being that everyone should be able to contribute and all that.",1420975941
8869709,comment,8867600,8867600,0,0,johnchristopher,,,"Are each card produced with a different substitution pattern ?",1420975929
8869708,comment,8869401,8869610,0,0,josteink,,,"It seems it&#x27;s pretty easy with Github wikis too:<p><a href=""http://stackoverflow.com/a/22002422"" rel=""nofollow"">http://stackoverflow.com/a/22002422</a>",1420975902
8869707,comment,8867575,8868253,0,0,draegtun,,,"Looks a good start.<p>I had plans for doing something like this a few years back myself.  Here&#x27;s the only bit I managed to put on Github -   <a href=""https://github.com/draegtun/Io-Array"" rel=""nofollow"">https://github.com/draegtun/Io-Array</a>",1420975884
8869706,comment,8869305,8869589,0,0,mbrock,,,"There was no golden age of analog love. Love needs all the help it can get.",1420975841
8869705,comment,8867748,8868681,0,0,jasonkester,,,"The reason is that it&#x27;s not a blog entry.  It&#x27;s the &quot;read in a browser&quot; version of Patrick&#x27;s amazing email course.<p>Lots of people signed up for it when it was new, and even though Patrick specifically asked that it not be submitted here, every mail was.  Now we get the occasional repost from people who are just now working their way through the course.<p>That it is occasionally updated and has no date stamp should therefore not come as a surprise.",1420975807
8869704,comment,8869608,8869695,0,0,arethuza,,,"Having had rewrites of large projects go spectacularly well and also spectacularly badly, I suspect one factor to be mindful about is if the rewrite facilitates the &quot;second-system effect&quot; - I&#x27;ve had that happen where the rewrite of a messy but successful suddenly allows the introduction of lots of cool features you&#x27;ve wanted to add for ages and you actually end up with a &quot;simplified&quot; system that is actually a lot more complex than the original.<p>NB I&#x27;ve only had one project go badly wrong that way and I guess it was a useful learning experience :-)",1420975775
8869703,comment,8869221,8869221,0,0,x0054,,,"Because cars are not expected, under normal circumstances, to experience abnormal amounts of current on any given circuit. Unlike a house, where you can easily plug in something into the outlet that can overwhelm the circuit, in a car each circuit is designed specifically for a given maximum load.<p>When you blow a circuit in a house, you have most likely massed up and plugged too many things into one outlet, or your device is drawing too much power. You learn from your mistake, unplug the device, and reset the circuit. If a car blows a circuit, then there is something seriously wrong with some component of the car or the wiring. You don&#x27;t want the user to be able to reset the circuit, you want someone who knows what they are doing to figure our what went wrong.<p>I fix all of my own cars, and never once have I ever had a blow fuse &quot;just because.&quot; There always was an underlining cause which needed to be addressed. Except once, when a 10A fuse was used in a circuit that required a 25A fuse, on a window motor.<p>So, basically, in a well functioning and well designed car a fuse  will not fail just because. So why bother replacing a part that costs less then a cent with a part that costs several dollars. I hate this attitude, just because something CAN be complex, does NOT mean it has to be complex.<p>Take car modules for instance. It used to be that back in the day (the 90s) your headlights were operated by a mechanical relay. This relay was expected to fail at some point (though they very rarely actually did fail) and as a result this relay was installed in an easily accessible place. If it did fail, it would cost $10-15 to replace it plus 5 minutes of labor.<p>New cars nowadays have solid state switching modules to operate headlights, and everything else in your car. These components are not expected to fail, even though they often do. Don&#x27;t believe me, talk to any mechanic. However, because they are not expected to fail, they are often installed deep inside the car. So, now, if your headlight module fails, it costs $400 in parts, and several hours of labor to fix the same problem. Progress?<p>Stop making things needlessly complicated. Blade fuses are a fine solution to a problem.",1420975663
8869702,story,,,2,0,gresquare,"How I built my first MVP in less than 1 week (and how you could, too)",http://blog.slices.io/post/107680351807/how-i-built-my-first-mvp-in-less-than-1-week-and,,1420975647
8869701,comment,8868776,8868776,0,0,duncanawoods,,,"A big problem I experience is the lack of web-safe keyboard shortcuts for complex web-apps. If looking for a safe key-combination, you have to consider the superset of OS and Browser combinations and that leaves almost nothing.<p>The gmail approach is for unmodified keys but that only works if you don&#x27;t have focus in an editable field. The gdocs approach is for menu chords but that sucks for frequent actions and still generates weird dual handling of events by the browser.<p>I&#x27;d love a web/browser standards committee to preserve the universal utility of the keyboard. It could ring-fence some application specific shortcuts, give a semantic abstraction of some actions e.g. undo, and standardise mechanisms for os specific remappings.<p>As it is, as more tech comes along, the less usable keyboards become. I am still dumbfounded that the iPad lacks a tab button or any chord for one despite claiming to be usable for word-processing. This basically means no web-app can ever assume a keyboard has a tab key. Gah.",1420975481
8869700,comment,8863451,8865238,0,0,the_why_of_y,,,"... and a sufficiently large C++ application would use 10 <i>different</i> string classes in various parts of it, likely with different text encodings too, with lots of fun converting between them.  Even a crappy UTF-16 based String like Java&#x27;s is better than such a mess.",1420975474
8869699,comment,8869401,8869675,0,0,pron,,,"> But the idea of using C#, .NET, or coding Windows Apps? Far fewer devs under 30 are doing that than they were 10 or 20 years ago.<p>Except I&#x27;m not sure MS is still betting on Windows apps, and they&#x27;re not making money off of .NET either. Of course, it&#x27;s very prestigious to have your own dev tools/platform/language and all the big kids have them, but none of them are making money.",1420975470
8869698,comment,8867335,8867753,0,0,dougabug,,,"Having youtubers hawk goods seems not so different from advertising/endorsements/affiliate links. I think something that might be more useful for people would be low friction engagement of consultation/services/speaking/musical performances etc.",1420975464
8869696,comment,8869167,8869669,0,0,zxcdw,,,"Care to elaborate why do you think so?",1420975397
8869695,comment,8869608,8869681,0,0,antonpirker,,,"Sure you can attempt a rewrite! But you must make sure that you know what are getting into. It is not an easy thing to do, but once the rewrite is done your live gets way better :)",1420975345
8869694,comment,8868327,8869065,0,0,arethuza,,,"Here in Scotland the last vestige of feudalism (fue duties payable by &quot;owners&quot; of some property to the feudal superiors) was only abolished in 2000 as one of the first Acts of the Scottish Parliament:<p><a href=""http://en.wikipedia.org/wiki/Abolition_of_Feudal_Tenure_etc._%28Scotland%29_Act_2000"" rel=""nofollow"">http://en.wikipedia.org/wiki/Abolition_of_Feudal_Tenure_etc....</a>",1420975320
8869693,comment,8867600,8868896,0,0,bigbugbag,,,"This is a simple variation that I have not seen covered in hashcat, though it is not future proof. If people catch on this then it won&#x27;t be long before a new rule is added to hashcat to cover this case.<p>I have used a similar variation in the past, in my case the character substitution came from changing the keymap of the keyboard.<p>for example &#x27;correct&#x27; typed in qwerty over a dvorak keymap became &#x27;krpp>ky&#x27;",1420975303
8869692,comment,8868709,8869422,0,0,yen223,,,"Don&#x27;t forget that the tech sector hires globally, and Chinese and Indians are the majority ethnicities in the world.",1420975299
8869691,comment,8867365,8869496,0,0,noiv,,,"On the last point: This kind of reasoning has been repeated over and over again with any &quot;food technology&quot; rolled out since the beginning of agriculture 12,000 years ago. Still people are hungry. Maybe it is time to find out whether working on the root cause actually fixes the hunger in the world.",1420975279
8869690,story,,,2,0,antoaravinth,"Processor affinity",http://en.wikipedia.org/wiki/Processor_affinity,,1420975260
8869689,comment,8867335,8867578,0,0,sago,,,"You cannot satirise illiteracy or ignorance online without people assuming you are actually illiterate or ignorant.",1420975188
8869688,comment,8867365,8869657,0,0,Blahah,,,"You&#x27;re absolutely right in the first part - a huge proportion of arable land is used to feed animals.<p>However, this doesn&#x27;t change the optimal strategy for feeding people in the medium term, for a bunch of reasons:<p>1. The arable land used for feeding animals would not necessarily be available for feeding people who are hungry now if it were to be freed up.<p>2. In general the world&#x27;s poorest people grow their own food on small plots of land and don&#x27;t produce a lot of meat. They care about the productivity of their plot of land.<p>3. Changing the world&#x27;s eating habits is a gargantuan task. Are you suggesting we stop trying to feed people in the medium term using technology, and allow them to starve while we try to convince westerners not to eat meat? I know this is not what you&#x27;re suggesting - but it serves to show that we should of course be pursuing all the available routes to alleviating hunger.<p>> OK, let&#x27;s say we can increase yield by 50%. What comes after that?<p>That&#x27;s enough to meet the entire calorific intake increase for rice-eating countries by the time population stabilises. By around 2050 the world population will have stopped growing. So what comes after that is that everyone is fed, and we can enjoy a world where very few people go hungry while we fix the much more difficult problems of economics and society.<p>Finally, the UNEP report doesn&#x27;t talk about the potential for GM crops because it&#x27;s out of scope - the report is about environmental factors in food production. They do say that their projections could be affected by improvements in GM technology.",1420975142
8869687,comment,8869401,8869668,0,0,taspeotis,,,"Probably TFS, which Microsoft use quite a bit internally [1].<p>[1] <a href=""http://blogs.msdn.com/b/visualstudioalm/archive/2013/08/20/tfs-internal-usage-statistics-1st-half-cy-2013.aspx"" rel=""nofollow"">http://blogs.msdn.com/b/visualstudioalm/archive/2013/08/20/t...</a>",1420975117
8869685,comment,8867600,8868019,0,0,aragot,,,"> Memorizing passwords isn&#x27;t a workable solution<p>Correct analysis,<p>> recommend password managers<p>No! Passwords should never be considered as secure material, period. Centralizing in a password manager centralizes the burden. There are half a dozen other workable solutions, among which authentication by email (What else is the reset-by-email link?), Mozilla Persona and all kinds of asymetric keys.",1420975051
8869684,comment,8869401,8869494,0,0,InclinedPlane,,,"It&#x27;s a natural evolution from long standing internal pressures. There has always been a strong contingent of folks within Microsoft who have espoused the &quot;hacker&quot; ethos more or less. Folks who cared as much about building cool things and pushing the state of the art as for making a dollar. Folks who pushed for open standards and cooperative rather than coercive interactions with other companies, customers, the dev community, etc.<p>For a while those forces have struggled to have their voices heard but now they have a bit more cohesion and momentum on their side so you&#x27;re seeing more of these things.",1420974997
8869683,comment,8869401,8869578,0,0,weego,,,"It would be a horrible buy for any polarising brand. Microsoft is about as marmite as you get in software (along with Oracle perhaps) regardless of their recent attitude to being open. We have to be past the point where anyone with purchasibg power believes you can aquire credibility.",1420974990
8869682,story,,,1,0,dziemid,"Show HN: HeCoSiRe – track health (pet project)",http://gregdmd.com/blog/2015/01/04/launching-hecosire/,,1420974966
8869681,comment,8869608,8869608,0,0,joosters,,,"Lesson 1: Don&#x27;t ever attempt a big rewrite?",1420974953
8869680,comment,8869221,8869600,0,0,sillysaurus3,,,"That&#x27;s less social media and more Woz asking a question.<p>Or rather, this is the internet at work, not social media.  The only thing social media has done is reduce the time between question and answer.  And that&#x27;s impressive, but it&#x27;s not the fundamental shift the internet itself was.",1420974943
8869679,comment,8868597,8869652,0,0,ehamberg,,,"> The advantage of this approach would be allowing function overloading (similarly to C++ or Java) informally without interfaces or type classes.<p>I might be misunderstanding something, but how does this allow function overloading more than ordinary let-polymorphism? Functions can already have a type like, say, ∀a.a→Int. It&#x27;s also quite common to do type inference in two steps where the first pass creates type variables and a list of constraints. The set of constraints are then passed to a unification algorithm, see e.g. <a href=""http://www.seas.upenn.edu/~cis552/lectures/stub/FunTypes.html"" rel=""nofollow"">http://www.seas.upenn.edu/~cis552/lectures/stub/FunTypes.htm...</a>.",1420974941
8869678,comment,8867155,8867155,0,0,stdbrouw,,,"Better PDF: <a href=""http://www.csse.monash.edu.au/~korb/pubs/fallacy.pdf"" rel=""nofollow"">http://www.csse.monash.edu.au/~korb/pubs/fallacy.pdf</a>",1420974907
8869677,comment,8869150,8869150,0,0,andolanra,,,"Various past comment threads:<p>* <a href=""https://news.ycombinator.com/item?id=1680149"" rel=""nofollow"">https://news.ycombinator.com/item?id=1680149</a><p>* <a href=""https://news.ycombinator.com/item?id=8146306"" rel=""nofollow"">https://news.ycombinator.com/item?id=8146306</a><p>* <a href=""https://news.ycombinator.com/item?id=3963896"" rel=""nofollow"">https://news.ycombinator.com/item?id=3963896</a><p>* <a href=""https://news.ycombinator.com/item?id=2985601"" rel=""nofollow"">https://news.ycombinator.com/item?id=2985601</a><p>* [a handful of zero-comment and one-comment reposts I&#x27;ve elided]<p>This is a very popular repost—as it should be, because it&#x27;s a very good and well-thought-out article, and a surprisingly well-reasoned and well-written example of the &quot;meditation on a programming language&quot; genre of blog post—and each of the past comment threads is also worth consulting.",1420974728
8869676,comment,8868304,8869140,0,0,Joeboy,,,"That would be the &quot;most popular&quot; films of 1979, as rated in recent years.<p>Here&#x27;s imdb&#x27;s biggest films of 1979 by US box office:<p><a href=""http://www.imdb.com/search/title?at=0&sort=boxoffice_gross_us&title_type=feature&year=1979,1979"" rel=""nofollow"">http://www.imdb.com/search/title?at=0&sort=boxoffice_gross_u...</a><p>Alien is thrashed by Star Trek: The Motion Picture and Moonraker. Apocalypse Now is thrashed by The Muppet Movie.",1420974708
8869675,comment,8869401,8869588,0,0,InclinedPlane,,,"pjmlp has it right, but I&#x27;ll add some further clarifications.<p>One of the most important aspects of Microsoft&#x27;s success is network effect. People use Windows and Office because other people use Windows and Office.<p>But network effect also works on the development/platform side. Devs write apps in the technologies they know and are comfortable with, and those tend to be the technologies they&#x27;ve used for personal or work projects. Today, far fewer of the top tier (even the top 50% really) of developers are using Microsoft technologies, or are even familiar with them. The &quot;cool kids&quot; code in Ruby or Python or Scala or Golang, or mobile specific languages. If they want to get things done to pay the bills they might fall back on java or PHP. But the idea of using C#, .NET, or coding Windows Apps? Far fewer devs under 30 are doing that than they were 10 or 20 years ago.<p>With fewer devs coding on your platform that means there will be fewer apps, especially the most desired ones, and eventually that will impact the user base as well and weaken the entire business. The era where nobody cares whether a computer runs windows is on the horizon today, even though it may be many years away. If you look at the big apps and systems from the last 5 years you see that a lot of them are either web based or mobile (specifically android/iOS as well).<p>Microsoft used to understand this and it was a major reason why they invested in Visual Studio for all those years when it was unprofitable. But they&#x27;ve had a period of unrivaled market dominance which has only recently been challenged, so they lost their way for a while.<p>Catering to devs is how you maintain market relevancy with your platform, which is something Microsoft desperately needs.<p>Additionally, improving the relationship with the dev community and attracting more devs to your platform makes hiring easier (especially hiring talented folks). It&#x27;s almost impossible to objectively quantify the benefit of that but it&#x27;s an enormous factor. Microsoft has been bleeding talent for years and has been starved of a lot of talent for a long time because they were perceived as being old and boring and requiring a completely different set of proficiencies to work there. If Microsoft wanted to they could turn that around and start paving a road back to relevancy in the dev community again.",1420974689
8869674,comment,8868597,8868753,0,0,ryangittins,,,"I had a very similar experience.  We went over Prolog for five weeks or so, and while I did thoroughly enjoy learning a whole new paradigm, it still felt like it was just a toy.  All programs amounted to `YES` or `NO`, without any building of an interface or other components I&#x27;d spent so long learning about.  I can definitely identify with the feeling that it wasn&#x27;t &quot;real&quot; programming.<p>That being said, one use case which I did find interesting was that of graph theory and graph-based problems.  I don&#x27;t know much about graph theory beyond the basics, but simple things like tree traversal, the Shortest Path Problem, Dijkstra&#x27;s algorithm, and other things revolving around nodes and edges seemed like a perfect fit for Prolog.  You don&#x27;t have to build a node object and write a bunch of code to create a tree and then a bunch more to traverse it.  You just tell it some simple rules, give it a graph, and away you go.  It can have incredibly low overhead, at least in terms of line count, for problems like these.<p>I&#x27;m not sure whether or not these properties would make Prolog helpful in solving harder problems than these, but I suspect it would.  It&#x27;s just too simple <i>not</i> to be useful in some cases.  Here are the rules, find something that satisfies them.",1420974675
8869673,comment,8867365,8868289,0,0,makomk,,,"Golden rice <i>would</i> allow &quot;Big Ag&quot; to tighten their control on the food supply if it was actually useful, which seems unlikely at the moment. About 30 or so of the biggest agricultural technology companies hold patents vital to it, including Monsanto and Bayer, and Golden Rice itself is patented with the patents controlled by Syngenta. They&#x27;ve granted a limited free license for humanitarian use[1], but only for countries that can&#x27;t grow enough calories of food to feed their population[2] and small-scale subsistence farmers, and only if they don&#x27;t export the rice. As far as I can tell it&#x27;s basically impossible to grow enough rice to make a difference under the terms of the agreement, which isn&#x27;t surprising as the whole thing&#x27;s basically a PR stunt for big agri. (Even the creator of golden rice reckons the main reason everyone was so willing to license their patents was because it makes a good PR weapon against anti-GMO activists - now they can accuse them of wanting the third world to starve.)<p>[1] <a href=""http://www.goldenrice.org/Content1-Who/who4_IP.php"" rel=""nofollow"">http://www.goldenrice.org/Content1-Who/who4_IP.php</a><p>[2] &quot;low-income, food-deficit countries as defined by FAO&quot; - see <a href=""http://www.fao.org/countryprofiles/lifdc/en/"" rel=""nofollow"">http://www.fao.org/countryprofiles/lifdc/en/</a>",1420974582
8869672,comment,8866933,8867056,0,0,JackMorgan,,,"I&#x27;m pretty sure it would form a &quot;brotherly&quot; love, that sort of relationship that was platonic but intimate was very common between men in throughout history.",1420974495
8869671,comment,8868908,8868908,0,0,flohofwoe,,,"I think the main problem with WebAudio is that it was originally designed under the assumption that Javascript would be too slow to fill audio buffers fast enough for low latency buffer queueing, and thus this complex audio-node system was conceived where audio data would flow through black-box processing nodes written in C/C++.<p>In a perfect world, a low-level web audio API would focus on providing an as direct-as-possible way to stream raw audio data (buffer queueing like in OpenAL, or a wrap-around buffer like in DirectSound), make sure that this works well with WebWorkers (i.e., worker thread should be able to queue new data when required, not when the main loop gets around to it), and move all the complicated high-level audio-graph stuff into optional Javascript libs.",1420974489
8869670,comment,8867979,8868758,0,0,aw3c2,,,"Check out the annual Siggraph preview videos, <a href=""https://www.youtube.com/results?search_query=siggraph+2014+preview"" rel=""nofollow"">https://www.youtube.com/results?search_query=siggraph+2014+p...</a>",1420974399
8869669,comment,8869167,8869501,0,0,0xFFC,,,"dude its great , but not that good, at least not yet .",1420974374
8869668,comment,8869401,8869649,0,0,thesimon,,,">We are moving our code to GitHub as well as switching to use git internally<p>But they were using a different tool internally.",1420974357
8869667,comment,8868597,8869559,0,0,seanmcdirmid,,,"So I&#x27;ve interacted with many of the leading Haskell people (SPJ, Wadler, among others) and I never really got that feeling from them. They were just super smart people with different fascinating ways of thinking (from my perspective). They never came off as very smug, in fact, they weren&#x27;t really that interested in what <i>you</i> thought about Haskell; they were too busy using it to solve problems. I think in that way, Haskell continues to be the language that defies success, at least in the way that many would define it (mass adoption - Haskell seems to be super successful to those people, and I don&#x27;t think I would disagree with them).<p>Haskell programmers do seem to work on more elegant solutions to problems that are easily solved less purely. This is not a useless activity, it can help in understanding those problems more deeply, but it is hard for an outsider to appreciate. I know I will never be a Haskeller, simply because I am interested in different problems.",1420974352
8869666,comment,8869150,8869533,0,0,arethuza,,,"I never did much Forth, but I wrote a lot of PostScript and I really enjoyed it in a lisp-like kind of way.",1420974325
8869665,comment,8867600,8867749,0,0,bigbugbag,,,"Except this has stopped being strong a while ago, since it has been popularized by xkcd in 2011 cracker have incorporated this scheme in their password cracking routines.<p>Bruce Schneier blogged about this last year: <a href=""https://www.schneier.com/blog/archives/2014/03/choosing_secure_1.html"" rel=""nofollow"">https://www.schneier.com/blog/archives/2014/03/choosing_secu...</a>",1420974284
8869664,comment,8869305,8869305,0,0,binarymax,,,"I have an idea for an experiment: take this to the UN and have two quarreling diplomats go through the process with each other.  Next step - world peace.",1420974256
8869663,comment,8869401,8869466,0,0,sixothree,,,"I definitely like how CodePlex has dedicated tabs for documentation, as well as discussion and issues. It seems like every repo I come across on github is often just a dump of files with very little in the way of documentation. My guess is that because CodePlex makes documentation prominent, it incentivises its use while the opposite is true for github.",1420974199
8869662,story,,,1,0,kurt_bwc,"Show HN: A plugin to display complete YouTube channel on your website",http://www.codehandling.com/2015/01/youmax-30-complete-youtube-channel-on.html,,1420974163
8869661,comment,8869167,8869602,0,0,0xFFC,,,"Rust seems very promising language , but why on earth should any one use rust in kernel development ? as far as I see this link is just calling write system call from rust program (which is very good) , but don&#x27;t have anything to do with linus or kernel internal. and if you mean some thing like scripting in kernel ( i think openbsd ddne it with lua ) there is more viable and simpler choice than  rust , like lua.",1420974143
8869660,comment,8822810,8822810,0,0,skyplor,,,"Location: Singapore (A small country in South East Asia)<p>Remote: Possible<p>Willing to relocate: A definite yes (If the opportunity arises. VISA required)<p>Technologies: Java, Android<p>Résumé/CV: <a href=""https://dl.dropboxusercontent.com/u/13404393/Resume%20(Software%20Engineer).pdf"" rel=""nofollow"">https://dl.dropboxusercontent.com/u/13404393/Resume%20(Softw...</a><p>Email: sky.jmpay @@ gmail [dot] com<p>I&#x27;m a computer science graduate from Singapore. Have been working on several mini Android projects I gave myself to keep me abreast of the changes in technology. My focus is on <i>Android development</i> and would like to have more experience working in companies in SV. Please don&#x27;t hesitate to email me should there be such opportunity.",1420974001
