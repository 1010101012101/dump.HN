ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
2723250,comment,2723122,2723122,1,0,tylerneylon,,,"Things I found interesting:\n* typedefs are discouraged in many cases\n* goto is acceptable for common-function-exit code\n* 8 tab-based spaces per indent<p>I agree with the first two.  Careful goto use can be like a destructor for a function.  8 spaces per indent seems excessive to me; esp using tabs since spaces are guaranteed to appear the same in every sane code editor.  Although I do love the idea of all my code maxing at 3 indents.<p>Suggested ~48 line max for function length is also cool.  The easiest way for me to force myself to code cleanly is to stick to short files and functions.",1309676348
2723249,comment,2720634,2720634,1,0,known,,,"With guns, we are citizens.\nWithout them, we are targets/subjects.<p>Peruvians should learn from <a href=""https://secure.wikimedia.org/wikipedia/en/wiki/Gun_politics_in_Switzerland"" rel=""nofollow"">https://secure.wikimedia.org/wikipedia/en/wiki/Gun_politics_...</a>",1309676234
2723246,story,,,29,2,waila,"Fire and Forget: Asynchronicity is your friend.",http://blog.rounds.com/asynchronicity/,,1309676011
2723245,comment,2722549,2722549,7,0,ollysb,,,"This feels like an engineers vision of the web. The two benefits of this over apis are:<p>1) The user gets to choose how to perform a particular activity.<p>2) Services can be found either automatically or by the user searching for services and saving them for later.<p>Don't the majority of users want this taken care of for them? Imagine going to facebook and having to find a service to perform a friend request. That's just an irritation for a benefit that most people don't want(wow I can send an invite using SMS with this service).<p>It's also notable that there's no styling on the examples. How is the UI going to be integrated, are all of the web intents supposed to follow a standard CSS format? How about the amount of space that service takes up on the page?<p>I suspect apis are popular because they're the best fit for sharing functionality on the web. Users want curated, integrated websites, not a set of mix 'n' match components.",1309676004
2723244,comment,2721621,2722401,2,0,movingahead,,,"The point everyone keeps missing about facebook is that they were trying something new in the social space. They did commit mistakes and have accepted it. They also allow you now to download all your data. I believe that if facebook  merges friend lists and groups, they have will have a strong product against google.",1309675926
2723243,comment,2722413,2722413,1,0,ohashi,,,"I used Ninite today on a new computer, remembered it off the top of my head without issue.  Keep up the great work guys :)",1309675891
2723242,comment,2723089,2723235,0,0,jamesaguilar,,,"Well, you could always encode the data as an mp3. If you did, it would look a lot like an MP3. Might not be efficient though. And it would still be easy to tell that it was encrypted data.",1309675879
2723241,comment,2708595,2708595,1,0,arihersh,,,"This is an absolutely fascinating thread-- thanks to Rachel Zahorsky for the original article, and to sunchild and other commenters for thoughts and inspiration. Am very interested in contacting others on this list with an interest in both law and code.<p>I recently wrote about version control and law on quora: <a href=""http://b.qr.ae/kRgGyk"" rel=""nofollow"">http://b.qr.ae/kRgGyk</a>, and about 'open sourcing' access to the tax code here: <a href=""http://blog.tabulaw.com/2011/06/open-source-tax-code.html"" rel=""nofollow"">http://blog.tabulaw.com/2011/06/open-source-tax-code.html</a>.",1309675828
2723240,comment,2722833,2723207,4,0,ramidarigaz,,,"Actually learning about the stack was one of my big 'aha!' moments. I sorta' knew it existed, but I didn't really comprehend it.",1309675805
2723239,comment,2722833,2723150,66,0,staunch,,,"You're the dick Zed. The guy (hp) barely mentioned what you were doing at all and was just offering some general advice on C. You take it like a personal attack on your manhood.<p>You're always defending yourself against dreamed up conspiracies. You have a serious martyr complex.",1309675780
2723238,comment,2701017,2723212,1,0,ohashi,,,"You don't have a better solution, plenty of companies have enormous portfolios of domains.  This also wouldn't free up the better names, the best ones would simply be allocated into different management companies, only the marginally profitable ones would be let go.  There is no shortage of domains and nobody is restricting anyone's right to a domain.  Just because I own a name doesn't mean you've lost a right to domains, you have the exact same rights you always did, the freedom to register a domain that nobody else has purchased.  The same position everyone else is in, equally.  You have not proposed any objective way to measure and define better. Utility in a real market is hard if not impossible to measure.  You think it's your right to have a better domain name?  It's not.  Welcome to capitalism, where a free market dictates how resources are used. But they are blocking valuable startups you say.  If the company is actually viable and successful they can surely purchase it when their utility is greater than the current owner.  That's the beauty of capitalism.  When someone else's utility is greater than my own, they can purchase my asset and it becomes theirs.  Simple.<p>May I ask why I have to use my capital for YOUR benefit?  Since it's mine, I can do whatever I want with it.  That's the nature of capitalism and freedom.  Just because you don't like or even agree with what I do doesn't mean the system is broken.  You ask for the same protections, if not more, for your own assets, but want to take others' protections away.  Your arguments, if they can even be considered such, boil down to ""you suck, it's unfair someone has the name I rightfully deserve for no apparent reason other than I want it, and we should change the system so I get what I want.""  Go try that in the nicer area of your city/state/province with a lot of vacation rentals.  Tell a homeowner that you need that property more than they do because they have another home and how it's more fair that you get it.",1309675765
2723237,story,,,1,0,unixroot,"UP Rajarshi Tandon Open University Allahabad Website Hacked",http://www.thehackernews.com/2011/07/up-rajarshi-tandon-open-university.html,,1309675719
2723236,story,,,1,0,unixroot,"TriNity (Indian Girl Hacker) Strikes again to server with 690 websites",http://www.thehackernews.com/2011/07/trinity-indian-girl-hacker-strikes.html,,1309675658
2723235,comment,2723089,2723199,1,0,altrego99,,,"Basically, it identifies the randomness of a file that is AES encrypted. In general no other file will have that kind of random data. I wonder then, can there be an efficient encryption algorithm which will make your file look more like a particular type of data (say .mp3 or .jpg)?",1309675652
2723234,comment,2721868,2722075,2,0,simcop2387,,,"Run that sprite sheet through optipng and gimp to remove extra white space and you can get it down to 4021 bytes.",1309675559
2723233,comment,2723001,2723110,2,0,sorbus,,,"> What would it take to get this running under OS X?<p>Getting it running on Linux is as simple as throwing the source at GCC (with the -lSDL flag), so in theory it would probably be a similar level of difficulty on OS X, if you already have everything you need to compile programs. I don't have access to a Mac to test this on, though.",1309675548
2723232,story,,,1,0,unixroot,"Pepper (Dating site) hacked by Anonymous #Antisec",http://www.thehackernews.com/2011/07/pepper-dating-site-hacked-by-anonymous.html,,1309675536
2723231,comment,2722383,2722791,1,0,Locke1689,,,"Ah yes, a language VM, not an OS VM. My mistake.",1309675475
2723230,comment,2722851,2722851,2,0,aik,,,"Legal wiretapping doubled?  I wonder how the illegal kind is doing.",1309674920
2723229,story,,,1,0,unixroot,"WebSurgery v0.5 - Web app testing tool Released",http://www.thehackernews.com/2011/07/websurgery-v05-web-app-testing-tool.html,,1309674827
2723228,comment,2721868,2722404,1,0,taitems,,,"Hardly. Having worked on intranet applications I know first-hand how critical performance is. One on end of the scale you have very small companies, sharing your apps infrastructure with their timesheeting, invoicing and other app servers. On the other end you have companies like Shell, with a user base of over 110,000 employees. All their servers are hosted in the Hague.",1309674700
2723227,story,,,2,0,tech_junkie,"Quick Tip: How while(1) can make parallel code better?",http://www.futurechips.org/software-for-hardware-guys/quick-tip-why-while1-can-make-parallel-code-better.html,,1309674655
2723226,comment,2722833,2723171,2,0,__rkaup__,,,"In fact, here's a reference: <a href=""http://msdn.microsoft.com/en-us/library/e7f8y25b(v=vs.80).aspx"" rel=""nofollow"">http://msdn.microsoft.com/en-us/library/e7f8y25b(v=vs.80).as...</a> (It's in a ""Microsoft Specific"" block but says it's part of the ANSI C standard.) It applies to C, <i>and</i> it also applies to identifiers staring with two underscores.",1309674622
2723225,comment,2722833,2722897,2,0,gregjor,,,"K&R chapter 5.5, Character Pointers and Functions, explains pointers and shows how they are used in C. It's probably the clearest explanation of pointers ever written, and it doesn't require any understanding of hardware or assembly language (though that would help).<p>I remember reading those three pages over and over and experimenting with the code until I got it. I probably spent several days studying the pointer chapter back when I was a teenager. The light bulb eventually went on and C pointers made sense -- until learning C my programming experience was mainly with time-shared BASIC. The stepwise refinement of an indexed array version of strcpy() to a pointer-based version is a masterpiece of programming writing -- I still refer programmers I am mentoring to that chapter.<p>Finishing the strcpy() example with the one-liner<p><pre><code>  while (*s++ = *t++) ;\n</code></pre>\nthe authors write ""Although this may seem cryptic at first sight, the notational convenience is considerable, and the idiom should be mastered, because you will see it frequently in C programs."" I've found that programmers either get that line of code or they don't, and those who don't haven't mastered their craft.",1309674530
2723224,comment,2723089,2723216,3,0,gcr,,,"How does the browser verify that the md5sum is correct? The server would have to send the md5sum to the browser through SSL, which is good enough to protect the download anyway.",1309674408
2723223,story,,,4,0,zoowar,"Public Interest Requires Public Input: Verizon/Android Tethering",http://www.netarchitecture.org/2011/06/public-interest-requires-public-input-verizonandroid-tethering/,,1309674361
2723222,comment,2722383,2723206,3,0,palish,,,"The point is, the crash you describe will only occur on 32-bit operating systems, and only after you've allocated more than 1.5GB of memory.  For most projects, that is extremely unlikely.<p>Your solution would work.  But the extra code complexity, development time, and maintenance isn't worth it except in very, very specific scenarios, like if you're writing a third-party library such as Lua or FMOD or FreeType or... etc.<p>Here's an alternative solution that doesn't require NULL checking malloc, and provides all of the same benefits:<p>1) create a function (I call mine ""Sys_Exit()"") which allows you to cleanly exit your application from anywhere in your codebase.  For example in my game engine, my main() function looks like:<p><pre><code>  int main()\n  {\n    App_Startup();\n    while ( App_Frame() ) {}\n    App_Shutdown();\n    return 0;\n  }\n</code></pre>\nand Sys_Exit() looks like:<p><pre><code>  void Sys_Exit( int code )\n  {\n    App_Shutdown();\n    exit( code );\n  }\n</code></pre>\n2) write a ""my_malloc"" function which forwards to malloc.  Use it for all memory allocation.  When it detects that more than 1.2GB of memory has been allocated, then it prints an error message and calls Sys_Exit().<p>This allows you to save the user's work, etc, and your shutdown sequence has a fairly large amount of remaining memory to work with (so that you don't truly run out of memory after you've fake-run-out-of-memory).<p>This is a very simple solution if you <i>really</i> care about the extremely unlikely out-of-memory crash.<p>----<p>tl;dr: It is almost always a bad idea to NULL check malloc().  It tends to destroy readability, is error prone, and is hard to maintain, for very little practical benefit.",1309674313
2723221,story,,,3,0,evo_9,"ARM chips to rival PS3, Xbox 360 in 18 months?",http://arstechnica.com/#!/gadgets/news/2011/07/arm-chips-to-rival-ps3-xbox-360-in-18-months.ars,,1309674187
2723220,comment,2722413,2722625,1,0,adrianwaj,,,"I remember when you guys were baseshield... ninite could mean like (nigh-night) as in good night..""say good night to your installation problems""",1309674177
2723219,comment,2722703,2722952,1,0,mkelly,,,"Okay... I still don't understand how this is better than simply putting the contact details on the card itself, other than the risk of staleness.<p>(And the marginal case where you want to revoke the ability to view your details after you give out the card, but before the person checks...hmm...)",1309674028
2723218,comment,2722833,2723150,41,0,hp,,,"hey, I was just idly chattering about C and the way people in general often approach it. Not intended to be a review of an unwritten book or imply that you plan to approach it in any particular way.<p>I am a bad ass of course. But I thought it was relevant to the comment that I've written a lot of C.",1309674024
2723217,story,,,1,0,justsawyer,"How Friends can be Crappy",http://tacthoughts.blogspot.com/2011/07/how-friends-can-be-crappy.html,,1309673994
2723216,comment,2723089,2723089,6,0,plasma,,,"Web browsers should support built-in checksum verification of downloads (when owners upload md5sum/signatures/etc with the files), instead of having to do it manually.",1309673894
2723215,comment,2719551,2719551,1,0,avk,,,"Is this a big enough problem for average people? I know people create a ""lost phone, need your number"" Facebook group or event but is that enough of a pain? I've never seen more than one from the same person. So what exactly are you offering the average person with a messy, incomplete, and unsynced address book and why would they pay?",1309673763
2723214,comment,2721499,2723043,1,0,gruseom,,,"Interesting. Thank you. They revise Bittorrent for use inside data centers, where block sizes can be much larger and there aren't any malicious nodes. They prefer Bittorrent to alternatives because, through its broadcast overhead is higher, it scales better with number of nodes. One thing I didn't glean from the paper is whether the advantages of BT are unique to their framework or whether they would apply just as well to MapReduce.",1309673697
2723213,comment,2723099,2723099,0,0,karinqe,,,"Why does every post about Google+ have to be linked here?",1309673645
2723212,comment,2701017,2721727,1,0,rooshdi,,,"No, I want a solution that deters domain squatters and is overall better for most people. Maybe, there should just be a cap on how many domains one can own at a time. But domainers would probably complain about that too and make some hypocritical remarks about how this restricts their internet rights, when what they do restricts the internet even worse.<p><i>You're just ignorant and want to complain, you don't want a solution, you want to just be better off for yourself.</i><p>I think this statement represents domainers such as you perfectly. May I ask, can you name one benefit domainers provide to people?",1309673537
2723210,comment,2722956,2722956,1,0,seagaia,,,"Interesting, as much as I don't really like facebook.<p>I only see Hadoop being used even more widely now - that, or spinoffs/improvements, etc., as needed, unless Hadoop really can scale as much as possible.<p>At least, that's what this article tells me.<p><a href=""http://www.infoq.com/news/2011/06/hortonworks"" rel=""nofollow"">http://www.infoq.com/news/2011/06/hortonworks</a>",1309673513
2723209,story,,,1,0,abahdodi,"Watch True Blood Season 4 Episode 2",http://amertahot.blogspot.com/2011/07/watch-true-blood-season-4-episode-2.html,"Watch True Blood Season 4 Episode 2: In True Blood S04E02 under the title ""You Smell Like Dinner"" tells the story of Sookie who will try to be more quickly able to adapt to new realities of Bon Temps. Scott Winant as directed True Blood Season 4 Episode 2 and Brian Buckner script writer of the story.",1309673468
2723208,comment,2723205,2723205,3,0,jrockway,,,"This is probably more appropriate for the Github support forum than some random HN posting about a project on Github.  Your post adds nothing to this discussion.",1309673400
2723207,comment,2722833,2722897,2,0,daxelrod,,,"For me, the indirection of pointers was one of the fundamental CS concepts that required real effort to understand.<p>Before that point, I had never clearly separated the concept of a variable and its value. It took a huge conceptual leap to think about a variable that didn't hold a value, but rather, the location of a value. It took some serious mental gymnastics to deal with pointers n-levels deep.<p>Mind you, this was actually Perl references, not pointers, so I didn't even have to try to comprehend doing math on them.<p>After a while, of course, it became second nature.<p>My favorite aspect of CS is that every so often, I run into a wall of conceptual understanding that requires completely changing how I think in order to move forward. Have you never had moments like this, or were they just different topics?",1309673376
2723206,comment,2722383,2723097,3,0,jrockway,,,"Are you kidding?  Most real software does something like allocating some emergency memory at startup time, and then handles a failing malloc call by using that reserve pool to save work, perhaps do a GC, and print a decent error message before quitting.<p>Losing all of the user's work and printing ""Segmentation fault (core dumped)"" is never the right answer.",1309673309
2723204,comment,2722833,2722875,5,0,wvoq,,,"I don't intend to argue so much as to offer a data point: I suspect that most folks on this site learned C or something C-like early on, and have internalized its modus operandi.  I have been learning C recently from a background of functional programming, and I find it scary and evil.<p>FWIW, I enjoy programming very much, and have built some non-trivial stuff in several languages.  Still, I found C extremely taxing.  Not in the sense that I felt it was beyond me, but in that I was fighting or recoiling from the language at practically every turn.  In what follows, I am acutely aware that I am nowhere near fully fluent in C yet, and am writing only to offer the first impressions of a student.  Nevertheless, in that time I have been able to draw on the advice of several ""experienced colleagues"", as K&R urge.  In that sense, if I misstate the facts, I will be repeating the misconceptions of people who have objectively spent an awful lot of time writing C.  I would be glad to be corrected on any point, but I'd also find that kind of symptomatic of the issues I have with C.<p>Firstly, C is <i>incredibly</i> stateful.  I would be glad to learn that I am just Doing It Wrong, but there seem to be no obvious way around stateful manipulations as a way of life.  Take, for instance, the fact that arrays are essentially second-class citizens and must be stuffed into functions as (pointers to) extra parameters in order to capture the ""function's"" ""output"".  I am breaking out the scare quotes here since it is an abuse of vocabulary to refer to a procedure that communicates with the world by modifying its inputs as a function.  If you have not cut your teeth on it, it seems almost obscurantist.  If I want to multiply A by x and store the result in b, I want to write<p>b = matrixProduct(A,x);<p>not<p>matrixProduct(b, A, x);<p>as I must in C.  I go back and forth over whether this is a deliberate and worthwhile performance tradeoff or just myopic design[1], but I don't want to have to settle for this in code I read every day.<p>There is also a kind of bureaucratic spirit in much C code, resulting from the fact that one must attend so closely to the <i>how</i> of computation rather than the <i>what</i>.  In some contexts, like when you're doing distributed simulations that may run for days and performance is at an absolute premium, this emphasis may be appropriate.  In most contexts, however, one finds oneself implementing and reimplementing standard operations by hand.  Why should it take four lines to sum an array?<p>One of the most alarming symptoms of this style can be witnessed by watching an experienced C programmer read code.  Old hands don't read lines, they scan an entire section of a page at a time.  I was awed by this ability until I realized that it is possible only because each line of C does so little.  I recall someone (probably in an HN comment) describing the ""rhythm"" of reading C code.  That, to me, is not an encouraging sign.<p>Then there is, of course, the penance of debugging segfaults and space leaks.  What happens when you declare 10 pointers and allocate 9 of them?  No one knows, because C doesn't know either.  It's up to the compiler.  Towers of Hanoi, nasal demons, &c.  Even with the help of with smart and experienced people, I've never spent so much time diagnosing such trivial, silent runtime errors.  Yes, I know it's that way for a reason, but that reason is not legibility or ease of understanding.<p>At end, C has performance and a relatively (but not exceptionally) compact semantics.  The importance of cycle-squeezing is becoming less of a consideration daily, for reasons well-rehearsed on this site and elsewhere.  As for C's semantics, I'd much rather spend my time thinking about the transformations I want to map over my data than orchestrating von Neumann machines to carry those transformations out.  If your model of computation is something other than register machines, it's not quite cricket to describe the implementation as magic.<p>-----------------------------<p>[1]I'd like to qualify that remark in two ways.  Firstly, I certainly recognize the brilliance of K&R for working C from the raw conceptual materials of the time.  Secondly language designers in 1969 did not have the benefit of the last 40 years' of object lessons in readability.  There are many potential languages--points in language space, if you will--that are semantically identical or near-identical but much more readable than the ansi standard.  For an example given by Kernighan himself, postfixing the dereference operator would have done miracles for legibility.  Ultimately, a lot of more or less arbitrary choices were made early on and now it's too late to correct them.",1309673191
2723203,comment,2722833,2723113,11,0,8ig8,,,"> Not everyone self-promotes to the same extent as Mr. Shaw, or has other people promote them.<p>I don't know much about Zed. I've seen his name and articles here on HN, of course. I read you comment and was curious. I found nothing but a URL in his HN profile and zero submissions attributed to him here. From my very brief scan of his comments on HN posts, it seems like they are on topic. He's not hijacking threads.<p>So here on HN, at least, it appears that others are doing the promoting.<p>Zed seems to write original essays and he seems to have strong feelings and opinions on topics that interest the hacker crowd. And dude's got a memorable name.<p>It reminds me of SEO strategy: Write original, compelling articles and you won't need SEO.",1309673180
2723202,comment,2723098,2723098,4,0,jrockway,,,"This article is silly.  The reason Google lost the auction is because they weren't willing to spend more then 4 billion dollars, but others were.  The amounts they bid along the way have absolutely nothing to do with the outcome of the auction.  Nothing.  It has nothing to do with overconfidence or anything like that, it's a simple numbers game.  Google apparently didn't think that the patents were worth what they sold for, so they stopped bidding.  It's similar to an eBay action -- something that's a good deal at $50 may not be such a good deal at $500.<p>-1 Flamebait.",1309673148
2723201,comment,2722413,2722729,1,0,todayiamme,,,"That's the funny thing. It isn't praise for your product. It's just what your product has become. Who knows if it will stay that way, but what it is right now is something simply beautiful. You know I would just love to talk more with you about your product. Is there someway I can email you?",1309673116
2723200,story,,,1,0,anita01,"Acteon Group",http://www.acteon.com,"Acteon is a well known engineering service provider with an international reach.  It is made up of a total of 17  companies in both subsea and marine equipment and consultation.",1309672976
2723199,comment,2723089,2723089,22,0,carbonica,,,"The TCHunt program, whose website this link points to, is quite interesting. It seems to exist to simply point out something I always felt was self-evident, yet I commonly see misunderstood:<p>""Q. Why write a program such as TCHunt?<p>A. To demonstrate that while encrypted volumes may be indistinguishable from random data created in one specific fashion that the volumes themselves can be easily distinguished from most other files on your system. Many people insist that their encrypted volumes are undetectable. I hope TCHunt will convince them otherwise, before they learn this fact the hard way. More importantly, you should never claim that an encrypted volume with a mp3 file extension (or whatever) is a corrupt file, etc. While that explanation may seem plausible to an average person, it will not stand up to forensic or legal scrutiny. Data corruption does not resemble AES encrypted data. If disclosing the location of your encrypted volumes may lead to legal issues, then say nothing and contact a competent lawyer.""<p>Of course, as he notes, it can't tell the difference between regular and hidden volumes, but once again: the hidden volumes will still stick out like a sore thumb and clearly be encrypted data. While plausible deniability is technically maintained, believable deniability will always be harder.",1309672891
2723197,comment,2722833,2722833,3,0,raniskeet,,,"How about having a webpage with recommended libs for newbies to use? Sort of like NodeJS modules page.",1309672816
