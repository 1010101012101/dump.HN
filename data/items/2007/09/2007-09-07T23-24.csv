ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
51965,comment,51880,51880,0,0,arete,,,"I highly recommend DynDNS for DNS registration and hosting. Their amazing customer service, excellent web interface, and expertise are well worth the higher price.",1189209046
51964,story,,,9,3,hhm,"Interesting analysis on the commercial malware industry [PDF slides] ",http://www.cs.auckland.ac.nz/~pgut001/pubs/malware_biz.pdf,,1189209000
51963,comment,51943,51943,0,0,DocSavage,,,"Other notable directories include the plugins page on the Rails wiki (<a href=""http://wiki.rubyonrails.org/rails/pages/Plugins"" rel=""nofollow"">http://wiki.rubyonrails.org/rails/pages/Plugins</a>) and the plugin pages run by Benjamin Curtis (<a href=""http://agilewebdevelopment.com/plugins"" rel=""nofollow"">http://agilewebdevelopment.com/plugins</a>)",1189208613
51962,comment,51462,51960,0,0,alec,,,"I should add that I don't work for them (if that's not already clear) and that you can read more on their website if you ask them nicely through some form.",1189208217
51961,comment,51880,51880,0,0,rrival,,,"name.com - $5.99 + $0.50 whois protect / year",1189207942
51960,comment,51462,51462,0,0,alec,,,"I interviewed at Vertica.  They have some really cool stuff going.  You can get a lot of it in C-Store, a BSD-licensed academic project.  The main C-Store paper is very informative if academic papers are your thing.<p>The big advantage of changing the storage mechanism from row-based to column-based is that queries over large amounts of mostly-static data go much faster and take up much less space.  MySQL, Postgres, and Oracle are all more or less row-based - each row or set of rows is stored whole - while in a column-based store, each column is stored individually, and the rows are held together in some fashion.<p>Say you have a lot of columns and few tables, and that all your normal queries heavily use a few columns - if you're doing marketing maybe that's zip code and age range, or if you're doing inventory prediction maybe it's item id and sales date.  Pre-sort those columns.  If you want to get addresses or sales records of everyone in a certain zip code of a certain age - say, the 20-somethings that bought at the local Wal-Mart - that's now very quick, because you can sort a table first on the zip code column, then on the age column, and then on whatever else.  It's like addressing an array, as opposed to processing each row and testing a few columns.<p>That's not a big win on your PHP/MySQL website, but that's a huge win in your 10TB data warehouse.<p>Once you sort, you can do really simple compression like run-length encoding to get the size down.  Maybe you have a million people per zip code, but if you've sorted on zip code, you only need to say ""entries 1 through 1 million in the zip code column have value XXXXX"".  You don't get as good compression on the column used for the next-most-important sort, but it could still be pretty good.<p>Vertica also does some cool things with replication and redundancy.<p>Is column-oriented revolutionary?  C-Store has been out for a few years, and there are a few commercial and free software implementations out there, and it's in the textbooks, so no.
",1189207238
51959,comment,51933,51933,0,0,tuukkah,,,"I don't know bestechvideos.com, but there several good presentations at OSCON this year - including two other talks by SPJ. The O'Reilly page with the presentation files: <a href=""http://conferences.oreillynet.com/pub/w/58/presentations.html"" rel=""nofollow"">http://conferences.oreillynet.com/pub/w/58/presentations.htm...</a><p>The official video hosting: <a href=""http://oscon.blip.tv/"" rel=""nofollow"">http://oscon.blip.tv/</a>
",1189206539
