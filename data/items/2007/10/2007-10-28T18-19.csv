ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
73480,comment,73221,73439,0,0,testapplication,,,"That should read:<p><pre><code>    def foo(n):
        n = [n]
        def bar(i):
            n[0] += i
            return n[0]
        return bar
</code></pre>
Python really needs a scoping syntax to allow assignment to closed variables.",1193597741
73479,comment,73221,73316,0,0,mechanical_fish,,,"I cannot get foo.[3] to work:<p><pre><code>  syntax error, unexpected '['
</code></pre>
But please don't spend too much time explaining what I'm doing wrong, because I'm afraid I don't like foo.[3] anyway. :)<p>Let me demonstrate my problem by taking a simulated tour through my brain as it encounters foo.[3] for the first time:<p>""WTF?<p>""Did someone mistype foo[3]?<p>""No, wait, surely it's supposed to be foo(3). I'm pretty sure that foo is a function. Didn't we set it equal to a lambda expression three lines ago?<p>""Maybe I need glasses. Let's adjust my monitor. No, those are square brackets, all right. And that really is a period between ""foo"" and the brackets.<p>""Maybe Google can help. But I'm not sure how to google '.[]'<p>""Oh, no -- is this one of those mysterious edge cases of the Ruby syntax? Do I hear _Why laughing at me? Does foo.[] magically target the eigenclass, or the metaclass, or the zetaclass, or something? Or did one of the libraries secretly redefine the core language behind my back?<p>""omigod, I should have learned Python.<p>""No, wait! The dot means that we're calling a method. And I know that [] is a method -- we redefine it all the time. So foo.[3] is just an obscure-ass way of calling foo[3] .<p>""Which makes no sense, because I thought foo was a function. So I must be wrong.<p>""WTF?""<p>[ten minutes later]<p>""Aargh! I went through <i>ten minutes of confusion</i> just to save <i>three characters</i>?""<p>I may have exaggerated this a little. And, yet, I really did have <i>no idea</i> that .[] works, and I still have no idea <i>how</i> it works. (Of course, in my version of Ruby, it apparently <i>doesn't</i> work, which makes it hard to investigate.)<p>Now, don't get me wrong -- Ruby is my favorite programming language. Quite often, after the tortured syntax, the monkey-patched class, or the strange new DSL stops you dead in your tracks, you'll struggle through the learning curve and discover that you have <i>a powerful new technique</i>. This starts on day zero of Ruby, when you see your first block. It looks like nothing on Earth, but it turns out to be <i>insanely great</i>.<p>Symbol#to_proc is a borderline case. I like the idea, but I hate the syntax. The &: doesn't bother me as much as the lack of curly brackets. To me, idiomatic Ruby is about blocks -- I expect map() and inject() and delete_if() to take blocks, not arguments. I would really prefer this:<p><pre><code>  my_array.map {_.get_funky}
</code></pre>
Reading this makes me happy. There's a map() call, so I expect a block, and look -- there are the curly brackets. And because it's a block, the stuff inside it must be a method call. And, in fact, the underscore and the dot mean that we're invoking a method on a placeholder. All is well with the world, and no higher brain functions need to be engaged.<p>
But, you know, life isn't perfect. Language is about communication, and ultimately the language you speak is determined by what other people are speaking. Symbol#to_proc is powerful enough to become popular, and popular enough to be idiomatic, so we all have to learn it. Perhaps I'll even start using it.<p>But I'm afraid String#to_proc, like foo.[x], is past the point of diminishing returns. Do I really need a version of lambda that is not only utterly unlike Ruby's usual lambda, but is even <i>less</i> like Scheme's lambda? And are my colleagues really going to forgive me for asking them to learn Haskell syntax in order to read something as trivial as lambda {|x,y| x+y} ? I'm not even sure if I could forgive myself!",1193597676
73478,comment,73260,73395,0,0,Mistone,,,"a couple things I get from Max's story, one that has certainly been told repeatedly but is none the less quite amazing:<p>1) at 22 - he was not trying to be the CEO - he was hacking away at someone else's startup. <p>2) He was lucky enough to hit it huge with PayPal - but the result they achieved was a direct result of that 18 hours a day mentality and tenacity. <p>3) Age 29 or 30 is no time to be retired, lecturing, or enjoying long winey lunches at Boulevard - this is the classic ""go out and get it phase of your life"" <p>4) Starting a startup with 100 million in your bank account makes it much easier but is no guarantee of market success.<p>5)  And for all of those winter 2008 YC applicants that didn't get the call (myself included) - the greatest startups in the valley did it without YC - so can you ",1193597424
73477,comment,72952,73023,0,0,emfle,,,"Yes, he thinks evidence based scheduling is a worthwhile thing to do, so he builds the feature into his application, then blogs about it.<p>How dare he.
",1193597031
73476,comment,73412,73412,0,0,zandorg,,,"Nedit is very nice.",1193596869
73475,comment,73284,73359,0,0,altay,,,"That's what everyone says until they try Firebug.  I'm not kidding -- I know at least three people who asked me the same question, then came back a week later and said ""you're right, this is way better.""<p>The interface is far more usable.  Also, all WD can do with javascript is turn it on and off; Firebug has a full-fledged javascript debugger.  (It's how I learned JS, in addition to CSS!)  The DOM inspection tools are amazing.<p>Pretty much the only things I still use WD for are resizing the browser window and checking if I'm in quirks mode.  But if breaking the page by adding a label to every div is a key feature for you, then maybe you should stick with WD.  =)",1193596595
73474,comment,73397,73397,0,0,wmf,,,"Honestly, what's the benefit of Scribd over a simple HTML page for a document like this?",1193596567
73473,comment,73264,73264,0,0,pg,,,"Build = play.",1193596514
73472,comment,73383,73460,0,0,kn0thing,,,"I'll be there in my homemade reddit alien costume!",1193596463
73471,comment,73286,73286,0,0,joshwa,,,"To quote from a reddit comment: ""News flash: Websites you visit know what pages you look at!""",1193596107
73470,comment,73223,73223,0,0,MisterMerkin,,,"<a href=""http://www.owise.com/"" rel=""nofollow"">http://www.owise.com/</a><p>Was around way before this. And I think there were others before ""Web"" was even ""2.0"".",1193595979
73469,comment,73260,73417,0,0,akkartik,,,"I agree. The right way to find balance is to focus on one thing, to be hugely imbalanced in your pursuit of it, and then to leave it when the time is right.<p>If you follow a routine in what you eat, and eat the same set of foods all the time, you risk exaggerating small imbalances over time, with implications for your health. To avoid this you can either spend a <i>lot</i> of time thinking about what you eat (with implications for balance in other areas), or you just change it up and chase some variety every now and then. Try new things. Listen to your body when it tells you it's had too much of this or that.<p>With 'listen to your body' this thread connects up with this one where DanielBMarkham talks about introspection:<p><a href=""http://scrapbook.akkartik.name/post/17541151"" rel=""nofollow"">http://scrapbook.akkartik.name/post/17541151</a><p>(Context: <a href=""http://hystry.com/newsyc/follow/?http://news.ycombinator.com/item?id=73433"" rel=""nofollow"">http://hystry.com/newsyc/follow/?http://news.ycombinator.com...</a>)
",1193595504
73468,comment,73112,73180,0,0,raganwald,,,"> The most important way that we could 'rain on their parade' though is just by being way better than them at creating applications based on the platform since we will always understand the internals better than anybody else.<p>Bill Gates, is that you?",1193595500
73467,comment,73260,73326,0,0,rontr,,,"Different people find satisfaction in different ways. Tycoons like Bill Gates and Rupert Murdoch are driven to build empires -- they strive over decades to increase the dominance of their companies in their markets. Many Wall Street bankers are driven by the desire to make money -- even when they are already rich, they still want more. Other people, like Michael Jordan, are driven to win one championship after another. (Incidentally, MJ tried to take a spritz -- twice -- and it didn't quite work out for him. He had to get back in the game.) Another group of characters -- the serial entrepreneurs -- get their ""fix"" from creating and flipping companies. It sounds like Levchin is the latter type. It's in his nature. He couldn't take a spritz even if he tried.<p>I think Max deserves praise, not criticism. In his endeavors, he's creating wealth, jobs, and happiness for millions teenagers who get to display animated slideshows on their appalling MySpace profile pages :)
",1193595342
73466,comment,73366,73366,0,0,ardit33,,,"too long. ",1193595299
73465,comment,73260,73417,0,0,aswanson,,,"The idea of balance as a virtue always annoyed me.  What great things are achieved in equilibrium?  There should always be favoring, desiring, striving.  They can balance me in my coffin.",1193594922
