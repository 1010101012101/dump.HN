ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
7957363,comment,7953616,7954682,2,0,xtracto,,,"We have been using Git Flow in our team too. One advantage I se is that using git-flow specific hooks we add some metadata to every time a feature/ branch is finished. This metadata goes into an automatic Release notes file which is automatically added to the repo (as an amend of the flow&#x27;s last commit).<p>Similarly, hotfixes have metadata which goes to their own hotfix.csv file.<p>A deploy script processes the hotfixes and feature files to create a Release notes.<p>We&#x27;ve got a very smooth release documentation process which is difficult for Dev&#x27;s to hate and skip.",1403927894
7957362,story,,,4,0,peterkchen,"Yo Server is Down",http://www.yoserverisdown.com/,,1403927872
7957361,comment,7956585,7956585,1,0,giancarlostoro,,,"If all they have is location on a phone, that could also place other people in the area though. But I guess, that&#x27;s irrelevant. There&#x27;s also the chance that the murderer didn&#x27;t carry their cell phone in the area whatsoever. I mean who goes and murders someone and talks on their phone at the same time anyway?",1403927834
7957360,story,,,2,0,ayrx,"PyCA's Cryptography library",https://cryptography.io/en/latest/,,1403927766
7957358,comment,7956466,7957280,1,0,fpalmans,,,"Personally, I would make &quot;building units&quot; and &quot;mining gold&quot; a planet&#x27;s standard designation set by the user. If no other commands are given, the planet will default to building units or mining gold continuously.<p>This will make the two upgrade paths: &quot;mining quantity&quot; and &quot;unit quantity&quot; unneeded... I believe that these just cloud the game-play. To be honest, at first, I was considering only upgrading the quantities in stead of the speed because I got tired of the constant clicking, were it not that the mining speed and unit build speed are the important upgrades... I do not see how the quantities will help you win the game.<p>I haven&#x27;t tried the game sufficiently to have an opinion on the other upgrade paths, such as attack/defense/range/speed.<p>Hope this helps...<p>Cheers",1403927551
7957357,comment,7955917,7956570,15,0,moultano,,,"Even more importantly, there are many signals that sound identical to the human ear, yet are entirely different in waveform. (For instance, two sines shifted 90 degrees.) You can save space by representing all similar sounding waveforms as the same waveform. This might make for a giant delta when you subtract it from the original recording, even though nothing audible was lost.",1403927433
7957356,comment,7956246,7957290,4,0,abecedarius,,,"That one&#x27;s a cooler hack because it runs in old awk, from before they supported user-defined functions. The whole read-eval-print composition is a straight-line series of loops, with the recursions unrolled into explicit stack manipulation. If you want to see how to write fairly readable code within those restrictions, it&#x27;s instructive. It even has a cooler name. (I said so when bringing it up in my documentation.)<p>On the other hand, awklisp has some value as a readable Lisp interpreter in a lower-level but still reasonable language, in between the usual Lisp-in-Lisp and Lisp-in-C tutorials.",1403927382
7957355,story,,,1,0,chiachun,"Decades-Old Vulnerability Threatens 'Internet Of Things'",http://www.darkreading.com/decades-old-vulnerability-threatens-internet-of-things/d/d-id/1278903,,1403927315
7957354,comment,7954778,7957305,2,0,mythz,,,"> They derived WPFs design and API language, along with XAML. Its not like MILCORE was written in C# either.<p>Got it, so it&#x27;s derivative in the same way Chrome is a derivative of IE because HTML/CSS. Only a little less so due to different namespaces, missing controls, completely different runtime and incompatible desktop modes - maximizing developer happiness since 2011.<p>> It shows nothing. IDEs haven&#x27;t really been a thing...<p>Not nothing, apparently it&#x27;s enough to declare text-editor devs an extinct species and decree the new generation of devs will skip text editors entirely and only consider IDE-coupled languages.<p>> Couple that in with the Bret Victor candy, and there is only one way to get there.<p>Bret Victor showcases the benefits of previewing changes in real-time like the kind you can see with Clojure in LightTable or Swift&#x27;s playground. Late-bound languages are more suitable for effecting real-time changes than static pre-compiled IDE-coupled languages, the kind that was being done in Smalltalk decades ago, even VB6 had better live-editing support than C#/VS.NET does now with Edit/Continue.",1403927260
7957353,comment,7956627,7957158,1,0,Quiark,,,"That&#x27;s what my university did (Masaryk University Brno). It taught Haskell in the first semester. I, already programming in other stuff, was delighted to see a new interesting thing. Other students who already did some coding (PHP usually) reacted more like W.T.F. I&#x27;d this. I can&#x27;t tell about the total newbs but in the end, only 30-40% passed. But that was mostly caused by their laziness because when they repeated the class and realized that they have to put in some work, the success was much better.",1403927246
7957352,comment,7949995,7952688,1,0,milroc,,,"<a href=""http://bost.ocks.org/mike/join/"" rel=""nofollow"">http://bost.ocks.org/mike/join/</a>",1403927166
7957351,comment,7957137,7957137,1,0,hawkice,,,"Might be a subtext here. Consider that there are people (in the general thought-o-sphere, not in the article or on HN) saying that &#x27;poor people are just too lazy to be rich&#x27;. Re-read the article.<p>Some things will stick out, I believe. Particularly: the author says that most people feel the rich should be taxed more but cannot find institutional recourse for their frustrations due to distrust of the government. Most people would conclude that they&#x27;d do something else -- the author of the article concludes they&#x27;ll do nothing.<p>I&#x27;m not claiming to see into the author&#x27;s mind, but placing ideas in different contexts can help illuminate our own thoughts and have more considered reactions.",1403926882
7957350,comment,7953616,7954482,1,0,curun1r,,,"I think they made a mistake by making the &quot;gets configuration parameters from the environment&quot; specific to a UNIX/system environment. You can accomplish the same effect in a much more elegant manner using a tool like etcd or consul.<p>But the important part is really that the deployable unit pulls its configuration from the environment where it&#x27;s deployed. There are a ton of ways to accomplish this...environment variables are one way, etcd/consul is another, you can use something language-specific like JNDI or you can even use a file with configs in a well-known location, but you really need to be deploying the same artifact to QA, E2E testing, production and whatever other environments you might have.",1403926807
7957349,story,,,3,1,archgoon,"Can I compute the mass of a coin based on the sound of its fall?",http://physics.stackexchange.com/questions/121879/can-i-compute-the-mass-of-a-coin-based-on-the-sound-of-its-fall,,1403926796
7957348,comment,7954069,7956203,1,0,mahyarm,,,"That&#x27;s what I mean by implemented better as something that is officially supported. In objective-c it&#x27;s a hack, it can lead to hidden surprises since code usually doesn&#x27;t make it obvious that a specific method has been swizzled.  And you have to deal with hidden expectations in code that you have no control over.",1403926727
7957347,comment,7956627,7957249,2,0,JacksonGariety,,,"SICP is still the bible, even through Python has become the &quot;practical&quot; language that&#x27;s also quite simplistic.",1403926677
7957346,comment,7956078,7957296,1,0,collinvandyck76,,,"Because &#x27;go get&#x27; does not allow you to point to a particular revision. It downloads the latest / HEAD commit for that dependency and sticks it into ${GOPATH}.  These dependency managers are all aiming to fix that problem, and some of them, I believe, transitively.",1403926621
7957345,story,,,31,36,posharma,"Google Dumps MapReduce in Favor of New Hyper-Scale Analytics System",http://www.datacenterknowledge.com/archives/2014/06/25/google-dumps-mapreduce-favor-new-hyper-scale-analytics-system/,,1403926537
7957344,comment,7955237,7956408,1,0,jrockway,,,"I&#x27;m just talking about the incentives as to which type of restaurant to open, or more generally, which set of tastes to cater to.  Do labors of love scale?  No.  Does it make sense to start a business that doesn&#x27;t scale?  I have no idea.",1403926471
7957343,comment,7957155,7957335,4,0,chunkstuntman,,,"Well, the general upside to googling for an answer is that often when someone is providing you with the numeric solution they are also describing their algorithm and implementation. Having it in plain text right on the local hard drive might be more tempting with fewer benefits.<p>Potential Solution: store the solutions file in an obfuscated format that is easy to decrypt",1403926469
7957342,comment,7956356,7956535,1,0,jchrisa,,,"If you are in the middle of the ocean with a bunch of shipping containers, it&#x27;d be nice to browse their individual temperature readings on a tablet, without relying on the cloud.",1403926425
7957341,comment,7956018,7956018,1,0,glenda,,,"One thing I try to do is read everything that is considered well written or canonical in some way.<p>These types of resources tend to be informative, easy to grasp and often inspiring. They are things like books/textbooks, blog posts, tutorials(most tutorials suck though).  They will usually reference other (even more canonical) resources so you shouldn&#x27;t really have problems finding new stuff to read. You can pick and choose based on what sounds interesting and repeat.<p>This has been extremely efficient for me, and I have learned a lot pretty quickly.",1403926340
7957340,story,,,1,0,arunoda,"MeteorJS is not a black magic",http://meteorhacks.com/journey-into-meteors-reactivity.html?not-a-black-magic,,1403926301
7957339,comment,7953577,7955563,2,0,hhandoko,,,"One thing missing from KendoUI for me is the TreeGrid. Last I checked (a few months ago), it&#x27;s still not available. It&#x27;s an important component in our solutions.",1403926274
7957338,story,,,1,0,pwg," Apparent correction to the speed of light in a gravitational potential ",http://iopscience.iop.org/1367-2630/16/6/065008/article,,1403926155
7957336,comment,7956246,7956956,2,0,minikomi,,,"I like scheme to be honest, especially the racket style of preferring define over let. Combined with well chosen variable names, list comprehensions, pattern matching and optional square brackets, all but the trailing ))))) becomes not a problem.",1403926000
7957335,comment,7957155,7957321,3,0,Pewqazz,,,"I considered this, and figured since the solutions are stored by the program anyways, it would make more sense to include the functionality rather than to omit it. Naming the option `--cheat` was an conscious decision to discourage a reliance on it. Then again, if someone really does want to view the solutions rather than work through the problems themselves, I suppose it&#x27;s their loss anyways.",1403925944
7957334,comment,7956304,7956673,0,0,NedStarkkk,,,"I agree with you. Although Material is great, it doesn&#x27;t mean the quality of Android apps will be improved quickly. Maybe google need to try harder to expand the influence of his guideline.",1403925909
7957332,comment,7956627,7957287,4,0,thinkpad20,,,"The first time I learned programming it was Scheme, and I didn&#x27;t care for it - the syntax was confusing and it felt more like magical incantations than giving the machine instructions. I didn&#x27;t touch programming again for several years, but when I did it was python. I found it was much more interesting, in part because of my state of mind but also because I could see the computer responding to what I told it to do and I liked being &quot;in control&quot; of the machine rather than the other way around (which FP can sometimes feel like). I love functional programming now and I write a lot of Haskell, but I think there&#x27;s real value to starting out with an imperative language to get that &quot;interacting with the machine&quot; feel. It also makes it easier IMO to learn about computational complexity, systems, etc. That, and python has a ton of great libraries, an intuitive syntax, and a lot of flexibility, so I&#x27;m not surprised they&#x27;ve adopted it.",1403925756
7957331,comment,7953346,7954694,1,0,channikhabra,,,"I am no expert of Python or Javascript, but here&#x27;s some of what I love in javascript<p><i></i>* first-class functions<p><i></i><i></i> this is the first thing anyone would fall in love with when coming from Python. Python do treat functions as first class, but Python follows OOP way more strongly and functions in Python never get that level of authority as they do in javascript. Ability to define anonymous and named functions anywhere, immediately executable, fully or partially is a huge plus.<p><i></i>* highly dynamic: monkeypatch anything anywhere<p><i></i><i></i> Javascript is highly dynamic, you can override almost any property of almost any object anytime in the timeline. This opens room for all sorts of hacker. Like I worked on a fairly complex Meteor application and we needed to modify the behavior of some core meteor methods. No, using them through a proxy wasn&#x27;t a possibility as we wanted to change how the app behaves overall. How would you do it? Fork meteor and roll out other version? No. Just overwrite the functions on Meteor at right time in the timeline. I know it&#x27;s more hacking than engineering, but not all hacks hurt.<p><i></i><i></i> at many places we would intercept the objects being created in one part of the framework that would go to another for further processing and do shit load of operations on them half-way to make them work as we want (like temporarily turn mongodb cursors to model (in MVC terms) like interfaces which are more easier to work and reason with), and then forward them with original interface, properties changed to processed values.<p><i></i>* prototypical inheritance<p><i></i><i></i> I like the way javascript does inheritance. Or how we force it to. The prototypical ladder cause many problems but  it also open doors for many interesting solutions which won&#x27;t be that easily achievable in other languages.<p><i></i>* fun of writing code<p><i></i><i></i> Once you grok the fact that js is a functional language, accept it and start using it like a functional language, javascript is tons of fun to write. I mean you won&#x27;t miss (m)any python features if you sue javascript as a functional language and make use of the functional abstractions provided by several js libraries. Just using underscore makes a huge difference.<p><i></i>* flexibility and extensiblity<p><i></i><i></i> reading prototype.js code blew my mind. You can beat, bend and extend js in whatever way you want.Yes there are several gotchas (some of the language itself and some because of browser implementations), but despite of that what javascript has to offer is remarkable. I was intrigued to read prototype by js ninja book, and it is indeed mind blowing for someone new to js like me. I am looking forward to desiccate javascript libraries which provide highly functional interfaces and macros. Ability to serialize (almost) any function and modify it and then execute at the runtime opens room for innovative solutions (and all sort of sorcery/hackery).<p><i></i>* freedom<p><i></i><i></i> python is quite liberal, but javascript takes it to another level in terms of what you&#x27;re allowed to do with your code. I don&#x27;t know how to express it with words, and I don&#x27;t know how you can not feel it when doing a js project.",1403925611
7957330,comment,7954266,7956257,0,0,jmathai,,,"I&#x27;m genuinely curios. My perspective on parenting might be a bit different but hearing yours might help round mine out.<p>I don&#x27;t want to send my kids to an inner-city school for the sake of making a point but I do want to for a couple reasons. First, if no one with privilege goes there then how can privilege ever come to exist there? Second, I don&#x27;t think I want my kids to grow up surrounded by affluence and privilege.<p>When you say it&#x27;s clear that your son&#x27;s education was worth every penny do you consider other pros and cons of being in a private school?<p>I say all of this knowing my kids are currently 4 and 2. And that my wife is much more like you than I. We&#x27;ll compromise but I&#x27;m curious if there&#x27;s something new I could learn here.",1403925572
7957329,comment,7957057,7957260,6,0,objclxt,,,"I certainly never really considered just how intertwined the gut and the brain are until I was diagnosed with IBS (or perhaps a better name, the &quot;we have no clue what&#x27;s wrong with your digestive system, but it&#x27;s not physical&quot; syndrome).<p>About 18 months ago a number of things conspired against me: I was having a very stressful and uncertain time at work/home, and I went on a strong course of antibiotics for an infection which wiped out my gut (a known side effect). For about six months I had serious digestive problems, both bloating, gas, diarrhea, nausea, abdominal pain - real, visible, symptoms...but despite a barrage of tests, nothing at all medically wrong. I had dozens of blood tests, an ultrasound, a gastroscopy, and a colonoscopy with biopsies - nothing. At the same time, I went through a serious depression and malaise that nearly always coincided with my digestive problems.<p>A year an a half later, I have a lot more respect for how the gut is tied in to general mental health. I&#x27;m not totally back to normal, but I&#x27;m a lot better than I was, thanks to meditation, watching my diet (my gut is a lot more sensitive to what I put in now - previously, I would eat any old junk), and generally making that connection between my mood and my stomach.",1403925566
7957328,comment,7956304,7956304,4,0,rdtsc,,,"I like it! I am not a designer, just a user of Android and this looks good. I just never liked or bought the complete flatness idea. Maybe I am too brainwashed by skeumorphic buttons shadows and whatnot. But we just don&#x27;t live in the 2D world, the world is 3D and shadows, textures, depths help us interact with the real world (it is there without anyone explicitly adding it in, as in objects in the world are inherently 3D).<p>This is sort of the middle ground. I think the pendulum has swung too far with the Windows and Metro design (and I do commend MS for being bold and going for it, that was fantastic I think). But now I think the pendulum has swung slightly back to a little more skeumorphic design, a little more shadows here and there, use some basic textures. Still flat not fake 3D buttons that look like ancient light switches but paper -- something in between.<p>I can&#x27;t wait to see more.",1403925560
7957327,comment,7954944,7956939,3,0,mikeash,,,"Similarly amusing, INT_MIN / -1 will throw a &quot;division by zero&quot; on Intel CPUs, even though there isn&#x27;t a zero anywhere in sight. INT_MIN * -1 is fine, of course (according to the CPU, even if not the language spec).",1403925558
7957326,comment,7954944,7957061,3,0,mikeash,,,"No, that&#x27;s not true at all. You check before you dereference, which is completely legitimate. If b is NULL then the dereference never happens, exactly as it should be.<p>To invoke undefined behavior and strange optimizations, you&#x27;d need to rearrange the code a bit:<p><pre><code>    a = *b;\n    if (!b)\n        a = 3;\n</code></pre>\nHere, the compiler can omit the if statement and its contents entirely, because b cannot be NULL, because the first line would invoke undefined behavior if it were.<p>A check for NULL before you dereference is always safe. It&#x27;s when you do it the other way around that the compiler can start doing strange things.",1403925472
7957325,comment,7956304,7956304,4,0,greggman,,,"I don&#x27;t know if the Android camera app is considered to use &quot;Material&quot; but it&#x27;s massively unintuitive to use. It&#x27;s not obvious at all that to see a picture you just took you need to swipe to the left. Nor is it obvious that the small shutter icon once you have swiped means &quot;edit&quot; or &quot;refocus&quot; or whatever.<p>Google&#x27;s opinion seems to be &quot;It doesn&#x27;t have to be intuitive because you&#x27;ll eventually learn it&quot;.",1403925453
7957324,comment,7956627,7957317,5,0,thinkpad20,,,"There are infinite loops in Haskell too. (And space leaks in python)",1403925355
7957323,comment,7954944,7956893,1,0,mikeash,,,"It&#x27;s generally easy to catch segfaults. On UNIX-like systems, you can just set a signal handler for SIGSEGV. Other systems generally provide similar functionality.<p>The problem isn&#x27;t that they&#x27;re hard to catch, it&#x27;s that it&#x27;s virtually impossible to proceed in any sort of sane manner once a segfault has happened. You have no idea how much state got corrupted before the segfault actually happened. You have no idea what cleanup the functions currently on the stack expect to be able to accomplish before they return. You have no idea what kind of inconsistent state the data structures in memory are in.<p>If you&#x27;re really lucky, everything is fine and you can keep on going. If you&#x27;re not so lucky, stuff is corrupted and you just crash again the moment you try to resume, and again, and again, in an infinite segfault loop. If you&#x27;re really unlucky, your program doesn&#x27;t crash again, but proceeds with corrupted data, saving it out to disk and displaying it to the user and causing all sorts of havoc.<p>I actually helped out a little bit with a similar system:<p><a href=""https://www.plausible.coop/blog/?p=263"" rel=""nofollow"">https://www.plausible.coop/blog/?p=263</a><p>Although instead of throwing an exception, it simply tried to proceed to the next instruction.<p>The whole thing was done as a joke for April Fools&#x27; Day, because it&#x27;s a completely awful idea. Making it throw an exception instead of continuing immediately doesn&#x27;t really make it better.<p>I agree in general that segfaults shouldn&#x27;t exist, but your proposed solution is frightening. Segfaults shouldn&#x27;t exist because the compiler enforces bounds checking, safe memory management, and other such things that ensure that your program never attempts to access memory it can&#x27;t access. Once the attempt is made, it&#x27;s far too late to do anything but crash.",1403925350
7957322,comment,7956304,7957225,2,0,mynameisvlad,,,"They&#x27;re completely different. Web Fundamentals are good practices for web development, things like how to make a responsive page and what that means, etc., while Material is a guide and common elements for good mobile and web design.<p>A company can have several guides and guidelines on similar topics.",1403925337
7957321,comment,7957155,7957155,3,0,chunkstuntman,,,"Having a --cheat option seems like a poor decision. Having easy access to every solution (especially as it exists in a plain text file) harms the experience of struggling through a problem until the correct answer is reached.",1403925310
7957320,comment,7956356,7956356,3,0,jacques_chester,,,"I&#x27;ve written elsewhere before[1] about the fact that  journalists give us all a skewed interpretation of what&#x27;s actually going on and where the money is.<p>Far more of the world&#x27;s wealth is flowing between companies than between consumers and companies; but those flows are only visible to those close to them. But every journalist is a consumer, so they are all &quot;experts&quot; on whatever the final consumer-facing products are. Hence, those products get the attention and we overestimate their importance.<p>[1] <a href=""http://chester.id.au/2013/01/05/on-selling-to-consumers/"" rel=""nofollow"">http://chester.id.au/2013/01/05/on-selling-to-consumers/</a>",1403925305
7957319,story,,,1,0,brownbat,"Supreme Court Uses The Bizarre 'Looks Like A Cable Duck' Test To Outlaw Aereo",https://www.techdirt.com/articles/20140625/09340227683/supreme-court-uses-bizarre-looks-like-cable-duck-test-to-outlaw-aereo.shtml,,1403925212
7957318,story,,,2,0,prahladyeri,"9 Optimizations to make your Linux Desktop fly like a Rocket",http://www.prahladyeri.com/2014/06/9-optimizations-to-make-your-linux-desktop-fly-like-a-rocket/,,1403925176
7957317,comment,7956627,7957158,1,0,username223,,,"> Would they think Python was stupid or would they be grateful that all of a sudden they could use a for loop?<p>They would probably be at least as mystified by infinite loops as Python programmers are by space leaks.",1403925062
7957316,comment,7954266,7956467,2,0,logicchains,,,"It depends on how you define free will. If you define it as being 100% the cause of an action, that&#x27;s impossible. There are two possible causes for an action: either you caused it, or something external caused it. If taking action X at time T is entirely the result of your choice, why did you choose it? Because of whatever influences made you the person you are at time T.<p>If these influences were external, by the definition in question your action wasn&#x27;t entirely free will, as its root cause could be traced back to external influences. This means the person you were at time T-1 would have to be 100% responsible for the person you are at time T in order for you to be 100% responsible for taking action X at time T. The same also implies that the person you were at time T-2 would have to have been the cause of who you were at T-1, and so on recursively.<p>Trace that far backwards enough, and you get to the point where in order for you to be entirely the cause of your actions at time T, the person you were at time Tb would have to have been the cause of who you were at time Tb+1, where Tb is the time you were still a baby and incapable of conscious thought. This is not possible, as a baby doesn&#x27;t &#x27;make decisions&#x27; in the conscious sense, it acts purely from the impulses condition by its genes and whatnot.<p>Thus if you chase the causal chain far back enough in time, you see there&#x27;s always an external root cause for an action.",1403925030
7957315,comment,7942809,7956421,1,0,ahomescu1,,,"That C isn&#x27;t predictable or well-specified, which is a real problem when writing portable or secure code (&quot;oh shit&quot; moments in C code don&#x27;t just give programmers headaches, but have caused tons of vulnerabilities).",1403925030
7957314,comment,7955237,7956677,0,0,netcraft,,,"The major features in that list were introduced as part of lightroom 5 - the only other features to lightroom itself came in lightroom 5.2 and these are small enhancements and bug fixes.  All other changes are lightroom mobile, which while i&#x27;m sure they are useful, I don&#x27;t consider to be improvements to lightroom itself.",1403924981
7957313,comment,7956627,7957205,1,0,usea,,,"The wikipedia article [1] is a decent introduction. Functional programming is loosely-defined as a style of programming that involves using some subset of:<p>* Higher-order functions<p>* Pure functions / referential transparency<p>* Immutability<p>* A powerful type system<p>* A declarative style (expression-based)<p>(Some of the above concepts are closely related, and some people may feel there are other important ones I left out)<p>A functional programming <i>language</i> is loosely-defined as a language which makes programming in the above style possible, feasible, or easy.<p>[1] <a href=""http://en.wikipedia.org/wiki/Functional_programming"" rel=""nofollow"">http://en.wikipedia.org/wiki/Functional_programming</a>",1403924953
7957312,comment,7956627,7957287,1,0,seanmcdirmid,,,"Who knows, everyone has their own opinion about it. Perhaps it was just too many parentheses for students to deal with.",1403924937
7957311,comment,7956627,7957205,3,0,MichaelGG,,,"While a comment is probably not the right place for this, the essence IMO of FP is higher order functions (HOF). Being able to pass a function to another function, is key. And yes, even C can do this, it&#x27;s just cumbersome.<p>From that key idea of HOF, other stuff arises, like the lean towards immutability. Which gives rise to things like recursion.<p>This is why functional programming in non-FP languages gets cumbersome. While they can &quot;do&quot; FP, all the other things you want aren&#x27;t supported or require a ton of effort. Whereas in an FP language, those other things (immutability, recursion, pure functions, etc.) are treated better.<p>FWIW I&#x27;ve written a series (looking at C# specifically) on my blog <a href=""http://www.atrevido.net/blog/2007/08/12/Practical+Functional+C+Part+I.aspx"" rel=""nofollow"">http://www.atrevido.net/blog/2007/08/12/Practical+Functional...</a><p>But I think the blog may be messed up and it was written nearly 7 years ago when I was far less experienced with FP. There&#x27;s probably far better intros out there.",1403924903
7957310,comment,7953443,7953826,5,0,mrb,,,"Financial sanctions? Buy a certificate from Namecheap and pay using Bitcoin (yes they officially accept it!) In Iran, you can obtain coins through <a href=""https://localbitcoins.com/country/IR"" rel=""nofollow"">https://localbitcoins.com/country/IR</a> or <a href=""http://www.coinava.com/"" rel=""nofollow"">http://www.coinava.com/</a><p>This is a very concrete example demonstrating how Bitcoin is resistant against censorship, sanctions, etc.",1403924890
7957309,comment,7954944,7956329,5,0,mikeash,,,"&quot;Implementation defined&quot; means that the compiler can do whatever it feels like, but that it must choose something specific <i>and that this must be documented</i>, and any program that invokes implementation defined behavior is perfectly well formed. &quot;Undefined&quot; means that the compiler can do whatever it feels like and it can be completely inconsistent and documented nowhere, and any program which invokes it is ill-formed, and programs can be assumed not to invoke it.",1403924843
7957308,comment,7956675,7956675,1,0,samspenc,,,"Not <i>too</i> bad, but a few things that I noticed were off (and to clarify: I&#x27;ve worked on Hadoop/HBase since 2011):<p>1. Flume isn&#x27;t really a Google solution, is it? Sounds like Google is just incorporating Apache Flume into Cloud Workflow.<p>2. Even if Google abandoned MapReduce a while back (Urs&#x27; declaration about the same at IO seemed a bit ambivalent), IMHO Hadoop and its ecosystem are here to stay at least for a bit longer.<p>True, MapReduce isn&#x27;t perfect, and the Hadoop implementation far less, but (again IMHO) there really isn&#x27;t anything to replace it at the data scale at which these technologies operate.<p>I mean, there&#x27;s a reason that Facebook and large non-Google companies still use the Hadoop ecosystem, yeah? :)",1403924716
7957307,comment,7957057,7957260,1,0,magoghm,,,"Same here.",1403924634
7957306,comment,7955740,7955740,1,0,alok-g,,,"Any idea of what tools, platforms and services will be available?",1403924577
7957305,comment,7954778,7957256,2,0,seanmcdirmid,,,"> How can WinRT be a derivative of WPF if it&#x27;s written in C++? What WPF code-base did they derive from?<p>They derived WPFs design and API language, along with XAML. Its not like MILCORE was written in C# either.<p>> So what does show a good measure of overall developers that shows the slow death of languages/devs without IDE&#x27;s<p>It shows nothing. IDEs haven&#x27;t really been a thing (they weren&#x27;t that good until then) since the late 90s or even mid 00s. It is taking awhile, but its happening. We will see more language designs that don&#x27;t bother with IDE independence for better features. Couple that in with the Bret Victor candy, and there is only one way to get there.<p>> There&#x27;s also lots of value in small, wrist-friendly languages that don&#x27;t need an IDE and have a good story for text-editors / command-line. You may want to check out what the dev story is for Clojure / Go / Node which support live-reloading / auto-running of modified tests and fast dev iteration times without IDE&#x27;s.<p>I know all about those systems, and they aren&#x27;t very inspiring. We can do much better than that if we don&#x27;t limit ourselves to languages just being syntax/semantics/and a compiler.",1403924568
7957304,story,,,5,11,halfshark,"How Risky Is That New Hire? The One Interview Question That Matters",https://medium.com/@asharfin/how-risky-is-that-new-hire-1a63db323787,,1403924559
7957303,comment,7957019,7957019,2,0,dang,,,"> During my chat with another few people I learned that there are people who downvote in group brigade fashion whatever they don&#x27;t like.<p>Please report the details to us at hn@ycombinator.com. We take action against users who do that.<p>I don&#x27;t see evidence of what you describe in the thread you linked to. But if you or anyone will provide us with more information, we&#x27;ll look into it.",1403924553
7957302,story,,,3,0,rakkhi,"The pitch forks are coming",http://www.politico.com/magazine/story/2014/06/the-pitchforks-are-coming-for-us-plutocrats-108014.html#.U64v18s_6Aj,,1403924546
7957301,comment,7951082,7951082,1,0,swalsh,,,"Here&#x27;s the analogy I made up a bit ago trying to explain the concept.<p>As programmers We build code paths.  Design mazes.  In the beginning the maze is simple, there&#x27;s only a few paths.  To make things simple we separate our ideas into many small mazes.  Since they&#x27;re small, it takes a short amount of time and concentration to predict the different possible paths in our heads.<p>Technical debt is when, due to to time constraints the decision is made that it is quicker to draw one more line on an existing maze, rather than create a whole new small maze.  In the beginning it seems not so bad, you can still take in the whole maze at once.  But as time goes on, that one maze gets larger and larger, and finding a successful path through it takes longer, and longer.  Eventually you get to the point where you can&#x27;t separate the maze because too many of the paths are built on top of each other, but you also can&#x27;t manage the maze because its to large itself.  That&#x27;s the default.  That&#x27;s the rewrite.",1403924511
