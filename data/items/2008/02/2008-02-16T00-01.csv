ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
116781,comment,116079,116697,0,0,Tichy,,,"So what was their problem (or some of their problems, if they were all different)?<p>Talk to them: scary if I think they are crazy.",1203123592
116780,comment,116550,116666,0,0,Tichy,,,"Maybe once is enough...",1203123510
116779,comment,116688,116718,0,0,izak30,,,"Anybody who is highly specialized, and considers themselves more of an artist than an engineer cringes when you say 'make this super generalized' Try telling a graphic designer to make a template for a few dozen random sites.",1203123470
116778,comment,116768,116768,0,0,aswanson,,,"I remember reading Paul's essays, pre YC.  When he wrote the essay announcing it, I remember thinking, ""This guy is crazy, all he's gonna get is a bunch of school projects.""  Sure enough, he did, and wrote about it.  I felt vindicated by that, saying to myself, ""I knew THAT was going nowhere.""  People like to be correct in predicting failure for others, for whatever reason.<p>After reddit, loopt, zenter, anywhere.fm, etc., however, I don't think I was completely accurate in my prediction....",1203123329
116776,comment,116768,116772,0,0,pius,,,"I'd add the closing paragraph to this as well:<p><i>So when you look at something like Reddit and think ""I wish I could think of an idea like that,"" remember: ideas like that are all around you. But you ignore them because they look wrong.
</i>",1203123085
116775,comment,111413,111778,0,0,ken,,,"What I did in college:<p>I wrote a compiler (for a Java-like language) that compiled to x86 instructions.  The last week, we were writing nontrivial programs in this language, compiling them, linking the result with a GUI library the instructor wrote, and seeing it put graphics on the screen.  It was not a required class, but one of a fairly small set of which a certain number (3 of 5?) were required.  It was easily both the best and hardest class I took.<p>I wrote the guts of an ACID database (basically every part of a simple RDBMS except the query language).  Again, this particular course was optional, but among the small set which were required.<p>The OS course, by the time I took it (1999?), was no longer having students write an entire OS, sadly.  But we did have to implement several major components.  I'm not sure I'd call any component of a real kernel ""non-trivial"" -- there's no black magic here -- but I did have to deal with many real issues.  Required course.<p>I had to design and implement a CPU (at the gate level) for a pipelined MIPS-like instruction set.  This was a required course, and in fact the big weed-out course for the computer science department.  The last week, we got to actually put it on an FPGA and let it run real code, which probably would have seemed pretty cool if I had gotten more than 15 hours of sleep that week.<p>The ones I didn't do:<p>I took the first half of a graphics course (which involved writing things like rendering loops), but dropped it because it was just too boring.  The graphics geeks I lived with ate that stuff up, and they did some amazing things, but I just couldn't get excited about it.<p>I never did anything with crypto in school.  I don't even know if it was offered, but it doesn't really interest me, on a technical level, so I wouldn't have taken it, anyway.<p>I don't think any of these could be described as ""a professor holding your hand"".  The professors at my school were, overall, notoriously bad.  In some classes, there was no point in going to lectures.  Even when the lectures were good, they were just about the theory; you still how to derive how to build the sucker yourself.  Think ""an hour discussing the differences in power between LR/LL/LALR/...; OK, now here's the BNF for a language, write a parser for it by Thursday, bye"".<p>I guess some will take this to mean that it's not worth going to school for computer science.  For me, at that age, though, the learning experience was (a) having hard deadlines, and (b) being surrounded by other young people interested in learning the same thing.  I might never have written a compiler on my own, though it helped me as a programmer immeasurably.",1203123032
116774,story,,,1,0,cawel,"EU seeks to extend copyright protection for artists to 95 years",http://www.iht.com/articles/2008/02/14/business/copy.php,,1203122707
116773,comment,114568,114568,0,0,dramacity,,,"I won't tell you your plan is stupid.  On the contrary, I believe it's an idea whose time has come (I think it's come more than once).  Nor will I say that it won't work, though it will certainly be a hard road to slog.<p>I comment as someone involved in roughly three dozen ERP implementations (along with a dozen or so CRM and HRMS) over the past decade, for a number of mid-market and larger enterprises (mostly North American, a few international), across the manufacturing, software, healthcare, and pharmaceutical industries, in many roles ranging from developer, to technical architect, to implementation manager.<p>We have a number of experiences and opinions in common: (a) I too haven't seen (nor met someone who has seen) a class A implementation, (b) I'm still appalled at the poorness-of-fit and poor quality of this class of software, (c) I remain utterly unconvinced that the current model of ERP software development and implementation will _ever_ produce a modest-cost system.<p>Of your line ""No two businesses are alike"", nothing could be more true, and nothing could be more at the heart of the misfit between desire and reality in this software space.<p>Every business has grown their own a wide variety of their own processes.  In smaller businesses, these process are unique.  In larger ones, these are fairly standard, but only to a point.  There isn't a single company where one can 'drop-in' a business process from another company and have it work without mistake.  (You realize the impossibility of this by how silly my example sounds.)<p>Not only are there dissimilarities between businesses that prevent standardized software from working out-of-the-box, there are also dissimilarities within businesses that make the off-the-shelf solution unappealing.<p>Consider that a good number of mid-sized and large businesses are an ungodly combination of merged, acquired, downsized, and spun-off companies.  (Somewhat like the custom firetruck manufacturer you used in your example.)  How often does the surviving company from a merger, acquisition, or spin-off cleanly adopt a uniform set of business processes from their predecessor organization(s)?  In my experience, not very often.  You will find many pockets of heavily-resistant 'non-standardization' in mid-sized and large firms.<p>So no two businesses are alike from the outside, and few are even uniform from within.  Now consider how many forces of change are pressing on a given organization.<p>New management: how often has the new CEO, new division head, new head of operations come in wanting to put ""their stamp on the place"" and decided that the old way of doing things just won't work?  The new sales head decides a territory realignment and new incentive compensation plan is the way to start.  Hey Mr. ERP?  We need something from you.<p>New competitive responses: Oh I see that our main competitor now has a new offering that completely sinks ours.  Time for more than a SKU respin, time for a whole new product, new packaging, new bundling, new discount strategy.  Hey Mr. ERP?  We need something else from you.<p>New channel strategies: Your distributors and their resellers are now pressing you on margin, they're demanding better insight into supply chain, their business systems are better, faster, and more responsive than yours.  Hey Mr. ERP?  Here's another thing we need from you.<p>New regulatory environments:  Sure you can usually see these things coming years ahead (HIPAA, Sarb-Ox), but they demand change to the business, which means change to the businesses software systems.  Hey Mr. ERP?  Are you listening?<p>New IT changes: moving from Unix to Windows, moving from self-hosted to colocated, moving from insourced to outsourced, moving from here to hell and back.  Hey Mr. ERP?  I'll understand if you want to stick the shiv in yourself and save me the bother.<p>Lightly into this morass tapdances the ERP software industry.  It promises the essentially undeliverable: we can sell you a bunch of software that _will_ allow you to uniformly conduct business across your enterprise.  Forget about all of the sources of non-uniformity described above, and forget about the fact that your business is itself different from one division to the next, and from one year to the next, and that change is a constant. We'll give you a modular system which you can glue together (using the expensive services of our various third-party partners) to fit your unique business requirements.<p>Strangely familiar lyrics?  That's right.  You're listening to the pied piper.  Keep your children close at hand.<p>But, you say, the ERP industry _is_ doing this (for WalMart, for Boeing, for the Home Depot; for 3M, for AT&T, for Staples; heck, even for your neighbor's mid-sized $50M dollar electronics manufacturer, or your former bosses $20M industrial supply firm.)<p>Just how are _these_ companies making ERP work?  They're squeezing their size 12 body, with their  38DDs, into that svelte little one piece they saw on the runway, hoping like hell a seam won't bust before the photographer gets the money shot in the bag.  Short answer?  They're shoe-horning their business into the ERP-maker's box.<p>If one of their existing business processes doesn't fit, they'll stop performing that process to make themselves 'work' with the software.   If one of their processes is more efficient, they'll forgo efficiency for the sake of harmony with the software.  If an existing practice gave them the flexibility to deal with odd customer requests, they'll become rigid in order to keep from changing the software.<p>In the end, though they don't know it, they've tied themselves to a rock, and are slowly wading into deep water.  Yes, they're now standardized and have mated their business to an ERP, but the real cost of doing so is a hidden one.  Everyday, their business loses time, money, efficiency, and customer goodwill, as their business now does business according to the dictates of the ERP firm.<p>Sure, it's natural for ERP proponents to counter that the business is now truly more efficient for having standardized their business processes across the board, is now faster as the computer can calculate things much faster than people could, and is far less error-prone by being able to check and double-check things in real-time.<p>Well there's no point in getting into a huge he-said, she-said over this.  Just ask yourself, though, when was the last time you truly ever saw a real apples-to-apples comparison of the cost-benefits of an ERP implementation?  May I say, after having been involved in well over 30 of these myself, I've never seen a real comparison.  I've talked to many colleagues, who've also never seen a real one.<p>So all the damage behind this is what (I presume) prompts your idea.<p>Forget about the large-scale ERP software packages--they are too bloated to be the right fit for any single organization, too crufty a code base to ever be called well-written and maintainable, and too buggy to be reliable, bet-your-business platforms.<p>And yet, it's not as though the ERP makers deliberately set out to write shitty software.  At one time or other in the distant past, 	they hired some really smart people, and had them grew some fairly impressive software.  Impressive (when viewed through the eyes of a software developer, at least) for it's depth, breadth, flexibility, documentation, platform adaptability, updateability, price, etcetera.<p>So there's a lot for you to do, and a great deal of resistance to overcome.  I wish you the best of luck.",1203122374
116772,comment,116768,116768,0,0,dkokelley,,,"There's one paragraph in there that I think sums the entire essay. When I read it I was so stuck by it that I put that paragraph on my desktop image (<a href=""http://www.cocunderground.com/desktop.jpg"" rel=""nofollow"">http://www.cocunderground.com/desktop.jpg</a>).<p><i>Here it is: I like to find (a) simple solutions (b) to overlooked problems (c) that actually need to be solved, and (d) deliver them as informally as possible, (e) starting with a very crude version 1, then (f) iterating rapidly.</i>",1203122258
116771,comment,116702,116758,0,0,parenthesis,,,"Yes, not open source, more like free, um, free publicity for REM.",1203121985
116770,story,,,2,0,pmattos,"Sun turns to Neil Diamond for Amazon utility 'killer'",http://www.theregister.co.uk/2008/02/15/caroline_sun_amazon/,,1203121664
116769,comment,116688,116688,0,0,ken,,,"Where were you searching?  Hire a lawyer who specializes in startups, and you'll get them done in no time at all.<p>And before you ask, if you need graphic design, get a graphic designer, and if you need good PR, hire a PR firm.<p>Of all the things a startup has to do, this is quite possibly the easiest.",1203121517
116768,story,,,173,120,Darmani,"Paul Graham: Six Principles for Making New Things",http://www.paulgraham.com/newthings.html,,1203121416
116767,story,,,4,0,pius,"Nice example of using TDD + Ruby's dynamism to design better methods",http://evang.eli.st/blog/2008/1/27/make-your-dependencies-translucent-with-default-parameters,,1203121271
116766,story,,,6,1,aditya,"YC Meetup in SF next week?",,"I'm a New York based Rails hacker in town to talk to a bunch of startups and to check out the scene in SF/Mountain View and was wondering if like minded folks wanted to get together for a meetup next week (I'm there between 2/20 - 2/27)<p>I'm completely new to the west coast so ideas on where and when would be greatly appreciated! A bar or some equally social setting should work.",1203120787
116764,comment,116653,116653,0,0,mpc,,,"does anyone else think that xobni will be the biggest ycombinator success to date?",1203120678
116763,comment,116650,116745,0,0,mixmax,,,"Paul Graham doesn't sue - he just delivers an arc kick to his opponents",1203120669
116762,comment,116445,116684,0,0,trevelyan,,,"We use them commercially too, and I am very happy. For a system that is under development (and presumably iterating internally), support has been nothing short of fantastic.",1203120521
116761,story,,,1,0,nickb,"Getting Started Building a Cat Translator",http://cdiggins.com/2008/02/15/getting-started-building-a-cat-translator/,,1203120428
116760,story,,,17,2,mqt,"Hacker News trends",http://collison.ie/blog/?p=50,,1203120359
116759,comment,116204,116494,0,0,aston,,,"Eh, I don't think the repr matters much. What does matter is actually getting all of the other methods implemented (stuff like cmp, eq, etc.). They're all basically pass-throughs, though. Even with that, I think it's still broken in some ways. I should learn more about what Python does  for type conversions.",1203120025
