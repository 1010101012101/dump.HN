ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
87466,comment,87239,87348,0,0,whacked_new,,,"I have always been surprised about Spolsky's observation. Although I don't know many C programmers, I can't believe pointers are something you just get or just don't.<p>When you learn about pointers you must also learn about addresses (star c, c, &c). If you get addresses, you get pointers. The problem you had, as it seems, was the syntactical anomaly of C where the pointer initialization is like a one-time shorthand, ie:<p>char star c = &a; // now, c == &a, star c == a, &c == whoknows?<p>I think this is a bad syntax, but that's just how it is.\nPerhaps if I skipped the one sentence that mentioned how in the initialization step, the c of (star c) is really a memory address, and only <i>thereafter</i> is it a dereference, I would've been just as confused as you. But hence, I think the difference between getting it and not is really a syntactical understanding (like vocabulary), rather than a conceptual understanding (like grammar).<p>Perhaps it would be clearer for beginners to separate declaration and assignment, something like<p>char star c; // declare pointer<p>c = malloc; // obviously c and malloc are both addresses<p>Whatever it is though, I can't see how this piece of knowledge affects your aptitude as a programmer.<p>Sorry about the non-markdown",1197207021
