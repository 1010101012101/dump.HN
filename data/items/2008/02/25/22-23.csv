ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
123427,story,,,1,0,hbien,"Ask YC: do google gears and other offline libraries matter?",,"I wonder if offline access for productivity applications like Backpack or RememberTheMilk.  I'm always at an office or library where I have a wifi connection.<p>Are there any times where having offline access would really help you out, and if so, what apps would you like to have access to?",1203980179
123426,comment,123265,123358,0,0,kommissar,,,"Oh, cool.  I knew the colon meant a Ruby symbol, but I did not know that you could use & to convert a Proc to block.",1203980039
123425,comment,123254,123378,0,0,kingkongrevenge,,,"> Perl is horrible, ugly, unclean, unmaintainable in the general case, inelegant<p>Bollocks.  It has some bizarre vestigial organs and functional redundancies from its evolution, but so does every language.  Sometimes it's easy to take concision too far, but you prefer the alternative of mandatory verbosity?<p>Go look at some of the things people are doing with Moose and POE and try to claim inelegance.",1203979980
123424,comment,122706,122786,0,0,pchristensen,,,"The graphic says it is inflation-adjusted.<p>Scrolling from left to right, the graphic clearly gets fatter, so revenues are bigger.  Ticket prices are a part of that (inflation adjusted dollars are one thing, inflation-adjusted prices are another).  A graphic showing ticket sales wouldn't be much fun because it would get narrower every year, with occasional blips like Star Wars, Jaws, Harry Potter, but nothing like the old powerhouses of Wizard of Oz, Snow White, Gone with the Wind, etc.",1203979891
123423,comment,123081,123343,0,0,fiaz,,,"The shortness of your answer is making my head spin...I think perhaps my second question is rather poorly stated...<p>I agree that we necessarily must be thinking in one of many paradigms, but there is a tendency to default to the larger overarching ""trending"" paradigm.  If you look at the car from the 1950s, it doesn't have the curviness of cars and this could be attributed to the manufacturing process as opposed to the design process.<p>The functional features on the car that have changed most notably are the doors...<p>Maybe I'm applying the word ""paradigm"" inappropriately...perhaps mindset or something else is what I'm aiming at and not ""paradigm"".<p>------------------<p>OK, I've had some time to think about that which I am attempting to grasp...<p>I think there is a common thread with ""advances"" in technology such as the 1950s car in the link above (really, the only apparently visible ""innovations"" are with the many directions in which the doors open outwards) and with other ""advances"" that we might see around us today.  The common thread being that we tend to reinforce what works in hindsight and project that into the future.  Perhaps we can call this the ""hindsight paradigm"" but I would like some input on whether or not this is an appropriate usage of the word ""paradigm"".<p>Advertising markets will also stick to ""what works"".  It had to be a company founded by two Stanford kids that created a revolution in the advertising industry because they were not bound by the traditional thinking of not having to reinvent the wheel such that they could actually deliver the marketer's dream of highly targeted adverts...<p>Engineers will (hopefully) build something that is solid and then tweak as necessary.  There is no need to reinvent the wheel over and over again and this is something that is similar to what I'm groping for: we are sometimes trapped by the convenience of what works at the moment.  There seems to be no end to the length at which we may improve anything, but at the same time if people are comfortable with what works, then they can revel in that comfort and simply pass by innovation after innovation because the additional uncertainty of new ideas require somewhat of an adjustment phase, which can be uncomfortable for some and possibly unfeasible for large collective groups.<p>(This leads me to dream that there should be some sort of way to perhaps time levels of comfort such that when people are sufficiently comfortable they might be more susceptible to shifting to something new...)<p>Now when I look at the picture of the car (after blocking out the loveliness of the ladies who oddly look quite fashionable by even today's standards) I see a number of innovations that at the time ""worked"" because it was merely projecting the past upon the future.  It is perhaps the very natural tendency to seek that which is familiar because it is safe and project that into the future thus becoming trapped by our past.  Contrast this with the notion that I was suggesting in my questions earlier that there is a paradigm of some sort that shifts from generation to generation and that advances are somehow governed by such paradigms.<p>Now the reason why I think this is worthwhile for a segment of the News.YC community to reflect upon is because those of us who like to think of ourselves as innovators need to constantly question the merits of creativity invested in any given direction.  The 1950s car just seemed to me exemplary of how the leading thinkers in the automotive industry were so trapped by the prevailing notion of what seemed to be working (because of past experience, aka ""we know best"") at the time and just seemed to me to be adding more of that into future projections.",1203979867
123421,story,,,7,1,drm237,"What Is A Startup",http://howtosplitanatom.com/questions/what-is-a-startup/,,1203979476
123420,comment,123255,123261,0,0,mechanical_fish,,,"Aha, it's the Eliza trick: if you can look smart for the first fifteen seconds, many people will conclude that you're smart.<p>One wonders what percentage of people pick one of those two songs to try first. (I'm guessing that several other popular choices, like, say, ""America, the Beautiful"" and ""Twinkle, Twinkle, Little Star"", are also pretty easy for the program to pick out.)",1203979476
123419,comment,121534,121534,0,0,pskomoroch,,,"<a href=""http://www.codinghorror.com/blog/archives/000809.html"" rel=""nofollow"">http://www.codinghorror.com/blog/archives/000809.html</a>",1203979474
123418,story,,,2,1,matstc,"online logo maker",http://cooltext.com/,,1203979397
123417,comment,123124,123141,0,0,jganetsk,,,"You wouldn't sum an array of 10 integers using reduce... you'd most likely use fold.<p>Spolsky was talking about the power of abstracting away for loops. Functional programming languages do this all the time, with primitives like map, fold, filter, etc. And this happens without any toll on the programmer's mental burden or the machine's performance.",1203979176
123416,comment,123254,123326,0,0,Tichy,,,"A refreshing deviation from the tired ""10 reasons to do whatever"" meme...",1203979000
123415,comment,123265,123265,0,0,mhartl,,,"I use Symbol#to_proc every day.  I've never cared for the term ""inject"", though (or Python's ""reduce"", for that matter); I find SICP's ""accumulate"" much more mnemonic.<p>For what it's worth,<p>(1..100).to_a.sum<p>works in Rails, though<p>(1..100).sum<p>doesn't.",1203978930
123414,comment,123254,123409,0,0,mechanical_fish,,,"[internal struggle]<p>+1, Contrite!",1203978882
123413,comment,123393,123398,0,0,cperciva,,,"<i>The patent office is doing a horrible job at determining which patents to grant.</i><p>Absolutely.  I've seen lots of good software patents -- patents which are inventive, useful, and benefit the world by being published.  The patent which covers rsync is a perfect example -- anything which is worth half of a PhD thesis when it is rediscovered a few years later certainly qualifies as ""novel"" in my opinion.<p>I've also seen a lot of very bad patents -- patents which cover ""inventions"" which were already well known in the field, patents which take a well-understood practice and add a formulaic ""over the internet"", patents which are written in such a manner as to not actually disclose anything about the invention being patented, et cetera.<p>The patent system needs to be reformed so as to stop granting so many bad patents; but I absolutely believe that software patents could be a net positive if they were implemented properly.",1203978882
123412,comment,123371,123371,0,0,SwellJoe,,,"We use Flyspray, and it works fine--very lightweight and easy to install anywhere with PHP available (we use it because it integrates relatively easily with the rest of our site).<p>I've also used Trac and liked it even more.  Roundup is also good, if you don't need all of the extra stuff trac provides (wiki, timeline, etc.).  If trac hasn't fixed their horribly broken authentication yet, then that would be a strong argument against it, but I can't imagine that it hasn't been fixed by now.",1203978849
123411,comment,123393,123393,0,0,davidw,,,"Because the costs of software patents outweigh the benefits.  I think that the equation is different for other fields (biotech, for instance) though.",1203978814
123410,comment,123255,123255,0,0,SwellJoe,,,"This simply can't work for anything other than very simple tunes.  Rhythm is less than half of the picture in any modern piece of music, and there are a few basic patterns that repeat across hundreds or thousands of songs.",1203978687
123409,comment,123254,123254,0,0,thorax,,,"Ok, I'm guilty. I upvoted this ""Do not learn Perl"" post before reading that the article actually meant the opposite.<p>Please downvote this comment so I can pay for behaving like this was a different site.",1203978633
123408,comment,123265,123402,0,0,mynameishere,,,"ONE PLUS ONE EQUALS TWO.<p>God, I hope I didn't just rip open the space/time continuum.",1203978455
123407,comment,123353,123353,0,0,gustaf,,,"Great post!",1203978323
123406,comment,123353,123353,0,0,misterbwong,,,"Hm.  It seems like the mobile space is following the same path as the PC space.  Phones (like PC's) are tending more towards thin client status. As soon as Android and Webkit are up to snuff with rich web apps, we will be seeing mobile phones in a whole new light.",1203978277
123404,comment,122748,123191,0,0,rms,,,"What's your niche? The answer is often yes, if you can find the affiliate program that is perfect for your audience.",1203977959
123403,story,,,4,2,amichail,"Problems in identifying people of other races: Are kids as bad as grown-ups?",http://scienceblogs.com/cognitivedaily/2008/02/problems_in_identifying_people.php,,1203977944
123402,comment,123265,123400,0,0,pg,,,"If you're saying something that's actually true, you don't need to use all uppercase.",1203977935
123401,comment,123265,123342,0,0,kcl,,,"'/' in this case is the adverb 'over'. When applied to a function it causes that function to fold over a list. This is the same as inject as far as I know.<p>You are correct in supposing that !n generates an array of integers from 0 to n-1. It is somewhat of an unusual choice for a symbol. I've always thought of it as a factorial 'on the other side'. I don't know if that's what was intended. The k language compresses many old APL functions into symbols like this. Some make sense, some make less sense. You are after all dependent on your keyboard for the range of symbols you can type. In APL the same function was indicated by a lowercase Greek iota.<p>'+' is being used in two different ways. The first way shows it being used in conjunction with an adverb, so '+/' is like a one-argument function that gets applied to the list at the right, but then '+' is inserted between each of the elements of the list because of '/'.<p>'\' is a very similar adverb. It's called 'scan', and it's like 'over', except intermediate output is produced. It can help illustrate what's going on.<p><pre><code>    !100\n  0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ..\n    +/!100\n  4950\n    +\!100\n  0 1 3 6 10 15 21 28 36 45 55 66 78 91 105 120 136 153 171 190 210 231 253 276..\n</code></pre>\nIn the second case, '+' is being used as an infix operator, taking two arguments, 1 and !100, so '+' adds 1 to each element in the list 0 to 99, inclusive. This is simply what happens when you add an atom to a list. Each element in the list gets incremented by the value of the atom. Most verbs in k are like this, in that they do what you want, or maybe, they do what they should do if your preference is for something to occur rather than for an error to be thrown.<p><pre><code>    5 + 0 1 2\n  5 6 7\n    5 + !3\n  5 6 7\n    1 2 3 + 4 5 6\n  5 7 9\n    1 2  + 4 5 6\n  'length (an error)</code></pre>",1203977909
123400,comment,123265,123265,0,0,mynameishere,,,"That sort of thing, for all of its doubtless glories, represents nothing so much as a contempt of the <i>next programmer</i> who has to deal with it. We're just moving bits and bytes around here, people. Please sum up the numbers and don't introduce any mysteries into the plumbing.<p><i>ALL OF THE REAL INNOVATION IN SOFTWARE IS RELATED TO THE PROBLEM DOMAIN AND NOT THE LANGUAGE</i>",1203977816
123399,comment,123393,123393,0,0,rms,,,"In areas where patents are the norm (not web 2.0), they have dramatically raised the cost of doing the business.<p>Also, on the topic of patents, did the USA switch to first a file? I was unclear if that actually ended up being part of the recent patent reform.",1203977797
123398,comment,123393,123393,0,0,boucher,,,"Probably the best argument against software patents is the way they are implemented.  The patent office is doing a horrible job at determining which patents to grant.<p>Just look at Amazon's one click patent, or at the thousands of patents granted to patent trolls for things like ""lists of media that are customized to a specific user"".  I kid you not, the last company I worked at was being sued for presenting users with song recommendations because it violated a patent on ""customized lists"".<p>The other major issue I see is that software companies don't care about patents.  Very few patents are enforced by large companies, because its not worth it.  Not to mention, you can't do basically anything anymore without infringing on someone's patent.  They've become a sort of mutually assured destruction mechanism that companies build up with the pretext of being able to counter sue anyone who sues them.",1203977711
123397,comment,122748,122748,0,0,inovica,,,"We started running one site with Google Adsense. It didn't generate much money, but showed us what kind of keywords DID generate clicks. We used this knowledge to start selling banner adverts and that has brought in a lot more. We're not talking fortunes - it brings in around $4000/month, but that passive income helps",1203977710
123396,comment,123223,123364,0,0,drcode,,,"It's too idiosyncratic so I have it as private- Just writing all the instructions for the non user friendly commands would take me too long and the program would be incomprehensible without knowing them. I want to strip it down and make it usable to others as a starting point for writing their own app, but don't have the time right now...but it is a plan I have...",1203977584
123395,comment,123310,123310,0,0,fiaz,,,"I would be hard pressed to be convinced that going 100% web-based is 100% a good thing.  I think that's simply overestimating the value of web-based technology over the human desire for having different modalities of doing things.  While different technologies may come into fashion and push others out of fashion, the human desire for having choices will NEVER go out of fashion.<p>Perhaps the title of the article should be, ""EVOLVE Windows 2008 (into something different)"", but that doesn't sound as sexy as what's given.",1203977445
123394,comment,123241,123377,0,0,ghiotion,,,"what are you running on the backend?",1203977351
123393,story,,,4,12,mixmax,"Ask YC: Why is everyone so negative about patents?",,"It appears that everyone  in the tech and startup industries have a very negative attitude towards patents, why is this?<p>As I see it patents are nothing but good for startups. If you have one you have some sort of defense against being run over by others stealing your unique technology. And noone sues a startup based on patent infringement knowing that there is probably not a lot of money to be made if the case is won.<p>Besides VC's love patents.<p>So why exactly are patents so evil?",1203977258
123392,comment,123371,123390,0,0,brk,,,"+1 for Jira.<p>The Confluence Wiki from Atlassian is also a very nice product.",1203977103
123391,story,,,2,0,cawel,"Pulse of Open Source: A Look at Niche Conversations",http://www.readwriteweb.com/archives/pulse_of_open_source.php,,1203977017
123390,comment,123371,123371,0,0,nikiscevak,,,"We use JIRA from Atlassian and love it.<p><a href=""http://www.atlassian.com/jira"" rel=""nofollow"">http://www.atlassian.com/jira</a>",1203976977
123389,comment,123254,123326,0,0,jcl,,,"I think it's just these two articles so far (considering the link in the opening line of the article).  Which is probably a good thing, since they'd all be pretty similar:<p>""Don't learn [interpreted language X].  It has [features A, B, and C] that you will miss when you have to go back to programming in [more popular compiled language Y].  You'll be so frustrated with [Y] that you'll have to quit your job to work full-time on [X] -- which is coincidentally what I plan to do.""",1203976955
123388,comment,123241,123241,0,0,rmason,,,"Matt Maroon - I like your blog but buddy regarding Coldfusion you haven't got a clue.<p><a href=""http://www.gotcfm.com/thelist.cfm"" rel=""nofollow"">http://www.gotcfm.com/thelist.cfm</a>",1203976899
