ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
224448,comment,224227,224227,0,0,neilk,,,"I don't know if it can be boiled down to one thing. One likes to see mastery at every level, from the high-level design down to strict adherence to coding conventions.<p>The software has to have a strong opinion about what it's doing. It's modelled the problem in a way which leads to a straightforward solution, using a minimum number of concepts.<p>According to the conventions of the language in which it was written, the visible structure must reveal the underlying concepts. To a reasonably experienced practitioner, the code documents itself and comments are infrequent.",1214171868
224447,comment,224191,224242,0,0,swombat,,,"<i>Do you feel that you could solve almost any problem (maybe not even technical-based) given enough time?</i><p>Without trying to appear super-arrogant, yes.<p>What I did learn from university, though (I went to Oxford... that probably helped.. hence a ""good"" university in my previous post), is that there are many people out there who can solve some of those problems a hell of a lot quicker than I can, with less effort - including things I thought myself really good at. That was a lesson in humility and worth the four years it took to learn it.",1214171798
224446,comment,224407,224435,0,0,neilc,,,"I don't think it really matters who is going to maintain the code in the future. Even if you <i>think</i> you're going to be the sole person maintaining the code for a long time, why is being ""as clever as you can"" a win? 5 years down the line in a large system, you might not remember the reasoning behind your earlier cleverness anyway.<p>The complexity in a program should come from the problem it is attempting to solve, not the trickiness of the implementation. I personally prefer code that is as simple as possible (but no simpler, to coin a phrase) -- there are enough things that can go wrong in a complex software system without adding overly-clever code into the picture.<p>I think one of the primary guiding principles of software design ought to be simplicity: strive to make everything <i>as simple as possible</i>, except where other requirements like efficiency, robustness, functionality, or portability supersede.",1214171676
224445,comment,224389,224389,0,0,KirinDave,,,"This is hot off the wire: a Windows-centric gaming company that gets kickbacks from MS for deploying to their platform has <i>made fun of Apple Inc.</i> This may terrify some people,  but please try to control your _shock_ and _disbelief_.",1214170959
224444,comment,224324,224324,0,0,phpdev,,,"I recommend Zong.com - They specialise in this and have an API.",1214170907
224443,comment,223819,223966,0,0,rcoder,,,"> Although the detailed listing of MS interview questions he was asked was interesting.<p>Actually, I thought the questions seemed shockingly easy, compared to the brain-busters I hear about coming out of interviews elsewhere. Pretty much all of them were sort of hand-wave-y open-ended architectural questions, and I would hope the answers would be obvious to anyone with more than a few years of experience.",1214170860
224442,comment,224407,224407,0,0,nostrademons,,,"It's confusing for me...I had to puzzle it out to understand it, and even then don't fully understand it.  If I were writing this from scratch, I'd skip all the pixel computations and instead add ""day"" and ""halfHour"" attributes onto the elements themselves as you're building the display (or just attach a UNIX time directly, as neilk suggests).  Then computing the UNIX time is just:<p><pre><code>   this.parent.timeStart.getTime() + 
     ((parseInt(el.attr('day'), 10) * 48) +
      (parseInt(el.attr('halfHour'), 10)) * 30 * 60 * 1000;
</code></pre>
A couple readability/bugfixing comments on the exising code:<p>1.) In C-family languages, I really don't like functions that have the closing brace on the same line.  I've tried it in my own code a couple times and always had to go back and change it when I went to reread the code.  I have no problem with it in Lisp, but it's so different from normal coding C-like coding conventions that it makes skimming the code very difficult.<p>2.) parseInt automatically skips everything after the first non-numeric character, so you don't need the substr in px2num.<p>3.) You should get in the habit of supplying a radix argument to parseInt (i.e. parseInt(el.css(attr), 10)), because otherwise it'll interpret it in octal if the string starts with 0, which can lead to very strange bugs.<p>4.) When you have a known number of arguments, use function.call(obj, arg1, arg2) instead of function.apply(obj, [arg1, arg2]).<p>5.) In this case, it's probably clearer if you just used an accumulator; using a closure doesn't buy you anything, and means you need to mess with the this parameter.",1214170746
224441,comment,224407,224407,0,0,sigstoat,,,"put back the intermediate variables. just because you don't name them doesn't mean the compiler doesn't have to store temporary results. you might as well give them names so the next person can read this.",1214170742
224440,comment,224407,224407,0,0,neilk,,,"<i>I wrote this function that converts positions on the calendar (left and right CSS offsets) to UNIX timestamps (and another function that does vice-versa).</i><p>This seems like a very bad design. Is it really better than simply attaching a time property to every div at calendar creation? You are coupling presentation and data, which is in general a terrible idea.<p>Also, you realize that other countries arrange days of the week differently? If you ever internationalize, you will be in a world of pain. If you ever decide you want column width to vary for some reason, again you are fucked.<p>You can sometimes justify tricky Javascript since download speed is a factor. However, your JS strikes me as probably more wordy and complex than the straightforward solution.<p>Tricky techniques that exploit tight coupling are almost always wrong.",1214170659
224439,comment,224407,224407,0,0,pmjordan,,,"Your problem here is that you're mixing logic and presentation, so it's neither clever nor clear. I'm not 100% sure what you're trying to do (your explanation again mixes everything together making it hard to understand) but I <i>think</i> you want to do this:<p>- Transform the screen position to a week-based relative coordinate system.<p>- Convert that spatial coordinate into a time stamp represented as seconds since the epoch.<p>That's a minimum of two steps, two verbs and therefore two separate functions. Step 1 can be broken down further by introducing helper functions for inspecting the DOM, decoupling the representation of the UI elements from your actual screen-space coordinate system, as CSS isn't in a nicely-scriptable format.<p>Once you've done this, you'll discover the result to be only marginally longer, but highly reusable.",1214170588
224438,story,,,15,2,sant0sk1,"Happiness as Your Business Model",http://www.slideshare.net/missrogue/happiness-as-your-business-model-414463,,1214170568
224437,comment,224191,224361,0,0,msg,,,"Point taken. If I say your experience is the exception that proves the rule, though, I don't think that's too far off.<p>I had a similar experience until midway through high school. I was about three years ahead of my peers in math, due to the efforts of one particular instructor who encouraged me to get ahead and stay ahead. After my ninth grade, he moved to another school. About the same time, my high school ran out of courses. I ended up taking throw-aways instead of vector calculus, differential equations, combinatorics, etc. for three years.<p>I wonder if the push towards one-size-fits-all standardized testing has eliminated the possibility of making active learning official, at least in the public schools. Overworked teachers don't have the time to dumb it down and smart it up at the same time, whether the kids could handle it or not. There's a lot of generalizing here, sure, but I think the basic outline is true.<p>Even my MS seminars were more teacher-directed than self-directed. Maybe I have a knack for choosing the wrong learning situations.",1214170491
224436,comment,224401,224401,0,0,gaika,,,"Any game where some players are not perfect allows this kind of exploiting them -  <a href=""http://www.cs.ualberta.ca/~darse/rsbpc.html"" rel=""nofollow"">http://www.cs.ualberta.ca/~darse/rsbpc.html</a>
 game theory still holds.",1214170403
224435,comment,224407,224407,0,0,irrelative,,,"Ultimately, it comes down to who will maintain this.  If you're hoping to pass off ownership of this and let someone else maintain it, go for the longer but simpler approach.<p>If it's something that you'll be in charge of forever, get as clever as you can :)<p>Remember the words of Kernighan: 
""Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.""",1214170204
224432,comment,224407,224407,0,0,pierrefar,,,"In general, I prefer more clever code that gets documented extensively. Sometimes you can get too clever and introduce funky bugs.",1214169891
224431,comment,224407,224407,0,0,makecheck,,,"It is sometimes reasonable to ""compress"" released code, especially if it can be done automatically and there is benefit to doing so.  In the case of JavaScript, the main benefit is that the file download size is smaller.<p>However, unless there is an absolutely measurable and significant advantage, I find ""clever"" code to be far more trouble than it is worth.  Engineer time is very expensive, and you don't want people sitting and studying code for very long just to figure out how to change it safely.",1214169686
224430,comment,224306,224400,0,0,jrockway,,,"<i>Does Vista have any long-term chance for survival, with stories like this?</i><p>Sure, as long as it's forced down people's throats.  What else are they going to use?  ""Windows"" is synonymous with computing for most people.  They don't know they have other options, they don't want to learn something that looks or feels different, and they are trained to think mistakes the computer makes are their fault.<p>If Microsoft releases something else, Vista will go away.  But it won't go away because users rebel.  They think Vista's bugs are <i>their fault</i>, so they just say ""I'm dumb"" and give up.  It's sad.",1214169462
224429,comment,224389,224389,0,0,teamonkey,,,"The Fruit OS has been mentioned before in the GTA series, in a radio debate between Bill and Steve...<p><a href=""http://en.wikipedia.org/wiki/Grand_Theft_Auto:_Liberty_City_Stories_soundtrack#LCFR"" rel=""nofollow"">http://en.wikipedia.org/wiki/Grand_Theft_Auto:_Liberty_City_...</a>",1214169320
224428,comment,224327,224327,0,0,Zak,,,"I did something very similar a couple years ago. Details are covered by an NDA, but the software stack consisted of SBCL, TBNL (now Hunchentoot), CLSQL, CL-WHO, PostgeSQL and a few other random libraries. The archetecture was informally MVC.",1214169311
224427,comment,224281,224397,0,0,almost,,,"Forgive me if I don't share your excitement at this fact. However, owing to the fact that I am not you, this has very little relevance and is not at all interesting to me.<p>Good luck with it though, hope you get the job.",1214168893
224426,comment,224281,224419,0,0,almost,,,"That's a pretty crappy twist. In my opinion anyway, I was expecting something at least moderately interesting, something that might have made it worth reading the article.",1214168750
224425,comment,224312,224417,0,0,tortilla,,,"Awesome, thank you. I've been looking for more information on this stuff. I'm helping a friend with his service's pricing matrix (trying to simplify and increase conversions).",1214168671
