ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
847320,comment,847202,847274,0,0,barrkel,,,"Programming languages shape the way programmers solve problems. To use your terms, when a compiler forces one to deal with a problem with spatial immediacy (i.e. checked exceptions), and the language uses spatial colocation to represent temporal colocation to a greater or lesser degree (as most imperative languages do), then the programmer is being encouraged, quite strongly, to solve the problem in similar space and by consequence in similar time.",1254088765
847319,story,,,25,7,vinutheraj,"Hazelcast - In-Memory Data Grid for Java ",http://code.google.com/p/hazelcast/,,1254088732
847317,comment,846754,847139,0,0,holygoat,,,"Sustainability is a nonsense if a comet impacts the earth.<p>You don't run a service on one machine; you use redundancy to reduce the chance of catastrophic failure.",1254088694
847316,comment,846389,846389,0,0,pbhjpbhj,,,"Interestingly in the patent's cited prior art is this ""Girocycle"" (appears to be closest, other pa is handles and the like) - <a href=""http://www.google.com/patents?id=xgw6AAAAEBAJ&printsec=abstract&zoom=4&source=gbs_overview_r&cad=0#v=onepage&q=&f=false"" rel=""nofollow"">http://www.google.com/patents?id=xgw6AAAAEBAJ&printsec=a...</a><p>It's a flywheel gyro system, so it uses the speed of the vehicle and on breaking releases the flywheel to maintain gyro stability - that's the ground breaker ... in 1986, presumably that patent having expired in May 2006 explains the timing?  (the startup being from April 2006?)",1254088659
847315,comment,847202,847307,0,0,jacquesm,,,"> Exceptions should almost never be caught.<p>That's exactly where the controversy lies.<p>The string conversion issue was brought up because I think it is an excellent case of 'programmer knows best', but the exception causes the whole dataset to be rejected, not just the one record out of 3.9 million that were fine. That's obviously sub-optimal. There has to be a better way to deal with that sort of thing, such as for instance an 'output' vector where data that couldn't be processed can be sent, or a series of warnings / errors attached to certain offsetts in your data. Then after running the conversion you can decide if you want to drop all of it (which is what happens now) and fix the input data, or discard those records (sometimes that is an option), or manually edit those and then run the import on those few records again.<p>Because exceptions are a mechanism you can then 'use' them for whatever you feel like. Just like you can use setjmp/longjmp in C for all kinds of creative stuff you can use exceptions to change the dynamic of your program. And this leads to some very difficult to trace code because exceptions break the normal flow.<p>Almost all exceptions in for instance the python mysql layer need to be handled by your application otherwise you will be exposing the user of your application (or website) to a runtime error and that is not good, not handling those is not really an option (unless you don't like your users much :) ).<p>So, in production grade software you'll find that almost all possible exceptions are indeed handled, and if possible as close as possible to the location of the error to make sure the fall-out of the problem is minimized.<p>Generally speaking, the higher up the handler the less information there is about the context of the exception, the smaller the chance you can handle it in a meaningful way.<p>This style of coding makes it not rare to see half the code to be about exception handling, the other half actual 'productive' code. Especially Java suffers from this very much.",1254088646
847314,comment,846699,846699,0,0,mr_luc,,,"I'd just like to see the period of time drastically reduced for ""inventions"" in domains that move faster.<p>Any software patent should last no longer than a year, period.<p>And as long as I'm writing the law, anything patented by Intellectual Ventures becomes public domain in six days.",1254088497
847313,comment,847202,847306,0,0,barrkel,,,"First up: I'm not a fan of checked exceptions.<p>But on the other hand, I must point out: checked exceptions certainly force you to address the issue of the exception being thrown, and as a result, the failure mode that they prevent can't occur, so the evidence you're seeking is more or less impossible.<p>On the other hand, checked exceptions have their own failure modes, down to human behaviour: rather than having to rewrite every method declaration on the call graph to throw the appropriate list of exceptions, some bad apples just catch exceptions and do nothing with them. This shuts up the compiler, but harms product quality.<p>IMO, the theory behind checked exceptions is actually fundamentally mistaken. Exceptions aren't much good if you're constantly trying to catch them. Exceptions work best if you write your code in a transactional style, more or less assuming that an exception can occur at any moment, on any operation. This can be tricky: it can force you to make or keep copies of structures when doing large structural modifications; but this difficulty is not strictly due to exceptions, as failures modes need to be dealt with in any case.",1254088451
847312,comment,847250,847250,0,0,frognibble,,,"I recommend reading this comparison of protocols before investing time in rssCloud: <a href=""http://code.google.com/p/pubsubhubbub/wiki/ComparingProtocols"" rel=""nofollow"">http://code.google.com/p/pubsubhubbub/wiki/ComparingProtocol...</a>",1254088373
847311,comment,847044,847108,0,0,zackattack,,,"Indeed, pg addresses this in his essay on why nerds are unpopular in school.<p>Here's my question: does bullying ever give an edge into the pantheon?",1254088273
847310,comment,847202,847202,0,0,adatta02,,,"try{
  somecode();
}catch(Exception ex){
  // eh this will NEVER happen
}",1254088254
847309,comment,847024,847156,0,0,salvadors,,,"My favourite technique isn't to make the sentence itself the password, but the first letter of each word (with some punctuation thrown in for good measure). E.g. pick a line or two from a song, like ""All the fear has left me now / I'm not frightened anymore"" and that becomes ""atfhlmn-infa"" (if it's something that insists on digits too then you can easily do a substitution like ""atfhlmn-1nfa""). Memorable without being insecure.",1254088176
847308,comment,847200,847255,0,0,smokey_the_bear,,,"That would solve a lot of problems. Now developers typically make a free version of their app, but Apple restricts how those can be used. They can't have grayed out buttons representing features available in the pay app, and can't be time limited. It can be hard to feature limit it and still have the free app be neat.<p>Our app has an offline data store of maps on the phone, so it's additionally painful that when people 'upgrade' to the pay app, they have to redownload all their data.",1254088023
847307,comment,847202,847266,0,0,barrkel,,,"I strongly disagree that exceptions are about catching unforeseen issues at a lower level. Exceptions should almost never be caught. A well-written program will have only a handful of exception handlers that don't repropagate the exception; ideally only one, at the highest level of the event loop or request handler.<p>As to your string decoder example, the sensible default should be to throw an exception, with an easily available out to replacements etc. as you suggest. String conversion across multiple code pages is an interesting example precisely because data loss is so easy, and if the problems aren't raised early in the data flow, it can be hard to figure out where it went wrong. The ""default"" manifests itself in Windows programs as '?' - rather annoying to debug when the first time you see it is on the UI, while other concrete are plentiful on the web. A very common example is balanced ""smart"" quotes, which frequently end up encoded in either the web page or the RSS feed in a different encoding than that described in the HTTP header, or in the meta tag, or according to the relevant standards, etc.<p>Yes, runtime errors should be avoided, but not by the lower-level code; rather, the lower-level code should throw exceptions when error conditions occur, but have ways and means for programs that care about the exceptional conditions to not throw exceptions. This isn't always possible, though. Consider TFA's example of file not found:<p>> <i>The caller can't recover from a file not found error</i><p>The caller can test to see if a file exists before trying to read it, but non-transactional interactions like this with the file system are subject to races; the file might exist one microsecond and be gone the next. But it is also obviously true that the caller <i>can</i> recover from a file not found error. Concrete example: consider a thumbnail generating service, which checks to see if a cached thumbnail file exists before doing the expensive work of creating it if necessary. Here, a file not found exception (perhaps caused by concurrent cleanup of cache, for random operational reasons) is indeed not fatal.",1254087980
847306,comment,847202,847202,0,0,jerf,,,"I make the following observation: Everybody I've seen arguing in favor of checked exceptions in the past couple of years have argued about their theoretical benefits. Everybody who is arguing against them have argued about how they have not worked out in real life.<p>This pattern seems to recur a lot in programming debates, where people don't seem to realize that it doesn't matter how wonderful your theory is if when you try it out, it's wrong. That's where checked exceptions are.<p>The time for <i>theorizing</i> about their effects on programs is long, long past. Who cares whether they theoretically force programmers to write better code? We now know that in reality, it actually results in worse programs the majority of the time. When theory and reality disagree, <i>theory is wrong</i>. Why anybody still talks about their theoretical design goals is beyond me.<p>As near as I can tell, the debate is over if you ignore the people who haven't let their theories catch up to reality. If someone's got a success story posted about how checked exceptions saved their program's bum, I'm interested in the link, but I haven't seen one.<p>(I say it that way because when you have something enough people will read you can always find someone to pop up and claim that ""X is good"", but I'm specifically asking for arguments that already existed prior to this post, to avoid selection bias effects.)",1254087969
847305,story,,,1,0,apotheon,"Programming Classes (on reddit)",http://www.reddit.com/r/carlhprogramming/,,1254087922
847304,comment,847092,847251,0,0,scythe,,,"Probably not. Since python is a dynamic language, there are issues with using the llvm for optimization[1], but overall the llvm's code generator is significantly more mature than pypy's which means that it'll probably be easier to make unladen-swallow reliable.<p>[1] see <a href=""http://lua-users.org/lists/lua-l/2009-06/msg00071.html"" rel=""nofollow"">http://lua-users.org/lists/lua-l/2009-06/msg00071.html</a> and <a href=""http://lua-users.org/lists/lua-l/2009-06/msg00069.html"" rel=""nofollow"">http://lua-users.org/lists/lua-l/2009-06/msg00069.html</a>",1254087792
847303,comment,847024,847180,0,0,salvadors,,,"You do, of course, know the problem with assuming?<p>(And Ming can be merciless about such things)",1254087784
847302,comment,847044,847211,0,0,zackattack,,,"Can you recommend a good book on modern signalling theory?",1254087701
847301,comment,847043,847138,0,0,joe_the_user,,,"The thing is that seventeen rules of Xanadu, in themselves, aren't that much more complex than the WWW - The http protocol is not an uber simple thing.<p>Further the WWW <i>haphazardly</i> succeeds at being everything that Xanadu wanted to be and more, <i>except</i> for those characteristics which had to do with intellectual property (what is now ""DRM""). Many people have described the impossibility and undesirability of DRM. One easy way to see the impossibility is to realize that a ""transclusion"" DRM system would require every protected piece of information to exert control over the entire system, a problem which gets <i>harder</i> as the system gets bigger.<p>It does relate to duct-tape programmers in the sense that since the WWW doesn't have the fragile global requirements of Xanadu, it can be ""duct-taped"" to work. But it also should impel us to go a bit beyond Spolsky in the sense that 
it points to designs which avoid particular inherently difficult problems rather than using simplistic formula of 'avoid any complexity'.",1254087639
847300,comment,847044,847265,0,0,zackattack,,,"I imagine that when you go to a place like MIT where life is like ""getting kicked in the balls repeatedly"", your alma mater becomes an important part of your identity.",1254087616
847299,comment,847024,847024,0,0,mcantor,,,"""Given a choice between dancing pigs and security, users will pick dancing pigs every time."" - Edward Felten and Gary McGraw",1254087475
847298,comment,847093,847140,0,0,andreyf,,,"<i>Twitter could very well be the next Google</i><p>Even in 1998, Google provided a lot more value to users than Twitter ever will.",1254087442
847297,comment,846389,846944,0,0,pbhjpbhj,,,"He says that the gyroscopic effect is small compared to the weight of the bike and rider.<p>The enhanced gyroscopic stability appears to be a near constant-rotating balanced mass; it's still rotating with the wheel but at an angular velocity such that the gyro effect is constant (ie reducing slightly as the wheel's own weight adds to the gyro effect?). Thus you get the gyro stability that you get when riding quickly with no hands but constantly, even when riding slowly.<p>It's neat for sure and bound to do well as it's hiding the stabiliser away and pretending the kid is more advanced, hence parents will love it as their kids will look ""better"" than the neighbours kid!",1254087435
847296,comment,846994,847285,0,0,amrith,,,"I worked with a system administrator once. He didn't understand two factor security. So he told everyone to remember two passwords.<p>Maybe he now works at American Express.<p>I see exactly the same thing with most ""security improvements"". Hence treat each answer as just another password! a random string of characters, numbers and punctuations.",1254087427
847295,comment,847118,847118,0,0,ricardo,,,"""I don't see myself taking the YC plunge because I am married and have a kid, so taking a risk is kinda hard at this point.""
 ...
""I'm leaning towards saving up and then taking 3-4 months off my job to work on my own product.""<p>Couldn't you do both?  Seems like you could save up and go for YC while working on your product. Either way you'll have a similar amount of risk. One could even argue that with YC's network you'll have less risk since you'll be around like minded people and more opportunities will open up for you if your original idea fails.<p>Whatever you decide, go for it!",1254087291
847294,comment,847044,847283,0,0,rdr,,,"agreed, university reputation matters a lot less nowadays than it did in the previous generation ... nowadays anyone with a good idea can start up a tech company and get rich.  nobody cares about ur college name",1254086967
847293,comment,846579,847270,0,0,scott_s,,,"I do. ""Hard work"" doesn't have to be unpleasant. Personally, I take great satisfaction in doing it.",1254086962
847292,comment,846303,846549,0,0,phr,,,"Thanks for mentioning Monoprice.  Cool company.",1254086930
847291,comment,847200,847255,0,0,andrewljohnson,,,"I think that's a fantastic idea. Apple could build an auto-timebomb into apps for that. That would probably seriously improve the quality of purchased apps - so many times people buy a bad app and use it once.",1254086917
847290,story,,,3,1,mdipierro,"Build a wiki with versioning+authand deply on gae in 4 minutes",http://www.vimeo.com/6782736,,1254086784
847289,comment,847043,847043,0,0,drats,,,"I like the way this article treats Nelson as not that important. The constant hero worshiping is very annoying sometimes. We know [1] that there were people before and during Nelson's time that were just as creative on the ""ideas"" side. Berners-Lee got it working on the ""rough consensus and working code"" KISS principle side. I am sorry but the (albeit small) group of people who consider Nelson the ""real"" father of the web are wrong. To say nothing of the fact that journalism has by far overemphasized the web compared to the Internet. Even when a small number of journalists correct for that it's Kahn and Cerf with TCP/IP not Licklider, Baran and Davies.<p>[1] <a href=""http://en.wikipedia.org/wiki/Hypertext#Early_precursors_to_hypertext"" rel=""nofollow"">http://en.wikipedia.org/wiki/Hypertext#Early_precursors_to_h...</a>",1254086764
847288,comment,846451,846451,0,0,I_got_fifty,,,"That page of the comic in the article, reminds me of this video of Feynman: <a href=""http://www.youtube.com/watch?v=mvqwm6RbxcQ"" rel=""nofollow"">http://www.youtube.com/watch?v=mvqwm6RbxcQ</a>",1254086756
847287,comment,847035,847112,0,0,gojomo,,,"Probably -- you're the owner and only employee, and you're in California.",1254086752
847286,comment,847118,847118,0,0,jeromec,,,"I totally agree with your sentiment here:<p><i>Why are we still stuck in the industrial age, where working during the day hours, being at a certain location, and hammering away for 8 hrs was equivalent to producing a certain amount of output?</i><p>If you haven't seen the Ted talk below, it's a must watch:<p><a href=""http://www.ted.com/talks/dan_pink_on_motivation.html"" rel=""nofollow"">http://www.ted.com/talks/dan_pink_on_motivation.html</a>",1254086646
847285,comment,846994,846994,0,0,makecheck,,,"American Express recently added these ""3 questions"" to my account, and it made me very mad.  For one thing, their ""request"" was persistent; it eventually wouldn't let me log in until I provided them, so they were really a requirement.  ""For security"", of course, even though there's evidence [1] they make security worse.<p>To make it more insulting, though, I discovered that the implementation was very dumb:<p>1. The questions were fixed, and extremely stupid.  Any of them could probably be guessed by someone with a few minutes to Google.<p>2. The question lists were too short, making it difficult to pick a really hard-to-guess answer.<p>3. The lists were unique to <i>each question</i>.  So if I saw 2 questions I liked in the first slot, I could choose only one of them, and if the 2nd slot had completely inane options, I had to choose one of the inane options.<p>4. The last question <i>didn't even offer options that applied to me</i>.  So suddenly, for ""security"", I had to remember which unrelated question I selected, and which made-up response I provided.  Thanks a hell of a lot, AE.<p>[1] <a href=""http://www.schneier.com/blog/archives/2009/05/secret_question.html"" rel=""nofollow"">http://www.schneier.com/blog/archives/2009/05/secret_questio...</a>",1254086499
847284,comment,847118,847249,0,0,gasull,,,"You're right very few companies are structured that way, but you can start your own.",1254086314
847283,comment,847044,847263,0,0,numair,,,"I think the tide has really turned against name-brand institutions, leaving people such as the author in a position where they feel they have to defend themselves and their ""prestige.""  This manifests itself in some peculiar ways, as we can see from this piece...",1254086110
847282,comment,846699,846699,0,0,jfarmer,,,"Is this a reasonable middle ground?  All software covered by a patent must have the source publicly available.",1254086042
847281,story,,,1,0,christopherolah,"Cleverbot vs Emacs Psychiatrist",http://christopherolah.wordpress.com/2009/09/27/cleverbot-vs-emacs-psychiatrist/,,1254085864
847280,comment,846994,847115,0,0,Dilpil,,,"This is a really good idea.  You could have all the emails forward to one master account, and then when one started forwarding spam, you could cut it off.",1254085854
847279,story,,,1,0,ALee,"The Mathematics of Love: A Talk with John Gottman",http://www.edge.org/3rd_culture/gottman05/gottman05_index.html,,1254085664
847278,comment,847093,847206,0,0,natrius,,,"Search eyeballs are the most valuable eyeballs on the internet. You know what people want, you can show ads for related things. Without search, Google would just be another ad network.",1254085639
847277,story,,,1,0,rajajasti,"Building to Last to in the Digital Era",http://www.rajajasti.com/2009/09/27/building-to-last-to-in-the-digital-era/,,1254085618
847276,comment,847118,847253,0,0,makecheck,,,"The VPN has always been available, but I have only used it extensively in recent years.  It probably helps that teams are now spread further around the world, because it has forced people to restructure their work to deal with large gaps in communication.  We'd already been sending messages and waiting hours for a reply, so people no longer expect to be in constant contact.  So I didn't really have to convince anyone, I just reminded key people that I do work at home a lot, and to call me by cell when necessary.<p>Though, I've seen certain managers have a real problem with people working at home, and they even managed to fire people based apparently on that.  Fortunately, those managers are no longer here, because that same intolerance made them ineffective managers.",1254085595
847275,comment,839995,847264,0,0,Kafka,,,"Feel free to post it to the main feed if you feel it's Hacker News worthy. I will not. Not again.",1254085588
847274,comment,847202,847229,0,0,lucifer,,,"""I think checked exceptions are a bad idea for a couple of reasons. First is their most acclaimed benefit: they force you to deal with the exception immediately, even if you have no solution for it.""<p>The use of the word ""immediately"" informs your misunderstanding of the purpose of a checked exception.<p>Checked exceptions are enforced at <i>compile time</i> (thus ""checked"" exception).  There is no such thing as 'temporal immediacy' at compile time (unlike <i>runtime exceptions</i>).  There is potential for spatial immediacy (if we consider the static call stack), but that is not what the compiler cares about.  (In other words, you can catch exception Foo at the call site and delegate handling up the call stack by throwing a Bar (cause: Foo)).<p>A compiler enforced handling of an exception declaration insures that the program handles the exception at some level in the call stack, as apparent to the compiler.<p>This whole (endless) discussion regarding checked/unchecked very much mirrors the static-typing/dynamic-typing discussion.  You can either consider the merits pragmatically, or, you can adopt a dogmatic (religious) point of view that embraces one paradigm and dismisses the other.",1254085587
847273,comment,847044,847174,0,0,scott_s,,,"I don't think hiding you went to a prestigious school has to be disingenuous. I can be, but it doesn't have to be.<p>I have a purple belt in Brazilian Jiu-Jitsu. This is a mid-level rank, but it's also the point where a competitor is considered advanced. In tournaments that don't use belt level but Novice, Beginner, Intermediate, Advanced, I compete Advanced. If I talk to a stranger about BJJ, I never start out with ""I have a purple belt."" I am going out of my way to avoid sounding like a braggart. I am not worried about failing to live up to my rank, but I am worried about appearing like a jerk.",1254085566
847272,comment,847044,847066,0,0,elblanco,,,"He's on the fast path to a research job, buried in the bowels of some company, working on middle ware. Either that or he'll simply get a teaching job at one of the schools he decries in his post.",1254085475
847271,comment,847093,847236,0,0,ugh,,,"Ahem. The “I’m feeling lucky button” might be a minor detail today but it for sure wasn’t then. Certainly not the thing to mention first (it isn’t) but considering the very narrow and minimalist scope of Google (then) nothing minor.<p>This is, however, quite a boilerplate press release. A [verb] B. X says [boss]. Boring. If you know one you know them all.",1254085371
847270,comment,846579,847240,0,0,unalone,,,"Working hard is one thing. Everybody's working hard by some metric. When I got curious last year and looked at how much I write on sites like this, the result was staggering. So theoretically I'm a hard worker.<p>I guess it depends what you mean by working hard. Pretty much all the artists I consider best in class put themselves in positions where they could work on whatever they wanted without distraction. I don't consider that working.",1254085345
847269,comment,846699,847058,0,0,anamax,,,"> Let's take the case of H.264. Why is copyright not sufficient enough to protect their innovations to whatever degree of protection they choose (using licenses like GPL, MIT, or whatever they choose)?<p>Someone ""skilled in the art"" can take the descriptions of H.264 and produce a coder and a decoder without copying anything.  Since there's no copying, copyright protection doesn't come into play.<p>Given that, how are they going to ""protect their innovations""?  Are you suggesting that they keep the description as a trade secret and allow access only under license?  (They can't publish and say ""you can't use this description unless you pay us money"" - copyright doesn't work that way.)",1254085323
847268,comment,846754,846976,0,0,anigbrowl,,,"That's being pragmatic about science, not about the public. The wisdom of crowds has proved useful in all kinds of areas - collectively, human intuition is surprisingly good. A bit of crowd-pleasing might not be a bad thing; after all, nobody thinks of Christopher Columbus as 'the man who failed to discover a westerly trade route to India'.",1254085233
847267,comment,847044,847169,0,0,elblanco,,,"And for being duped into believing this little lie, Mr. Guo has singularly proven that Stanford folks are not as smart as their reputation makes them out to be.",1254085208
