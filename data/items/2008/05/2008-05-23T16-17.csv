ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
198178,comment,198070,198070,0,0,kschrader,,,"Is it just me, or is anyone else just not even surprised anymore when a big company treats their customers like crap.",1211561967
198177,comment,197967,198172,0,0,yan,,,"I stand corrected.<p>I remember reading Volume 1 where he notes how he is not happy with current architectures, which is why he introduced MIX. I guess I wrote my earlier comment from how I look at Knuth, perhaps not how it was intended. Haven't seen Volume 4 yet though.",1211561959
198176,comment,198158,198158,0,0,osipov,,,"Increase the level of detail in your script, chunk the script into chapters/sections, record the sections until they are perfect, and use Camtasia transitions to edit sections together.",1211561959
198175,comment,197967,198077,0,0,donw,,,"That's what I thought after reading the first paragraph.  If anything, I find Knuth's books to among the most approachable, partially because he has a good sense of humor, but mostly because Knuth writes in a very conversational style.",1211561824
198174,comment,196743,197411,0,0,xirium,,,"There's plenty of open source software that resembles XP. Why not use that? Indeed, the initial version of OLPC was designed specifically to be below the specification to run XP and now Microsoft has a small team hacking up the stock version of XP so that it will run in a smaller space and with less processing power. Even then, as I understand, an XP install requires an additional 1GB memory stick. This increases price, decreases the number of children who benefit, decreases the ""de-facto"" aspect and allows proprietary interests to jeopardise the initiative. All this is for the benefit of cautious beaucrats who can easily find other reasons against purchase.",1211561822
198173,story,,,5,0,kyro,"Microsoft To Shut Live Search Books",http://www.techcrunch.com/2008/05/23/microsoft-to-shut-live-search-books/,,1211561701
198172,comment,197967,198141,0,0,jcl,,,"I have to agree with Brian...  Caching is not a purely practical concern; it is important to the analysis of algorithms as well.  It looks like Knuth agrees:<p><a href=""http://www.softpanorama.org/Lang/c.shtml"" rel=""nofollow"">http://www.softpanorama.org/Lang/c.shtml</a><p><i>Donald: I mentioned earlier that MMIX provides a test bed for many varieties of cache. And it’s a software-implemented machine, so we can perform experiments that will be repeatable even a hundred years from now. Certainly the next editions of Volumes 1-3 will discuss the behavior of various basic algorithms with respect to different cache parameters.<p>In Volume 4 so far, I count about a dozen references to cache memory and cache-friendly approaches (not to mention a ""memo cache,"" which is a different but related idea in software).</i>",1211561689
198171,comment,197878,197878,0,0,gcv,,,"Another vote for Debian or Ubuntu. I've been happy with both. Debian is more stable, but if you rely on a recent package (say if you keep your software in git), you then have build or install your own or rely on backports or other unofficial packages. Ubuntu Server is more up-to-date. (It goes without saying that your Ubuntu Server installation shouldn't have any X packages installed, and, by default, does not.)<p>With respect to Red Hat based distributions, I have always had more luck with apt and Debian packages than RPMs. It probably comes down to familiarity, so YMMV.",1211561593
198170,story,,,2,0,dangoldin,"The Alpha Geeks: ""Geeks"" inheriting the world",http://www.nytimes.com/2008/05/23/opinion/23brooks.html?_r=1&ref=opinion&oref=slogin,,1211561554
198169,story,,,17,1,naish,"How ""Why Startups Fail"" Fails",http://www.37signals.com/svn/posts/1047-how-why-startups-fail-fails,,1211561541
198168,comment,188489,189268,0,0,daniel_yokomizo,,,"I have a Landau book in my hands right now ;)",1211561504
198167,comment,197970,198155,0,0,Tamerlin,,,"That's a very good point. IMO the biggest problem with unit tests is that so many people mis-use them, believing that they are a replacement for QA, integration testing, and load testing. You need people to look at your user interfaces to validate their usability, for one thing.<p>When I was working with Rails, I found the unit test framework to be nearly useless for my application since it relied on a SOAP service (and at least back then, you couldn't hit the service with a unit test), but the Rails integration tests were great.<p>So I ended up writing a fairly extensive suite of integration tests, but nearly no unit tests at all.",1211561466
198166,comment,197970,197970,0,0,herdrick,,,"Let's hope.",1211561285
198165,comment,198090,198121,0,0,ntoshev,,,"I don't think it is a choice. As described, entrepreneur/builder are two distinct personality types.",1211561254
198164,story,,,2,0,annoyed,"DIY 3-D Laser Scanner",http://www.instructables.com/id/3-D-Laser-Scanner/,,1211561205
198163,comment,198050,198050,0,0,edw519,,,"Oh, I thought this was going to be about Juan, Pauli, Jorge, and Ringo.",1211561188
198162,comment,198090,198127,0,0,aitoehigie,,,"Steve Jobs and Steve Wozniak were the main brains behind the Apple computer although Steve Wozniak was more nerdy, Steve Jobs also had his input. He is seen as a business or idea man today because of his charisma and flamboyance.",1211561116
198161,comment,198082,198082,0,0,edw519,,,"Don't blame ABC.  Blame the company.<p>1.  The product is software, yet there appear to be no standards for source code.  Imagine that happening in autos or pharmeceuticals.<p>2.  Even if there were standards, how could they be enforced without code reviews?<p>3.  Five years to market?  The plug needed to be pulled four years ago.",1211561079
198160,comment,198101,198101,0,0,gcv,,,"Fascinating. I keep hearing from a couple of people about how much effort, time, and money they are putting into their patent application process, fairly early on. One of them, a founder, supposedly has experience pitching to VCs, and claims that VCs always ask: ""How is your product protected? What prevents others from copying your idea and outcompeting you?"" He also claims the VCs expect to hear a simple answer ""We have a dozen patents pending on our technology.""<p>I wonder now if he doesn't know what he's talking about, or if the VCs writing these ""build your product, don't worry so much about IP protection yet"" are the cream of the crop who actually have a clue, but are completely out of reach for most (especially first-time) entrepreneurs.",1211561067
198159,comment,198090,198097,0,0,ntoshev,,,"Entrepreneur. Woz is a builder.<p>This may not be a duality with clear-cut boundaries, but nevertheless it strikes me as a very true one, one that helps me understand things. Introvert/extravert is not clear-cut either.",1211561006
198158,story,,,11,11,asnyder,"Ask YC: Recording Video Tutorials",,"I currently use Camtasia Studio for recording video tutorials. However, I find that even the simplest video requires me to record at least 10 takes. I find the subtle errors and mistakes I make annoying, even when following a script. While Camtasia has some built in editing tools, it's overly obvious when a video is edited, and I feel that can be annoying to the viewer. As a result I find myself constantly reshooting to get that pefect take.<p>Has this been your experience? If not, what do you do differently?",1211560948
198157,story,,,11,8,jon_dahl,"Ask YC: How do you project web traffic?",,"As I raise funding for my startup, investors want to see pro forma financial projections. I think I can estimate our expenses fairly well for a year or two, and some of our revenue assumptions (e.g. subscription cost, ad CPMs). But our revenue depends on two unpredictable things:<p>-- traffic
-- conversion rates<p>This is crystal ball territory, and everyone knows it. But we still need to make claims and substantiate them.<p>Has anyone seen a good model for estimating traffic based on assumptions? Any insight into what to give our investors?",1211560832
198156,comment,198095,198095,0,0,gojomo,,,"We already saw the original -- and it's still on the front page! Why this submission-- essentially a duplicate?<p>""TechCrunch runs a story we already saw via my tip!"" is not itself a story.",1211560779
198155,comment,197970,198096,0,0,menloparkbum,,,"I understand that. It was a serious question, though. How worthwhile are extensive unit tests if your end product is still broken?",1211560713
198154,comment,198073,198131,0,0,dhbradshaw,,,">Fundamentally it's about using everything at your disposal to find out the truth of things.<p>Nice statement.<p>Also, great story.  It's not just Feynman either.  I've seen the same thing (family members getting the diagnosis before doctors because they care more and take the time to get it right) several times in my own family.<p>As a graduate student I find myself continually astonished by the fact that narrow expertise comes quickly.  That is, if you start out with a specific question it will not take too long before you understand it better than your adviser and then better than anyone you can find and finally better than anyone in the world, as far as you can discern.<p>Basically, the world is so broad that if you specialize on a specific, well formed question (as Feynman did) you can probably become a world expert on that question if you put in the time and are actually looking to learn.",1211560693
198153,comment,198090,198090,0,0,webwright,,,"I think it totally depends on the business, and the core problems that need to be solved for the business to win.  Some businesses require only technical genius.  Some really just need an innovative UI.  Some need dealmakers.<p>A lot of builders attack problems whose core problems aren't technical...  Which often leads to failure.<p>Either way, in the earliest stages, specialization is oftentimes a really bad thing.  If you can't sell your product to co-founders, employees, partners, and customers, then you might be too specialized to be a successful entrepreneur.<p>Entrepreneurs (whether they are builders or not) get shit done.  PG did sales.  When he was starting up, he aggressively recruited great team members.  Great entrepreneurs don't silo themselves...  They stack rank the most important problems they should tackle (whether they are building-related or not) and then they try to destroy 'em with whatever means necessary.<p>So, in short: Make sure your teams' skills match the core issues of the product you're attacking, but know that every team member is going to have to get out of their comfort zone and attack stuff that needs attacking.",1211560622
198151,comment,198020,198138,0,0,aitoehigie,,,"I live in Nigeria, i.e. West Africa, I will like to talk to you and see what we can work out. my email address is aitoehigie [at] gmail [dot] com",1211560554
198150,comment,197984,197984,0,0,Tamerlin,,,"I've worked for three well-funded startups that failed for another reason, though all of them ended up making the same mistake: they couldn't develop software.<p>All three made some of the most common mistakes in software development, and tried to hide those mistakes behind a sweatshop.<p>1) Hire lots of people. Silly... hiring people doesn't get work done if you can't actually tell those people what you want their product to do.<p>2) Assume that hours = productivity. In every case, the competent folks among us spent a lot of time cleaning up problems caused by the folks working the extremely long hours. That contributed to my departure in every case... I hate cleaning up other people's messes, as it prevents me from doing worthwhile work. Firing those folks would have gotten us to market MORE quickly rather than less.<p>3) Deadlines set in stone... that just doesn't work. If you can't adjust your scope, you'll never actually hit the deadline.<p>4) Marketing based on the deadline... duh.<p>5) Perpetual crisis mode... when the requirements are poorly defined (if they're defined at all) as well as late, you have to be willing to delay launch or trim scope, or both. If instead you go into crisis mode and assume that your sweatshop will churn out a working product, you've already failed, and most of your best people will start jumping ship, leaving you with your burnouts who's primary contribution ends up being technical debt rather than working products.<p>I could go on, of course; I'm sure most people here have had similar experiences. So far, what I've seen of startups that made it big, they succeeded because they were either smart and did things well (e.g. 37signals), or because their software wasn't what they made their money on. Where I work now, we have hundreds of developers whose job is to pay the technical debt of the sweatshop, and one side effect of this is high turnover and low tribal knowledge. Most of our systems are in perpetual triage, and it's pretty obvious that if they were the source of our revenue, we'd be history. Fortunately, they only support the core business, so we're still around and profitable... but very inefficient.<p>Several government contractors I've worked for clearly survive based on the contacts within the government, because their software in many cases doesn't even meet the requirements it was developed for.<p>That's quite a bit more than I'd intended :)",1211560510
198149,story,,,10,2,daveambrose,"Tumblr and SEO: A Case Study in Rapid Response.",http://seokeywordsnews.net/2008/05/22/tumblr-and-seo-a-case-study-in-rapid-response/,,1211560486
198148,comment,197755,197755,0,0,pistoriusp,,,"I really want to play with this, one of the main problems that I'm having is that if you don't know which direction the object was moving, say it was going up, and you're dragging down would it do anything?<p>And in one frame you could be holding on to something whilst in the next you're holding nothing... I guess we'll have to play with it to see how the interface works.<p>I kind of get the feeling that it will be like placing the OS X dock on the right or left side of your desktop, you instinctively want to resize by moving up or down, but you have to move left or right.",1211560382
198147,comment,198070,198070,0,0,joshwa,,,"Pandora does this too. Drives me NUTS.",1211560060
198146,comment,198073,198073,0,0,kingkongrevenge,,,"The word ""scientist"" needs to be banned.  There are physicists who have expertise in physics, much as there are plumbers who know a lot about plumbing.  But there is no such special class of human beings called ""scientists.""",1211560010
198145,comment,197634,197865,0,0,joshwa,,,"Sounds like a slightly-more-real-time blog search to me.",1211560009
198144,comment,197970,197970,0,0,ardit33,,,"Unit testing hast it's own use, but I never really drunk the kool-aid.<p>In my experience with unit testing:<p>1. It doesn't help much if you are working in client side enginering.  No matter how clever your unit test is, it can't help on detected ui rendering errors, animations, or multithreading programming.<p>2. Java + unit test, means you have to throw away all encapsulation, and good OO design to apease your unit tests, exposing your program to your coworkers to create havock by calling methods that shouldn't be visible to them.<p>3.Unit tests can give you a false sense of security.  Oh, look, it passed the unit tests, my code must be good.   Well, most of the time  unit tests != real world scenarios.<p>4. TDD (test driven design) of software, can be slow. I would recommend it to all my competitors.  In a startup, I'd rather release something fast, that might be still little buggy, than something that works well, but it took forever to get there.  Plus TDD is constraining, as you are programming around your tests, and not around what the user will see.  I found often, that my final design on a functionality, is different from how I thought it would be at the beginning.  When working in large systems, you don't have the luxury to know how your final design will be.<p>5. Unit testing stiffles creativity in design, goes against ""Exploratory programming"". If you already know the answer on what you are building when you start, then you probably are not exploring around.<p>6. Unit testing != fun.   Honestly, I'd rather be implementing features, than testing them.<p>Where unit testing is good:<p>1. When building an api that will be used by other people amd that is more static, less fluid. As oposed to UI enginering, something like geoCoding api's, have simple and clear results.  That is very easy to unit test, as the value returned by the api is within a determined range, and the unit tests can be few, simple, and clear.<p>2. Scripting languages.  Unit testing helps on detecting errors, where in a static language they would have been caught earlier.  Plus it is much more easier to unit test on something like Python, then something like Java,  or god forbid C/C++.<p>3. Coorporate  enviroment.  If you are waiting for something form a different group/department,  you can build some unit tests to test if this group's code is meeting minimum standards.<p>Overrall Unit testing has its place, but be careful not to rely on it too much.  It can't be substitue to real testing.",1211559821
198143,comment,198090,198090,0,0,edw519,,,"I believe that there's an inverse relationship between ""building"" and ""wheeling and dealing"".  The more and better you build, the less you need to wheel and deal.<p>I've always noticed that commodity type products needed great promotion people.  Examples: insurance, real estate, some industrial products.<p>I think this happens less with great products that address a real need and have captured their place in the market.  You don't see many telemarketers for Apple, Volvo, or Google.<p>I focus on building so I won't have to wheel and deal as much.  Might not be a bad idea for most people here, too.",1211559739
198142,story,,,4,0,yourabi,"Intro Article on FreeBSD kernel modules",http://www.freesoftwaremagazine.com/articles/writing_a_kernel_module_for_freebsd,,1211559703
198141,comment,197967,198063,0,0,yan,,,"I doubt I agree. Knuth covers the fundamental, distilled algorithms very comprehensively. I really don't think covering VM, cache issues/width of cache lines, as well as virtues of pinning pages in memory is completely in his scope. If he did that, he'd have to talk about architectural issues such as out of order execution and depth of pipe-lines, which he obviously has no interest in since he developed his own `ideal' (M)MIX architecture specifically for the books.<p>I feel that the best way to approach actual algorithm implementation is to see what Knuth has to say about it in terms of virtues of some algorithms vs others and then to study the environment it will be running on to tweak the general algorithm.",1211559568
198140,comment,198090,198090,0,0,ideas101,,,"People who can run the day-to-day operations, dealing with many dept. (sales, marketing, technology, HR etc.) may or may not be an entrepreneur because my understanding is entrepreneurs are builders because they create something from scratch.<p>Many people start their career with 9 to 5 job and keep getting promoted to the CEO level, but they may not have ability and courage (at least in the beginning of their career) to build a new business right from the scratch.<p>While entrepreneurs/builders are the people who start and build something (or help others to build something) from nothing.<p>Serial entrepreneurs (and builders) are always on the move - from one project to another as they are not interested in doing the same thing over and over again on daily basis - they get excited to build something from scratch and once it is built they find the right person to run it (or they help others to build it and move on to the next project).<p>Serial entrepreneurs (and builders) to me are like King-makers, they are not interested in becoming a king them self and run daily operations. They are like a Guru who has many disciples (kings) who achieve success with his/her skills and knowledge. It is well known saying that a Guru is equal to a 1000 libraries - they know which book is for whom, and when and how to use it.",1211559411
198139,story,,,37,13,auston,"Want to see how efficient your code is? Have it refactored.",http://refactormycode.com,,1211559406
198138,comment,198020,198020,0,0,bantic,,,"There's a new peepcode pdf about this that looks interesting.
<a href=""https://peepcode.com/products/mms2r-pdf"" rel=""nofollow"">https://peepcode.com/products/mms2r-pdf</a><p>I'm sure the carrier negotiations in order to use shortcodes are different in countries outside the US.  I have heard that docomo in Japan actually makes this sort of stuff really easy for developers (and that Japan has a burgeoning diy market of cool phone-based services as a result).<p>What country are you in?<p>I've done work using the email2sms gateways for both sms and mms.  For sms it's kind of a pain because the gateways can't always be inferred just from carrier and number (T-mobile for instance, sometimes uses a nickname that you set up rather than your phone number, so your phone's sms email address ends up something like coolguy@tmomail.net instead of 2125551234@tmomail.net).  Receiving MMS is a HUGE pain because the carriers all include the attachments differently.  Some carriers include multiple attachments -- some of them are spacer gifs and things like that -- and you have to figure out the correct one.  Other carriers, like Sprint, don't even include an attachment, they have a link in the MMS email that takes you to a page, and that page has another link to the picture.  I had to use come complicated regex's and multiple wget calls to download the picture.  The whole thing was very fragile as a result.  But, to Sprint's credit, they are so bloated and slow to change that in 9 months they never modified the way those messages were structured so nothing broke.<p>I haven't worked on this stuff in over a year, so it may be out of date, but given the glacial rate of change in telco's (esp in the US), I'd be surprised if the situation has changed much.<p>Again, though, could be a very different story depending on where you're actually located.",1211559395
198137,comment,197878,197878,0,0,yourabi,,,"Ubuntu server is pretty slick -- all the goodness of Debian with up-to-date packages.<p>The best Linux distro is probably a BSD variant.<p>Fail -- I'm a huge FreeBSD fan but did you consider that perhaps this app is written in Java, which to this day has second rate support in FreeBSD (largely due to Sun).",1211559307
198136,story,,,23,19,pbnaidu,"OpenID: A Contrarian View",http://webworkerdaily.com/2008/05/21/openid-a-contrarian-view/,,1211559216
198135,comment,197967,198132,0,0,aggieben,,,"Yep.  Good catch.  I know the difference, but don't always catch myself before the wrong word gets to my fingertips.",1211559151
198134,comment,197967,197967,0,0,llimllib,,,"Can somebody who upvoted this tell me why? It doesn't make any sense to me, other than that it points out that Knuth is mathy (holy cow!)",1211559100
198133,comment,197878,197914,0,0,icey,,,"For our internal projects, we use CentOS. Externally we use a mixture of CentOS, FreeBSD boxes and one OpenBSD box.",1211559096
198132,comment,197967,198093,0,0,llimllib,,,"(You know that you used ""queue"" when you meant ""cue"" right? Not trying to make fun of you, just pointing out that they're homophones with different meanings and it's kind of jarring to read the wrong one)",1211559026
198131,comment,198073,198073,0,0,DaniFong,,,"I really disagree with the premise of the article.<p>Famously, Feynman stated that “Science is the belief in the ignorance of the experts”.<p>When his sweetheart Arlene Greenbaum became sick, he found himself shuttered away, studying her ailment with as much intensity as he could spare. Eventually he thought, based on the evidence, that it was most probably tuberculosis. But this was, at the time, a common disease. He reasoned that her doctors (of which there were many) would have known if it was. So he discounted his own diagnosis, and placed his faith in the opinion of the experts, who, if I recall correctly, believed it to be some sort of rare cancer.<p>But it was tuberculosis. She died from it.<p>Doing science isn't about applying some particular professional method. Fundamentally it's about using everything at your disposal to find out the truth of things. So called <i>non-scientists</i> can do that, if only they try. As an ethos, science, at least as it's seen by some, couldn't be more anti-expertise.",1211558984
198130,comment,197980,197980,0,0,schacon,,,"I'll be giving a talk on Git on Saturday morning.  Looking forward to meeting everybody.",1211558959
198129,comment,198020,198020,0,0,jonknee,,,"I believe the free option is to use the carrier supplied email gateways (which is what something like Google Maps uses to send addresses). If you want a full two-way messaging system like Twitter, you have to pay up. You can find open source software, but you need access to the networks and that's going to cost money.<p>It's quite a racket, they often charge both the sender and the receiver.",1211558749
198128,story,,,1,0,metajack,"Want $500?  Help Us Fix Jabberd2!",http://metajack.wordpress.com/2008/05/22/want-500-help-us-fix-jabberd2/,,1211558747
198127,comment,198090,198097,0,0,aneesh,,,"Jobs is not the ""builder"" in any technical sense of the word.  But he's a brilliant entrepreneur nonetheless.",1211558465
198126,comment,197938,197938,0,0,GHFigs,,,"Charlie Rose with Steve Jobs and John Lasseter in 1996
<a href=""http://video.google.com/videoplay?docid=4952557933657865919"" rel=""nofollow"">http://video.google.com/videoplay?docid=4952557933657865919</a><p>For some context: this is shortly after Toy Story, and before Jobs returned to Apple.",1211558447
198125,story,,,1,0,nikiscevak,"Parallels between Twitter and Friendster",http://brontemedia.com/2008/05/22/twitter-and-friendster-parallels/,"Twitter seems at exactly the same point Friendster was when it found itself deciding between a Kleiner round or an acquisition by Google.",1211558434
198124,comment,198090,198090,0,0,mooders,,,"I think I have a slightly different spin on the difference. I tend to see, rightly or wrongly, a Builder as someone who is going to see a job through to the finish - a details person, in essence. A Hacker, in YC parlance.<p>I see Entrepreneurs as those that create the ideas, or see the vision of how an idea could be used, implemented (on a broad level), or sold. I feel an Entrepreneur's skillset lends itself to creating the team, inspiring the vision and making the deals necessary to establish the company as a viable entity.<p>I also tend to see Entrepreneurs as quickly bored (perhaps that is just how I see myself) and eager to move onto the next thing.<p>I guess that's why I feel a startup generally needs two co-founders - a business person and a techie person. Ideally, they'll each have a degree of appreciation for the other's domain.",1211558414
