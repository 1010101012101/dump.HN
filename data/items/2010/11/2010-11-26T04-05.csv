ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
1941661,comment,1941631,1941631,0,0,Udo,,,"Very cool! However, it didn't return my activity (egomaniac that I am), but worked perfectly for other users.<p>Just a minor nitpick: this project would profit from OpenID/Oauth/whatever sign-on. There is really no reason why I need to create a ""real"" user account with a username...",1290747572
1941660,story,,,3,0,nreece,"Formalize CSS",http://sonspring.com/journal/formalize-css,,1290747374
1941659,comment,1941625,1941625,0,0,TamDenholm,,,"This was a really interesting read, its actually quite refreshing reading something with such bluntness.<p>I wish the world could take a page from people with Aspergers, i'd get along in life better without all the mind games, unspoken rules and social etiquette.",1290747210
1941658,comment,1941631,1941631,0,0,faramarz,,,"Very neat! I have a dozen or so people in mind I would love to add.. but I don't have the patience to go and find their exact usernames.<p>So far I have PG and matt_cutts (google)<p>Anybody would like to share their list for easy picking? :P",1290747136
1941657,comment,1941408,1941501,0,0,sabalaba,,,我们固定的时候我会告诉你（应该在两个星期之内），好吧？,1290747029
1941656,comment,1941408,1941494,0,0,sabalaba,,,"we're going to be getting a email list and website up soon--I'll post here when we do.",1290746938
1941655,comment,1940630,1941173,0,0,michaelchisari,,,"Not yet, actually, it's still in flux, and documentation is sparse to non-existant.  The next few releases will be ironing out a lot of the implementation, and I'm going to prioritize a guide for how to get started with it.",1290746911
1941654,comment,1940719,1940900,0,0,ecounysis,,,"I like the use of modulo; I hadn't thought of that.<p>setInterval is definitely much more simple and clean than recursively calling setTimeout, however it doesn't illustrate what is going on under the hood or how setInterval might be implemented.<p>Writing a Y-combinator isn't the easiest way to write a recursive function, but it does help us learn how recursion really works.",1290746900
1941653,comment,1941408,1941571,0,0,sabalaba,,,"Great find.  One of the guys at the Beijing LUG suggested that we hold a CCC listen-in from the new space.  Thanks for the great info, time to do some reading.<p>Where are you located?",1290746876
1941652,comment,1940630,1941514,0,0,michaelchisari,,,"True, but we're still in the construction phase, which I of course find very exciting, but I realize it can be frustrating for people who might want a viable facebook alternative right now.<p>I do think it's an inevitability, and it's really just a matter of how soon it happens. Mark my words though, within at least 5-10 years from now, Facebook will look more like the AOL of social networking.",1290746856
1941651,comment,1941373,1941642,0,0,gruseom,,,"<i>I'm not convinced that Common Lisp is designed to be side-effect free</i><p>It certainly isn't!<p><i>nor am I convinced that side-effects are an ideal to attain</i><p>I assume you mean avoiding side-effects? I tend to agree. The style I favor is pretty free-wheeling with side-effects in small scopes (within a function or something smaller) and gets progressively more disciplined as the composed pieces get larger and larger. I find programming this way strikes a nice balance between the two styles (imperative and functional). It lets one write most algorithms in a straightforward, efficient way while providing much of the advantages of strictness. To sum up: side-effects within black boxes, side-effect-freeness outside them, and a lot of small, atomic, composable black boxes. This is a natural way to use Common Lisp. (Especially if you avoid CLOS like I do.)",1290746813
1941650,comment,1934051,1936866,0,0,MikeCapone,,,"Could you elaborate on why you think this is better?",1290746782
1941649,comment,1941001,1941393,0,0,zipdog,,,"I'm a part-time history scholar but Rome is not my focus. However I'd throw the following dates into the mix:<p>264 BC (start of the Punic Wars) Roman Republic controls the Italian peninsula (as far north as Pisa) and is militarily aggressive<p>146 BC: Roman Republic dominates the Italian peninsula, has subdued the Greek mainland and razed Carthage<p>44-15 BC the transition from Republic to Empire<p>476 AD Western Roman Empire collapses.<p>1025 AD Eastern/Greek/Byzantine Empire is still a significant power<p>1204 AD Sack of Constantinople<p>It's hard to say exactly how long they were a power. Behaviorally, they were a strong, aggressive power for 250 years before becoming an Empire. And they were a significant power for 1000 years after losing Rome. So for over 1500 years they were an important state in the Mediterranean. You've got a good point that major events we think of when we say Roman Empire occur in a fairly short span, but I think it's quite accurate to say 
""The Roman Empire last[ed] the better part of a thousand years""<p>So I think it's fair to say the Roman Empire lasted 1000 years.",1290746766
1941648,comment,1941533,1941592,0,0,baddox,,,"Bingo. I'm diving into the book sample and already enjoying it. Thanks.",1290746736
1941646,comment,1941374,1941604,0,0,joe_the_user,,,"yes: <i>""Getting an access token for a user with no extended permissions allows you to access the information that the user has made available to everyone on Facebook. If you need specific information about a user, like their email address or work history, you must ask for the specific extended permissions. ""</i>",1290746503
1941645,comment,1941374,1941576,0,0,joe_the_user,,,"Well,<p>I'd be curious what would happen if thousand of people used the tool rather a lone researcher.<p>As we saw with Facebook's censorship and uncensorship of lamebook.com, their ""terms"" seem to be essentially ""we'll do what we can get away with and back-off if enough people push back"".",1290746351
1941644,comment,1941606,1941606,0,0,edb,,,"And just to get the ball rolling; I'll start with my first draft at my business planning outline I ended up with after a brainstorming session :<p><pre><code>    - Product Development
      - Features
      - Bugs
      - Design
        - Feedback
        - Direction
    - Marketing
      - Launch
      - Viral Component
      - Incentivize referrals / Customer Acquisition
    - Business
      - Raise Money
      - Monetize
    - Brain Dump</code></pre>",1290746333
1941643,comment,1941374,1941576,0,0,A1kmm,,,"I guess the key would be to ensure it is sufficiently slow to avoid triggering the anti-bot mechanism.<p>Browsing the code I found this:
<a href=""http://code.google.com/p/fb-exporter/source/browse/trunk/fb-exporter.js#115"" rel=""nofollow"">http://code.google.com/p/fb-exporter/source/browse/trunk/fb-...</a>
... idx * 11000 + Math.random() * 1000<p>So in other words, it downloads the ith friend at time 11*i +/- 1s; an average of one download every 11.5s might just be sufficiently slow to avoid getting banned from Facebook. Obviously, Facebook could look for patterns in their logs that look like the tool (too high a ratio of friend data downloads to other pages, for example, or an unnaturally high goodness of fit to 11s plus uniform variation), but it would probably be quite expensive for them to make such searches too complex, and if an arms race between the autoblockers and the downloaders ensued, the downloaders would have the upper hand because Facebook has the disadvantages of needing to avoid false positives and to deal with the large amount of data they would need to process to do any complex statistical analysis across all access requests.<p>A few sources cite the median number of Facebook friends at 150 - so even at the relatively slow rate of one friend data download a minute (perhaps with some intervening decoy requests), half of all Facebook users could download all friend data in 2.5 hours. A non-bot user could easily hit Facebook at that rate, and Facebook would get very bad PR if they started banning a significant proportion of their user base due to false positives.",1290746214
1941642,comment,1941373,1941620,0,0,p_nathan,,,"I'm not convinced that Common Lisp is designed to be side-effect free (nor am I convinced that side-effects are an ideal to attain^H^H^H avoid, oops). Even Haskell has side-effects - just pushed into Monads.",1290746183
1941640,comment,1941373,1941622,0,0,sedachv,,,"""Also, you wouldn't be comparing, say, Java to APL. You'd be comparing Java to Java + ""an unless statement"", or APL to APL + ""enforced whitespace."" You want to see the relative worth of language features, not the relative worth of our current languages, which have mostly been slapped together with no concern for UX. The result of such a study would be a set of UX suggestions, of language features that comparatively increase, or comparatively decrease comprehension.""<p>This is still meaningless if you're testing it on someone who doesn't know APL. Having an ""unless"" statement in your example is exactly like testing for English comprehension. This technique would make sense if you're testing proposed design choices for changes to APL on APL programmers (here's 60 seconds to read this program; what do you think it means?), it would make sense if you have equivalent programs in different languages being tested on users of those languages (""users of Perl understood program X 10% better than users of APL given 60 seconds to examine it""), but it is meaningless in the context you provide.",1290745993
1941638,comment,1941421,1941610,0,0,thefool,,,"I think that having a general sense of how the web is put together will make any business person more effective in what they are doing, even if they cannot write any code.  Taking a few months to get educated before committing to build something would probably pay off in spades in the long run.",1290745860
1941637,comment,1941125,1941125,0,0,meta,,,"If the implementation was indeed taken, it might be a dangerous mishap/black eye against their community reputation.  It appears that Tandberg relies heavily on Opensource for at least one of their other products.  Gstreamer and Tandberg video: <a href=""http://gstconf.ubicast.tv/videos/case-study-tandberg-and-gstreamer/"" rel=""nofollow"">http://gstconf.ubicast.tv/videos/case-study-tandberg-and-gst...</a>
It appears (given they were invited to a gstreamer conference) that they have been getting along with that project so maybe this was a one-of mistake?<p>edit: make myself clearer",1290745859
1941636,comment,1941628,1941628,0,0,ashraful,,,"Clickable link:<p><a href=""http://hackerlunch.com"" rel=""nofollow"">http://hackerlunch.com</a>",1290745831
1941635,comment,1941373,1941499,0,0,p_nathan,,,"Lisp is considered a language with a high strength in prototyping. I'm not sure why you think it's a write-only language.<p>I like Lisp because it is wholly unambiguous in visual syntax. That is not something I find in languages such as Perl, Python, Ruby, C++, Haskell, or C. I do find unambiguity in assembly as well.<p>I've also found that the general idea of ""build your own Lisp"" as a reason for lack of comprehension is specious when stacked up against the Java or .NET frameworks. You have to know the framework calls to understand what's going on. The same applies for C++ template metaprogramming.<p>I don't consider that a criticism; I consider that an acknowledgement of the ability of programming languages to provide abstraction.<p>I am a working programmer, and I like Lisp.",1290745692
1941634,comment,1941373,1941611,0,0,derefr,,,"> Common Lisp is a programming language like any other: people who write good code in other languages can write good code in Common Lisp, and people who write bad code can make everyone's life just as miserable.<p>We're not talking about the extremes, here, though; we're talking about completely average code, written by completely average programmers, and the comparative number of extra milliseconds it takes these programmers to comprehend, or recall, the correct syntax in one language vs. another.<p>Milliseconds matter; when Google shaves milliseconds off their page load times, they earn millions of dollars. This isn't because every user is slightly better off, but because  some discrete number of users switched from ""eh, this is taking too long, I'm outta here"" to ""alright, I'll put up with that."" People get fed up with programming languages all the time, but no one bothers to find a formal reason for it. Has anyone ever done an eye-tracking study on people programming?<p>> I am of the opinion that anyone who calls Common Lisp a ""theoretically-pure"" language<p>No one's doing that. ""Lisp"" as a general term does not mean ""Common Lisp""; it refers to the feature intersection of all popularly-implemented Lisps—the ""Lisp"" that Greenspun's rule refers to getting implemented everywhere. That ""Lisp"" is very pure.",1290745691
1941633,comment,1940573,1941404,0,0,shadowfox,,,"So what do they work on?",1290745665
1941631,story,,,52,41,Trindaz,"Follow people on Hacker News",,"Ever wanted to follow specific people on Hacker News? (without having to go to their individual Submitted and Threads pages every day!)<p>If so, try this: http://beta.fedang.com. andymorris and I spent the last 24 hours slapping it together and we're hoping to get a few users to put it through it's paces.<p>It's only 24 hours old and will probably fall over if more than 20 people start using it. If we can get it working solidly for HN and a few of us seem to like it, then we plan on making it work for other sites too in the future.<p>EDIT: Also interested in feature suggestions. We're thinking RSS for the feed, and tracking replies to your own comments, no matter who they're from.",1290745594
1941630,story,,,41,19,gruseom,"Who Wants Parallel Computers?",http://rjlipton.wordpress.com/2010/11/21/who-wants-parallel-computers/,,1290745590
1941629,story,,,4,0,henning,"ReadyLisp: get up and running quickly with Common Lisp on OS X",http://www.newartisans.com/projects/ready-lisp.html,,1290745518
1941628,story,,,9,4,ashraful,"Show HN: HackerLunch - a new way meet hackers",,"Hello HN! Here's my November Startup Sprint project (coded in two days).<p>http://hackerlunch.com<p>It allows you to post your lunch plans and lets other hackers join you. I built this because I often see HN users are interested in meeting each other if they are in the same area.<p>I am not a coder, so this version is very rough. If people use it, I will work with others to build a more polished version.<p>I would love some feedback. What do you think? Is this something you will be using?",1290745491
1941626,comment,1941106,1941106,0,0,BornInTheUSSR,,,"Regarding the ios testing issues, would setting the iPhone emulator that comes with apple developer tools to the various versions have worked here?",1290745300
1941625,story,,,16,3,jancona,"What it's like to have sex with someone with Asperger's",http://blog.penelopetrunk.com/2010/11/18/what-its-like-to-have-sex-with-someone-with-aspergers/?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed%3A+BrazenCareerist+%28Brazen+Careerist+-+by+Penelope+Trunk%29&utm_content=Google+Reader,,1290745293
1941624,comment,1940840,1941588,0,0,philwelch,,,"I think it's a good choice to only allow non-radical options. Everyone knows that going full-tilt libertarian and making spending cuts that would never even conceivably pass would eliminate the deficit; it's more realistic and illuminating to see what can be done within the realm of the possible.<p>""Politics is the art of the possible."" --Bismarck<p>""Politics is not the art of the possible. It consists in choosing between the disastrous and the unpalatable."" --John Kenneth Galbraith",1290745218
1941623,story,,,93,22,middlegeek,"This (very basic) website is hosted on an alarm clock",http://kwf.dyndns.org:5821/,,1290745157
1941622,comment,1941373,1941603,0,0,derefr,,,"> That's just stupid. If the programmer doesn't understand English and the program is written with English identifiers, does that fail the test? What about APL and Perl?<p>It's called a <i>comparative</i> usability study. The same person looks at the same code sample written in two different languages, A and B (in random order), given time T to absorb each one (where T is much less than the time it would actually take to fully absorb the code), and then the references are removed and they are given tests on the properties of sample_A and sample_B (again in random order.) The score is not a measure of either A or B individually, but rather the ratio A:B, derived by the ratio of correct questions in sample_A:sample_B. A:B is then handed to a Bayesian neural network as a confidence score.<p>Thus, if the test-taker doesn't know English, they get the same (low) score on both tests—to the BNN, that is the same as ""no new evidence.""<p>Also, you wouldn't be comparing, say, Java to APL. You'd be comparing Java to Java + ""an unless statement"", or APL to APL + ""enforced whitespace."" You want to see the relative worth of <i>language features</i>, not the relative worth of our current languages, which have mostly been slapped together with no concern for UX. The result of such a study would be a set of UX suggestions, of language features that comparatively increase, or comparatively decrease comprehension.<p>> And you seem to be a theoretician who has never had to maintain any Lisp code.<p>For the last eight months, I've been writing Clojure for a living. I've written quite a bit of CL before that. I still find it harder to come back to any Lisp project after a month or two than to come back to code in any other language.",1290745117
1941621,comment,1940641,1940768,0,0,andymorris,,,"When you get templates working, it does feel pretty good - you can get an approximation of the power of functional languages, all the while knowing that your code has been directly mapped to assembly.<p>I don't know if it's as good as writing some neat functional code, but for me it's still fun!",1290745045
1941620,comment,1941373,1941432,0,0,python_padawan,,,"""Well, all <i>true</i> Scotsmen like haggis.""<p>Or, for those who cannot draw the correlation: ""Well, all <i>true</i> Lispers like parentheses.""<p>Never mind that pure functional programming is an ideal that even Lisp does not live up to.  Think I'm throwing B.S. around?  Try doing I/O in Lisp without side-effects.<p>Now that we've established that Lisp is not at the top of the blub-curve,  maybe we can get on with:
1. Writing functional languages people actually <i>use</i>.
2. Advancing the state-of-the-art in programming languages from being mired in a single-threaded monolithic server past.<p>With respect to my second point, much progress has been made; but it is still underpinned by single-threaded programming language design.  What we need is someone who <i>truly</i> groks multiprocessor, multi-threaded, heterogeneous run-time environments; and from that knowledge can write a language to take advantage of such an environment.",1290745044
1941619,story,,,1,0,ShareableDesign,"How to Make an iPad eBook in One Day",http://shareable.net/blog/i-made-an-ipad-ebook-in-one-weekend-and-you-can-too,"It's easy to make content for the iPad, especially if you use ePub, an open source eBook format.",1290745000
1941618,comment,1940778,1941527,0,0,ambiate,,,"I learned the progress bar element from eZine Articles.  Watching my article never move but always sitting at 33% made me come back to the site day after day.  I really had no intention of writing more articles.  I was already there though, so, why not write 3-4 more?<p>Another great example of my willingness to give in to hypothetical progress bar and waiting lines was callgraph.biz.  I signed up and was placed #2500 in queue.  The first few days were manic refreshes and F5 key slamming.  After those initial days, I gave up.  Later on I was accepted, but I had lost my immediate thunder which I found while I was 'struggling' in a queue system.  Luckily, being bombarded with ""new test files available"" in my inbox everyday convinced me to give them a try.  It was a really interesting service and actually landed me a cheap part time job at my university.  Who would have guessed ""transcribing skills"" was something people need? :D<p>I think a pseudo-queue system or a progress bar is actually quite heroic in the first few days.  Later on, you lose that immediate faith and interest.  You have to utilize it properly in those first few moments!  Convince your user they're #25,000 in waiting list.  Send them an email saying they've been bumped to #10,000 later on that evening for some random word in the signup form, etc.  You'll have them craving your service.",1290744987
1941614,comment,1941374,1941602,0,0,chrischen,,,"If you are paranoid, use incognito. Extensions are disabled in incognito mode by default.",1290744842
1941613,comment,1941374,1941605,0,0,wibblenut,,,"Yup. Some apps/services are listed here: <a href=""http://www.telnic.org/tools-landing.html"" rel=""nofollow"">http://www.telnic.org/tools-landing.html</a> and <a href=""http://www.telnic.org/tools-other.html"" rel=""nofollow"">http://www.telnic.org/tools-other.html</a><p>I've written some stuff that I'll try and release soon.",1290744822
1941612,comment,1941373,1941530,0,0,joe_the_user,,,"I have to say I'm not impressed by the link.<p>Intuitiveness is indeed highly correlated to previous human experience. But aside from pre-existing interfaces, an interface designer has available the whole of an average person's real world experience - the mouse is intuitive because it mimics a person's experience of moving a physical object - it doesn't mimic exactly but closely enough that a person can use their existing experience to extrapolate. And an interface designer who wanted to improve a standard interface may be able to find a different facet of human experience analogous to the task at hand and thus (contrary to the link) it is <i>possible</i> to create interfaces which are new and intuitive (but I'll admit it's damn hard and you should have a reason).<p>Most computer languages leverage human experience with natural language - not exactly, but partly. That's why Ruby's ""return 5 if done"" syntax seems really nice. Thus I'd argue you can make a reasonable study of what constitutes an intuitive interface.<p>So I claim the intuitiveness of Lisp's parentheses is a valid question for debate.",1290744784
1941611,comment,1941373,1941596,0,0,alec,,,"It really isn't.  Replace ""Lisp"" with ""Perl"" and ""theoreticians"" with something evocative of the stereotypical Perl programmer and you have the exact same nonsubstantive rant that adds little to the discussion of what a good programming language should look like or why a particular one is bad.<p>I've been a ""working programmer"" who happens to write Common Lisp for a few years.  Common Lisp is a programming language like any other: people who write good code in other languages can write good code in Common Lisp, and people who write bad code can make everyone's life just as miserable.  Most time spent figuring out a new code base isn't the style or set of features used, it's figuring out the domain-specific logic.  Macros aren't abused to any greater extent than C++'s operator<<, monkeypatching, or preprocessors.<p>I am of the opinion that anyone who calls Common Lisp a ""theoretically-pure"" language has not done anything but a simple recursion exercise: features like loop's inability to detect sequence type, the difference between progn and prog1 in terms of multiple values, having functions like rplaca or caar, and mixing &optional with &key are not what I think of when I think elegant or ""theoretically-pure"".  They're there because the designers were sometimes wrong and sometimes doing the best with what they had.",1290744765
1941610,comment,1941421,1941421,0,0,commanda,,,"Honestly, I don't think ""Learn how to do it yourself"" is a viable option for non-technical entrepreneurs looking to start a company.  It takes years to become even competent at programming, and longer to be able to design a scalable web application proficiently.  Besides, you probably want to spend your time doing the non-technical tasks that you're already good at - there will be plenty of that work to be done while you're getting your company off the ground.",1290744745
1941607,comment,1940840,1941452,0,0,afshin,,,"Married couples are allowed to file separately if they wish.",1290744692
1941606,story,,,8,5,edb,"Ask HN: Outliner templates for building a startup",,"I recently discovered WorkFlowy and org-mode, and fell in love with the idea of organizing my thoughts in outline form.<p>I was curious if anybody wanted to share their high-level ""templates"" for how they organize their thoughts for their startup, or any project (web or otherwise) for that matter.",1290744521
1941605,comment,1941374,1941440,0,0,stoney,,,"This looks very handy - hadn't heard of it before.  Apparently it can also be used as an OpenID.<p>Do you know of a list of services that actually make use of these domains?",1290744466
1941604,comment,1941374,1941584,0,0,natrius,,,"Email addresses aren't in there. When I look at my own info, I see a @proxymail.facebook.com email address, which is presumably what an app would use to email me. It's not what you'd want for exporting contact info.",1290744321
1941603,comment,1941373,1941499,0,0,sedachv,,,"""A comparative usability study on a language is very simple to perform: you basically print out some code samples, let people with no experience in the language (but general programming experience) read them for a set time period, and then evaluate their comprehension.""<p>That's just stupid. If the programmer doesn't understand English and the program is written with English identifiers, does that fail the test? What about APL and Perl?<p>""Because the people who ""get"" Lisp are almost always theoreticians who know what they want to code before they code it.""<p>And you seem to be a theoretician who has never had to maintain any Lisp code.",1290744223
1941602,comment,1941374,1941598,0,0,Groxx,,,"It's a bit of an alarmist, though accurate, alert: anything which has access to your tabs (ie, anything which can observe / inject into a page) also has access to your ""history"" as it can see what you're browsing.  I'm sure other permissions also trip this, but ""tabs"" is one of the most common, and I ran across it recently too: <a href=""http://code.google.com/chrome/extensions/tabs.html"" rel=""nofollow"">http://code.google.com/chrome/extensions/tabs.html</a><p>edit: I'd assume ""history"" also trips the history alert: <a href=""http://code.google.com/chrome/extensions/history.html"" rel=""nofollow"">http://code.google.com/chrome/extensions/history.html</a><p>edit again: the extension has ""tabs"" permission only.  Very little to worry about, unless you're paranoid about your browsing history.",1290744141
1941601,comment,1940641,1940738,0,0,swolchok,,,"A quick Google doesn't turn up any pages stating that parsing Perl and CL is undecidable. Can you provide a reference?",1290744104
1941600,comment,1940553,1940801,0,0,jlees,,,"Or just allowing a 'view all comments' option that could be easily Ctrl-Fd.",1290744063
1941599,comment,1941373,1941373,0,0,sedachv,,,"I've worked with programs in half a dozen Lisp dialects and everyone who claims Lisp is hard to understand because of the syntax is wrong. The only reason I could work with so many dialects and so many programs is because the syntax is uniform. If you think you have an idea for how to ""improve"" Lisp syntax that involves an ambiguous infix grammar, please stop trolling and go write some Python.",1290744048
