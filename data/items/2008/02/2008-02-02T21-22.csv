ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
108469,comment,108433,108456,0,0,Annoynymous,,,"Bureaucracy isn't the only reason to care about, or have to modify, HTML. Things like accessibility and browser compatiblity matter too, and that ground is constantly shifting. Beyond that, there aren't a whole lot of people outside the world of hackers and scientists who don't care about aesthetics. That means that the overwhelming majority of us will end up working for people who care how stuff looks, even at the prototype stage. That's not bureaucracy, it's human nature.<p><i>Every</i> time I've let somebody else's tools write HTML for me, it's caused me grief. Either because the tool author had an agenda that was at odds with my needs (Microsoft), because of bugs in the tool (everyone), or because the problem set shifted since the tool was written as browsers and techniques changed (everyone). Likewise, I'm wary of entertwining HTML output with the rest of the program the way Arc does because it makes it too  much work to change things down the line.<p>It would be interesting to write a templating system that separates HTML output without making Arc programs take much longer to write. I suspect that it could be done, but it's not entirely clear to me what shape it would take. If done right it would give users the option to leverage Arc's existing HTML output functions where desired. I'll have to play with it.",1201989316
108468,story,,,10,1,danielha,"Flickr Rebellion Brews at Specter of M$ Acquisition",http://blog.wired.com/monkeybites/2008/02/what-would-micr.html,"""A small but vocal minority on Flickr are already staging online protests at the prospect of a Microsoft takeover. Flickr is one of several popular Web 2.0 websites owned by Yahoo that loyal users fear will suffer under Microsoft ownership.""",1201989222
108467,story,,,2,0,razorburn,"A Revolution in Computing Is Taking Shape","http://www.ft.com/cms/s/0/49c55232-cda2-11dc-9e4e-000077b07658,dwp_uuid=4dce8136-4a24-11da-b8b1-0000779e2340.html?nclick_check=1",,1201989208
108466,story,,,4,0,drm237,"Rethink your exit now",http://www.texasstartupblog.com/2008/02/02/rethink-your-exit-now/,,1201989127
108465,comment,108411,108457,0,0,dcurtis,,,"Where'd you get those statistics? I was under the impression that the opposite was true (regarding general aviation).",1201989070
108463,comment,108433,108433,0,0,NickSmith,,,"Paul, in emphasising code brevity I think you are missing a greater good.  I believe most of us subconsciously look for a language that is frictionless -- one that allows us to express our ideas without the language getting in the way.  To me this is a far more appropriate measure of a language's power than the length of a program.  I'd love a language that would allow me to stay in flow* and express my creativity without having to stop and think about the actual language itself.  That would be the ultimate Zen power tool.<p>To be more specific here are three attributes that seem to aid frictionless flow. (perhaps in order of importance) -<p>--> Expressiveness  -- i.e. simple, explicit and unambiguous abstractions.<p>--> Obviousness and readability. -- i.e. no need to decipher tokens, and the code structure illuminates the intention and flow of the process.<p>--> Terse. -- i.e. apart from the obvious benefit of requiring less work it also helps me 'keep the whole program in my head'.<p>There's nothing wrong with brevity of course, but when pursued for it's own sake it seems to be counter productive, in that when you focus on terseness alone there can be a tendency to ride roughshod over the more important attributes:  expressiveness and obviousness.  You then end up with code that's not as enjoyable to create and whose beauty is lost, except perhaps initially to it's creator.<p>BTW Paul, this is a great first shot, so a big thank you.  I, for one, am routing for Arc to be a widespread success, if only so I can do most of what I need to do in a language that I really enjoy.<p>* On Flow ->  <a href=""http://www.life2point0.com/2006/06/the_little_book.html"" rel=""nofollow"">http://www.life2point0.com/2006/06/the_little_book.html</a>",1201988730
108462,comment,108368,108429,0,0,sadiq,,,"What did you do differently between the success and failure?",1201988240
108461,story,,,6,0,neilc,"Yahoo Deal Is Big, but Is It the Next Big Thing?",http://www.nytimes.com/2008/02/03/technology/03valley.html?hp=&pagewanted=all,,1201987684
108460,comment,108433,108446,0,0,dzorz,,,"Here is my contrived example:<p>How would you, in your favorite language, implement a program that displays GDP information for every country for years from 1970-2007 using a nice graph. Countries should be selectable using a fancy popup menu that displays country name and country shape...<p>Using Mathematica 6:<p><pre><code>    MenuView[Row[{Rasterize[
       Show[CountryData[#, ""Shape""], ImageSize -> {40, 40}], 
       Background -> None], #}] -> 
        Dynamic[DateListPlot[CountryData[#, {{""GDP""}, {1970, 2005}}]]] & /@
       CountryData[], ImageSize -> Automatic]</code></pre>",1201987680
108459,story,,,24,5,polar,"Stephen Fry introduces the open source platform that will see off Windows",http://www.guardian.co.uk/technology/2008/feb/02/opensource.stephenfry,,1201987494
108458,story,,,2,0,ivankirigin,"A Green Energy Industry Takes Root in California",http://www.nytimes.com/2008/02/01/technology/01solar.html?_r=1&oref=slogin,,1201987475
108457,comment,108411,108411,0,0,zach,,,"That's horrible.  I really grieve for her other child.  Tremendously sad.<p>To me, it's also a reminder that private flight is still quite dangerous.  Airline flight is seven times safer than driving, but driving a car is seven times safer than general aviation.  Lots of fun, no doubt, but make sure your will is in order.",1201987274
108456,comment,108433,108451,0,0,pg,,,"Do you consider News.YC a mere prototype?  It's been around for a year, never gets runtime errors, and serves about 80k pages a day without breaking a sweat.  And the source is full of code like this.<p>I think you're confusing types of software with organizations that sponsor them.<p>Arc certainly wasn't designed for use in the sort of environment where programs are 10% functionality and 90% the embodiment of the random bureaucratic processes of the organization paying for them.  More for the opposite end of the spectrum, in fact.  That's where you need power.<p>That said, if you care to make your challenge a precise one, it's likely I (or someone else) would try implementing it in Arc, if only out of curiosity.",1201987007
108455,comment,108386,108441,0,0,davidw,,,"Yeah... I asked Dan a question in the first group of the 'internals' session after the introduction, if you happened to be in that group.  I stuck around pretty much until the end.  Would have been fun to meet up indeed.",1201986879
108454,comment,108433,108446,0,0,pg,,,"It's true that this example will do more to distinguish Arc from other languages than from other Lisp dialects.  But if I'd used a Lispy sort of problem as a challenge, everyone would have accused me of cheating by using an example that favored Lisp dialects.<p>I'll eventually post some comparisons of the same programs in Arc and other Lisp dialects.",1201986671
108453,comment,108433,108446,0,0,bayareaguy,,,"Note: I posted this at <a href=""http://arclanguage.org/item?id=1043"" rel=""nofollow"">http://arclanguage.org/item?id=1043</a> as well.  It's kind of weird having this topic on both YC news and Arc news.<p>Suppose instead of being a temporary state of affairs, YC/Arc news were to support cross-forum discussions.  How simple would that be to support in Arc as it is today?  I.e. no fair adding something like (crosspost) to the core libraries.",1201986624
108452,comment,108115,108115,0,0,r7000,,,"Rolling along with about 25 new users per day. Getting ready to launch the first round of user-requested and pre-planned features. So far it has been a lot of fun! My main problem is I built the site to scratch an itch and now that it exists I use it myself so much I don't work on features enough.",1201986554
108451,comment,108433,108433,0,0,Annoynymous,,,"> Though simple, as such tests have to be, this is not a contrived example. Web apps have to do this sort of thing all the time.<p>No. Web app <i>prototypes</i> do that sort of thing all the time. For production web apps, the problem ends up including such confounding factors as meeting accessibility policy, making the HTML surrounding the form elements match what a web designer came up, etc. The more web development work I do, the more wary I am of any system that writes HTML for me. Inevitably the system ends up putting too many constraints on what HTML can be output.<p>Witness the ASP.NET framework, which writes lots of HTML for you. Unlike Arc it was written with the best practices of the time in mind, but it's aged badly as the web has grown and changed. Doing accessible, cross-browser, standards-based work in ASP.NET today involves a certain amount of fighting the framework which offsets the initial productivity gains.<p>I understand that Arc is intended for exploratory work and rapid prototyping. But that's exactly why the Arc challenge is meaningless. We're being asked to compare Arc to languages that provide -- dare I say it -- a great deal more flexibility and expressive power when it comes to outputting HTML.<p>So here's my challenge: Take a sample Arc application and modify it to replace tables with appropriate block elements that have designer-specified IDs and classes. Use <label> elements for each input if you aren't already. Replace a few regular submit buttons with image buttons or vice versa. Reorder some elements, and throw a few more arbitrary containers in here and there. Compare that process against a conventional language and let's see where we get.<p>In my line of work, that kind of scut work is <i>absolutely</i> part of prototyping. Before I can build the real thing my prototype has to be approved by people who have a hard time looking past even minor visual inconsistencies with what they're used to. For that reason I'm very wary of any design that makes fine-grained control of HTML any harder than it has to be, and I've come to value clean view/everything else separation even in early prototypes.<p>I suspect that Arc is much more appealing to people who don't live with such constraints.",1201986398
108450,story,,,3,0,__,"Microsoft/Yahoo: A Bad Deal For Silicon Valley",http://billburnham.blogs.com/burnhamsbeat/2008/02/microsoftyahoo.html,,1201986170
108449,comment,108115,108290,0,0,thorax,,,"Cool idea. Good luck with it.",1201986167
108448,comment,108382,108382,0,0,vlad,,,"Yes. (No sarcasm.)",1201986049
