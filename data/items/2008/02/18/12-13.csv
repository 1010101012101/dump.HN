ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
118094,comment,117646,117883,0,0,Electro,,,"IMO Brita filtered water tastes worse than the water out of the tap. My parents bemoan unfiltered water, I'm the opposite. For the life of me I can't drink filtered water because I don't find it refreshing as it taste clinically sterile.",1203339321
118093,comment,117727,117795,0,0,DaniFong,,,"That's true. But it's becoming <i>less</i> true. Consider how long the anti-vietnam-war movement took to get started. Now consider that Iran is one of the first countries where there is popular <i>preemptive</i> dissent against conflict in the USA. Things may be bad, but one some dimensions, they're getting better.",1203339209
118092,comment,118065,118065,0,0,palish,,,"The number of layers of software between you and the device you're manipulating can be a problem, but only it costs more in terms of efficiency than in terms of programmer time.  A lot of people seem to forget how valuable programmer time is, and abstractions which save it are therefore valuable.<p>How valuable?  Since an abstraction can be used by any number of developers, its value is at least multiplicative.  And since the developers have saved time, they can use that savings to accomplish even more.  If the time is spent writing more abstractions, they may become exponentially more valuable.<p>Or not.  There are two things suggested by this:<p><pre><code>  1) If you spend all of your time writing abstractions, you won't write any applications.\n\n  2) An abstraction's value is directly proportional to the number of programmers that use it.\n</code></pre>\nConversely:<p><pre><code>  2') An abstraction becomes useless as it becomes harder to use.\n</code></pre>\n""Harder to use"", not ""harder to understand"".  We use things we don't understand all the time - that's the point of abstraction.<p>But an abstraction that's hard to use is a different dragon.  Consider OpenGL.  It's an elegant layer of software to deal with the complexities of creating graphics applications that run in real time.  They kept a lot in mind while writing it, and because of that, it's very powerful.  But only developers who fully understand OpenGL can use it effectively.  Since Direct3D is much easier to understand, but perhaps less powerful, it's a perfect example of the Musket Effect.  Direct3D is a musket and OpenGL is a katana.<p>For any two untrained people, if you give one a musket and one a katana, it's likely that the one with a musket will win, if he scores a good hit.  Both are abstractions of force, but the musket is decisively easier to use.<p>What if a 150 katanas and a 150 muskets are divided between 300 Spartans and they're pitted against each other in an epic warrior-ninja-vs-warrior-marksman battle?  Well.. The Musket-Spartans will be remembered fondly, and the Katana-Spartans will enjoy their victory.  A musket simply takes too long to reload.<p>But is a katana ""better"", then?  No.  Since each musket is easy to use and individually powerful, more people will begin using muskets.  They'll bring one along while hunting, for example.  Then the musket will be improved, and improved, and improved again.  The result is an M-9 Beretta 9mm pistol.  Now pit 150 of those against 150 katanas, and you can imagine how things will turn out.<p>And that's the Musket Effect:  A linear increase in usability causes an exponential increase in power, given time.<p>I was reading this today at my job:  <a href=""http://msdn.microsoft.com/archive/default.asp?url=/archive/en-us/directx9_c/directx/graphics/programmingguide/TutorialsAndSamplesAndToolsAndTips/tips/performanceoptimizations.asp"" rel=""nofollow"">http://msdn.microsoft.com/archive/default.asp?url=/archive/e...</a> ... it's documentation that lets you use Direct3D 9 most effectively.  Notice the easy-to-understand list.  Each item uses simple words to succinctly deliver its message.<p>Contrast that with <i>any</i> documentation here:  <a href=""http://www.opengl.org/registry/"" rel=""nofollow"">http://www.opengl.org/registry/</a>  .... Those are manuals for each OpenGL extension.  An 'extension' is simply a feature of a video card that a programmer can use.  Except because the documentation is so technical, few programmers do, compared to the number using Direct3D.<p>Some say Direct3D is winning hearts and minds because it's backed by a huge corporation.  That certainly helps.  But it seems like Direct3D is more powerful because there are more quality engineers working on Direct3D than an OpenGL.<p>What's a lone wolf to do, then?  Well, it takes time, but anyone who has each of those OpenGL manuals committed to memory will be <i>far</i> more powerful and way more productive than any given Direct3D programmer.  Just look at John Carmack.  So there are tradeoffs.<p>The best thing that any engineer could do for themselves is to clearly communicate the purpose of each abstraction he creates.  An engineer's power can be measured by the number of people living in the castles he has designed.<p>Anyway, back to efficiency:  don't optimize prematurely. ;)",1203338958
118091,comment,117598,117686,0,0,willarson,,,"I think that portfolio's of software get messy in exactly the same way that joint research papers get messy: how do you figure out who did the work?<p>That said, I think you're right that in a large body of work you see the little eddies in the programmers mind, and thats an evaluative tool without comparison.",1203338913
118090,comment,117127,118055,0,0,DaniFong,,,"There seems to be some disagreement over what we mean by 'user interface' and 'user experience'. Those who downmodded you probably thought 'I like using YC news just fine thanks.'<p>When I hit the little ycn button on my dash, i'm immediately greeted with a list of interesting articles, flanked by comments that are worth reading. That's the most important part of the user experience for us, so here we stay.",1203338906
118089,comment,117938,118044,0,0,BrandonM,,,"Correct. :)<p>No, seriously, all the reasons you present a perfectly legitimate reasons for up/downvoting and are reasons that I have considered at various times.",1203338114
118088,comment,117949,117949,0,0,marvin,,,"I have been wondering about these claims that it is better to invest in an index fund than in an actively manged one. Certainly, the statistics show that on average, actively managed funds come out behind index funds. But the best actively manged funds have been able to beat their indexes for at least ten years, even in periods with negative growth.<p>Anyone else have any thoughts about this? It could, of course, just be that the best funds happen to get lucky every year for a decade. But that seems a bit simple to me, are there really statistical anomalies that are that big? It seems to me that if you are going to pick an actively manged fund, you better pick one which has a proven track record. Aren't most of these funds managed by businesses not preaching too loudly about their past performance?",1203337434
118087,story,,,1,0,gibsonf1,"Amazon.com seeks increased revenue promoting competitors' prices in ads",http://www.sfgate.com/cgi-bin/article.cgi?f=/c/a/2008/02/18/BU97V1RF2.DTL,,1203337432
118086,comment,117954,117981,0,0,marvin,,,"Currently Alexa ranks<p>1. Yahoo<p>2. YouTube<p>3. MSN Live<p>4. Google<p>This seems more than a bit fishy to me. Either Alexa is wrong or all of us are living in a bubble.<p><a href=""http://www.alexa.com/site/ds/top_500"" rel=""nofollow"">http://www.alexa.com/site/ds/top_500</a>",1203336993
118085,comment,117658,117976,0,0,xirium,,,"Occasionally, just very occasionally, great things happen on IRC. Unfortunately, it happens so infrequently. You'd get more success by concentrating effort elsewhere.",1203336590
118084,comment,118017,118062,0,0,davidw,,,"There are plenty of things that are not bogus at all, but are very bogus for given applications.",1203336016
