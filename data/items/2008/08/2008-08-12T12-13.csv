ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
273947,comment,273919,273923,0,0,michael_dorfman,,,"But is Jakob aiming for ""remarkable or memorable"", or for highly functional?<p>Put another way-- is there anything in Jakob's (admittedly Spartan) design that gets in the way of the content?",1218545921
273946,comment,273919,273919,0,0,pchristensen,,,"Just remember, Nielsen focuses on usability <i>investments</i> with positive (often large) ROI. Since NNG charges $40,000-$1,000,000+ for a consultation, you'd rather make MONEY off his recommendations than win beauty pageants.",1218545898
273944,comment,273887,273887,0,0,stcredzero,,,"One of the biggest, most consistent problems I saw as a Smalltalk consultant was simply <i>poor communication between development and users</i>.  There were inevitably at least two groups or levels of management in the same group between the users and development.  The result was always the game of ""telephone"" or ""gossip"" -- the one where you form a line and one person whispers a message to the next.  Information, filtered through too many minds always gets distorted in the process.<p>I think you can do requirements gathering.  But the right way to do it is to have smart actual users talking directly to smart actual devs.  Even here, there is a chance for misunderstanding, but at least it's not compounded.  (I suspect that the ""telephone"" game is an example of a nonlinear exponential process.)<p>Unfortunately, middle managers defending their personal fiefdom will sometimes actually tell you that it's specifically not going to happen.  In large organizations, upper management generally wants their representative to be the filter between the devs and the users, because software is generally an instrument of control.  (Through workflow, even if the app has no explicit workflow framework, but that's another story.)<p>Often in large organizations with a software project, devs and users will find some way to get together and talk face to face.  It's a sign.",1218545772
273943,comment,273919,273919,0,0,edw519,,,"<i>It is as if, while he is handing out the Oscars, he is wearing a plaid polyester suit.</i><p>lol, nice visual<p>I have actually turned down vendors selling CRM software because they didn't follow up with me properly.  Kinda ironic, huh?<p>The same thing applies here.  The old adage is, ""If you don't do the easy stuff well, why should I even listen to you when it comes to the hard stuff?""",1218545434
273942,comment,273830,273902,0,0,silentbicycle,,,"<i>Programming Languages: Application and Interpretation</i> is also good and free online. (<a href=""http://www.cs.brown.edu/~sk/Publications/Books/ProgLangs/2007-04-26/"" rel=""nofollow"">http://www.cs.brown.edu/~sk/Publications/Books/ProgLangs/200...</a>)",1218545377
273941,comment,273625,273625,0,0,aswanson,,,"I still have hope.  As long as people aren't posting game screenshots and cheat codes, there is hope.",1218545357
273940,comment,273887,273935,0,0,DanielBMarkham,,,"I'll second that call.<p>Formula for blog entry:<p>1) Pick an area that most newbies don't get (ie, requirements)
2) Blather on for a while about all the ways they are done wrong
3) Miss the point of the topic. In requirements, you list what you do, then do it. Instead confuse key terms, like ""user"" and ""customer"", or ""grill"" with ""be immersed in""
4) Try to be funny
5) Make sweeping conclusions that are obviously incomplete in the real world ""Code only for yourself"" -- so everybody with a need now has to have a programmer with the same exact need? Wow.
6) Throw in some generally accepted wisdom (""find something good and take stuff out"") as a way of tossing the crowd a bone
7) Profit!<p>As a general rule of thumb, if somebody comes to you with a common phrase from software engineering and makes a sweeping statement (a friend just blogged ""reviews are worthless!"") then they are either pulling your leg a little bit or don't know what the heck they are talking about. The usual method of attack is to describe how something is commonly done and then disparage the concept by way of association.",1218545328
273939,story,,,1,0,Anon84,"Wall Street Grids: The Cloud or the Data Center?",http://www.datacenterknowledge.com/archives/2008/Aug/12/wall_street_grids_the_cloud_or_the_data_center.html,,1218545262
273938,comment,273744,273744,0,0,ericb,,,"Thank-you YC and Anyvite for a very cool event!",1218545028
273937,story,,,4,0,martinsz,"Why Media and Corporations Should Allow Content to be Embeddable",http://www.web-strategist.com/blog/2008/08/12/why-media-and-corporations-should-allow-content-to-be-embeddable/,,1218545008
273935,comment,273887,273887,0,0,edw519,,,"I have read Steve's articles before with a certain amount of respect, but this time he addresses an area very near and dear to me, and all I can say about this one is:<p>I call bullshit.<p>This article was so full of it, the more I read, the more I had to change into higher waders.<p>As I normally do when responding to a post, I started pulling out the statements I wanted to respond to, highlighting them, and putting my response below.  After 10 minutes, I had the Magna Carta.  This is simply too much wrong with this article to respond in the usual way.<p>So instead, I'll just say this...<p>Get this and get this good, fellow hackers:  When anyone says ""analysis"" or ""requirements gathering"" is bullshit, there can only be one reason why: <i>they don't know how to do it</i>.<p>Sure, there are antecdotes and case studies of people building great software without talking to users first, but they are in the extreme minority, and anyone proposing doing this all the time is doing a disservice to his readers.<p>In order to find out what people need from software, you don't ""grill"" them, ""interview"" them, or ""role play"" (whatever that means).  You get with them and ""live their lives"" and suffer with them, understanding what they must accomplish, how they must do it, and what's stopping them now.  How do you do this?  Any way you can.  Change uniforms and shovel shit with them.  Do their job for a day.  Put them together in a room, feed them, give them beer (optional), and get them to bitch about it.  Identify <i>every single data element</i> related to their tasks.  Connect tasks and data to objectives (You may find that half of what they already do is a waste of time.)<p>In short, do <i>whatever it takes</i> to find out what you need to know to develop your software.  This is hard work.  Hardly anyone does it now, and relatively few have <i>ever</i> done it.  Steve Yegge certainly hasn't.  If he had, the data in this rant would have been very different.<p>Sorry, Steve, I normally enjoy your columns.  Do us all a favor and don't say something can't be done because you've never done it.  Next time, write about something you've already done.  Then we can all resume learning from you again.",1218544637
273934,comment,273887,273887,0,0,michael_dorfman,,,"He raises many good points in the course of the rant, but I think that ""only build for yourself"" goes a bit too far than most of us are willing to go.  I'd suggest, in the spirit of compromise, that ""gathering (and understanding) business problems"" is a better practice than gathering requirements, as user-proposed solutions (and the requirements which make them up) are often doomed to failure.",1218544578
273933,comment,273625,273709,0,0,aswanson,,,"Glad someone else has noted the karma inflation.  It used to be that to cross the 20 point threshold for a comment it had to be insightful.  Now the first snide reply to a rhetorical question an article poses gets 30+ easily.",1218544525
273932,story,,,1,0,rizal,"AJAX or DHTML powered application?",http://nzeff.com/2008/08/12/ajax-or-dhtml-powered-application,,1218544379
273931,comment,273830,273902,0,0,michael_dorfman,,,"Not to mention the SICP videos-- I use them as my standard ""Intro to Functional Programming"" recommendation.",1218544327
273930,comment,273920,273920,0,0,pius,,,"People should go easy on them.  I mean, hey, GMail's still in beta, right?",1218544249
273929,comment,273887,273895,0,0,ojbyrne,,,"More succinct, yes, interesting too, but I'd disagree with ""better."" It's like saying an apple is better than an orange.",1218544202
273928,comment,273885,273885,0,0,whalliburton,,,"I've been nomadic for about three years. Books stored at a friends place. All belonging in my backpack. Never looked back. Working all over the world, wherever and whenever, as long as there is a decent internet connection. I highly recommend this to anyone that feels weighted down with their things. Freedom in a certain sense.",1218544006
273927,story,,,11,3,Mazy,"Inspired by Popcorn",http://sethgodin.typepad.com/seths_blog/2008/08/thoughts-on-pop.html,,1218544003
273926,story,,,8,12,robg,"When should we consider the long-term ramifications of technological developments?",http://www.nytimes.com/2008/08/12/science/12ethics.html?8dpc=&pagewanted=all,,1218543871
273925,comment,273830,273856,0,0,silentbicycle,,,"Speaking as someone who really likes OCaml, I think the best parts about are the type system (very similar to Haskell's), the module system, and its explicit focus on being a pragmatic multiparadigm language. It has some gotchas* and tradeoffs, like every real language, but it's quite worth learning. It's particularly well-suited for projects that involve complex data structures (e.g. compilers, see: <a href=""http://flint.cs.yale.edu/cs421/case-for-ml.html"" rel=""nofollow"">http://flint.cs.yale.edu/cs421/case-for-ml.html</a>) or heavy high-level numeric computation. It would probably be quite good for game programming. Also, it does both bytecode and (Fast!) native compilation, so it's pretty portable.<p>* Many of which are due to the small community, e.g. somewhat poor documentation in many third-party libraries, few books in English (though the English translation of the French O'Reilly book is online as a free PDF, and quite good IMHO: <a href=""http://caml.inria.fr/pub/docs/oreilly-book/"" rel=""nofollow"">http://caml.inria.fr/pub/docs/oreilly-book/</a>). Also, it doesn't have operator/function overloading (outside of its OO framework), which can be annoying, though this seems to gain it near-instantaneous compilation, even with its remarkably thorough compile-time error checking.",1218543838
273924,comment,273731,273746,0,0,lethain,,,"Its full lineage is that it's an authorized republishing of my article at <a href=""http://lethain.com/entry/2008/jun/26/sparklines-in-javascript-with-sparklines-js/"" rel=""nofollow"">http://lethain.com/entry/2008/jun/26/sparklines-in-javascrip...</a> although the reposter reworded the title.<p>That said, it does mostly just take examples from the documentation, but the documentation is mine as well. ;)",1218543828
273923,comment,273919,273919,0,0,iamdave,,,"I'm with Hank here.  It's always been quixotically humorous that Jakob preaches on UI, but has a site that really has nothing remarkable or memorable about it.<p>Doesn't though, mean I disagree with his messages.",1218543756
273922,story,,,3,0,yangyang42,"A Q&A with David Scott Lewis, the mystery hacker who inspired the film ""War Games""",http://venturebeat.com/2008/08/12/a-qa-that-is-25-years-late-david-scott-lewis-the-inspiration-behind-the-film-war-games/,,1218543722
273921,comment,273731,273890,0,0,lethain,,,"Actually, it does work on IE, because it uses the excanvas library from Google. Most canvas operations can be emulated this way, only failing when a high level of performance is necessary (i.e. I made a tower defense game in the canvas and it played very poorly in IE, although it did play).",1218543502
273920,story,,,4,1,nreece,"We feel your pain, and we're sorry",http://gmailblog.blogspot.com/2008/08/we-feel-your-pain-and-were-sorry.html,,1218543499
273919,story,,,41,36,whalliburton,"UI Guru Jakob Nielson's Site Is Unreadable",http://whydoeseverythingsuck.com/2008/08/ui-guru-jakob-nielsens-site-is.html,,1218543325
273918,comment,273900,273900,0,0,babul,,,"Empirical evidence?",1218542896
273917,comment,273715,273789,0,0,pg,,,"Plus they have stellar customer service. We were talking to Kevin Hale last night (he's visiting Boston to advise the new startups), and he said that during the day their average response time to support emails is about 5 minutes.",1218542659
273916,comment,273885,273885,0,0,iamdave,,,"I'm going through this exact thing right now, after moving my things out of the old apartment I'm downsizing to a studio apartment on the barebones.  Less stuff = less clutter = less distraction = more productivity.",1218542657
