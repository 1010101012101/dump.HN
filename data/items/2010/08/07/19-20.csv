ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
1584194,comment,1582582,1584115,0,0,petercooper,,,"I had a look at similar numbers a few years back to back up a debate I was having and was surprised. The UK and US spend in the same order of magnitude per capita on <i>public</i> healthcare.<p>Sadly, though, this isn't good. The US's healthcare budget covers a minority of the population whereas the UK's covers almost everyone. The only reason the US's budget is inflated is due to the extreme inefficiencies and price gouging that are rampant in the US healthcare market.",1281211183
1584193,comment,1584005,1584005,0,0,rick_2047,,,"Well this is good but what I would really like (and was just thinking about since yesterday) would be the ability to follow a conversation. Some time on an article, the a particular thread starts to become much more interesting than the story itself. At those times (and it happens very often) I wish HN would allow me to ""watch"" that thread. Sure I can bookmark the link of the thread, but its just a pain to maintain that. And also I usually forget to open it again",1281211182
1584192,comment,1583860,1583860,0,0,wehriam,,,"What motivates an attack like this?",1281211092
1584191,comment,1583311,1583923,0,0,shawndumas,,,"The link includes other responses from other people and about other articles so just the link may have confused people.<p>As to the attribution; noted -- thanks.",1281211077
1584190,comment,1582402,1582639,0,0,WalterBright,,,"In my college experience, I did the most learning when working my way through the problem sets with my fellow students. It would have been an awful lot harder without that (and a lot less fun). One would have to be fairly motivated to succeed alone in a room watching a video over the internet.",1281211076
1584189,comment,1584005,1584155,0,0,fgf,,,"I don't see this as creepy at all, have you never checked PGs latest comments or that of a commenter with interests/opinions you share?<p>anyway, thank you for making this!<p>ps. I'd prefer rss",1281211076
1584188,comment,1584105,1584105,0,0,tnorthcutt,,,"Interesting idea, but not exactly accessible for lots of mobile devices.  Pretty bloated compared to image-based captchas as well.",1281211075
1584187,comment,1583816,1584082,0,0,DougBTX,,,"> in this circumstance C# lets you write many methods, use generics, or (now I believe) use dynamically typed variables.<p>Or you could be explicit about the interface you are writing the duck-typed code against. The problem here is that you can't assign an interface to an existing type, and adding interface declarations results in more code. It will be interesting to see whether this functionality (extension interfaces and inferred interfaces) makes it into C# in the next 5 years. My guess is that it's functionality which is possible to add, but we're not there yet.",1281211075
1584186,comment,1583816,1583816,0,0,chc,,,"The reason most people choose dynamic languages is because the most popular static languages have fairly weak and unhelpful static type systems. The benefit of confirming that a variable is an int isn't worth the effort needed to support that analysis in most static languages, and where it is we can shove the trouble into unit tests.<p>C# is a little better than the big 3 (C, C++ and Java), but you still trade off between helpfulness and verbosity. F# is a lot better IMO, but it's still fairly obscure, so of course not many people are going to be using it.",1281211074
1584185,comment,1584005,1584171,0,0,limmeau,,,"And the service is just a convenient abbreviation for having <a href=""http://news.ycombinator.com/threads?id=andymoe"" rel=""nofollow"">http://news.ycombinator.com/threads?id=andymoe</a> permanently open in a separate browser window.",1281211041
1584184,comment,1583816,1584000,0,0,therockhead,,,"See Scala for a concise static typed language.",1281211021
1584183,comment,1583052,1583884,0,0,Zev,,,"<i>So, thinking out loud here, is there a place for an academic hostel? A low-rent complex with dormitories...</i><p>I'd say that cheap living, in exchange for lacking comforts (privacy, being able to cook your own meals, etc) is the sort of thing that only works when you're in your late teens/early 20's. Which is, unsurprisingly enough, when most people who go to college/university are attending.<p>And to be honest, as someone in his early 20's, it gets pretty tiring after a while. I'm all for low rent and being around great people. But, I'd rather pay a bit more for those comforts and still be around previously mentioned (or other) great people.",1281211010
1584182,comment,1583816,1584064,0,0,therockhead,,,"Regarding tooling, Java has been massive investment in this area compared to ruby/python etc which is one of the reasons for it good IDEs.",1281210934
1584181,comment,1583557,1583817,0,0,petercooper,,,"It didn't kill it. It did something worse. It withdrew enough resources and manpower from the project to effectively kill it without saying as much.<p>Now it's obvious why IronRuby was relicensed under the Apache License just a few weeks back.. no-one would have bothered picking up the reins if they hadn't.",1281210924
1584180,comment,1582960,1583636,0,0,ScotterC,,,"Looks like we're headed down a path that reflects our philosophical outlook more then anything else. To each his own.",1281210920
1584179,comment,1583557,1583867,0,0,petercooper,,,"It's not exhaustive, but two years ago I asked ""the community"" what they thought on Microsoft and Ruby and.. <a href=""http://www.rubyinside.com/is-windows-a-first-class-platform-for-ruby-823.html"" rel=""nofollow"">http://www.rubyinside.com/is-windows-a-first-class-platform-...</a><p>At Euruko 2008, I chaired the evening panel and brought it up too. A room of 400 people went to silence when I asked if Windows support was considered important to Rubyists.",1281210829
1584178,comment,1583327,1583577,0,0,regularfry,,,"That depends on the book. I find large, or tightly-bound, books to be very difficult to read, precisely because their physical form is difficult to handle, and therefore distracting.",1281210773
1584177,comment,1583717,1583717,0,0,phaedrus,,,"Many years ago, when I was first learning game programming, I insisted on implementing everything myself, including low level 3-d math and writing to video memory manually.  Now, I'm working on a new game and I've created a script-binding technology that makes it very easy for me to incorporate third party C/C++ libraries into the game's scripting engine, like the way the Borg assimilates technologies.  So I've had experience at both extremes of NIH.<p>Here's what I've found:  using someone else's library is NOT faster than implementing the code yourself just to do a certain task at hand.  The code you write for yourself does no more than you need it to, and you implicitly understand how it works.  When you're trying to use someone else's library to accomplish a simple task at hand, you have to learn all the library's concepts tangentially related to what you want to do, and then you can spend days tracking down a silly bug because you misunderstood some small detail of what the library is doing (i.e. the library violated the law of least astonishment).  At best, it takes THE SAME time to learn/debug code with a dependency as it does to implement it yourself, provided you're a good programmer.<p>But, I still recommend learning to reuse code from elsewhere.  The benefit of hooking up to and learning a third party framework or library comes after the task at hand, which is that once you've made the initial investment, incrementally enabling other features the library provides begins to cost less and less than reimplementing them yourself, because the initial investment of learning and debugging the foreign code begins to pay back.<p>So you have to look at it as being like an investment which loses money in the short term but has the potential for earning back interest in the long term.<p>But here's the most important reason to drop NIH and embrace code reuse:  Do you want to push the boundaries of what is possible?  If you envision program-space as the set of all possible programs, it must be clear that there are programs on that space that lie outside what one team or one man can write by himself in a lifetime.  If all you're doing is accomplishing one task at hand, by all means make the cost-benefit analysis and choose reuse or not pragmatically.  But if you're interested in pushing the boundaries of the state of the art, then to reach the ""interesting programs"" that lie in program-space outside the boundaries of what one man can write in his lifetime, you must do it by extending the work of others who have gone before you, just as all progress in science is accomplished.",1281210747
1584176,comment,1583510,1583975,0,0,tptacek,,,"<i>To me, if I know that Dave intentionally named an entire software project just to say ""Fuck You"" then his opinions don't matter.</i><p>Sorry, Zed, but that's simply not true.",1281210737
1584175,comment,1583806,1583831,0,0,hga,,,"Understood and that agrees with my much more distantly acquired picture of Japan.<p>What I've gathered is that Japan was divided into a low risk/high gain segment (the 1/3 or so who were salarymen or above) and a high risk/low gain segment (pretty much the rest).<p>If that picture of some decades ago is true, what has and does it mean as that path to the future (for those who could make it) got and continues to get increasingly closed off?<p>Great economic catastrophes tend to result in changes of social contracts and resulting secondary effects.  Surely some, perhaps a lot of that has been happening in the last couple of decades?<p>(I do like your Twilight analogy. :-)",1281210641
1584174,comment,1583873,1584113,0,0,abalashov,,,"It is truly a case of what the reader brings to the text, in this case, I suppose.<p>My habitual optimism about people's reasonableness led me to assume that Greenwald was being a bit facetious with the apocalyptic tone and/or ""decline of empire"" talk, in order to draw attention to the fact that the fiscal crisis is more acute than many believe or aggregate government statistics might suggest, in a ""death by a thousand cuts"" kind of way.<p>He also choose the examples that he did (complete axing of public transit, for example) to touch on things generally regarded as improbable in a country considered a) wealthy b) highly economically and technologically advanced c) generally providing a First World-normative level of infrastructure, public services and quality of life to a majority of its citizens.",1281210593
1584172,comment,1583816,1584099,0,0,Rusky,,,"Hopefully more concise statically-typed languages will have the benefits of being easy to learn and build up their own grassroots communities.",1281210500
1584171,comment,1584005,1584168,0,0,andymoe,,,"On the other hand I don't think you should have any expectation of privacy in ""public places"" on the internet. That's just foolish.",1281210453
1584170,story,,,1,0,abraham,"On Facebook, Google, and Our Evolving Social Mores Online",http://battellemedia.com/archives/2010/07/on_facebook_google_and_our_evolving_social_mores_online.php,,1281210421
1584169,comment,1583673,1583959,0,0,dctoedt,,,"None of the comments I upvoted were in any of those categories -- at least not IMHO, and therein lies the problem, it usually comes down to a matter of opinion.<p>As long as PG doesn't separately state upvotes and downvotes, a better answer might be to reply to comments you don't love with ""RTO"" (restates the obvious) or ""ANTD"" (adds nothing to discussion).",1281210407
1584168,comment,1584005,1584155,0,0,hugh3,,,"Except that at least on facebook or twitter you know when someone is following you, and have the option to block them.",1281210388
1584167,story,,,1,0,ewjordan,"Nontransitive Dice",http://en.wikipedia.org/wiki/Nontransitive_dice,,1281210381
1584166,comment,1583940,1583940,0,0,limmeau,,,"Have you thought about adding a mode in which anonymous users can just start using the service (but their edits are lost when they forget the URL), like Etherpad used to have?<p>When I read that I had to subscribe just to try it out (just to see if it does anything I can't also have with a personal wiki or rememberthemilk) and that it would be $5/mo anyway, I lost interest.",1281210380
1584165,comment,1583816,1584134,0,0,therockhead,,,"I dont believe Duck typing and type inference are really the same thing.For duck typing the type is unimportant, it only cares about the operation, types matter for type inference. The  behavior of structural typing in languages such as Scala  are is closer to Duck typing IMHO.",1281210377
1584164,comment,1583510,1583510,0,0,Confusion,,,"<p><pre><code>  I spent the last few days figuring out how to go about\n  doing something that could be ""superpoll"" [..]\n</code></pre>\nThere is not yet any reason to assume Mongrel2 will improve from superpoll. For instance, if ATR > 0.6 only happens in low volume situations, epoll suffices. When ATR < 0.6, you need epoll for better performance. In both regimes, epoll is then either an acceptable or the best solution.<p>There is no experimental evidence to suppose Mongrel2 servers will operate in the ATR > 0.6 regime, without epoll being able to handle the volume anyway. Other implementers of webservers aren't stupid or shortsighted either and it seems likely that superpoll has occurred to a few of them, but that they found it wouldn't improve matters. As long as you don't know the ATR in practice, it seems premature to start on abstractions and doing the experiments in this blogpost?",1281210356
1584163,comment,1583623,1583993,0,0,da5e,,,"Interesting. I do a bastardized form of shiatsu. Pressing on my eyebrows etc with thumb and forefinger in a pattern. That wakes me up.<p><a href=""http://en.wikipedia.org/wiki/Shiatsu"" rel=""nofollow"">http://en.wikipedia.org/wiki/Shiatsu</a>",1281210345
1584162,comment,1583816,1583882,0,0,Rusky,,,"You can keep type information at runtime and still be statically typed, a la the CLR.",1281210340
1584160,comment,1583816,1583882,0,0,chc,,,"Maybe I'm missing something, but it seems like having type information available at runtime is orthogonal to static type checking.",1281210297
1584159,comment,1583623,1583963,0,0,_prototype_,,,"Man, for a slight second, you really put the fear of god in me.  Thank goodness your link was bogus, I can't live without my pr0n!",1281210268
1584158,comment,1584032,1584032,0,0,petercooper,,,"I don't think it even depends on specific techniques as those mentioned. If you're lacking direction, it's possible to succeed merely by constantly throwing things out there and seeing what sticks.<p>I kept a personal blog for years (something I've only just got back into after a few years out) and people asked why I bothered. I had little better to do with my spare time. Worked out, though, I got a book deal from it and for 2 years made $3000+ per month on Adsense from a few posts where I reviewed different route finder services. Totally randomly, totally beneficial. Some people criticized my tweeting years ago - now it's really paying off.<p>The worst thing you can do, IMHO, is nothing. Unless you have something you <i>should</i> be focusing on, keep throwing things out there, keep trying things out, and something should, eventually, stick and give some pay back.",1281210265
1584157,comment,1583623,1583977,0,0,da5e,,,"Good stuff!\nBut just for fun:\n1. Sitting on your ass programming for long periods of time develops brain power too.\n2. We've held on tightly to our lizard brains too.\n3. Faulty wiring can be creative if it's faulty in the right way.\n4. We do pay attention to annoying boring things.\n5-6. Imagine to remember\n7. Sometimes it takes an all-nighter to get your brain over the hump.\n8. True, although not always a bad way.\n9. Or isolate to concentrate and build myelin.\n10. Only if you're a visual learner.\n11. Viva la difference\n12. We are also inveterate couch potatoes.",1281210141
1584155,comment,1584005,1584005,0,0,andymoe,,,"Sort of a creepy idea. But no more so than Facebook or twitter I guess. I long for the days when people, myself included, hid their real contact info and used a pseudonym.<p>edit: Also, the pencil's pixilation is distracting and I think you should get rid of the alpha effect that goes away when hovering over the logo. (Safari 5.0.1)",1281210049
1584154,comment,1582402,1583330,0,0,lsc,,,"if becoming successful doesn't qualify you to design processes to make other people successful, what does?",1281210035
1584153,comment,1583717,1584033,0,0,bad_user,,,"> <i>Source control (which, big surprise, MS handles via many in-house tools)</i><p>Why is it a surprise? They sell developer tools. They sell infrastructure.<p>Actually it was kind of shitty on their part for not using Visual SourceSafe.",1281210034
1584151,comment,1583816,1583967,0,0,prodigal_erik,,,"Compiling in a language with static typing is a lot faster than running (not to mention writing!) unit tests to achieve 100% path coverage in a language without static typing.<p>It's also fast enough that I stopped caring years ago. Don't get me wrong, Eclipse is agonizing when it locks up while ""helping"" me, but it's not due to compiling (it happens just as often when I haven't made any changes).",1281210009
1584150,comment,1583860,1584130,0,0,tptacek,,,"I think you're thinking of Prolexic, and my recommendation is that you take any of their claims with a heaping helping of salt. Things may have changed in the 5 years since I've totally forgotten everything I knew about DoS mitigation, but it wasn't the case then that you could simply black hole China to evade them.<p>A more common mechanism used by real networks to mitigate these attacks in production is to pinpoint the <i>target</i> of the attack and offramp its traffic in the ISP core to a ""regional scrubbing center"" where advanced filtering tools (for instance, packet filters that can handle ACLs with high tens of thousands of terms) can try to sort through the crap.",1281210000
1584149,comment,1583510,1584009,0,0,skorgu,,,"I'm (internally) trying to be equitable to all sides in this whole poll/epoll deba(te|cle) but really it does seem that many, many people aren't actually reading the articles they purport to be commenting on. It's frustrating and disappointing.",1281209959
1584148,comment,1580721,1583293,0,0,Cabal,,,"Pennies on the dollar <i>after</i> the audience had already left. I'd call that dying.",1281209953
1584147,story,,,248,36,petercooper,"I'll save you the time of getting an MBA..",http://www.reddit.com/r/programming/comments/94hab/is_mba_important_for_a_programmer_to_start_a_tech/c0be4h0,,1281209924
1584146,comment,1583860,1583984,0,0,tptacek,,,"From 2001-2003 I led development on Arbor Peakflow DoS, which (when I left, at least) was far and away the most popular tool tier-1 ISPs used to manage these kinds of attacks, and my the experience I can relate is:<p>* These attacks happen with shocking frequency (the major incentive ISPs have to mitigate them is <i>not</i> angry customers, but rather the drag it creates on their third-tier engineering staff to hunt down DDoS sources and craft ACLs for them)<p>* There is actually not a whole hell of a lot you can do about them, even if you light up a whole tier 1 core network with mitigation tools. At the end of the day, a well-crafted DDoS attack looks pretty much identical to normal traffic; if you can black-hole China to defeat an attack, it wasn't very cluefully done.",1281209843
1584145,comment,1583717,1584048,0,0,joe_the_user,,,"Ideally the code produced by an organization with coding standards should be more accessible than good written to different standards. Whether that happens, of course, is another question.",1281209785
1584144,comment,1583816,1583816,0,0,drblast,,,"If you're a new programmer, remember that most programmers aren't trying to figure this out.  They're already substantially invested in the language they chose years ago, with a large base of knowledge and already written code.<p>Static vs. dynamic typing is nearly orthogonal to my programming language choice.  Much more important to me are functional features.  And all other things being equal, I'd rather have the flexibility of the dynamic languages than the performance and compiler-checking of static ones.<p>Haskell has some killer features that make me want to use it more.  Static types are not on the list.<p>Maybe it's because all of my projects are small and I don't have to program defensively, but I've never been bitten by a type error that took anywhere near as long to fix than I would have spent using a static type system.<p>I'm sure in some circumstances there are dynamic language projects that are plagued by type errors, but in my case static typing is a solution looking for a problem.",1281209783
1584143,comment,1584005,1584005,0,0,die_sekte,,,"Chrome 5.0.375.125 on Mac Snow Leopard: Some kind of layout error. The right part doesn't float properly or something. I'm not sure what causes this.",1281209772
1584142,comment,1583623,1583759,0,0,da5e,,,"I like that: ""practice makes permanent"". Also ""perfect practice makes perfect"" although lousy practice is pretty good for developing ""perfect practice."" And turning practice into ""your practice"" in the yogic sense is good for the brain too. Routine doesn't have to be routine.",1281209700
1584141,comment,1583816,1583816,0,0,Rusky,,,"I only use dynamic languages for reasons other than their dynamism. Lua is good because it's extremely small and easy to embed, ActionScript because it's the language of the Flash platform, etc.<p>Static typing can be just as concise as dynamic typing, and sometimes more. For example, Haskell's Maybe monad combined with do-notation lets you write code that has null checks where required without uglifying the code.<p>The benefits of static type checking haven't really been fully realized in popular languages. Type inference is almost mainstream, but you can go a lot farther with non-nullable types, structural typing, dependent typing, etc.",1281209663
1584140,comment,1584125,1584133,0,0,igravious,,,"The inevitability of that act of vandalism/creativity on any new virgin space is unavoidable.<p>(I drew a house. <i>sigh</i>)",1281209638
1584139,comment,1583816,1583816,0,0,thibaut_barrere,,,"I do both C# and Ruby on a regular basis, and well even with all the sugar, for most of the job, C# is nowhere as concise as Ruby.<p>I started using C# in 2001 and Ruby in 2004, and even after several years, I find I'm a <i>lot</i> more productive using Ruby.<p>This is my main reason - I can tackle projects with 2x or 3x less people on the team (which means I can also tackle alone projects vs. building a team of 2 or 3).<p>As well, I find dynamic languages more ""fluid"" to use.",1281209619
1584138,story,,,1,0,nirmal,"Don’t bank on KMart’s $150 Augen tablet getting Android Market access",http://www.liliputing.com/2010/08/dont-bank-on-kmarts-150-augen-tablet-getting-android-market-access.html,,1281209605
1584137,comment,1582402,1583545,0,0,dagw,,,"Don't get me wrong, recorded lectures are great.  I love the SICP lectures and I'm really happy the web as given me the opportunity to see them.  However if I was given the choice I'd far prefer to have had the chance to be there live and discuss the material with the lecturers, and if the lecturers at my university had said ""I'm not going to given any lectures, since I recorded them a few years ago"" I'd feel very ripped off.  At the end of the, as good as recorded lectures are, they'll never replace ""the best"" teaching experiences.",1281209575
1584136,comment,1583494,1583928,0,0,viraptor,,,"I agree. I've been many times in situations where (smart) people said ""this is ok, this situation is very simple to manage with threads"", then discovered some deadlocks after a week. It <i>is</i> like juggling chainsaws [1]. I try very hard to avoid multithreading - most of the high-performance code I write is single threaded by default. I know MT programming enough to avoid many problems, but also know it well enough to see it's a very costly trap, if it can be avoided at all...<p>[1] <a href=""http://www.thecodist.com/article/writing-multithreaded-code-is-like-juggling-chainsaws"" rel=""nofollow"">http://www.thecodist.com/article/writing-multithreaded-code-...</a>",1281209556
1584135,comment,1583860,1584121,0,0,vkdelta,,,"If we want, we can :)",1281209537
1584134,comment,1583816,1584082,0,0,jganetsk,,,"But statically typed languages have duck typing too. Except it's called type inference. And F# has it.",1281209473
1584133,comment,1584125,1584125,0,0,macmac,,,"First collaborative masterpiece - i giant penis.",1281209466
1584132,comment,1584032,1584032,0,0,wuputah,,,"While the article makes a point that I'm inclined to agree with after two years of running my own business, I stopped reading when they mentioned that World of Warcraft is a game of ""swords and hobgoblins."" World of Warcraft does not have hobgoblins. Ok, well actually, they're being added in Cataclysm, but I doubt the author knew that.<p>Then again, maybe my downfall was too much World of Warcraft.",1281209434
1584131,comment,1583860,1584119,0,0,dnsworks,,,"50gbps is pretty massive. Clearly somebody did something horrifically insulting to China like mention that they could maybe possible consider treating Tibet a little bit more humanely and stop turning it into one big whorehouse.. make a statement like that, and all of china ddos's you.",1281209254
1584130,comment,1583860,1584121,0,0,dnsworks,,,"There's an anti-DDOS service out there, Progent or something. Part of their solution adds all of APNIC's ip addresses into your router's bogon list when you're under attack. It turns out for most DDOS's if you turn off china, the attack just ends.",1281209189
1584128,comment,1583362,1584083,0,0,Twisol,,,"I'm sorry if I wasn't clear, I was thinking about more abstract things like web development and technologies. I just happen to use Ruby for Dishes, but it's Dishes and projects like it that I'm looking to talk with people about.",1281209094
1584126,comment,1583816,1583865,0,0,Rusky,,,"C and C++'s type systems aren't nearly as useful as they could be. Haskell's type system, for instance, makes nullable types non-default, and forces you to catch any nulls while still being easy to read- the Maybe monad.<p>This kind of thing - a complete absence of NullPointerExceptions and segfaults - is what's great about static type checking.",1281209069
1584125,story,,,8,3,igravious,"Multiuser Sketchpad in HTML5 (Go nuts)",http://mrdoob.com/125/Multiuser_Sketchpad_HTML5,,1281209049
1584124,comment,1582231,1582231,0,0,jayliew,,,"I'm just curious, is anyone looking at the board for a pattern? Shouldn't they have caught on this behavior sooner and taken action to rectify it before this big pile of public mess?",1281209037
1584123,story,,,54,12,kenshi,"Minecraft: 331132 registered users, of which 50793 (15.33%) have bought the game",http://minecraft.net/stats.jsp,,1281208950
1584122,comment,1583816,1583949,0,0,Rusky,,,"Static typing can have the benefits of implicit interfaces without the danger of runtime errors- look at Go's structural typing.",1281208864
1584121,comment,1583860,1583984,0,0,drivingmenuts,,,"Too bad we can't just permanently sacrifice China.",1281208840
1584120,comment,1583673,1584093,0,0,gnaritas,,,"Where exactly did I imply that?  I was merely pointing out the motivations of the patent system.  The system is not necessary for companies to be economically viable as they've been doing that with trade secrets long before patents were around.  The patent system was meant to unlock those trade secrets for the benefit of the public, it was never about the inventor's best interests.",1281208826
1584119,comment,1583860,1583860,0,0,cliffchang,,,"Can anyone give an idea of how large, compared to other DDOS attacks, 50 GBPS is?",1281208814
1584118,story,,,1,0,sallywu,"Classic, ""Yahoo: goodb(Y)e""",http://web-poet.com/2010/08/07/twl-classic-yahoo/,,1281208737
1584117,comment,1583816,1584082,0,0,Rusky,,,"object.responds_to?(:method_name) is just a run-time variation on generics constraints. C# could use a bit more work on its syntax there, but something like go's inline interface definitions would make it just as nice as Ruby.",1281208725
1584116,comment,1583557,1583857,0,0,borisk,,,"No they don't. At least those versions which come from Microsoft and not from your favorite torrent tracker/IT department. All Windows relesead after 2003 contain the .NET framework Common Language Runtime, but compilers are part of the SDK.",1281208699
1584115,comment,1582582,1583534,0,0,mmphosis,,,"<a href=""http://en.wikipedia.org/wiki/United_Kingdom_budget"" rel=""nofollow"">http://en.wikipedia.org/wiki/United_Kingdom_budget</a><p><pre><code>    190 social protection\n    105 health\n    ---\n    295 total health & social\n     38 defence\n    ===\n    519 total\n</code></pre>\npopulation 62,041,708<p><a href=""http://en.wikipedia.org/wiki/United_States_federal_budget"" rel=""nofollow"">http://en.wikipedia.org/wiki/United_States_federal_budget</a><p><pre><code>    678 social security\n    676 medicare & medicaid\n    ---\n   1354 total health & social\n    782 defense\n   ====\n   3518 total\n</code></pre>\npopulation 309,921,000",1281208680
1584114,comment,1584032,1584032,0,0,abalashov,,,"""Increasingly?""<p>While new technology has certainly magnified the effects of this dynamic and enhanced its global character, as well as lowered its cost, and granted new conventions, mannerisms and particulars to our experience of it, this does not strike me as a particularly novel thesis, in the grand scheme of things.<p>Businesspeople - invariably, of the ""people person"" variety (a seeming requirement for the transaction of commerce) - have always known personal connections and seemingly random events to be the fabric of marketing and selling, and have been doing it for as long as labour specialisation has been around, it seems to me.  Who doesn't know that meeting people and swapping information increases the statistical incidence of striking some kind of deal with someone, somewhere?<p>Sure, it's been explicitly codified in management lore in recent times with given buzzwords like ""networking"" and ""mixers,"" to be sure.  This is part of the ongoing tendency by bureaucratic management thought to take the timeless commonsensical narratives of the small proprietor/artisan/craftsman/merchant and extract from them some abstract unifying thread, some principle, some Powerpoint-worthy pithy platitudes to which the audience instinctively relates and shells out for at $300/hr because of the psychological positive psychological feedback it provides, that sense of empathic affirmation.  It's that warm feeling that what one has always known to be true is now also Officially Certified as true by an awe-inspiring, credibly gigantic intra-industrial actor, and perhaps has even had a proper noun-phrase bestowed upon it, or, assured a permanent place in some kind of canon through elevation to the status of a bona fide <i>methodology</i>!<p>This is how the management consulting arms of the Big 4 make their money, among others -- by packaging up this kind of vapid crapola.  Has anyone yet been invited to the new webinar, ""Focus on Dextrous Fingers: The Central Touchstone to Success in 21st Century Piano-Playing?""<p>It seems self-evident that one maximises visibility and draws on a sense of personal partisanship as well as accumulates valuable information in the course of hanging out with members of one's target market as well as one's peers/partners/complements.  I would say this is a truism almost worthy of anthropological generalisation in connection with the history of trade.",1281208610
1584113,comment,1583873,1584046,0,0,tptacek,,,"Then my remark on the article is that it's ironic how ahistorical Greenwald can manage to make an article that's premised on a fundamentally historical comparison (the declines of empires, our ""empire"" being the most recent).<p>What might Greenwald have thought about the Vietnam war, in which many multiples as many Americans died; a war in which our government <i>overtly</i> deceived the country into entering, in which we conceded southeast Asia to Communism? Not two decades later Communism collapsed, leaving the US as an unchecked dominating world power.<p>What might he have thought about the Great Depression? Just a decade later, the US tooled up a woefully underarmed military and won a two-front world war.<p>Surely Greenwald would have decried the '50s red scare as the end of the Constitution and the rise of ideological mob rule.<p>History is filled with ups and downs, and compared to previous dips in our history, it seems almost comical to suggest that 2010 is the beginning of the end times.",1281208497
1584112,comment,1584005,1584005,0,0,zaveri,,,"<a href=""http://nasr.ath.cx"" rel=""nofollow"">http://nasr.ath.cx</a>",1281208461
1584111,comment,1584073,1584073,0,0,makmanalp,,,"For the record, this is the same Boehm of boehm-gc the garbage collector.",1281208457
1584110,comment,1582130,1582932,0,0,scrame,,,"True, but to say the book is just Godels theorem is underselling it. At its most clinical it is a survey of various sciences, at its essence it is an intuitive theory. The importance of Godels theorem is that an intuitive notion can be proven true in a mathematical framework, as opposed to the piles of bullshit pseudoscience new-age stuff saying Heisenburgs uncertainty principle makes everything subjective.",1281208427
1584109,comment,1583816,1584000,0,0,Rusky,,,"That is most definitely Java's fault for lacking good abstractions. Try Haskell or C#- much higher content:code.",1281208415
1584108,comment,1584005,1584005,0,0,ashleyw,,,"Clickable: <a href=""http://nasr.ath.cx"" rel=""nofollow"">http://nasr.ath.cx</a>",1281208408
1584107,comment,1583589,1584101,0,0,CamperBob,,,"Probably not.  The zipfile's contents can still be listed if the file has a password, just not extracted.",1281208373
1584105,story,,,1,1,makmanalp,"NuCaptcha: Captcha with flash.",http://mashable.com/2010/08/06/nucaptcha/,,1281208274
1584104,comment,1582402,1584068,0,0,gnaritas,,,"Sure, it's helpful, but understanding the implementation of a particular machine isn't science, it's engineering.",1281208270
1584103,story,,,2,0,matt1,"Comparing Recurly, Spreedly, and Chargify",http://www.mattmazur.com/2010/08/comparing-recurly-spreedly-and-chargify/,,1281208266
1584102,comment,1582522,1583675,0,0,endtime,,,"Maybe not Google...",1281208258
1584101,comment,1583589,1583700,0,0,avar,,,"Can you send them a password protected .zip file as a workaround?",1281208247
1584100,comment,1584032,1584032,0,0,dmillar,,,"Our first reseller agreement was started at a stop light. Guy had medical imaging stickers on his car, so I struck up a brief conversation and followed up.<p>This is an often-overlooked component of traction. 80% of our early successes have been from chance encounters, either via web, or physical. Just making oneself available for chance encounters (e.g. coding at a cafe) can greatly increase your chances of traction, IMO.",1281208246
1584099,comment,1583816,1583816,0,0,cageface,,,"Dynamic languages win in the worse-is-better department. They're easy to implement and easy to learn. You can get a beginner up to speed in a language like Ruby or Python very quickly. This creates a grassroots effect that builds libraries and community around the language because many of those beginners gradually become experts. Dynamic languages are also generally more expressive.<p>There are definitely some downsides too though, and static languages have gotten a lot better in the last ten years. After many years of working almost exclusively in dynamic langs I'm enjoying having the help of the compiler again in the Scala hacking I've been doing.",1281208228
1584098,comment,1583816,1584007,0,0,makmanalp,,,"If you're referring to Haskell and the likes, sadly they're not nearly as prevalent.",1281208222
1584097,comment,1582522,1582748,0,0,endtime,,,">There are many better places to work than Microsoft. The place seemed truly pathological to me.<p>Have you worked there?  I was there last summer and I'm actually not convinced there <i>are</i> many better places to work.",1281208208
1584096,comment,1583673,1583900,0,0,gaius,,,"You can't patent an idea - only an implementation.",1281208206
1584095,comment,1583717,1583898,0,0,nostrademons,,,"""If the Excel team's compiler and widgets were so much better, why wasn't the rest of MS re-using theirs instead?""<p>It's quite possible they were specifically optimized for Excel.  Particularly with compilers and widget libraries, you can get much better performance and ease-of-use if you know the precise usage patterns.",1281208198
1584094,comment,1583019,1584010,0,0,Groxx,,,"IMDB says ""no"": <a href=""http://www.imdb.com/title/tt0088846/"" rel=""nofollow"">http://www.imdb.com/title/tt0088846/</a><p>Battle!",1281208168
1584093,comment,1583673,1584028,0,0,gaius,,,"<i>The goal of the patent system is make the information public so all of mankind can benefit from it and the knowledge doesn't die with the inventor</i><p>If you have a mechanism other than patents that makes it economically possible for private organizations to engage in capital-intensive R&D <i>and</i> make the information public, let's hear it.",1281208157
1584092,comment,1583623,1583623,0,0,sayemm,,,"Great video by Google Tech Talks here: <a href=""http://www.youtube.com/watch?v=UyPrL0cmJRs&feature=channel"" rel=""nofollow"">http://www.youtube.com/watch?v=UyPrL0cmJRs&feature=chann...</a><p>Mentat Wiki has a ton of interesting articles/tips: <a href=""http://www.ludism.org/mentat"" rel=""nofollow"">http://www.ludism.org/mentat</a><p>And the Memoriad Competition Software is awesome and challenging; it's great practice every day: <a href=""http://www.memoriad.com/memoriadsoftware.asp"" rel=""nofollow"">http://www.memoriad.com/memoriadsoftware.asp</a>",1281208126
1584091,comment,1583717,1584003,0,0,nostrademons,,,"You can substitute tests for design - once you already know what the design is.  It doesn't work quite so well when you have no clue what the overall picture is going to look like.<p>Of course, this is like saying that you could've predicted the future with the benefit of 20/20 hindsight.",1281208092
1584090,comment,1583557,1583557,0,0,borisk,,,"Such nonsense. Bill Gates' Microsoft would've put hundreds of developers on IronRuby and ensured it was the fastest and the most feature rich implementation there is. Just like they did with C++,  Java  and JavaScript.<p>BTW Windows is completely useless for any serious Ruby development/hosting. There are a ton of bugs in networking, threading, GC.",1281208090
1584088,comment,1582130,1584044,0,0,scrame,,,"Holy shit, you nailed it. Now I'm thinking of Metamagical Themas as an early 80's new wave album.<p>(And GEB is all about barouque symphonies and Don Knuth)",1281208070
1584086,comment,1583873,1583961,0,0,abalashov,,,"I don't think the article goes so far as to blame the rich categorically, per se.<p>It does suggest that the crisis is ""elite-caused"" in one sense or another:  do you really think this is an unreasonable thesis?",1281208045
1584085,comment,1583494,1583494,0,0,haberman,,,"Please read the Linux documentation on memory barriers instead of this:\n<a href=""http://lxr.linux.no/linux+v2.6.35/Documentation/memory-barriers.txt"" rel=""nofollow"">http://lxr.linux.no/linux+v2.6.35/Documentation/memory-barri...</a><p>The Ridiculous Fish guy is clearly very smart and writes lots of interesting stuff, but this is obviously not his area of expertise, and you can't afford to learn from someone who has any confusion on the topic.<p>In his conclusion he makes what I would consider a highly misleading comparison between locks and memory barriers.  He calls locks ""tanks"" (""powerful, slow, safe, expensive, and prone to getting you stuck"").  About memory barriers he says: ""Memory barriers are a faster, non-blocking, deadlock free alternative to locks. They take more thought, and aren’t always applicable, but your code’ll be faster and scale better.""<p>But memory barriers aren't an alternative to locks at all.  Locks let multiple threads <i>write</i> to shared memory.  Memory barriers by themselves aren't very useful; most lock-free algorithms need atomic operations like compare-and-swap, which are comparable in cost to locks (indeed, locks are implemented in terms of atomic operations).",1281208042
1584084,comment,1581424,1581424,0,0,devonrt,,,"The article conveniently ignores every other game that does not have the same restrictions on user generated content, and then claims the ""death of content freedom."" Starcraft 2 is one datapoint.<p>Where was the article trumpeting the ""renewal of content freedom"" when Alien Swarm came out?",1281207973
1584083,comment,1583362,1583362,0,0,hugh3,,,"Question: isn't ""uses the same programming language"" a pretty weak value of ""like-minded""?",1281207945
1584082,comment,1583816,1583816,0,0,wcarss,,,"Your claim that F# or even C# are as concise as a dynamically typed language is the crux of your argument, and is the weakest part of your post.<p>I haven't worked with F#, but I have read a share of C# code. A non-trivial program is likely to need some methods to respond to many types; in this circumstance C# lets you write many methods, use generics, or (now I believe) use dynamically typed variables. Writing many methods is hard to maintain, and not at all concise. Using generics is theoretically great, but the syntax in C++/C# is just awkward and writing type-agnostic code with generics is nigh unreadable.<p>In Ruby or Python you have duck-typing, and you can easily be type-agnostic and concise; in fact if you are writing code in one of these languages, you /should/ be both of these things.<p>Duck typing is fantastic for true object orientation: ""If it walks like and duck and it quacks like a duck, we can safely treat it like a duck."" This reliance upon support for response to messages instead of reliance upon types is often the key to being concise and readable.<p>In ruby, for example, I can use object.responds_to?(:method_name) and be assured that the object will support this piece of the interface before I attempt use. This is an elegant solution to keeping code type-agnostic, and it emphasizes the best sort of object oriented methodology.<p>This is why I love Ruby.",1281207934
1584081,comment,1581830,1583168,0,0,BoppreH,,,"Yes, pattern matching fits the bill, thanks.",1281207928
1584080,comment,1583816,1583882,0,0,zwetan,,,"> I see no reason to use a language that eliminates run-time types<p>euh... even if a language is considered dynamically typed and/or using weak types, the language still have types.",1281207864
1584079,comment,1581424,1581990,0,0,hugh3,,,"After not seeing what Uno is like on xboxlive, I have no idea what you're saying. Is there a lot of Uno nudity?",1281207796
1584078,comment,1583463,1583485,0,0,wvoq,,,">For example, if you know Java, you won't get a lot out of learning Java<p>Sound advice.",1281207742
1584077,comment,1583816,1584008,0,0,gaius,,,"I'm excited by the possibility that these languages will make functional programming mainstream. Clojure's another exciting language. But I had to choose, there're only so many hours in the day, and for better or worse, Haskell is where I am focussing my efforts.",1281207737
1584076,comment,1581830,1583633,0,0,BoppreH,,,"""if""s in Haskell work exactly like the ternary operators, just as I said. I was using the article's differentiation of ""branching"" and ""microbranching"" and stating that I haven't seen the former in functional languages.<p>The link provided doesn't contradict any of this, actually it does quite the opposite.",1281207736
1584075,comment,1583463,1583463,0,0,shawndumas,,,"Man cannot understand the perfection and imperfections of his chosen art if he cannot see the value in other arts. Following rules only permits development up to a point in technique and then the student and artist has to learn more and seek further. It makes sense to study other arts as well as those of strategy.<p>Who has not learned something more about themselves by watching the activities of others? To learn the sword study the guitar. To learn the fist study commerce. To just study the sword will make you narrow-minded and will not permit you to grow outward.<p>-- Miyamoto Musashi, ""A Book of Five Rings""",1281207697
1584074,comment,1583182,1583556,0,0,kragen,,,"This probably uniquely identifies Rob, actually; there probably weren't more than three or four seven-year-olds on the internet in 1990, and the chance that more than one of them was named ""Robert"" is quite small indeed.",1281207665
1584073,story,,,7,1,spooneybarger,"Memory Models: A Case for Rethinking Parallel Languages and Hardware",http://cacm.acm.org/magazines/2010/8/96610-memory-models-a-case-for-rethinking-parallel-languages-and-hardware/fulltext,,1281207659
1584072,comment,1583135,1583625,0,0,Confusion,,,"Why does everyone seem to assume/know that these guys actually did send fake invoices? I've not seen any evidence for that.",1281207645
1584071,comment,1580904,1583973,0,0,lispm,,,"Okay, now that we have established that the Visitor pattern is actually about mapping, as Tim said, we can give an example:<p>Given nodes of a tree, with data and children.<p>(defstruct node d c)<p>We can define a map function:<p>(defun mapt (n f s k) (when n (funcall f (funcall k n)) (mapc (lambda (n) (mapt n f s k)) (funcall s n))))<p>The mapt function takes a start node, a function to apply on each node's data, the successor function and a key function that extracts the data from the node.<p>Then we can call it, printing all node contents:<p>(mapt #S(NODE :D 1 :C (#S(NODE :D 2 :C NIL) #S(NODE :D 3 :C NIL))) #'print #'node-c #'node-d))<p>With generic functions we can provide content specific behavior. Here eventually PRINT-OBJECT will do the right thing.<p>Usually Lisp provides these mapping functions. For example in LispWorks CAPI:MAP-PANE-CHILDREN walks over the sub panes of a pane.<p>That's what he was talking about, there is no special Visitor pattern implementation, just mapping over the object structure. The mapping function depends on what it is, a tree, a cyclic graph, ...<p>I found Tim's post not really that painful...",1281207614
1584070,comment,1583816,1583816,0,0,zwetan,,,"to sum it up very quickly<p><pre><code>  statically typed: is-a, has-a\n  dynamically typed: is-like-a, has-like-a\n</code></pre>\nRead the introduction from\nDynamic Typing in a Statically Typed Language\n<a href=""http://lucacardelli.name/Papers/Dyn.ps"" rel=""nofollow"">http://lucacardelli.name/Papers/Dyn.ps</a>\n""Even in a statically typed language there is often the need to deal with data\nwhose type cannot be determined at compile time""<p>much more other interesting papers\n<a href=""http://lucacardelli.name/indexPapers.html#Types"" rel=""nofollow"">http://lucacardelli.name/indexPapers.html#Types</a> and Semantics<p>If you find that today's C# can be more concise, it's simply because since C# 1.0 to C# 4.0 they added a lot of extensions that can make the language more dynamic\n(see <a href=""http://en.wikipedia.org/wiki/C_Sharp_4.0"" rel=""nofollow"">http://en.wikipedia.org/wiki/C_Sharp_4.0</a> with the use of 'dynamic').<p>In comparaison, if you look at the ActionScript language which have its roots based on ECMA-262(ECMAScript), from AS 1.0 to AS 3.0 they evolved the language to make it statically typed, but you still keep dynamic functionalities like the * (any) type or the option to declare a class dynamic and add members to the prototype.<p>After it can be a long debate to try to prove which one is ""better"".<p>For example, combine unit tests and a dynamic language and you don;t really feel you're missing anything with type checking.\nCounter example, you can have a statically type checked language that compile and can still throw errors at runtime.",1281207611
