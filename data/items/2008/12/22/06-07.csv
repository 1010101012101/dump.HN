ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
406167,comment,406010,406144,0,0,arockwell,,,"Isn't scheme a subset of common lisp (at least loosely speaking)?",1229928782
406166,comment,406049,406157,0,0,awt,,,"It seems to me like innovation is happening faster and faster.",1229928501
406165,comment,406049,406157,0,0,sgrove,,,"""even in startup land it is about the gimmick more than the code these days""<p>It was never about <i>the code</i>. It has always been about the idea. The code is just a way of expressing one's ideas. Some people are more expressive, some have better ideas - we need both to succeed. Your comment on moore's law making any idiot a passable coder seems to miss the point - we've increased the number of people who can reasonably express their idea.<p>And even the high-end coders are able to take advantage of amazing opportunities, particularly in parallel processing on platforms like AWS - solving problems and expressing their ideas in ways they had only dreamed of trying.<p>I can only imagine that those of us with ideas we hope to try out will continue to delight in moore's law, great free and open code, and yes, winner-take-all economics where we'll compete based on our ideas.",1229928288
406164,comment,405942,406159,0,0,gaius,,,"FORTRAN too.<p>All the kids who might've gone into Lisp are going into Python instead and asking the legitimate question, what can Lisp do that this can't? There's a lot of hand-waving from the Lisp community about this and that, but a lack of concrete example. On the academic high ground, there's Haskell and OCaml - both communities are actively working on ""batteries included"" distributions to bring their languages to the masses. The Lisp community took too much for granted for too long, they have become overtaken by events on both sides. It's not that Lisp will ever ""die""... It'll just become irrelevant by the next generation.",1229928268
406163,comment,405643,405643,0,0,markdionne,,,"The article failed to mention that Siemens' auditors, KPMG, were also implicated and that they are being dropped by Siemens.",1229928157
406162,comment,405897,405897,0,0,sama,,,"The best way is not to, I assure you.",1229927589
406161,comment,406010,406010,0,0,tlrobinson,,,"It's certainly not the only reason, but the same syntax with different semantics could get very confusing.<p>I think the different syntaxes help you (or at least me) switch contexts and remember what language I'm using.",1229927443
406160,comment,405680,405680,0,0,nazgulnarsil,,,"save two years off your life by taking the GED and attending community college for credit if your parents will let you.  when your friends are graduating high school and becoming freshmen at universities, you'll be a transferring junior.\nthe lower division stuff at college is what high school courses should be.",1229927359
406159,comment,405942,406058,0,0,Kaizyn,,,"You realize that at this point, the best candidate programming language for 100 year language is probably COBOL, followed after a good ways behind it by C.<p>What about Lisp?  I don't believe it's gaining new programmers at a fast enough rate to be a sustainable community in the long term.",1229927107
406158,comment,405227,405322,0,0,xtimesninety,,,"cool! i think this will do it!",1229927054
406157,comment,406049,406049,0,0,unrealwh,,,"everyone will be cutting back...why?<p>firstly, the climate permits it. i assume now that any company holds a latent 10% rif in good times, just waiting for a bad market so it can lose the 10% to throw the market a bone<p>secondly, consumer/business software and the web are exiting the innovation phase and entering the cost phase. yeah this will get all the yc types in a tizzy, but its true. the consumer web has been ""built"" as far as 99% of users are concerned, and most of the major platforms have evolved to the stage where large headcounts are not needed. business software hasn't changed substantially in years. the winners have been picked and now that margins are shrinking, the way to a better top line is most easily achieved by moving the bottom line.<p>oh well the fun had to end at some point. between moore's law making any idiot a passable coder, oodles of great free and open code, and winner-take-all economics, my opinion is that coding won't be a desirable job within a decade...even in startup land it is about the gimmick more than the code these days",1229927008
406156,comment,406010,406013,0,0,vaksel,,,"Because it has to complete with English which is already a world language(at least in the business world)",1229926961
406154,comment,405557,405775,0,0,gaius,,,"You can on OSX right now do:<p><pre><code>    $ sudo port install fsharp\n</code></pre>\nAnd get it, but the power of F# comes in part from its integration with .NET; OCaml has been around on OSX for years.",1229926806
406153,story,,,2,0,rwebb,"Creating user incentives",http://blog.robwebb2k.com/2008/12/21/creating-user-incentives/,,1229926585
406151,comment,404009,405156,0,0,stcredzero,,,"Actually, I did at one point diagram all of the states of X across time, so it was an array.  (There was also iteration in a loop involved.)  I think this only confused him even more, though.",1229926558
406150,story,,,3,0,justifyleo,"4 Stages Of Twitter Users",http://socialmediavision.com/social-media/the-4-stages-of-the-twitter-seesaw-2/,,1229926487
406149,comment,405557,405997,0,0,stcredzero,,,"What I've found is that you actually want restrictive when you're doing maintenance.  You want to know as much as possible about the code you're changing.  You want to know exactly what's in that instance variable.<p>When you're doing prototyping, you want to delay that decision as long as you can, so you are making the most informed decision possible.  And nothing informs your decisions like the act of developing and getting feedback from users.<p>Optional static typing gives you the best of both worlds.  But I don't know how you'd get the equivalent with Design By Contract/Unit Testing.  Both of those feel a little unnatural to me.  I'd rather just tinker, and not have to set up extra stuff before or after I code.",1229926427
406148,comment,405680,406136,0,0,timr,,,"In the situations you described, there are a couple of ways to respond:<p>1) Do the work.  It's easy, so you'll do it quickly and get a high grade.  Then you can ask for more challenging work (or just do something more interesting).<p>2) Don't do the work.  Instead, complain about the inanity of the class and the idiocy of the teacher.  You'll get a bad grade, and a bad reputation, too.<p>There are times to recognize busywork for what it is and eliminate it (i.e. where you benefit other people by eliminating it), and times to just suck it up and do it (i.e. where you can't change it and/or don't benefit enough other people by trying).  Part of the art of being successful is knowing how to discriminate between the two scenarios, and how to respond accordingly (i.e. <i>diplomatically</i>).<p>The problem with student complaints about high school curricula, is that they clearly land in category two.  Your bad experience with 9th grade geometry doesn't mean that the learning 9th grade geometry is wrong -- it means that you had a bad 9th grad geometry teacher, or that you brushed him the wrong way, or some combination of the two.  And in that situation, you can suck it up, and do the work you need to do to get an A, or you can complain and get a bad grade.<p>Life is full of these situations.  Complaining about the unfairness of the situation is not the correct response.",1229926398
406147,comment,405223,405223,0,0,Wesmax27,,,"I am going to get through Warren Buffett's biography, The Snowball.",1229926395
406146,story,,,1,0,peter123,"If you could recommend only one book (on graphic design)",http://www.presentationzen.com/presentationzen/2008/12/if-you-could-recommend-only-one-book-on-graphic-design.html,,1229926376
406145,comment,406010,406017,0,0,dhotson,,,"I don't mean to be pedantic, but the 'Java is slow' thing simply isn't true anymore. It certainly used to be slow back in the day, but it's actually pretty good these days.<p>From what I've heard, programmers at Google put it in the same ballpark as C++.<p>This brings me to another point.. the choice of programming language often has more to do with image and branding as opposed to actual technical merit.<p>That's why we keep hearing the same old mantras:<p>Java -> uncool and slow<p>C/C++ -> fast<p>PHP -> hack<p>Ruby -> cool but slow<p>Cobol -> for dinosaurs<p>.. even after the problems are fixed, the image remains. It's pretty hard to change people's perceptions.",1229926283
406144,comment,406010,406129,0,0,qqq,,,"scheme and common lisp?",1229925737
