ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
1544569,comment,1544338,1544471,0,0,ewjordan,,,"If you're really a noob, I'd try to be a little less careful, personally.  The best way to stop writing shitty code is to write a whole lot of it so that you realize why it's shitty, not to blindly follow best practices from the start.<p>Of course, if you're writing production code at work or something like that, it's another matter, and you should obviously try to make sure everything that gets checked in is good quality.  But for me, at least, knowing what not to do in the abstract never made the same impact as doing horrible things in my code and then feeling the pain later on - the personally earned lessons are the ones that I remember the best.",1280012390
1544568,comment,1544338,1544338,0,0,leif,,,"Rather than tell you how fast I code, I'll hopefully provide some insight in to how to become someone who codes quickly:<p>1. Coding environment.  Part of this is the physical space around you, distractions, mental state, etc., but you can probably figure this out best for yourself.  The other part is inside the computer.  You need a good editor, and you need to be comfortable in it.  Vim, emacs, or an IDE.  Whatever it is, it needs to really understand the language and libraries you're using (code completion, syntax highlighting, build/run/debug integrated, documentation integrated (emacs has M-x man, vim has K)), and if your language supports it, have a REPL at hand too.  The most important thing here is knowing that, no matter what you want to do (move text, change variable names, start a debugger, set a breakpoint, etc.), you <i>don't need to think about it</i>.  Your hands and your machine need to become an extension of your thought process, to the point that you think something about the code, and it happens, with as little overhead as possible.<p>2. Familiarity with language/libraries.  If you're spending over 20% of your time looking up documentation for language features or the standard library, you're never going to code as fast as you want to.  If you're a C programmer, spend more time with K&R, A Book on C, and sections 2 and 3 of the UNIX manual.  If you really invest the time to memorize your language and common libraries, you can cut your development time down substantially.  Of course, to do this, the best thing you can really do is just to spend a lot more time coding slowly, so go do that now.<p>3. Project preparation.  Before you sit down to code, you need to know what it is you're coding (unless you're doing exploratory programming, which, while wonderful, requires even more of #1 and #2, and will never be ""fast coding"" per se).  Sit down with a whiteboard or a pad of paper, or just sit and think if you have a good memory, but plan out what you're going to code.  Here, YMMV a lot.  For some, it's very important to have classes, interfaces, functions, etc. planned out before they code.  Others need to plan out the UI to great lengths first.  Personally, I think about data flow and constraints and let the function organization emerge (and then stress for a long time about the UI anyway).  You should play around with how much preparation you need to do, but you definitely need to do <i>some</i> preparation.<p>4. Knowing when to stop.  Apart from looking up documentation, I think I waste the most time making the code more and more optimized or more and more beautiful (read: unnecessarily clever).  If you really want to code fast, you have to let go.  When it works, it works, and you can stop for the moment.  You can always clean it up later, abstract things away, refactor code, whatever, but you'll be more satisfied if you say ""okay, my project works now, I'm going to go have a snack/smoke/nap"".",1280012360
1544567,comment,1543662,1543662,0,0,shasta,,,"It has been argued (<a href=""http://arxiv.org/PS_cache/arxiv/pdf/0905/0905.4641v1.pdf"" rel=""nofollow"">http://arxiv.org/PS_cache/arxiv/pdf/0905/0905.4641v1.pdf</a>) that this theorem is flawed (the premises don't match reality).<p>After briefly studying the matter, I agree, and suspect the flaw is that Conway and Kochen assume that, because the two experiments are separated by a great distance, they may be treated as separate random trials.  I believe you can see from the multiple universe interpretation of QM that this assumption is incorrect.<p>I'm not a physicist and have only spent a few hours on it, so take this comment with a big grain of salt.  I'm curious to hear if there's a consensus among physicists on the resolution.",1280012317
1544566,comment,1544512,1544551,0,0,cherif,,,"Good points, thanks. Will include link to privacy policy and elaborate more in description. Was trying to cut down the copy to a minimum but I guess I went too far.",1280012141
1544565,story,,,2,2,ryanb,"Ask HN: What are some good ways to find local web design/dev work?",,"Is going door to door to small businesses effective? Flyers around town? Ad-words?<p>I'm looking for short term work so I can continue working on my own projects.",1280012100
1544564,comment,1544338,1544459,0,0,edw519,,,"BASIC, php, and javascript",1280012020
1544563,comment,1544247,1544247,0,0,hristov,,,"This is the reality of Wall Street, any time you tie your self to a certain predictable future behaviour, people will figure that out and figure out a way to exploit you.<p>Those exchange traded funds screwed themselves because they committed themselves to buying contracts at a specific time. So other traders knew about it and made sure the prices of the contracts at that time were extra high.<p>And it does not seem like there is a good answer. On one hand you can have the ETFs stop their requirements to buy or sell at a particular time. Thus you would entrust the managers of those funds to find good times to buy and/or sell. But then again can you trust the managers? There is a huge incentive for the managers to take bribes from another trader to buy or sell at times that are bad for the fund but good for the other trader. Or, maybe the managers simply are not very good and choose bad times. In a way you have an agency problem, and ETFs were invented in order to remove any agency issues. That is, the whole philosophy behind ETFs is for them to be automatic so you do not have to trust the judgement of some manager to buy them.<p>I think the only answer is for investors is to buy the contracts directly and not to go through ETFs. Of course that is a bit dangerous, because if you do not clear your position in a timely manner, you always risk somebody actually delivering a thousand barrels of oil on your front lawn, but hey that is a risk you have to take if you want to be commodities investor.",1280012004
1544562,comment,1544338,1544461,0,0,j_baker,,,"""I'd agree with this general sentiment.""<p>Are you saying you don't necessarily agree with the specific sentiment?  :-)",1280011817
1544561,comment,1544351,1544496,0,0,mahmud,,,"I worked on an inherited project that had /* FIXME: 8372 */ except we no longer owned the bug database. Really wished the comment actually explained WTF was broken, instead of leaving me perform exhaustive tests with a SOAP sandbox halfway across the world, and a security/performance hack that involved keeping track of a per-request nonce AND a 5s sleep :-/",1280011731
1544560,comment,1544351,1544351,0,0,sprout,,,"1, 4, and 5 are all called for in certain circumstances.<p>I've seen a lot of 2 in shell scripts that aren't under version control, and it's necessary. Though I once slimmed a script I didn't write down from about 1000 to 200 where a lot of that was comments and duplicated functions. (As in, the script would repeatedly define the same function with a different name and a different path hard-coded in, and then call each function in turn.)<p>The only one that I would say is in a class you legitimately should never do is #3, but no one would ever write that comment except to be flippant.",1280011668
1544559,comment,1544549,1544549,0,0,fmora,,,"Isn't the line:<p>while(time(NULL) > markTime) { /* do nothing */ }<p>some sort of sleep mechanism?\nWhat's the point again?",1280011594
1544558,comment,1544490,1544490,0,0,mhd,,,"Is Mahir an angel investor now?",1280011572
1544556,comment,1543586,1544534,0,0,mahmud,,,"For the same reason that everyone who retweeted an #iranelection did <i>not</i> book a flight to Tehran to fight with their comrades. I have things to do, and my immediate needs to take care of: that pretty much means Common Lisp, which I depend on for my work.<p>My advice is just that, advice, and it's given in the hope that with our mutual situations improved, maybe we can meet for coffee somewhere down the road and kick it back.",1280011509
1544555,comment,1544247,1544428,0,0,hristov,,,"The problem with one year futures is that they do not track the spot price of oil as well. The whole purpose of an oil ETF is for it to give you the ability to buy or sell a bunch of oil at any time without having to deal with the actual oil. Thus, the value of an ETF should track the current (spot) price of oil.<p>But if the fund buys one year contracts, their costs will not reflect the current price but what people believe the price will be at the end of the year. So the ETF will be mis-priced in relation to the current price. I think that is why they try to buy contracts that are relatively short, because they track the current price better.",1280011490
1544554,comment,1544380,1544380,0,0,ashitvora,,,"Well, I am from Bay Area but dont visit coffee shops and any places for that matter.<p>I usually spend weekend playing pool, swimming, bowling, hanging out with friends or online.<p>You should visit coffee shops near Palo Alto area, Casto Street if you are interested to meet techie people.",1280011445
1544553,comment,1544490,1544490,0,0,jblochjohnson,,,"It appears that the survey button at the bottom is broken...like our hearts will be? jk",1280011394
1544552,comment,1544338,1544338,0,0,joanou,,,"It depends on the type of work.  For safety critical avionics software, it can be three eLOC per day.  For tools, web and others, it can be a few hundred to two thousand per day.",1280011369
1544551,comment,1544512,1544512,0,0,spooneybarger,,,"You are asking people to turn over personal info based on 1 vague line about discounts up to 80%. I think you need to provide a good bit more info- why does this free membership save me money? are they going to send me ads? etc etc etc.",1280011349
1544550,comment,1543871,1543871,0,0,andolanra,,,"Speaking now as a linguist, I am somewhat bothered by articles of this type—not because they're inaccurate, because they're entirely accurate, but because they walk a narrow line between fascination with and fetishization of language. Research does indicate that language and cognition are linked in a lot of ways, that's true; but the problem with overly aggressive Sapir-Whorf pushing is that it becomes all too easy to simplify the ""language affects thought"" maxim until it is no longer accurate.<p>For instance, the statement, ""Languages affect how people conceptualize time,"" is true, according to research, while the statement, ""[ethnic group] is the only group of people to feel [some overly specific emotion],"" is never true, or at least hasn't been true all the many times I've seen it brought up. (Usually, such claims end up evoking the No True Scotsman fallacy when someone else suggests that maybe members of other ethnic groups are capable of feeling the emotion.) ""Cognitive tasks like counting are affected by a person's language,"" is true, while Orwell's ""You can make people more think less by making their language have a staccato rhythm,"" is not. There's a fine line to walk between recognizing that language and thought are interrelated, and thinking of language as the magical thought-producing-machine that completely determines all mental (and sometimes physiological) functioning.<p>Finally, a lot of people read ""language"" and therefore forget the importance of things like dialect and culture. There's a common tendency to become obsessed with 'untranslatability' as a marker of language and forget that a lot of untranslatable utterances are untranslatable not because of an inherent feature of their host language, but because language and culture are also deeply intertwined. If in Russian I made a joke about ""preved"" or discussed samizdat, and you didn't understand it in translation, it wouldn't be because of any inherent differences in the mental processes of Russian-speakers versus English-speakers, but instead because of cultural differences, which are an incredibly important part of communication.<p>This is my two cents, I suppose—the Sapir-Whorf hypothesis is a seductive idea and it's produced a lot of compelling research, but it's very easy to go too far with Sapir-Whorf and turn language into something much more powerful and more magical than it really is.",1280011343
1544549,story,,,3,5,kevinskii,"Slow Code Competition",,"Given the totally arbitrary choice between writing fast vs. slow code, it seems that developers unfairly discriminate against slowness every time.  It's time to rectify this situation with a slow code competition.  Let's see who can write a code snippet that will take the longest amount of time to print the numbers one through ten.<p>These are the only rules:\n- You can use any language you choose, including pseudocode.\n- Your code snippet must be ten lines of code or less.  Preprocessor directives and such may be omitted.\n- It must complete in some finite amount of time.\n- Sleep (and similar) statements are not allowed.\n- You can't stay awake until 4:00am trying to think of a way to ""win.""<p>Yes, I realize this is a stupid competition with lots of loopholes in the rules.  I'm mainly curious to see how people who are much smarter than me might approach the problem.  Without further ado, here's my submission:<p>/* Variables <i>/\nunsigned long counter1 = 0, counter2 = 0, counter3 = 0, counter4 = 0, currentNumber = 0;\ntime_t markTime = time(NULL);<p>while(++currentNumber <= 10) {<p><pre><code>    /* Wait until the system time wraps.\n     * This should take a few hundred billion years on a 64-bit system. */\n    while(time(NULL) > markTime) { /* do nothing */ } \n\n    /* Update the time reference so the above WHILE loop doesn't immediately fall through\n     * the next time around. */\n    markTime = time(NULL); \n    \n    /* If every counter has wrapped back to zero */\n    if(++counter1 == 0) {\n        if(++counter2 == 0) {\n            if(++counter3 == 0) {\n                if(++counter4 == 0) {\n                    \n                    /* Print the number */\n                    printf(""%d"", (int)currentNumber);\n    } } } }\n}</code></pre>",1280011332
1544548,story,,,26,17,jblochjohnson,"Ask HN: How early did you bring in a full-time marketer?",,"Hey entrepreneurasaurs:<p>At what stage in your company's development did you decide it was worth it to have a full-time marketer on your team?<p>We have a three-person team (all developers, although we're learning the business ropes), and we're trying to chart out the money we'll need in our first year; we can get a minimum-viable-product out the door in three months, and then were considering bringing in a marketer. Any advice you could give would be greatly appreciated!",1280011320
1544547,comment,1544498,1544498,0,0,ashitvora,,,"well, it's simple. if you work on something that you enjoy, you will do well.\nAlways set small targets. the joy of achieving those targets will motivate you to work more.<p>It doesn't matter how long do you work but how often do you work. So spend some time daily on that project rather than spending 10-15 hrs on Weekend and not thinking about it at all during weekdays.<p>hth",1280011268
1544545,story,,,4,0,rcavezza,"A Weekend Experiment with the Lean Startup Methodology",http://foundersblock.com/uncategorized/a-weekend-experiement-with-the-lean-startup-part-1/,,1280011236
1544544,story,,,6,3,lukeqsee,"Ask HN: Most Influential Experience?",,"I know for a lot of people one experience, class, or person had such a profound effect that it radically changed their life's path or a significant part of it.<p>What was yours?<p>Here's mine: a programmer was willing to teach my home school co-op group programming. Before I took that class I wanted to ""build"" computers. (Basically, I wanted to be a tech.) Afterwards, I am looking at a career in programming. (Which, as you know, has a gigantically larger potential.) I doubt I'd be programming if it wasn't for that class.",1280011225
1544543,comment,1543885,1544097,0,0,Ardit20,,,"You are missing a great and fundamental point. You see Bill Gates was one guy. Clever perhaps, very clever maybe indeed, lucky also let us say for the sake of the argument. But he is only one guy!<p>He has the wealth of millions of people. How many have gone insane and started feeding pigeons like Telsa, how many have been unable to afford higher education, how many people were denied the opportunity to contribute to the world because they were not born in a middle upper class family as Gates was.<p>By the way, inflation would not go up, nor as you speculate will things even out and be once more as they are now but Bill be denied of his billions. The world is a zero sum game, it costs that much to produce a certain something and unless people want to make excessive profits like Mr Gates then it would costs just as much.<p>Maybe I am arguing against the wind, but so too maybe people have forgotten that they could have been born in any environment, that they could be right now starving for food in Africa, that they could be that loony man in the corner of the shop begging for money. We are lucky that we are not, but for how long. People accepted feudalism in the 16th century too. Without acceptance and a legitimate expectation from society that it is acceptable for someone to exploit you to death while they live in luxury feudalism would not be a fact, without the cultural acceptance that it is fine to enslave others and treat them as inferior slavery would not be a fact. What make us think that now it is different, what makes you think or anyone reading this that accumulation of such great wealth for no rational reason whatever is justifiable?",1280011125
1544542,comment,1543057,1543583,0,0,sprout,,,"If you finished the first sentence after the bullets:<p>>Yes, there were other languages with some of these characteristics before Perl. But Perl had all of them...",1280011087
1544541,comment,1544351,1544351,0,0,stretchwithme,,,"/* good stuff. my crime is putting my pseudo code in comments and then forgetting to cleanup */",1280011085
1544540,comment,1543935,1544513,0,0,thaumaturgy,,,"You're clearly a subjectivist, a philosophical position which I as a pragmatist find useless.<p>I would love to sit here and debate this with you, but I have a Saturday lunch meeting in a few minutes with my old high school's football captain and prom queen. I hear that they've accomplished some amazingly valuable things. We're probably going to eat at McDonald's. We will probably spend some time discussing the latest Dean Koontz or Danielle Steele novels. After that, I will come home and watch Fox News for a few hours, followed by some sitcoms.<p>Gosh, it's a good thing all these are so popular! Otherwise, I would have no idea what was valuable and what wasn't.<p>Oh, and by the way: gold would not be worthless. It has certain intrinsic properties -- like its resistance to corrosion, its malleability, its conductivity, and its low melting point -- which have made it valuable for many uses.",1280011000
1544539,comment,1544338,1544338,0,0,anatoly,,,"You read these reports because these are unusual results, and people consider them achievements to be mentioned. If  it were normal for competent developers to crank out completed projects in an evening or during lunch, you wouldn't see the fact mentioned in their blog posts.<p>I think the speed of coding is basically a mystery which no one understands, once you look at a high enough level (above incompetents who don't really know what they're doing). Some people are much faster than others, but in rare bursts, and end up being less productive. Some people are much faster than others all the time, and nobody really knows why, including themselves. They probably feel they have a ""system"", but it's difficult to decide whether or not it's justification after the fact. Others might try to use the same system and fail; the productive coder might well be just as productive if they tried a different ""system"".<p>Individually, everybody ends up with a hunch of what works for them; probably more often than not the hunch is right, but it's also a good idea to try other ways of organizing your work and see if they stick. Collectively, we just don't know.",1280010995
1544537,comment,1544240,1544240,0,0,gscott,,,"- AdBrite.com is excellent.  Put your budget to just $5 a day or so and do text links across there network and you get super cheap clicks and they are pretty good clicks.<p>- Revieme.com is good.  You can create a ""campaign"" and then pick a key phrase like ""applicant tracking tool"" for $10 each blog they write about it.  Works really good.<p>- text-link-ads.com is worth spending several hundred dollars a month on.  The static links do seo wonders, I have moved up from the 3rd page to the first page doing this and for a client I am spending over a thousand dollars a month with this service on different keywords and it is doing really well.<p>- Google adwords is important and managing your budget is very important when using adwords.",1280010885
1544536,comment,1544351,1544351,0,0,blahblahblah,,,"I use #1 and #5 comments all the time.  #1 has nothing to do with being a ""proud programmer"".  It has to do with being able to easily undo changes in a granular fashion.  I don't want to have to do a check-in to the version control system every five minutes.  I want to do check-ins when I'm at a point where the code is KNOWN to be mostly working, or at the very least it compiles without error.  #1 comments, provided they have a little more description than just name and date, make it easier to completely replace the boneheaded hack I put in there when I have an epiphany three hours later about how I really should have done it.<p>#5 comments are very useful when writing code because they allow you to remain focused on the particular functionality that you are trying to implement while ensuring that you don't ignore things that are important in the grand scheme of things but are not particularly important to do at this moment (and certainly not important enough to be permitted to distract you from focusing on what you are accomplishing right now).  TODO comments let you write the skeleton of your code and mark the places where you know you need to come back later to do more mundane tasks like carefully considering what kinds of errors may occur and what sort of exceptions should be thrown or caught or thinking about whether or not something should be written to a log.  TODO comments are the bedrock of getting things done while still managing to not forget about details.<p>However, I agree that #1 and #5 comments should not persist in production code.  They are little ""under construction"" signs that should be removed when the code is solid.",1280010820
1544535,comment,1543147,1543708,0,0,sprout,,,">This isn't unfair - it just means that some people are unproductive.<p>Sure, but in another 50 years many of their children will have just as much land through none of their own doing. If others could have used the land better, I'd say there's a good deal of unfairness there. It's possible life could have been better for everyone if not for inheritance.<p>>Blasting music is a different story - you are effecting your neighbour's quality of life (and destroying his property value).<p>Eh? That's the sort of thing I was talking about. You have the right to do what you want, within reason. But that said, you can't for example use residential land for a commercial enterprise beyond a certain point, and there are good reasons for these sorts of zoning laws.<p>On your last point, the state is the proxy by which we as a group determine how to divvy up that wealth that cannot be directly attributable to any one group. Again it is imperfect, but it's better than letting those who own the land have the entire say, because they are not necessarily responsible for the value in that land.",1280010810
1544534,comment,1543586,1544522,0,0,ghotli,,,"""I have been screaming for ages telling Clojurists to rip CL APIs and implement them in clojure.""<p>Care to help? If you feel this strongly about it, surely you can contribute to the community.",1280010772
1544533,comment,1543604,1544189,0,0,joshuacc,,,"This article is by Don Norman, who also wrote the book you're recommending. Perhaps you didn't read the article closely enough?",1280010769
1544532,comment,1544247,1544247,0,0,leelin,,,"Quick summary:<p>We're all taught that receiving $1 tomorrow is better than receiving $1 a year from tomorrow.  Even if you can't use the $1 tomorrow, someone else likely can, and capital markets make it easy to get your money to them.  That's why the interest rate yield curve is normally upward sloping, and the discount factor curve is almost always monotonic.<p><a href=""http://www.cmegroup.com/trading/interest-rates/us-treasury/2-year-us-treasury-note.html"" rel=""nofollow"">http://www.cmegroup.com/trading/interest-rates/us-treasury/2...</a>\n(for the purists, I know there is a lot else going on in the treasury bond future curve, but it's hard to find a good DF curve)<p>In commodities, however, receiving a barrel of crude oil tomorrow is not necessarily more valuable than receiving a barrel a few months from now.  If there is more oil available than people who can readily use it, then receiving crude oil tomorrow means storing it and potentially transporting it in the future.  It's quite common for oil to be delivered next month to be cheaper than oil to be delivered the following month, and so on.<p><a href=""http://www.cmegroup.com/trading/energy/crude-oil/light-sweet-crude.html"" rel=""nofollow"">http://www.cmegroup.com/trading/energy/crude-oil/light-sweet...</a><p>Commodity ETFs at first attempted to buy a stake in the underlying commodity.  It worked for easy to store items like gold or cash-equivalents.  When they tried to do the same for oil or natural gas, it was too costly or too big a headache.<p>The work-around was to trade futures contracts for each of the commodities, and avoid ever taking physical delivery of millions of barrels of oil by selling contracts shortly before their delivery date and buying new contracts with further away delivery dates.<p>Unfortunately, the futures contracts already implicitly include the cost of storage and the investor aversion to taking physical delivery, making the ETF manager pay a cost every time they move from almost-expiring contracts to longer-dated contracts.<p>The rest of the article explains anecdotes about how a few large players take advantage of the situation.  Some people can predict when large ETFs need to roll their contracts and profit by front-running.  Others invest in efficient storage and transporting frameworks in order to take physical delivery and sell at a profit in the future.<p>My questions:<p>Why not minimize the front-running problem by making the dates you roll harder to predict?  Instead of rolling the front month every month, why not include some basket of CL1 thru CL12 and find opportune times to roll?  Once these ETFs got popular, why not invest in some of the storage infrastructure and charge a slightly higher fee but give much better tracking to investors?",1280010729
1544531,comment,1544336,1544365,0,0,Tautologistics,,,"Even more...<p><a href=""http://news.ycombinator.com/item?id=993398"" rel=""nofollow"">http://news.ycombinator.com/item?id=993398</a>",1280010710
1544530,comment,1535681,1535681,0,0,kdonald,,,"If you want to see what Spring MVC brings to the table, checkout the following showcase:<p><a href=""http://blog.springsource.com/2010/07/22/spring-mvc-3-showcase"" rel=""nofollow"">http://blog.springsource.com/2010/07/22/spring-mvc-3-showcas...</a>",1280010681
1544529,comment,1544351,1544351,0,0,tjr,,,"A few weeks ago I was perusing a code base that I had never seen before, consisting of some 100 subprojects, mostly written about a decade ago.<p>The code was mostly entirely uncommented.  In a few files, it was heavily commented, but often strangely...  such as allegorical comments relating the code to a magic act (""and now we shall make the volunteer vanish into thin air!""), or quotes from movies that loosely described the code.",1280010641
1544528,comment,1544202,1544202,0,0,stretchwithme,,,"apparently even someone saying they watched porn is offensive.  I guess that's true if you think all children should be sheltered from all knowledge of anything they're not allowed to do until they reach the magical age when they are then allowed to know and do all.<p>Of course, that doesn't prevent them from watching sitcom reruns where sexual activity is constantly alluded to.  At least here they must stay up til 6:30 pm to be exposed to it.",1280010629
1544526,comment,1544338,1544338,0,0,viraptor,,,"Depends on what you do... I'm not strictly a programmer, but I have days when I write a thousand lines of code over 3h, then I have a day when I fix two lines in a big project over 2 days and consider it a good result (since it took 1.9 days to find the correct lines and prove it will work).<p>Then again it depends on whether you're told ""make X work"", or ""here's a complete spec including all needed diagrams, schemas, descriptions of data flow, etc. - implement it precisely"". The former takes much much more time - you do your own research and experimentation. The latter is like playing with mad libs - you don't even have to stop to think.<p>In my opinion, it's depends a lot on the task you face to answer this question. You can create a hundred of trivial things a day, or solve one complicated issue. Try comparing with people around you doing similar work. Random person on the internet doing something ""in one evening"" is not someone you should be comparing to - s/he might've used a very similar app s/he made years ago as a template and only changed some texts, or s/he might've spent weeks on the idea and... lied.",1280010511
1544525,comment,1543865,1543865,0,0,Tycho,,,"Incidentally, that website has an exceptionally good layout, in my opinion.",1280010426
1544524,comment,1544351,1544351,0,0,rauljara,,,"I find articles filled with contrived examples of what not to do not particularly helpful.  In my experience, very, very few people write comments that dense (or at least I have been blessed not to work with them).  However, plenty of people write comments nearly as dense, but not quite.  Showing those people this article won't change their behavior.  They'll rightly think, 'well, my comments aren't that worthless'.  Real world examples would do a much better job of showing people what they should really avoid, and might even spark some interesting discussion over the grey areas.",1280010422
1544523,comment,1543871,1544214,0,0,WildUtah,,,"Well, Spanish marks subjects of verbs with inflection and requires detailed accounting of objects with pronouns and clitics.  In return Spanish gets the opportunity to build a subtle set of emphasis points in sentences.<p>The final position in a Spanish sentence may belong to the subject, an object of any kind, the verb, or a subordinate clause equally easily.  Which thing gets that honored position becomes the topic of emphasis for the sentence.  Then whichever one comes first (also flexible) gets the second strongest mark.  Things that come along in the middle can get much smaller emphasis depending on order. Adjectives and relative pronoun phrases can change emphasis based on order, too.<p>In Latin, there is almost no natural order needed.  Nouns specify their function in the sentence with declension and verbs attach to subjects with their conjugations.  Latin poetry can hold a soup of words in almost any order.<p>In English and Mandarin order matters.  But there is little chance to mark the function of words morphologically.  Instead the words stay the same and you rearrange them.  That means you can't reorder sentences like you could in Spanish or Latin.",1280010422
1544522,comment,1543586,1544507,0,0,mahmud,,,"The one custom macro I wrote is already in there. The rest is just the web server and cl-who.<p>I have been screaming for ages telling Clojurists to rip CL APIs and implement them in clojure. They're more tasteful and cultured than that entrerprisey crap that java is smearing all over this nice Lisp dialect.<p>The majority of open source clojure code that I have seen looks like Java FFI stubs; you need to tuck those loose ends in and tidy them up with macros. But this probably wont happen until Clojure is ported to another runtime/platform; portability is a surefire way to distill the essence of a language from its implementation detail.",1280010336
1544520,comment,1544338,1544338,0,0,aaronbrethorst,,,"I'm taking a break from writing an iPhone app right now. I was on track to bang out this app in 2-3 days. It's a client for the API stack from one of my favorite web services. Things were going great until I hit a serious snag with some poorly documented API calls. Oops.<p>I guess the answer is 'it depends.' It depends on whether you're doing anything 'new' or if everything that is comprised by the code you're writing is well-known to you.<p>If I had an occasion to build a client for this web service before, I probably wouldn't be having this problem (not least because I'd have working code sitting somewhere on my hard drive).<p>I build iPhone and Rails apps for a living. If someone asked me to whip up a simple blog platform in Rails for them (along the lines of the 15 minute blog screencast), it would probably take me 15 or 20 minutes to write it.<p>In contrast, if someone asked me to whip up a Django app that does the same thing, it would probably take me a day to install Django, figure out how everything works, write a really terrible version, throw it away and then write a more-tolerable version.",1280010232
1544519,story,,,1,0,arturadib,"Work-and-Play vs. Workplay: The choice is yours",http://arturadib.blogspot.com/2010/07/work-and-play-vs-workplay-choice-is.html,,1280010138
1544518,comment,1543885,1544497,0,0,_delirium,,,"This is assuming that the ""super-rich people [who] tend to care deeply about money for its own sake"" are actually ""productive members of society"" engaged in ""wealth production"", as opposed to merely being very good at rent-seeking (which gets easier as you get larger amounts of capital).",1280010100
1544517,comment,1544240,1544240,0,0,Figs,,,"Well, you could give it to me, and I promise I will speak highly of you for doing so! :D<p>However, I don't think that would help you much in actually marketing your product successfully. I think first you should figure out who you're selling to.",1280010097
1544516,comment,1544338,1544453,0,0,viraptor,,,"What kind of code / environment do you mean? Are you writing to a spec, or design from scratch? To be honest, I've never seen anyone working this way, meaning - I've never seen anyone able to design something away from keyboard that doesn't change significantly once it's written (unless they have a strict interface to fill, or something similar).<p>Also, do you actually write out pseudo code on paper (regarding ""reviewing code"", ""Refactoring code"")?",1280010084
1544515,comment,1544404,1544404,0,0,tommynazareth,,,"This sounds like a good deal to me. I'm working on a product to facilitate weight loss competitions. If you can help out, email me: tommy@pinchyfingers.com. Thanks for the offer.",1280010043
1544514,comment,1544512,1544512,0,0,cherif,,,"Background story: <a href=""http://news.ycombinator.com/item?id=1538987"" rel=""nofollow"">http://news.ycombinator.com/item?id=1538987</a>",1280010021
1544513,comment,1543935,1544227,0,0,mannicken,,,"Ah, but popularity has everything to do with measuring value.<p>As an analogy, gold would be a worthless piece of metal, if it wasn't for its popularity. Worth is an illusory, human-defined concept and just like anything ""the worthiness of something"" is ecided by majority. Perhaps because those who don't subscribe to majority's value system are weeded out in the process of evolution, unless their value system offers some incredible evolutionary advantage. And by incredible I mean ""everyone is dead and unable to reproduce except for those who think that karma points are bullshit"".<p>In reality, reality is merely a construct of our minds, and all value systems are created by consensus on which hallucinations are advantageous and which are disadvantageous. Thus, if we decide by unspoken consensus that karma points are worthy of construction of smart comments then karma points are valuable.",1280009977
1544512,story,,,1,3,cherif,"Ask HN: Please critique my landing page",http://love.kembrel.com/hn/,,1280009904
1544510,comment,1543057,1543259,0,0,rbonvall,,,"It always get cited as ""only one way to do it"", but the actual motto is ""there should be one obvious way to do it"". It's very different.",1280009882
1544509,comment,1543717,1543981,0,0,w1ntermute,,,"<i>In that particular example the English word ""computer"" simply adds a suffix to the already-in-native-use Latin verb ""to compute"" which is a standard English way of converting to a noun meaning ""a thing that computes"".</i><p>Which is exactly the problem. We shouldn't be using Latin roots to derive English words - we should use native vocabulary, because then we don't end up with commonly used words based on obscure roots that are rarely used.<p><i>When you're not having to master things like tone usage, communication on a basic level (surely all that can be expected of most US high-school students) is a lot easier to master.</i><p>If you think that the Chinese aren't tolerant of accents, you are sorely mistaken. In fact, a large portion of Chinese TV contains subtitles because of the various accents from different parts of China that can make it difficult for them to understand each other.<p>Also, do you think that English doesn't convey meaning by tone? One English sentence can have several different meanings based on things such as tone and stress, and is one of the most difficult aspects of English for ESL speakers to master.<p>And in all honesty, the tones aren't that difficult to master. If you take a Chinese class, you'll spend at least the first month working on them, and once you've got them down, that's that.",1280009881
1544507,comment,1543586,1544433,0,0,swannodette,,,"Er, Clojure has CL style macros so you can easily get to this level of brevity if that is desired.",1280009865
1544506,comment,1544351,1544351,0,0,malkia,,,"I'm doing sometimes 1, but rarely - for example I've found my nickname about 5 times in a huge codebase. It's easier to search for it, and gives me back clues - memos - that are even easier to see from P4,svn,git etc. log/changelist. And sometimes that depot is not present, especially if you cooperate with different studio and there is no way to exchange depots (they might even use something else).<p>So sometimes that's okay.<p>Number 2 is also sometimes needed. But instead of commenting it like C++, we #ifdef it 0. It's probably wrong, but if you are working in ""foreign waters"" and you are not sure, old code like this might give some clues (this is assuming the code base is not really that good, and not much documentation either).<p>3 is awfull, but acceptable for standard libraries, or code that is really trying to be specific about something.<p>4 is also okay, but not like this - it could be: ""// TODO: Jimmie's bsp file (quake bsp) wasn't working due to some new lumps introduced. Temporarily fixed, needs proper one.\nAlso a coder introduced a TODO macro, that in Visual Studio actually prints out TODO when it's building the app.<p>Seen 5, and it's reasonable - for example: ""Due to short deadline, blah blah blah"". Again if possible add the TODO macro, so it's fixed later.<p>For game development for example - It's almost always more important to ship on time, rather than to have some well commented code. I wish that was the case, but I haven't found a studio where this is really done - maybe engine, sdk, framework, library developers do that.",1280009862
1544505,comment,1544077,1544077,0,0,baguasquirrel,,,"This article has its fair dose of FUD, as NYTimes pertaining to tech usually are. The title sets the tone, and quoting Jalopnik as if they are credible journalism raises some serious eyebrows.<p>You can typically read the bias in these articles by simply looking at the spin of the first sentence of each paragraph, because it's the pauses between the paragraphs that set the poise and direction of the monologue.",1280009836
1544504,comment,1544441,1544477,0,0,malkia,,,"Duh. Thanks :)",1280009834
1544503,comment,1544351,1544496,0,0,makecheck,,,"Not necessarily.  Yes, if you're fortunate enough to have something like Trac that can easily link between a line of code and a ticket number, then bug reports can handle everything.  But otherwise, how would you describe it?  Sometimes a problem only ""makes sense"" if you're looking directly at the affected line of code, and the comment is right there.  If you leave a 'grep'-able thing like ""FIXME"" in your comment, you won't really lose it.",1280009802
1544502,comment,1543871,1543910,0,0,WildUtah,,,"* My parents would often speak to me in Korean. My (english speaking) friends would sometimes ask me ""what did she say?"" Strangely, though I understood clearly in my mind what my mother said, I could not translate what she said into English.*<p>I'm English-Spanish bilingual and I have the same problem.  I can chat along in Spanish and then try to translate what was said into English but it doesn't work.  I have to rethink it and say it all over again in English.<p>Spanish and English are a lot closer than English and Korean.  Since it happens in both pairs, it's probably a universal problem.  Translating is a different skill from bilingualism.",1280009669
1544501,comment,1543145,1544128,0,0,Lewisham,,,"I honestly wouldn't know about the majority of these issues (and, secretly, I suspect most universities don't either).<p>Aside from legal issues, it seems to me the business proposition is the same as the open-source business proposition: you know the most about the system you've created, so you're in the best position to consult on it. If you want a startup, I think guys like Cloudera show that even if you give away what was traditionally thought of as the family jewels, you can still very effectively monetize. That's what the university should leverage.<p>Anyway, for most projects, you've already given the game away in the paper (or at least, should have done): the expensive thing was the idea. Reimplementation is cheap.",1280009647
1544500,comment,1544173,1544173,0,0,theprodigy,,,"This will totally help fight enemies in the 4th generation warfare. When the cost of these drones fall and can be equipped with infrared cameras we can keep eyes on the battle field constantly.<p>We can see enemies moving and hiding in the battlefield, gain intelligence and take them out.<p>This can lower american casualties.",1280009584
1544498,story,,,7,7,blackrabbit,"Ask HN: How to know how good at coding you are?",,"I'm a student in college, and I use to think that I was fairly good at coding. But lately, I'm not sure.<p>I was wondering if there are particularly principles of a good coder or some kind of pattern. I find myself coding well and quick when I'm interested and motivated, but other times I'm slow and just procrastinating.",1280009521
1544497,comment,1543885,1544302,0,0,trominos,,,"This is a bad idea. Even if we accept that no individual can reasonably spend more than $200 million non-charitably (which is false), super-rich people tend to care deeply about money for its own sake -- I say this from limited but real personal experience -- and the accumulation of money tends to be a major factor in their motivation to continue to produce and to invest. If you impose a $200 million wealth cap, you are going to substantially reduce the wealth production of some of the most productive members of society and dramatically curb certain kinds of investment.<p>What do you get in return? Essentially the government receives a bunch of claim checks for wealth (remember that ""money"" itself has almost no intrinsic value; what we're after, from a macroeconomic viewpoint, is a maximal sustainable production of wealth). Your proposal amounts to reducing overall wealth production in exchange for increasing the government's buying power by a comparatively small amount. Forget ethical arguments against it; except in very extreme economic circumstances, it's absurd from a practical standpoint.",1280009517
1544496,comment,1544351,1544439,0,0,bradly,,,"TODO's and FIXME's are a fact of life, but if you are using a bug or issue tracker, that is probably a better place to report these. Otherwise you'll have tasks in both your code and your issue tracker instead of a central location.",1280009514
1544495,comment,1543586,1543689,0,0,Jach,,,"<a href=""http://pastebin.com/PsecNBvB"" rel=""nofollow"">http://pastebin.com/PsecNBvB</a><p>(To be honest, I think clojure has its purposes, but a one-off calculator page isn't one of them. Use the right tool for the right job and all that.)",1280009503
1544494,comment,1544338,1544453,0,0,shasta,,,"This is pretty much the system that I use, but (B) is often at the computer, e.g. open to a text file that contains design notes.",1280009480
1544493,comment,1541942,1543879,0,0,j_baker,,,"One thing to bear in mind about Japan:  they put people in mental institutions rather than jails.  All it takes to get a person committed against their will is the opinion of one family member and one psychiatrist.  In the US, a court order is needed to hold someone against their will for longer than a few days.<p>Generally speaking, ""troublemakers"" will go to a mental hospital before going to jail.  That's probably why suicides are so high in Japan as well:  the mental health system is so overloaded they can't appropriately deal with real problems.",1280009389
1544492,comment,1543973,1543973,0,0,aamar,,,"Your basic pitch seems to be to make administrative work that was previously tedious into something that's relatively fun, easy, and quick.  UX improvements might help, but are there instead ways to automate administrative tasks away?  I'd second listening to users, since I don't have any sense of what the pain points are (but understanding pain points beats feature requests).<p>Didn't sign up, but some concrete thoughts on the marketing site: avoid very high contrast, e.g. true black (#000) on true white (#FFF).  The orange text on blue vibrates visually and is somewhat hard to read.  Overall, really like the simple, benefits-focused presentation.  Great idea and good luck on it.",1280009389
1544491,comment,1544466,1544466,0,0,greenlblue,,,"I like his take on wisdom being proper model construction but I don't see the need to bring religion or any other belief system into it.",1280009382
1544490,story,,,1,3,TristanKromer,"KissMobs - Join the mob, get kissed. (an @startupweekend project)",http://www.kissmobs.com/,,1280009375
1544489,comment,1544351,1544351,0,0,dkarl,,,"<i>If you have to mention requirements in your comments, don’t mention peoples names. Jim from sales probably moved on from the company and most likely the programmers reading this won’t know who he is. Not to mention the fact that it everything else in the comment is irrelevant.</i><p>If this is the best knowledge you have of the requirements, then by all means document it.  It should be documented in emails to your boss (along with your failed attempts at getting better requirements,) but adding a comment in the code can also be helpful.  Maintenance programmers tend to assume that there's some valid, if depressing, reason the code is the way it is, and it's nice to let them know that you didn't have any good reason for doing it the way you did.",1280009361
1544488,comment,1544351,1544351,0,0,lifeisstillgood,,,"I agree about type 5 (the TODO comment) but I also think there is a lot of value in type 4.  I would not call it ""lifestory"" but ""business reasoning"".  Far too often one can visit code and think - I know what it does, but why does the business want that to happen?  With comments like that the origin of the request is now obvious.  And as we are all being Agile-y now and no-one writes down business requirements anymore, type 4 might just save your ass.",1280009360
1544486,comment,1544202,1544363,0,0,mahmud,,,"Not that again:<p><a href=""http://mohrslaws.blogspot.com/2010/07/this-is-why-nobody-takes-you-seriously.html"" rel=""nofollow"">http://mohrslaws.blogspot.com/2010/07/this-is-why-nobody-tak...</a>",1280009329
1544485,comment,1544336,1544451,0,0,mhd,,,"While I think the format for criticism is a bit too nit-picky, I wont't totally argue against that. I just wanted to provide some context. He sure has an axe to grind…",1280009314
1544484,comment,1544100,1544290,0,0,wrs,,,"If you've already done this backwards, there is a book called <i>Ruby for Rails</i> that teaches advanced Ruby from the point of view that you already use Rails but haven't been able to get very far into the source. A bit outdated, but still pretty good stuff. (<a href=""http://www.manning.com/black/"" rel=""nofollow"">http://www.manning.com/black/</a>)",1280009290
1544483,comment,1543782,1543782,0,0,BerislavLopac,,,"For a long time I've had a wonderful HyperCard application (not written by me), and I've dreamed for years how I would just love to be able to disassemble it and re-write it in a modern language, like Python. Unfortunately, I have no idea where to find something to even run it with, much less look into the internals. Any ideas?",1280009250
1544481,comment,1544077,1544297,0,0,mgw,,,"It's also inspiring, and scary, to see that he's been broke before the Tesla IPO because he completely believes in the success of the companies he's involved with.\nThat is unconditional faith in ability.",1280009205
1544480,comment,1543914,1543914,0,0,dpcan,,,"I love Rokon as an open source OpenGL ES engine/library for Android<p><a href=""http://www.rokonandroid.com/"" rel=""nofollow"">http://www.rokonandroid.com/</a><p>Plus, I like the license better.<p>It's unbelievably easy to use and to get started with.",1280009186
1544479,comment,1544351,1544351,0,0,skybrian,,,"I partially disagree with #4: it's actually a good idea to cite your sources - certainly a better idea than a lot of the other boilerplate commenting I see. If your only source for a business rule is ""conversation with Bob in Sales"" then say that.",1280009181
1544478,comment,1543604,1544396,0,0,chuckfouts,,,"No need to be sorry as you're absolutely correct.",1280009093
1544477,comment,1544441,1544441,0,0,techiferous,,,"You've got the wrong post.  Move your comment over here: <a href=""http://news.ycombinator.com/item?id=1544351"" rel=""nofollow"">http://news.ycombinator.com/item?id=1544351</a>",1280009073
1544476,comment,1544351,1544387,0,0,Lewisham,,,"I actually setup Textmate to do a completion on # with<p># `whoami` | `date +""%Y-%m-%d""` |<p>I find #1 to be very useful, primarily for the source control granularity issue. The other useful thing about these type of comments is that if you look through the code, and you spot something that looks like a hack job, usually a comment like that indicates it wasn't the original author who did it. If you're lucky, you'll be told why the hack job is in there, if you're not, you can at least begin the process of finding out (or removing if need be).<p>#2 suffers from a similar invisibility problem in source control. I comment out code when it has the possibility to come back. However, if I'm not the primary author of the file, and a feature has been removed, the HEAD has no indications that the code was ever there. I wouldn't know about restoring it, I'd waste time reimplementing.<p>I think the author's heart is in the right place, but it seems to me that he either has an encyclopedic knowledge of his team's codebase, or he only works on projects by himself.<p>Tool support could help here (maybe Xcode 4 with it's timeline feature), where want you want is a button that says ""show me all the lines this file used to have"" in some sort of ethereal, back from the dead, view. GitHub does this somewhat with Compare View[1], but it would be nice from the editor as well. I'm sure someone will come in and tell me that emacs has had this for 20 years ;)<p>[1]: Check out this huge one: <a href=""http://github.com/sinatra/sinatra/compare/0.2.0...1.0.a#diff-61"" rel=""nofollow"">http://github.com/sinatra/sinatra/compare/0.2.0...1.0.a#diff...</a>",1280009034
1544474,comment,1544338,1544338,0,0,mcs,,,"I spend more time thinking about program architecture and design than actual coding.<p>Unless it's something simple, then I can just open vim or textmate and go to town. If it's something that I know the development scope is fairly small I may even dive in and figure things out along the way. It really depends on the project.<p>I can crank out a few hundred lines of code per hour but that's totally subjective. 10 lines of code in node.js do a lot more than 10 lines of code in C.<p>There's also the revision stage if it's a project you know you'll come back to. I generally do spend more time refactoring than the initial prototype. I would hope a lot of developers are like that.<p>For example, I wrote a Meebo libpurple connector in glib in about 3 hours, but I spent 2 days refining it before I could consider it useful because I had done things that were silly and not the normal way of using glib.",1280009012
1544472,comment,1543885,1544302,0,0,Ardit20,,,"Well you have five points taking a very unconventional stance, thus, I do not think your argument is ridiculous at all.<p>I would be more interested in the solution however, taking into account the practicalities. I mean, if the government had the billions of Gates, besides using them to pay off their debt, their only option might perhaps be to give it to people on benefit who do nothing with their day whatever, rather than, as Gates has, though a rare occurrence, employ a lot of people for a very worthy cause.<p>My point I think is that to allow people to make as much as possible, allows the society to benefit from the fundamental ideas of the free market, while, to give it to the government effectively locks this wealth in bureaucracy and grant it to people who might be very stupid and waste it all entirely to no good whatever.",1280009008
1544471,comment,1544338,1544338,0,0,svnv,,,"Not that fast, but that is mainly because I am a noob, and I take pride in trying to avoid writing shitty code. Insted of just hammering away at the keyboard and using whatever just works I spend some time to make my code more redable and easy to maintain. Also, since we use TDD we end up writing a lot of tests for each pice of code that goes in to our product.",1280009004
1544469,comment,1544175,1544295,0,0,kordless,,,"That's pretty awesome actually, for several reasons!",1280008947
1544467,comment,1544338,1544338,0,0,nhnifong,,,"My test, revise cycle averages about 10 seconds, with a long 15 minute cycle thrown in about once every 30 short cycles.",1280008916
1544466,story,,,11,7,burningion,"Acquire Wisdom Over Wealth",http://www.kpkaiser.com/entrepreneurship/acquire-wisdom-over-wealth/,,1280008876
1544464,comment,1544179,1544418,0,0,ashitvora,,,"Thanks. I like Mediterranean veggie food too.",1280008807
