ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
7957876,comment,7956627,7957795,4,0,coldtea,,,"><i>It&#x27;s a matter of there actually being principles instead of the alternative; nothing.</i><p>BS principles are not better than no principles.<p>Or principles that tie your hand around your back for that matter. And functional principles do that for a lot of cases, with respect to performance, memory impact etc.<p>Functional languages are not some kind of 2x or 10x multiplier of a programmers abilities. In fact most of the things that made LISP interesting have been ported since ages in modern non-functional languages, from GC to closures, and even macros.<p>><i>Most FP languages are not suitable for performance sensitive tasks and most people will admit this. For most other tasks, though, they&#x27;re just going to allow you to work faster and get to where you&#x27;re going with less hassle.</i><p>Not the case in the real world.<p>For one, this BS idea forgets all about ecosystems and libraries. Python will let you work faster and get where you&#x27;re going with less hassle. Functional languages that have 1/10 the libraries available, and in various stages of abandonment because of lack of programmers will not.<p>><i>The alternative isn&#x27;t as much a principle as it is a lack of principle.</i><p>Really? For one, what all &quot;FP languages&quot; do when they run, is &quot;flip individual switches and modify memory&quot;. The way they model the program is just an abstraction (and a leaky one) from what happens in the machine.<p>Second, I thought the Church-Turing thesis shows that lambda calculus is equivalent to the Turing machine way, for one.<p>Third, where did you get the idea that non-FP languages don&#x27;t have principles? Smalltalk, for one, sure has tons of unifying principles behind it. Prolog. Erlang.<p>And if Algol was good enough for Dijkstra, modern, 10-times better algol derivatives are good enough for me. Especially if they also have adopted tons of functional paradigms, which you can get to opt to use when it makes sense for your design, and not have them forced upon you.",1403949592
7957875,comment,7956078,7957639,2,0,NateDad,,,"Why?  &quot;my code&quot; is in $GOPATH/src/github.com/natefinch/   ... all code that is not &quot;my code&quot; is in other directories.  Why bother having to switch over to some other gopath to get there?<p>Go import directories, are, by definition, unique.  My work code is under github.com/juju/.  Why should I put labix.org/v2/mgo under some other root path?  They&#x27;re unique directories either way.",1403949550
7957874,comment,7957610,7957610,1,0,raving-richard,,,"Whenever I get depressed there are some coping mechanisms I use.<p>* Play games (e.g. OpenArena and FreeCiv), cheating liberally and/or playing on easy settings. (Yeah, take that bot...)<p>* Go for long bike rides. Take water, some food, and a good book. Go somewhere new each time.<p>*Read a good book. I read SF&F, but whatever tickles your fancy.<p>Oh look, all escapist mechanisms. That&#x27;s OK. I can&#x27;t offer any suggestion as to debt relief, as that&#x27;s something else. But...",1403949412
7957873,comment,7953346,7953642,1,0,crdoconnor,,,">The poor abstraction really causes problems when you need to do anything beyond the simplest of use cases. To achieve even modest performance gains, you&#x27;re better off hand writing your SQL. Additionally, doing even the most trivial of trivial aggregate queries will also mean that you&#x27;re hand writing SQL.<p>This isn&#x27;t really a big deal - you can just hand-write your sql directly using .raw() and just pull out the corresponding result set and use it as you were doing before.<p>I&#x27;ve had to do what you&#x27;re suggesting, but not a huge amount. Maybe 10-15 times on large, high scale projects.<p>SQLAlchemy is better but the number of times I have to break out of its abstraction layer are not enough for me to feel like I really have a desperate need to use alchemy instead. It&#x27;s a minor inconvenience, nothing more.",1403949405
7957872,comment,7955093,7957831,3,0,lloeki,,,"> Here&#x27;s a chart<p>Interesting that in order to compare apples to apples it&#x27;s single threaded. That means for a back of the envelope estimation of ideally parallel loads performance, the graph goes &quot;through the roof&quot; since it&#x27;s exactly twice on my laptop or four times on my desktop.",1403949336
7957871,story,,,1,0,bpedro,"OAuth2 vs. Basic Authentication",http://apiux.com/2013/07/10/oauth-2-trumps-basic-authentication/,,1403949300
7957870,story,,,2,3,rayhano,"Is Linkedin down?",,,1403949278
7957869,story,,,1,1,jcr,"Reasons Why You Canâ€™t Live Without A Particle Accelerator",http://nautil.us/issue/14/mutation/10-reasons-why-you-cant-live-without-a-particle-accelerator,,1403949276
7957867,comment,7957610,7957610,2,0,cLeEOGPw,,,"Use your experience to do another startup, but avoid doing things which led to startup failure. The worst thing you could do is give up. Also try to find investors first instead of spending family money on first business.",1403949163
7957866,comment,7957564,7957564,3,0,foxhill,,,"specifically, the idea that UI elements should behave as if they were tangible objects isn&#x27;t a new idea. this is what apple have been doing for.. quite a while, and honestly I didn&#x27;t think this was breakthrough stuff - elastic bounce on scroll views, smooth, clean, and consistent UI transitions, and previously skeuomorphic design principle.. the idea that that interactions with a interface should mirror our interactions with things in real life doesn&#x27;t seem like a shocking revelation.<p>what&#x27;s worse is that they have had this epiphany, and then.. seemingly ignored it.",1403949116
7957865,comment,7956627,7957837,2,0,mpweiher,,,"> It depends on how much math they have behind them.<p>Very much so, and also depends very much on the problem at hand.  Yes, compilers and yet another RB-Tree implementation can be great in FP.  Most real-world problems aren&#x27;t that.  In fact, most real world problems I have encountered (and see) tend to be massively about manipulating state.  Often they do little else than shuffle data around.<p>I sometimes think &quot;computers&quot; are misnamed, because they do so little actual &quot;computation&quot;.  &quot;Data around-shufflers&quot; might be more appropriate.",1403949097
7957862,comment,7957400,7957400,1,0,mike1978,,,"I use SpikeTime.<p>The website is only in german, but the tool can be used in english. I don&#x27;t get why they don&#x27;t translate the website ... but well the tool is really cool.<p><a href=""http://www.spiketime.de/"" rel=""nofollow"">http://www.spiketime.de/</a>",1403949022
7957861,comment,7957564,7957564,6,0,metaphorical,,,"I love the visual direction, and I think it will work very well for a diverse set of Google products. The style guide is beautifully done and well articulated.<p>In terms of interaction design, however, it doesn&#x27;t break any new ground, apart from better transitions (but at times, too much).<p>> So the team set about creating this metaphorical material, which is a little bit like magical paper.<p>A bit of nitpicking: &quot;a bit like magical paper&quot; can hardly be called a Metaphor. It&#x27;s just a loose analogy. In fact, I have to force my imagination to see the paper-ness in the UI, otherwise it just feels like flat UIs with realistic shadows.",1403948999
7957860,comment,7957400,7957400,1,0,kguppta,,,"Simple Google spreadsheet with formulas to automatically sum up hours and dollar spent, as well as subtract what remains in my projects.<p>As well, quick drop down to select what is being worked on by whom.",1403948936
7957859,comment,7957400,7957728,1,0,dalke,,,"The UI needs to be more complicated than that. I&#x27;ve forgotten to note the finish time, and have needed to update things after the fact. Suppose, for example, that I&#x27;ve forgotten to exclude lunch from the timing system. With a pen&paper system I can mark &quot;(lunch, 45 minutes)&quot; after the fact. There are plenty of computer-based systems which can do the same, but their UIs are more complicated than the one you just outlined.<p>Also, with pen&paper billing is usually quantized to 10 or 15 minute intervals, which makes it easier to do the arithmetic.",1403948933
7957858,comment,7954944,7956593,5,0,userbinator,,,"This has to be one of the most irritatingly pedantic aspects of C, as the vast majority of systems use 2&#x27;s complement and so would overflow in the same way, but the compiler writers think it&#x27;s an &quot;opportunity for optimisation&quot; and I think this ends up causing more trouble than the optimisations are worth. The only sane interpretation of something like<p><pre><code>    if(x + 1 < x)\n     ...\n</code></pre>\nis an overflow check, but silently &quot;optimising away&quot; that code because of the assumption that signed integers will never overflow is just horribly hostile and absolutely idiotic behaviour in my opinion. A sensible and pragmatic way to fix this would be to update the standard to define signed overflow, and maybe add a macro that is defined only on non-2s-complement platforms.",1403948914
7957857,comment,7953346,7953653,1,0,crdoconnor,,,"Using jinja2 is technically possible, but it would be difficult to use other django apps at the same time as they all assume the standard django templates.",1403948881
7957856,comment,7953346,7953621,1,0,crdoconnor,,,"Its deliberate dumbness was a good idea that does not get enough credit. You should not be doing complex logic in the template layer.<p>I still think it could be made more user friendly for designers, though. We need some sort of app that will autofill django templates&#x27; context variables with test data so that designers can see how it all looks and edit them under different circumstances without having to deal with the messiness or state of the system underneath.",1403948828
7957855,story,,,1,0,andrey-p,"Show HN: Ectoplasm, alternative bridge between Node.js and PhantomJS",https://github.com/andrey-p/ectoplasm-js,,1403948822
7957854,comment,7957564,7957652,3,0,aviraldg,,,"Could you be more specific? Which Material interaction do you think you could improve upon?",1403948605
7957853,comment,7957716,7957716,1,0,spingsprong,,,"It has a fatality rate of UP TO 80-90%. Some outbreaks it&#x27;s been as low as 35% and the current outbreak in west Africa has a 65% fatality rate.<p>Ebola isn&#x27;t super contagious. Way, way more people die from the flu every single year than have died from Ebola ever.",1403948595
7957852,comment,7956585,7957752,2,0,keyme,,,"I don&#x27;t know the level of difficulty involved in the former, but &quot;spoofing&quot; cell data is possible by making the phone connect to sub-optimal towers. This would cost you service quality and battery life, but you&#x27;d &quot;appear&quot; elsewhere. This requires reversing and patching proprietary software, though.",1403948497
7957851,comment,7956627,7957825,2,0,codygman,,,"Thanks for sharing your experiences! I&#x27;ve always been curious about this.",1403948472
7957850,comment,7953978,7957189,1,0,interfacesketch,,,"Thanks very much! I wanted to keep all the existing features of an article page rather than eliminate anything. I think it&#x27;s possible to do this while making the page feel a little less busy and cluttered.",1403948430
7957849,comment,7956627,7957390,2,0,seanmcdirmid,,,"A space leak is simply pinning memory unintentionally, which definitely happens in most garbage collected languages.<p>Perhaps Python programmers would be baffled by time leaks instead :)",1403948425
7957848,comment,7954327,7954327,1,0,alex_doom,,,"Top things for &quot;World Cup&quot; are videos of girls with big boobs in low cut shirts. Classy.",1403948330
7957847,comment,7956627,7957753,1,0,seanmcdirmid,,,"Elm is this weird language that is really good at visual demos but is not anything interesting as far as language goes (if you want Haskell, just use Haskell, if you want FRP, there are plenty of libs for that, if you need pseudo FRP on web, then elm makes sense).<p>Scratch would be impossible to use as a functional language, especially for the logo-style turtle procedural behavior they are aiming at.",1403948298
7957846,comment,7953978,7955422,1,0,interfacesketch,,,"Thanks. I think the structure and organisation of articles on Wikipedia is pretty sound, but some visual tweaks can help make the page more easily scannable and a litte bit more aesthetically pleasing (which I realise is a very subjective thing!)",1403948242
7957845,comment,7955917,7955917,1,0,MrJagil,,,"Sounds somewhat familiar to what you can achieve with Paul Stretch. I assume it has something do with phasing...",1403948237
7957844,comment,7955734,7956732,2,0,Joeri,,,"I don&#x27;t see how lying about anything could be considered ethical. It may be socially acceptable to lie about yourself, but that doesn&#x27;t make it ethical. Plenty of things that are socially acceptable are in fact profoundly unethical.<p>So, the line is in fact very simple: if you are an ethical person, you never lie.<p>Update: however, upon reflection, society forces us into practical considerations. If you avoid lying you will be taken advantage of because you weaken your position in society. For that reason, while lying is never ethical, it is sometimes the only realistic alternative. You may for example have people lying about being hiv-positive to get a job. There is no rational reason in many job categories to reject such an applicant, but in practice they won&#x27;t get a job if they tell the truth. I also would make an exception for withholding the whole truth. Sometimes people have the right not to know things which would only hurt their feelings and bring no practical benefit.",1403948111
7957843,comment,7955917,7957220,4,0,bni,,,"Has this been reproduce somewhere else? I have always been very sceptical of that claim since I first read it.",1403948069
7957842,comment,7957400,7957561,2,0,AlexeyMK,,,"Yes! In particular, Harvest for Mac: <a href=""http://www.getharvest.com/mac"" rel=""nofollow"">http://www.getharvest.com/mac</a>.<p>Killer features:\n- Start/stop timing in one-click or keyboard shortcut\n- See exact time in menu bar: <a href=""https://www.dropbox.com/s/d56zb9ryffik7ey/Screenshot%202014-06-28%2002.32.45.png"" rel=""nofollow"">https://www.dropbox.com/s/d56zb9ryffik7ey/Screenshot%202014-...</a>\n- Idle time detection - leave your computer with timer running. When you&#x27;re back, Harvest asks &quot;You&#x27;ve been gone 15 minutes, should that time be counted?&quot;<p>Still hoping for:\n- better offline support (can&#x27;t stop timer w/o internet access, which means a bit of mental work when working offline on the Caltrain).",1403948060
7957841,comment,7956246,7957796,3,0,illo,,,"Erlang, just for fun:<p><pre><code>  grade(#student{work=Work, tried_hard=Tried}) -> grade1(Work, Tried).\n  grade1(excellent_work, _) -> &#x27;a+&#x27;;\n  grade1(okay_stuff, yes) -> b;\n  grade1(okay_stuff, _) -> &#x27;b-&#x27;;\n  grade1(_, _) -> c.\n</code></pre>\nEdit: formatting.",1403948029
7957839,comment,7956246,7956246,5,0,asgard1024,,,"Wouldn&#x27;t the opposite - stream editor (programmable) in Lisp - be more useful?",1403947946
7957837,comment,7956627,7957764,3,0,seanmcdirmid,,,"> While I do believe that the principles used in FP languages are vastly superior I don&#x27;t think this is really a matter of debate. The advantages are obvious and if you didn&#x27;t realize it you probably weren&#x27;t taught well enough.<p>No, there are plenty of people who will debate this, programming languages academics even. There is a vocal FP crowd that fawns over elegance, but there are plenty of other people who are more pragmatic about it.<p>> I sometimes wonder if the wins from FP languages are lost on the people not already scarred by the pitfalls of imperative programming.<p>Pity the poor programmers who get things done, write huge beautiful systems, all without worshiping lambdas? And by taking shortcuts ala side effects as a way to making things easier.<p>> Maybe someone uninitiated in programming won&#x27;t have as many problems formulating functional solutions to problems in Haskell too.<p>It depends on how much math they have behind them. You take a mathemegician, sure, but a high schooler who is still having trouble with pre-calc?",1403947893
7957836,comment,7956627,7957377,3,0,cdsmith,,,"It&#x27;s worth mentioning that the tool this blog post is about defines a simplified version of Haskell&#x27;s standard library.  In particular, there are no type classes exported from Prelude, much less monads or functors.  In the end, it&#x27;s not really any more complex than Scheme, except for syntax.<p>Now, true, the syntax is much more complicated than Scheme.  You can operators and precedence and all that.  But while definitely complex, it is mostly consistent with math notation.  I tried to teach with Scheme first (following www.bootstrapworld.org) before I created this, and I found the change in syntax from what they are used to can be a real obstacle for children.  This is also consistent with the comment about MIT moving to Python, which similarly has much more complex but familiar syntax.",1403947845
7957835,comment,7956025,7957153,1,0,davidgerard,,,"With an irrelevant dig at minimum wage thrown in as a bonus &quot;not as bad as&quot; argument.",1403947841
7957833,story,,,1,0,kumarishan,"How search begins at ReaderDeck",http://blog.readerdeck.com/sneak-peek-beginning-your-exploration,,1403947831
7957832,comment,7956304,7956553,3,0,lloeki,,,"> <i>All I wanted to do earlier was drop the pin at my current location (which Google Maps couldn&#x27;t divine due to no GPS) and then &quot;Search Nearby&quot; for eating places.</i><p><pre><code>    /me \n    goes to maps.google.com\n    clicks on a random area of the map\n    a &quot;location&quot; card pops up with lat/long and estimated name\n    clicks on the card to validate the location\n    a second card pops up below with a street view shot,\n     &quot;photos&quot;, &quot;explore this area&quot; with &quot;search nearby&quot; and\n     &quot;getting around&quot; with traffic and travel options\n    a third &quot;quick facts&quot; card is slid below\n    clicks on &quot;search nearby&quot; and types &quot;restaurants&quot;\n</code></pre>\nAlso possible: type &quot;restaurants near whatever&quot;, or simply &quot;restaurants&quot;, which scopes the request on the current viewport.<p>Seriously.",1403947778
7957831,comment,7955093,7957114,9,0,InclinedPlane,,,"CPUs are still getting a lot faster, at a geometric rate. But they are doing so at a different rate than they did in the &#x27;90s, where CPUS were getting enormously faster year over year.<p>Here&#x27;s a chart (note that the vertical scale is logarithmic): <a href=""http://preshing.com/images/integer-perf.png"" rel=""nofollow"">http://preshing.com/images/integer-perf.png</a><p>In the &#x27;90s processors were doubling in performance every 20 months or so (i.e. a factor of 64x per decade). Since about 2005 processors have been doubling in performance about every 43 months. This is much slower than the insanely fast rate during the &#x27;90s but it is still very fast and still on an exponential curve.",1403947751
7957830,comment,7957155,7957413,4,0,AlexeyMK,,,"Next time I have a long flight, I can now go through Project Euler and stop when I&#x27;m right.  Having solutions is nice to have.<p>One interesting potential mode would be to (as suggested below) encrypt the solutions and switch --verify to --attempt, then keep track of # of attempts for scorekeeping.",1403947745
7957829,comment,7953978,7953978,1,0,wodenokoto,,,"There are still some rough edges, but definitely one of the best redesigns I have seen.<p>+ large, beautiful readable fonts<p>+ Search bar is a search bar and easy to find<p>+ unnecessary borders removed<p>- Could use a little bit more branding<p>- No change-language feature<p>- Zoom disabled on mobile devices<p>- Some elements needs size tuning",1403947720
7957828,comment,7956627,7957795,11,0,mpweiher,,,"Wow, the arrogance and ignorance is just incredible, just the way I remember. :-)  Someone who doesn&#x27;t buy into your highly constrained world-view must obviously be ignorant.<p>&quot;doesn&#x27;t seem like you got it&quot;  ... &quot;purposefully not getting it&quot; ... &quot;principles [..] undeniably the best&quot;.<p>No, you <i>like</i> those principles best, and that&#x27;s about the most you can say.  We don&#x27;t even have solid criteria with which to make that call, never mind there being any type of consensus as to which is &quot;best&quot; (except within specific communities, but with each community having a different consensus and the most closed-minded of these communities usually the most sure of themselves).<p>Just to head off more ignorant comments:  I aced those courses, as well as a few more including the elective &quot;foundations of FP&quot; and did my oral exam on Backus&#x27;s FP calculus, which inspired me to come up with Higher Order Messaging:  <a href=""http://en.wikipedia.org/wiki/Higher_order_message"" rel=""nofollow"">http://en.wikipedia.org/wiki/Higher_order_message</a><p>I also did some courses on algebraic specification and graph grammars (related to category theory), as well as formal specification with Z (yes, aced those as well).  While useful in certain very constrained areas, these techniques trade making the smaller problem better (spec -> code) for making the larger problem ( actual problem -> spec ) infinitely worse.<p>Of course, functional techniques are a part of my toolbox, as they should be for any professional.  However, if they were the only contents or even the majority of my toolbox, I couldn&#x27;t do what I do and have been doing for the last quarter century.",1403947713
7957826,comment,7956627,7957780,2,0,andreasvc,,,"That is an incredibly condescending way of arguing. On the other side of the coin you could claim that imperative programming is more practical, concerned with the actual steps needed to solve a problem, instead of an ideal, indirect formulation. Imagine having to explain someone how to bake an apple pie <i>without being able to state any specific steps how to do it</i> but instead describing the pie as some set of interrelationships of the ingredients. (That is probably not a fair characterization of FP, but it&#x27;s at the same level as &quot;[imperative programmars] love the machine&quot;).",1403947699
7957825,comment,7956627,7957162,15,0,klrr,,,"I&#x27;m a teen I guess. Haskell as a first language worked great for me, and I happened to write a game and a few scripts in Python two months ago so I think I can answer your question.<p>So, what made learning Haskell a good experience I think was mainly the strong type system. You could basically even early on use functions you barely knew what its name meant solely based on its type signature. It also made the progress of writing a program very nice, you write it and then it fails, you go back and try fix it, and when it compiles it usually worked.<p>There are some things to keep in mind though. Wild recursion is really the GOTO of functional languages, it&#x27;s important to teach how to use the generalized folds and traversals early on. Secondly it is important to have simple analogies to concepts such as functors, monoids and monads etc. If you make sure to not care about these strange names then you can go pretty far by just trying to make the type signatures stick together, and it&#x27;s not important for a beginner to grasp these directly either.<p>Python was quite smooth to learn coming from Haskell, the syntax is similar and it simply felt like programming in Haskell&#x27;s do-blocks. It was very easy to get quickly going, I managed to write a little script talking to a JSON API almost directly after reading the official tutorial. I also digged a little bit into the realm of OOP, I wrote a simple game using Kivy. It felt quite nice actually, I could get some code re-use, although it was harder to get that (as newbie) than in Haskell.<p>EDIT: Something like typed Racket might been even better when I think about it, since Racket got a lot of resources for complete beginners. Then you get the benefit of easy to use syntax too, although syntax is probably not the biggest problem when starting out. For the record I usually recommend Python or Racket when people ask me where to start, because in the end I don&#x27;t think it matter much what language you go with first, just make sure not to limit the paradigm of languages you learn afterwards.",1403947648
7957824,comment,7950598,7951305,1,0,gabemart,,,"It&#x27;s none of my business, but to an outsider it seems like you&#x27;re being <i>extremely</i> frank about this whole thing.",1403947641
7957822,story,,,1,0,mvdwoord,"Aaron Swartz documentary censored?",https://twitter.com/mvdwrd/status/482616204147060736,,1403947579
7957821,story,,,2,0,mathieug,"Fallout Style CV",http://mathieu-gosselin.com/,,1403947566
7957820,comment,7956246,7957707,2,0,bad_login,,,"<p><pre><code>   ;; comparing with racket:\n\n   (define (grade student)\n     (cond \n      [(excellent-work student) &quot;A+&quot;]\n      [(and (okay-stuff student) (tried-hard student)) &quot;B&quot;]\n      [(okay-stuff student) &quot;B-&quot;]\n      [else &quot;C&quot;]))\n\n   ;; Or\n\n   (require racket/match)\n\n   (define (grade student)\n     (match (map (lambda (fn) (fn student)) \n                 &#x27;(excellent-work okay-stuff tried-hard))\n       [(list #t _ _)  &quot;A+&quot;]\n       [(list _ #t #t) &quot;B&quot;]\n       [(list _ #t _)  &quot;B-&quot;]\n       [else           &quot;C&quot;]))</code></pre>",1403947523
7957818,comment,7957564,7957794,3,0,manicdee,,,"A cynical translation: &quot;We finally realised that Apple was onto a good thing with their minimalism, layered UI and UI as a metaphor for physically interacting with your data. So we&#x27;re putting a lot of fancy words together to make it sound like we&#x27;re doing something amazing and new, while all we&#x27;re actually achieving is explicitly stating what Apple has assumed to be common sense for decades. After all if we want all these Android developers to conform to a common human interface guideline ruleset rather than inventing their own UI for every new application, we have to make that ruleset sound sexy and awesome!&quot;<p>I love how the guy presenting on stage starts talking about a new material that will provide tactile feedback, as if Google is already launching phones with shape-shifting screens. Some Android fans are going to be mighty disappointed when we don&#x27;t have tactile morphing screens in the stores for Christmas.",1403947408
7957817,comment,7956796,7957735,5,0,gkoz,,,"It seems your public domain suffix list needs updating (kiev.ua is a public domain). Someone&#x27;s posted a link to a relevant Mozilla project recently: <a href=""https://publicsuffix.org/"" rel=""nofollow"">https://publicsuffix.org/</a>",1403947357
7957816,comment,7956627,7957786,0,0,seanmcdirmid,,,"But scheme/racket is really not that far off from java compared to Haskell. I&#x27;ve never had a hard time working with it, even though I&#x27;ve never learned it formally (ok, two weeks of LISP a long time ago). Racket never felt weird, and many of its API are OO in everything but name, it&#x27;s like C# with the same amount of FP abstractions (list comprehensions), and maybe some macros and continuations if you want to do something advanced.<p>But Haskell really is functional programming, there is no way to accidentally create an easy to use OO-style library. And then there are the monads....",1403947339
7957815,comment,7954778,7956026,1,0,Offler,,,"It sounds like they will add support for the same constructs as JS will have in ES7 <a href=""https://github.com/lukehoban/ecmascript-asyncawait"" rel=""nofollow"">https://github.com/lukehoban/ecmascript-asyncawait</a>",1403947336
7957814,comment,7953346,7957331,2,0,andybak,,,"In some ways Python is more liberal but in different areas - Metaclasses, &#x27;magic&#x27; methods (hooking into __getattr__ allows some very clever behaviour), operator overloading, control of the abstract syntax tree and doing crazy stuff with imports. Try doing some of <i>that</i> in javascript.<p>You want prototypical inheritance? Here you go: <a href=""http://tobyho.com/2009/05/23/prototype-inheritence-in/"" rel=""nofollow"">http://tobyho.com/2009/05/23/prototype-inheritence-in/</a><p>Monkeypathing? Nothing forbids it other than a sea of raised eyebrows if there was a cleaner way to achieve the same thing.<p>The only limitation Python has with first-level functions is that they can&#x27;t be anonymous. I know a lot of people chafe at this but I&#x27;ve never seen any javascript code that wouldn&#x27;t be improved by removing a couple of levels of nested anonymous functions ;-)",1403947228
7957813,comment,7957610,7957718,2,0,macguyver,,,"Exactly this.  It&#x27;s terribly demoralizing to go through the bs associated with a job search after a failed startup.  I would be happy to start something up with one or more cofounders.<p>What we need is a job placement service for (temporarily) failed entrepreneurs, a support network, and possible more.<p>Entrepreneurship is like parenthood.  It takes doing it to know what it&#x27;s like, and it&#x27;s very harsh when there&#x27;s little to no support.<p>People who have the guts to start something and have something (scars included) to show have initiative, drive, ambition.  They should have no problem finding jobs, support and whatever resource they need.",1403947206
7957812,comment,7957564,7957794,1,0,platinum1,,,"Their metaphor for materials is the combination of two ideas:  A streamlining/optimization of screen area, and a set of rules that define how things move.  The material metaphor is based on things we can touch in real life.  However, this metaphor is not going to be strictly adhered to in order to take advantage of the technology it&#x27;s implemented on and provide a good user experience.",1403947141
7957811,comment,7950637,7950987,2,0,eshvk,,,"This is truly magnificent. If you haven&#x27;t already, I would recommend reading the Harvard Grant Study. A longitudinal study of young Harvard grads over the course of several decades. Most of what they said is falls in line what the generational component. Without trying to sound too much like a flower child, it is hard work in the form of a qualitative relationship like your grand parents that makes this world a slightly better place to live in.",1403947113
7957810,story,,,1,0,janmayan,"My Simple Shopping App: Yinkos",https://play.google.com/store/apps/details?id=com.yinkos.grocerylist,"A while back I got gired of the mundane task of writing up shopping lists every time I went shopping. I desperately wanted an app that was easy to use and able to cut my list making time to a minimum. I also wanted an app that could compare prices across grocery stores I visit most often. I didn&#x27;t find anything on Google Play that met these criteria very well, so I created an app of my own: Yinkos.<p>Yinkos is now on Google Play and is free and available in the UK.<p>I&#x27;ll like to share the experience with others so I&#x27;ll very much appreciate any feedback you have on it.",1403947064
7957809,story,,,1,0,ingve,"Using Swift as a Scripting Language",http://www.libertypages.com/clarktech/?p=182,,1403946943
7957808,comment,7956466,7957414,1,0,fpalmans,,,"The extra clicking for gold/units, even the manual upgrading of so many planet enhancements, distracts from the conquest portion of the game.<p>The more planets I get, the more tedious &#x27;work&#x27; I have. I found it unbearable above 20 systems (about half were lvl 3/4 in both speed&quantity).",1403946632
7957807,comment,7956304,7957267,4,0,andybak,,,"Yep and apple are feeling the pinch of their strategy. New products need to either have a screen that is an even multiple of previous screen sizes - or they need to guide developers through a moderately painful migration.",1403946630
7957806,comment,7957610,7957610,11,0,tvladeck,,,"Hey - this happened to me. Startup (www.buildinghero.com) and long-term relationship (5 years) both ended in fall 2013. Feel free to email me at thomas.vladeck@gmail.com. Definitely the hardest couple of months scrambling to get over both. I was homeless, heartbroken, broke, and unemployed all at the same time. But I did get over it and so can you! Would love to talk.",1403946600
7957805,comment,7956627,7957158,2,0,quesebifurcan,,,"> Would they think Python was stupid or would they be grateful that all of a sudden they could use a for loop?<p>Interesting question. My first language was (Common) Lisp. Not sure if it was a good or bad choice (wasn&#x27;t a choice really, more of a coincidence), or if those terms even apply. Anyway, I&#x27;m fairly certain it took me much longer than necessary to get my first projects done (hint: some of them were never finished). I spent a lot of time trying to express my ideas in a functional style -- avoiding the loop macro, avoiding side-effects whenever possible etc. Slowly but surely drifting away from the actual problems I had set out to solve.<p>The feeling I got when I discovered Python is very accurately described in that xkcd comic which pops up in your browser when you type &quot;import antigravity&quot; in the interpreter. Then again, if Lisp <i>was</i> a detour on the path to becoming an &quot;efficient and productive programmer&quot;, it was certainly a deeply interesting one which left me hungry for more -- I&#x27;m learning Haskell now (who isn&#x27;t?) and am enjoying it immensely.",1403946539
7957804,comment,7957155,7957450,1,0,waitingkuo,,,"What about the latest problem? Should we get the function work only after you update the solution databases?",1403946504
7957803,story,,,2,0,krisvage,"Editorial: The Peace Prize for Snowden",https://www.aftenposten.no/nyheter/iriks/article7620730.ece,,1403946229
7957802,comment,7957610,7957610,2,0,rawland,,,"Get some professional help!<p>Seriously. This reads like full halt in your life and different kinds of debt, which means &quot;brakes&quot; on your future life for a while. With hard consequences for your psyche.<p>It&#x27;s not a shame to get someone, who basically tries to get you back on track. You can get someone like this via your insurance, which is seriously interested in you not &quot;producing costs&quot;, because of your pretty sick self, in future. I recommend people with psychology background also offering some kind of Coaching or Supervision.<p>After you are standing straight again, pin that somewhere:<p><pre><code>  Ever tried.\n  Ever failed.\n  No matter.\n  Try again.\n  Fail again.\n  Fail better.\n</code></pre>\n(S. Beckett)",1403946195
7957801,story,,,93,54,tomaskazemekas,"How a mathematician constructed a decision tree to solve a medical problem",http://fastml.com/how-a-russian-mathematician-constructed-a-decision-tree-by-hand-to-solve-a-medical-problem/,,1403946089
