ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
123387,comment,123078,123257,0,0,edw519,,,"""I thought it was going to kill me""<p>Yea, this is the tough part.  I've done almost everything I could think of with my personal life to maximize my startup's chances of success.  Diet, exercise, sleeping, time spent with family, adjusting work schedule, leveraging technology, etc., etc.,etc.<p>Now all I have to do is build the thing.",1203976681
123386,comment,123255,123301,0,0,jcl,,,"I've heard this idea from multiple places, so I expect it's one of those ideas that is easy to think of but difficult to implement.  A similar idea was expressed in the plot of The Music Man, where children are taught to play instruments by imagining that they are whistling.<p>I wouldn't be surprised if the main implementation problem is that many people are naturally off-key when whistling or humming, and those on-key know the notes well enough that it is more efficient to simply enter music via a piano-like keyboard.",1203976569
123385,comment,123241,123241,0,0,rmason,,,"Flex is tag based and compiles to flash and sits on the client and talks to Coldfusion (or any other server side language) on the server.<p>If you have done javascript flex (or more properly Actionscript) will be easy to pick up.<p>However if you don't like Rapid Application Development (or get paid for code by the line) you will hate Coldfusion ;<)",1203976565
123384,comment,123265,123380,0,0,raganwald,,,"""After learning more languages, Ruby is starting to become pretty ugly to me, but somehow people keep managing to ignore all its faults, make little hacks like these, and be very productive with it.""<p>When I first saw it, I wondered why anyone would want this irregular little language when they could just use Smalltalk or Scheme. An early rant asked why I have to know the difference between a block and a Proc: why the &^(%*)(& do I have to know when to use a block, when to use a Proc, and how to convert between them???",1203976555
123383,comment,123310,123310,0,0,Tichy,,,"The word ""Java"" kept ringing in my head while I read that article.",1203976495
123382,story,,,1,0,dpapathanasiou,"The Page 99 Test: Open a Book to Page 99 and Read; the Quality of the Whole will be Revealed",http://page99test.blogspot.com/,,1203976465
123381,comment,123353,123353,0,0,davidw,,,"This is my biggest fear with Hecl.  Hecl makes mobile apps easier, putting them within reach of people who aren't Java whizzes, but the web makes it easier still.<p>However... people are still worried about connection charges, and phones <i>are</i> getting more capable, to the point where you can do some fairly interesting things on them, like with Android.",1203976439
123380,comment,123265,123283,0,0,gregwebs,,,"The way to write this in ruby without extending the symbol class is<p><pre><code>  (1..100).inject { |acc, n| acc + n }\n</code></pre>\ninject is a left fold or a reduce- it applies the function {acc + n} to each element in a list (or array) where acc is the result of the last function application.<p>For such a simple function, all we need is the knowledge that we are adding, which is contained in the symbol '+', representing the addition method.\nSo Ideally we would like to write<p><pre><code>  (1..100).inject( :+ )\n</code></pre>\nThe semicolon is how you tell ruby you are using a symbol.\nYes, you can write a simple sum function, but the point is that this code is more flexible in a very powerful way- we can use other functions then inject and add.<p>Method calling in Ruby is actually message passing.  So instead of calling<p><pre><code>   1.+ 2   # => 3\n</code></pre>\nYou can say<p><pre><code>  1.send( :+, 2 )   # => 3\n</code></pre>\nSo we are not trying to convert a symbol to a proc.  What we are trying to do is continually send the message ':+' to inject's built in accumulator, with  every member of the list (or array) as an argument.<p>In ruby, the brackets are like a function, but it is actually  a closure of class Proc.  You can convert a different class to a proc (if it supports it) by calling to_proc.<p>Ruby has a syntactic shortcut, '&' for converting to a proc.  Normally it actually makes the code clearer because it is also used when passing Procs onto other methods, and is a nice type annotation.  So we can hack this syntactic shortcut to create<p><pre><code>  (1..100).inject( &:+ )\n</code></pre>\nSo by defining how '&' works by defining to_proc, we can make it create a closure (or Proc) which sends the ':+' symbol, along with any arguments that are yielded to the Proc.  In this case, every value from (2..100) is yielded to the Proc.  (1 will be the starting value of the accumulator.)<p>You can accomplish a lot of things with a closure, including this hack.  But to me this shows that ruby was not designed as a functional programming language, and how by using Ruby's dangerous flexibility you can manage to warp it towards your needs.<p>After learning more languages, Ruby is starting to become pretty ugly to me, but somehow people keep managing to ignore all its faults, make little hacks like these, and be very productive with it.",1203976342
123379,comment,123218,123370,0,0,edw519,,,"""The only lesson I'll get from digging through code to find a bug caused by an improper character, though, is that I should have chosen a better language.""<p>That may be the only lesson, but there's also a nice (but hard earned) little byproduct: you REALLY get to know your code.  I want the details of my system to be stored in my brain's firmware much like Woz did when he designed the Apple II.  Hopefully, the dividends will come later when I'm tweaking it again.",1203976316
123378,comment,123254,123307,0,0,apathy,,,"It's not about websites -- raw text is what Perl was made to handle.  It really is the Swiss Army Chainsaw, the Duct Tape of the Internet -- I try never to use Perl anymore, but when I need it, it's there, along with CPAN, calmly biding its time.<p>Perl is horrible, ugly, unclean, unmaintainable in the general case, inelegant (<i>ahem</i> accessing nested arrays by multiple index? <i>ahem</i>)... and in spite of all that, used sparingly and in the right situations, it cannot be beat.<p>CPAN is the key to Perl.  Lots and lots of code that Just Works.  Sometimes the elegant, bulletproof solution is not the best one -- sometimes the solution that takes 2 lines and 5 minutes is, in fact, the correct solution for the task at hand.  And that latter task is whence Perl sprang.  It also amply describes the chaos of the Interwebthingy from around 1994 to 2001.<p>Things are different now.  Corporate-like.  But in the beginning, it was the Wild West, and you used the sharpest tool you had handy.  Perl was often that tool.",1203976275
123377,comment,123241,123241,0,0,mattmaroon,,,"We're using it for our site, and it's pretty much perfect for what we're doing. There's really no better way to make something that's live, dynamic, good-looking, and cross compatible in every browser.<p>Without knowing anything specific about it, I'd guess ColdFusion sucks given the fact that it is the only Adobe product that almost nobody has used for any new application since the Reagan administration.",1203976201
123376,story,,,20,3,macmac,"Judge makes lawyers pay for frivolous patent suit",http://www.denverpost.com/popular/ci_8354619,"""The Denver Post is reporting that the U.S. 10th Circuit Court of Appeals has upheld the decision of a Federal judge who threw out and reversed a jury decision in favor of a patent infringement claim and ordered the plaintiff's lawyers to pay the defendants' court costs. U.S. District Senior Judge Richard P. Matsch sanctioned the plaintiff's attorneys for 'cavalier and abusive' misconduct and for having a 'what can I get away with?' attitude during a 13-day patent infringement trial in Denver. With the Appeals Court in agreement, could this case be the 'shot heard round the world' in the revolution against patent trolls?""",1203976163
123375,story,,,2,0,transburgh,"Webware 100 Voting Opens -- Go and Vote.",http://www.centernetworks.com/webware-100-launches,,1203976148
123374,comment,123371,123371,0,0,davidw,,,"<a href=""http://stufftodo.dedasys.com"" rel=""nofollow"">http://stufftodo.dedasys.com</a><p>It's more of a task list/time tracker.  It does the second about as well as is possible without a local client running and is alright at the first.",1203976068
123373,story,,,1,0,rob,"From $0 to $65 million in five years: Bear Naked's Story",http://money.cnn.com/2008/02/05/smbusiness/bear_naked.fsb/index.htm?postversion=2008020608,,1203976040
123372,comment,123193,123193,0,0,jfornear,,,"The only thing setting entrepreneurs apart is their inclination to buckle down and make things happen. It really isn't that complicated, and all the sensationalism is just unnecessary.<p>Though the Woz quote about being one with the computer is classic... Now I'm paranoid that I have Woz in my lap, which is dirty.",1203975931
123371,story,,,2,5,mhidalgo,"What bug/time tracking software do you use ?",,"What bug/time tracking software do you use ?",1203975914
123370,comment,123218,123218,0,0,mattmaroon,,,"As a novice programmer, I indent my code rather anally and find it very helpful. Even with html/css it's a life saver.<p>That said, the last thing I need is more debugging due to a missed indentation somewhere. One of the things I've enjoyed most about Ruby (as opposed to PHP, C++, etc.) is the reduced number of dumb errors like that. There's nothing worse, in my mind, than searching for a bug to find it was a missing semi-colon or some other such triviality, because it feels like time totally wasted.<p>A logical bug is at least something I learn from. It shows me the error in my original thinking, which means I won't make the mistake again. Its challenging, enlightening and, on some level even fun.<p>The only lesson I'll get from digging through code to find a bug caused by an improper character, though, is that I should have chosen a better language.",1203975818
123369,comment,123158,123240,0,0,wmf,,,"Chip design is hard. Measure twice, cut once.",1203975721
123368,comment,123243,123243,0,0,edw519,,,"So would I be more efficient with one of those treadmill/computer terminal contraptions?",1203975469
123367,comment,123265,123315,0,0,Darmani,,,"Replace + in the Ruby with multiplication, or division, or boolean and, or even exponentiation, and show me the VB equivalent.<p>A digital-typewriter user will laugh at a PC user if all he sees the PC user doing is word processing.",1203975468
123366,comment,123263,123351,0,0,wmf,,,"Sun is shipping faster chips than Nehalem?",1203975458
123365,comment,123081,123081,0,0,crzivn,,,"One favourite resource of mine regarding creativity is Originality in Design by Nick Pugh (<a href=""http://thegnomonworkshop.com/dvds/npu01.html"" rel=""nofollow"">http://thegnomonworkshop.com/dvds/npu01.html</a>), where he describes his process of coming up with original design, as applied to drawing. One interesting thing he brings up is that sometimes, if you know less about something you become more free in your thinking about that subject. So experts face a real danger of becoming stuck in their way of thinking. There is a lot more in there and it is worth checking out for the discussions alone, even if you aren't into drawing.",1203975326
123364,comment,123223,123333,0,0,slim,,,"can we use it? or is it private?",1203975224
123363,comment,123265,123265,0,0,mattjones,,,"To some degree, using open classes is just how you write functions in Ruby.<p>Say there exists a class called Errors in some Ruby library.  It doesn't have an each() method, but I'd like it to.  Nobody would complain if I wrote a function each_error() which took an Errors object as an argument.  Reopening the Errors class and giving it an each() method is the way you do that in Ruby, and it's not really any more dangerous.",1203974977
123362,comment,123265,123350,0,0,Darmani,,,"Tokens beginning with a colon are literal Ruby symbols.<p>Prepending an ampersand before the last argument of a method call means that argument should be converted into a Proc and sent as a callback block to that method.",1203974860
123361,comment,123081,123341,0,0,hobbs,,,"Not to get too deep into philosophy, but I imagine it has to do with observed cause and effect. For example, you may not realize it, but you think in a paradigm where 2 + 2 = 4. There is no good reason why 2+2=4 <i>has</i> to be true; we only believe it is true because we observe 4 objects every time we aggregate 2 and 2. <i>Every</i> time.<p>We break out of a paradigm when we push it to the extremes and notice effects that hadn't been observed before. For example, in quantum dynamics when something can pop up out of nothingness and 2 + 2 can sometimes equal 5.<p>The difficult part of escaping our paradigms is that we can't just assume any random thing in our current paradigm is false. (e.g., <i>My</i> sky is not blue.) You need to find the key ingredient in order to come up with a new paradigm that is actually useful.",1203974835
123360,comment,122706,122786,0,0,zandorg,,,"Yes but Top Gun was made on a budget of $17 million. The focus then was on low-budget, high-concept movies, based on a good story, NOT spending lots of money. Unfortunately, people now think of high-concept as meaning big budget, when that's not the case.",1203974817
123359,comment,123254,123254,0,0,jcromartie,,,"<p><pre><code>  You'll see\n  \n  Dictionary someDic = new Dictionary();\n  \n  And dream of\n  \n  %someDic = ()\n</code></pre>\nSeeing that has me dreaming of:<p><pre><code>  someDic = {}</code></pre>",1203974813
123358,comment,123265,123350,0,0,raganwald,,,"Actually, it's &(:+) not &:(+). The & takes its argument and converts from a Proc to a block. :+ is a symbol that implements the method #to_proc to give you a block that sums its receiver and its argument.",1203974788
123357,comment,123170,123170,0,0,fiaz,,,"better technology != community killer<p>They could add all the bells and whistles they want, but coining something as a ""community killer"" (or ""Digg killer"" in this case) is laughable at best.<p>The only way Digg can be killed is if a community shows up that is in some way culturally hip.  For example, if some celebrities were to band together and unexpectedly show how hard-core geeky/nerdy they can be, I'm certain it would be more of a Digg killer because they immediately will be pulling attention away for the right reason (what geek wouldn't love to associate themselves with Keanu Reeves if the real-life Neo turns out to be a automata theory junkie!?!?!).  Communal value is immediately created around such an individual in the same way Kevin Rose is the focal point for Digg (I'd be hard pressed to be convinced otherwise of Kevin Rose's celebrity status).<p>A concrete example is del.icio.us.  Yahoo! ended up purchasing del.icio.us even though, one may argue, Yahoo!'s service was technologically superior (tell me otherwise and I'll merely point to the fact that del.icio.us, prior to acquisition and for a period of time afterwards, suffered frequent outages the likes of which would cause heads to roll at Yahoo!).  It's true that availability might be classified as different than ""feature-set"", but my counter argument would be that the reliability of ANY application contributes to the user experience in either a positive or a negative way the same way the color selection might impact the overall user experience.  The community wouldn't leave del.icio.us for a reason, and so it didn't matter what technology ANYBODY (Google included) would build to try and move the critical mass away.<p>From where did del.icio.us originate?  From the mind of an overworked quant jock working for a market maker in Manhattan; Joshua Schachter even got turned down for a job at Google, and I suppose it is up for debate that tagging has revolutionized (ala Clay Shirky) the way we interact with the amount of information we sift through on the internet, but it has definitely changed things in a rather dramatic way.  The reason why I mention this last fact is because there is something to be said for hiring people that are not ""optimized"" enough on their resume because sometimes ideas that formulate from nowhere turn into revolutionary concepts.  Similarly, I have very little faith in groups of engineers who can create technologically superior platforms to understand (on average mind you) the cultural/social aspect of WHY certain cultural phenomenon grow in the first place anymore than I would expect TV show writers to understand inductive reasoning/logic and how it relates to creating quality software.<p>I would place my money on a geek/nerd who spends his spare time playing with Legos to come up with the next big community than anything that would come from the minds of one of the big internet giants because chances are the geek is more in tune with a trend that is likely to catch on with his friends and then grow virally as opposed to engineered, advertising-driven attempts to create online culture.  But I wouldn't at all say that such a community would be a ""Digg killer"" because the reasons for assembly are different, at a different time, and for the sake of a different user experience.  And this type of user experience has NOTHING to do with how windows might expand or hide the way they do on OSX vs. Windows.<p>Social software operates on different principles of competition than does software that helps people achieve something.  To illustrate further, you don't hear people in the entertainment industry make statements such as, ""Is 'Heroes' Going To Be the 'Lost' Killer?"" - of course not!<p>Social groups are very nebulous and they assemble for reasons completely different than why somebody might choose a web browser, operating system, or any other piece of software that involves achieving how we interact with computers.  Social software is about interacting with others and, MOST IMPORTANTLY, the quality of that interaction.",1203974776
123356,comment,122802,122802,0,0,jbrun,,,"The tide is starting to turn in favour of online journalism. The layoffs at the NYT last week are just the beginning, to really take off, a set of 'standards' needs to be developed. Perhaps some sort of open-source peer review of blog/online articles could replace the traditional editorial oversight of large papers.",1203974763
123355,comment,123265,123345,0,0,raganwald,,,"You would be amazed what people will do to Java. Just the other day I was reading something here about writing Java code using an Excel spread sheet. I'm pretty sure that wasn't in any of the JSRs.",1203974702
123354,story,,,19,14,blackswan,"Our secret sauce",http://googleblog.blogspot.com/2008/02/our-secret-sauce.html,,1203974523
123353,story,,,23,21,blackswan,"Mobile applications, RIP",http://mobileopportunity.blogspot.com/2008/02/mobile-applications-rip.html,,1203974497
123352,comment,123241,123336,0,0,ghiotion,,,"Do you run ColdFusion on the server side?  If not, what are you using on the backend?",1203974462
123351,comment,123263,123263,0,0,xirium,,,"This inadvertant leak could be in Sun's favour because they've already got faster chips shipping.",1203974437
123350,comment,123265,123265,0,0,kommissar,,,"What does the &: do in Ruby?",1203974250
123349,comment,123241,123340,0,0,wallflower,,,"I usually just jump down through the rabbit-hole and drill down through the object hierarchy in 'Variables', but you can add expressions (e.g. _myFooVar) to watch, in the debugger IDE.",1203974183
123348,comment,123236,123279,0,0,kirubakaran,,,"Also <a href=""http://www.esnips.com"" rel=""nofollow"">http://www.esnips.com</a><p>For instance: <i>Common Lisp</i><p><a href=""http://www.esnips.com/_t_/common+lisp?q=common+lisp"" rel=""nofollow"">http://www.esnips.com/_t_/common+lisp?q=common+lisp</a>",1203974166
123347,comment,123246,123246,0,0,bprater,,,"Fairly useless article for anyone who hacks. I'd ask the author to get another half-dozen languages under his belt before he bellows about what is right or wrong about this or that language.<p>PHP is an accessible language. It's on every Linux installation. Name a page .php and it just works. (What other language ""just works""?) Open the page and with a little fiddling even a novice can create results.",1203974082
123346,comment,123073,123073,0,0,misterbwong,,,"It seems as if the author is looking at the attempted Yahoo! acquisition as a pure business/user play.  BG said it himself-it's the engineers he's after, not the market share.",1203974080
123345,comment,123265,123265,0,0,Tichy,,,"Actually he is wrong about Java: people did add features to it without changing Java itself, for example AspectJ, and CLIB (I think is the name) that generates Java Code on the fly. Hibernate uses it, for example, to change the behaviour of the mapped Objects behind the scene.",1203973890
123344,comment,123254,123254,0,0,staunch,,,"Python and Ruby have most of the fundamental advantages of Perl. I don't really miss Perl itself all that much when using them. CPAN on the other hand is damned hard habit to kick. It's addicting having a massive collection of (often) battle hardened code available for virtually any task.",1203973864
123343,comment,123081,123341,0,0,pg,,,"<i>Why do we default to thinking that is driven by prevailing paradigms?</i><p>They're what you think <i>in</i>.",1203973798
123342,comment,123265,123318,0,0,Excedrin,,,"What does '/' mean? Also, why does '+' seem to do different things in the first and second expressions? I suppose '!n' means ""array of integers ending at n"" which seems like an odd choice since it's neither 'not' nor factorial.",1203973691
123341,comment,123081,123270,0,0,fiaz,,,"""I think the hardest part of breaking out of a paradigm is to realize that you're in one.""<p>Perhaps the single most useful insight I've heard thus far.  The best part of this observation is that we have many examples that are readily available to illustrate it for us, yet we somehow fall back into thinking that is governed by preconceived notions.<p>Maybe the more interesting question is:<p>Why do we default to thinking that is driven by prevailing paradigms?",1203973673
123340,comment,123241,123330,0,0,ujeezy,,,"I'll second the debugger, it's very nice to have.  Is there any kind of interactive console you can use to query specific attributes while in debug mode? I hate having to walk down an object's hierarchy to find stuff.",1203973565
123339,story,,,3,3,manvsmachine,"Ask YC: Where else do you spend your time (online)?",,"Besides news.yc, what other communities / sites / webapps do you use the most?  If you have a regular (non-web) app that consumes an inordinate amount of time, include that too.",1203973547
123338,comment,123243,123243,0,0,rokhayakebe,,,"i do think with my body when it comes to women.",1203973306
123337,comment,123241,123241,0,0,ujeezy,,,"Once I figured out when to use MXML (it's great for setting up layouts) and when to use Actionscript (I try to use AS for most everything else), I was happy with it: it gets the job done fast, it's object-oriented enough for my purposes, and it's far easier for me to understand than the Flash timeline.  Being able to quickly produce AIR apps is another nice use for Flex.<p>I'd recommend starting with Flex Builder (based on Eclipse) which was much easier to get setup than the commandline tools.",1203973289
123336,comment,123241,123241,0,0,bprater,,,"Actionscript isn't a server-side language. It runs in the browser. So they are seriously mistaken if they think they can replace Coldfusion with Flex/AS. (And I'd question if I really wanted to work for a company that didn't know this.)<p>What about Flex/AS3? The more time I spent with it, the more I keep saying, ""Whoa, this is a well-designed language/toolkit."" Flex Builder, the editor, is also well-designed.<p>You will struggle a bit to get over the learning curve, but if you appreciate elegance in UI, you'll grow to really like it. Actionscript is not my first choice in a programming language, but it is fully featured and plenty robust.",1203973282
