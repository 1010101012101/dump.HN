ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
1020333,story,,,1,0,alxross,"Javascript MVC- lightweight solution for my heavyweight problem?",,"Apologies if you're tired of the Javascript framework question for Ajax web apps. But given the direction of things like HTML 5 and Google Chrome OS- I think it's a very important question going forward and the answers I've seen on StackOverflow and elsewhere seem to be lacking.<p>I'm trying to find a 70% solution to my needs so I can moving on to other architectural problems. I've been trying to create a complete stack for ""enterprise apps"" (think ERP, CRM, or other business processes) based around an Ajax front, simple JSON/REST services, NoSQL DB, and Map/Reduce behind it (feel free to contact me if this makes you curious). I'd also like to keep it OSS, and stick to ""standard"" solutions so others can hack on it...<p>For apps like these, it seems the ""single page aplication"" makes sense (like GMail). To me, that means that the Controller in MVC is now primarily on the client. Which means that there is probably more in common with client-side frameworks like Swing than with fully server-side MVC like Rails or Struts. If the DOM (and browser) are the view layer, and the model is provided by JSON/REST on the server (and I'm ignoring the client-side cache at the moment), the missing piece is a controller layer to call services (or respond to comet-style events) and programatically update the view. In my case, I will be programatically building forms, nav elements, etc based on JSON calls from the server.<p>And in looking at JS frameworks, I tend to group them from lightweight to heavy. I've only been kicking the tires for a week or two, but these are my impressions, going from lightweight to heavier:<p>* jQuery- Great framework for keeping simple things simple and growing in adoption. But seemed a little too lightweight truly be a UI framework, where I was loading and creating panels programatically. I haven't used Prototype or MooTools but my guess is that they sit here as well.<p>* Dojo- Felt a little heavier than jQuery, and more of a widget framework around it which is good for me. I wanted to like it but I feel that the documentation was rough for my work (which may be a bit of an edge case) and errors in examples frustrated me.<p>* YUI- Looked promising. YUI seems to have a well thought out Widget model with events, HTML rendering, etc. ExtJS may be in this category although I know the dual license model is a negative to some people.<p>* GWT- Code in Java and compile to optimized JS. I only checked it out a little bit. I'm sure it is a thorough conceptual model, given that Google has driven a lot in the Ajax space. But I'm trying not to do much on the server and don't want to be tied to Java right now. It seemed to be harder to skin and I'm still operating under the fantasy that my app will be easily skinnable by others.<p>* Sproutcore, Cappucino, Javascript MVC, TrimPath Junction, etc- These are relatively heavyweight frameworks. I tried a little of the three mentioned above, and I feel that they seem to impose too much conceptual overhead on top of javascript. Some require code generators or compilation to JS, which to me is a ""code smell"" indicator of too much framework. I may be being unjustly fair. As far as Cappucino, I have to give props to the 280 North guys for 280slides.com- which I think is the most impressive Ajax app out there. Their framework (with their Objective-J as the language) may be great if you come from an Objective-C background as they seem to. I don't so I didn't explore any further. YMMV...<p>Of the bunch, I think YUI may be the best fit. I'm still hoping for a simple way in jQuery, though I feel it may not have enough of a framework around UI layouts, widgets, etc.<p>I'm certainly no expert on this and would love to hear thoughts from those in the community...<p>Feel free to hit me up if you're curious about my project...<p>Cheers,
Alex
alex at alexlross dot com",1262083536
1020332,comment,1020137,1020285,0,0,davidw,,,"I think the amount of people not in either program far outweighs the number actually connected with either.  And founders who have gotten into both regularly post here, although I think there are more YC people.  So I don't think it's actually quite so biased.",1262083500
1020331,comment,1016494,1016494,0,0,brc,,,"Just why would anyone really want to measure pollution on their ride.  It's like measuring the temperature : interesting to know but precious little is added by the accuracy.  You don't need to know the exact temperature to know when to put on a coat, you don't need to know the Nox readings to tell if one path has more pollution than another.  Pointless gold plating.",1262083341
1020330,comment,1019360,1019474,0,0,fauigerzigerk,,,"Sure, everyone should think about that, but there is a traditional way to mitigate some of the risks. It's called a contract. Very few services of any kind would exist if everyone just walked away.<p>My conclusion from all of this is that the web is not as different from earlier ""platforms"" as some make it appear. If I want to build on someone's service, I make a contract that sets out the rights and obligations of either side.<p>I'm not a lawyer so I wonder how ToS are related to contracts. Does google have the right to change the ToS unilaterally without notification or agreement?",1262083022
1020329,comment,1020328,1020328,0,0,surki,,,"And the notion ink's homepage <a href=""http://www.notionink.com/"" rel=""nofollow"">http://www.notionink.com/</a>",1262082939
1020328,story,,,3,2,surki,"Notion Ink Tegra Android smartpad",http://www.slashgear.com/notion-ink-tegra-android-smartpad-uses-pixel-qi-display-1866308/,,1262082882
1020327,comment,1019783,1019852,0,0,billswift,,,"What I read Fuller did was simply catnap whenever he felt the urge.  I also heard he never slept regularly again after starting this.  I worked for an architect who spent a summer at Black Mountain, he said Fuller would just lie down and take a nap anywhere, even in the middle of giving a lecture (which I think was an exaggeration, being active, even just lecturing, is the best way I know of to stay awake and alert).",1262082842
1020325,comment,1019783,1019830,0,0,tetha,,,"This is the same results I arrived at. By now, I am pretty convinced that routine and focus is much more important than being able to sleep 4 hours less, whereas routine easens focusing hard and thus being more productive.<p>Right now, my very own producivity experiment is pretty amazing. I am currently training to get up at 6, eat till 7 and work till 12 from there on and after about a week or two of doing this, things just go amazingly well. I get up, and while my head is still kind of sleepy, my hands prepare coffee, breakfast and whatever else needs to be done, but once it is 7 o'clock, I almost instantly slip into the zone and stay there for a few hours (it works well enough such that I am running out of projects to solve for university, which I consider a good thing ;) )",1262082705
1020323,comment,1020194,1020266,0,0,richardw,,,"I've been reading <a href=""http://buildingreputation.com/"" rel=""nofollow"">http://buildingreputation.com/</a> a lot - partly because I want to build in some reputation concepts into a site I'm working on. It has great ideas about how to run points systems - what causes what behaviour. Very powerful.",1262082166
1020322,comment,1018537,1018970,0,0,tetha,,,"In fact, I currently experience the very unintuitive thing that I can create extremely detailed commit messages using git without investing much more time (at the moment, I need to spend around 5-10 additional minutes after an hour or two of development while getting a precise log of added functionality and/or refactorings performed).<p>The thing I am currently investigating is to commit extremely often during development and then use rebase to squash all of these extremely tiny changes into the actual change. Don't come with the ""atomic single changes""-stick after me for squashing local commits, because when I said extremely tiny, I meant extremely tiny. Currently, I commit pretty much whenever a new test is red or the last red test is green, or after a single refactoring step. Given that, I end up with a very detailed sequence of steps and changes I made. Once you are done then, you can just add a summary line, a quick paragraph explaining the reason for those changes and reformat the previous commit messages into a (hieraichally structured) list of detailed changes.<p>I can just repeat this: Doing this is almost no noticeable overhead (it's just a git commit -a -m ""Move method: Foo.bar -> Bar"" after a successful build and some rebasing eventually, which takes 5 - 10 minutes after an hour or two of development) and massively improved my commit messages.",1262082095
1020320,comment,1020130,1020176,0,0,fhars,,,"Using global variables is far easier in this case and may entail changing a whopping three lines of code: one for the declaration of the variable and one each in the two functions using the new variable. The argument passing variant on the other hand requires changing almost every single function call in the whole program. In this sense, imperative programming is strictly more expressive than purely functional programming (in the sense of the word that IIRCgoes back to Felleisen: a paradigm is more expressive if expressing a construct that is localized in this paradigm requires a global program transform in another paradigm).<p>Of course this doesn't mean that a program will be easier to read after going the easier to write way too many times...",1262082009
1020319,comment,1020130,1020176,0,0,foldr,,,">I'd say you achieve this by passing whatever bit of state data you need to drive the behavior in the various calls to functions A and B.<p>Obviously you can do that. The author mentions this possibility. But his point is that passing the state around may involve adding extra parameters to a very large number of functions, which is much more difficult than just using a global variable.<p>It seems odd to me to say that faking global variables by clumsy manual state threading is cleaner than just using global variables. It is more error-prone, more verbose, and less indicative of program structure and programmer intent.",1262081913
1020318,comment,1019629,1020145,0,0,chrischen,,,"Perhaps ""mandating"" is too strong a word. Simply subsidizing or allowing security software to be obtained free would achieve the same effect. I meant ""to make into law"" when I said ""mandate.""<p>When I say ""opt out"", I simply mean that the security software is freely available, but not forced onto your computer. I'm not proposing some sort of communistic action plan. I'm simply suggesting that if the the government provided security software for free, more people would have access to it, and the effect of viruses on businesses can be curtailed.<p>> Of course you will disagree, because in your head security software is perfect and you can't perceive the massive problems that would result from your suggestion, since you're working with mental ideation primitives that don't correspond to anything that exists in the real world.<p>You're absolutely right. My suggestion is predicated upon the idealization of antivirus software. <i>Which is exactly why I started out my suggestion with a question about whether or not virus scans can detect this stuff that cause botnets.</i> And then I followed with an <i>if this is true</i> ... then take my suggestion seriously. I never meant to imply that I know much about the efficacy of a virus scanner. In fact, I use a mac, so my exposure to them has been limited.<p>I don't know how you got a look inside my head, but you clearly need glasses.<p>Second of all I think you, and a lot of other people who down-modded me may have jumped to conclusions when I used the words ""mandate"" and suggested the government do something for the greater good. I'm not suggesting something akin to the communist green dam software. My suggestion is probably less controversial than the healthcare plan, since it would be cheaper to implement. It's more like the government digital converter box subsidy program if anything.<p>So assuming if everyone had virus scan, would it help? If it doesn't, then why did I waste money on Norton antivirus on my PC? Surely virus scan must be able to do something. Definitions can be easily updated across the installed base to counter the latest zombie  virus. If you have evidence that this would all be futile, then I retract all my statements about giving this supposedly useless product out to everyone. You probably know more about virus scanners than I do, and I'm not here to argue with you about their efficacy. So unlike what you thought I wiould do, I am not going to disagree with you about their efficacy.",1262081854
1020317,comment,1020130,1020231,0,0,foldr,,,">By recasting the logic where A and B are called<p>Which in the worst case will involve lifting the type of pretty much every function in the program into a monad. Which is not going to be necessary in C.",1262081830
1020316,comment,1019360,1019865,0,0,blasdel,,,"But TotLol <i>is circumventing the usual scheme</i> -- they're using their own flash player instead of embedding youtube's, which means they never show Google's lower-third banners or intersitial videos.",1262081808
1020315,comment,1019360,1019937,0,0,fauigerzigerk,,,"Oh my, haven't we been debating this endlessly wrt TV? I don't know that anything substantial has come out of it other than that parents who want to ""park"" their toddlers will find a way to do so.<p>Other parents will use YouTube or TV or anything else as a source of inspiration, engagement and communication in addition to many other things they do with their kids.<p>And where parents are not interested in their kids and just park them in front of a screen, I'm comforted by the fact that computer screens, as opposed to the TV screens, provide access to a lot more than passive entertainment.",1262081710
1020314,comment,1020130,1020209,0,0,foldr,,,">In FP, you would probably pass those variables around.<p>The point is that you might have to rewrite every part of the program in order to ""pass around"" those variables, where as in an impure language with global variables, this sort of major rearchitecting is not going to be necessary.",1262081700
1020312,comment,1008624,1011265,0,0,hallmark,,,"I met Ken while I was a student at Brown.  Not only is he talented (the Wired article only mentioned him as the 17 year old programmer from Rhode Island), but he is also an extremely nice fellow.  Not at all cocky.",1262081473
1020309,comment,1020130,1020244,0,0,davidw,,,"That example actually appears fairly regularly in Erlang code.<p><pre><code>    A1 = ...
    A2 = ...
</code></pre>
And it leaves a bad taste in one's mouth.<p>I see putting stuff in a variable as a way to 'take a breather' in the middle of code:<p><pre><code>    A = some(hairy(function(that() + does() * lots()));
    B = back(into(A) + the(A) fray());
</code></pre>
I guess that's not the best example because A is used twice and you could just pop the 'A' calculation out into its own function, but sometimes it's nice to make code easier to read by breaking stuff into discrete steps that are easy to read later, rather than one huge line that does everything and then returns it.",1262081228
1020308,comment,1020188,1020202,0,0,msuh,,,"Nope it's not. The key is the only thing that prevents anyone on the street to decipher the frequency hop pattern of the network. Once that's deciphered then all you need is cheap equipment (as low as $1500) for the necessary hardware and GSM processing software to do the eavesdropping. It really is BIG news.",1262081224
1020307,comment,1019360,1020121,0,0,operon,,,"Comments like this deserves a downvote",1262081067
1020306,comment,1018639,1019777,0,0,Tichy,,,"The data is public, so anybody could have double checked it and found that error. Somebody now did. This is how it should work - it is the only way it can work. Errors can always happen, but scientists are supposed to double check.<p>If the error was deliberate, it would have made no sense to publish the data in such a way that the error could be caught easily.",1262080994
1020305,comment,1019396,1020233,0,0,idlewords,,,"It's not cultural deterioration at all.  It just happened that the first guy to put real production money into a skin magazine had serious intellectual pretensions.  We're all better off for the nice interviews, but there's a reason they had to be bookended with lots and lots of porn for the project to be sustainable.<p>Now that Playboy is a relic instead of the only game in town, they can no longer indulge such expensive tastes.  It says nothing about the wider culture except that we've become more accepting of pornography.",1262080992
1020304,comment,1020213,1020289,0,0,varjag,,,"God, yes. Shows that it's too early here..<p>I'll keep the comment anyway, to not decapitate the discussion now :)",1262080988
1020303,comment,1020137,1020181,0,0,tewks,,,"It's worth examining if a TechCrunch article is more likely to be indicative of success or failure.  A lot of the products and services they write about can be somewhat braindead from a consumer or client perspective, but I'm sure that the hype and buzz as a result of being featured could lead a company further astray from solving any actual problems or filling any real needs.",1262080937
1020302,comment,1019360,1019485,0,0,mtw,,,"they should have uploaded the videos to vimeo/dailymotion and other video websites at the same time",1262080821
