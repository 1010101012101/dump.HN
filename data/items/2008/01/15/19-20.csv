ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
98796,story,,,2,0,getp,"Macworld 2008 Keynote",http://events.apple.com.edgesuite.net/f27853y2/event/index.html?internal=fj2l3s9dm,,1200427181
98795,comment,98726,98726,0,0,mynameishere,,,"<a href=""http://www.jargon.net/jargonfile/m/monty.html"" rel=""nofollow"">http://www.jargon.net/jargonfile/m/monty.html</a>",1200427140
98794,comment,98768,98768,0,0,gibsonf1,,,"Now that is a <i>sweet</i> looking machine.",1200426971
98792,comment,98360,98550,0,0,viergroupie,,,"There is no such thing as public domain for software. If you simply give your software away, it's still your copyrighted work...just without a license for other people to use it.<p><a href=""http://www.linuxjournal.com/article/6225"" rel=""nofollow"">http://www.linuxjournal.com/article/6225</a>",1200426688
98791,comment,98360,98498,0,0,viergroupie,,,"I second zlib. It's slightly more restrictive than MIT, but in a very sensible way. I don't think preventing modified sources from masquerading as the original Arc, or maintaining author attribution will impede adoption overly much.",1200426402
98790,comment,98702,98759,0,0,ardit33,,,"because colons are ugly.   yo.isBig(50) is much more readable.<p>Now, assuming somebody else decides to have a function called isBig(), which does something very different.<p>The only way to use both in php, would be if they had different names (hence the countless of functions that do very similiar things, but have different names).<p>While in languages that have a propper namespace you can do:\nnumModule.isBig(50)\nfloatModule.isBig(50)   --etc<p>Also, in java you can import a class directly.<p>You can use com.mycompany.numClass.isBig(50)<p>or \nimport com.mycompany.numClass;<p>and use  numClass.isBig(50)<p>if there are two classes with the same name, from totally different packages (namespaces), then you will have to use one of them the long way  ( com.mycompany.numClass.isBig(50) )  in order to avoid namespaces conflicts.<p>Java does a decent job in all this.   Python is even less strict (you can import a module with (import as)a nd name it something different, when you use it), which allows for great flexibility, but also more confusion if you don't know what you are doing.\nBut if people adere to the python mantra to keep things flat, than it should not be a problem.<p>So, overrall namespaces are very useful, especially in any large app.   But, you haven't seen them on php yet, as the php crowd could care less for them.  Plus Php was ment just for simple page processing and apps, and nothing too complicated.",1200426324
98789,comment,98429,98577,0,0,superjared,,,"If I recall correctly, yes, they've only been using OpenSolaris over Solaris.",1200426275
98788,comment,98757,98757,0,0,marketer,,,"All the hard-earned money people pay on mortgage interest rates ultimately goes to people like him.",1200425906
98787,comment,98528,98730,0,0,shawndrost,,,"There are tasks that are strictly defined from the outset: there is an existing code base and tech stack, and you must conform to certain company conventions, and the requirements are strict.  I would guess this work constitutes 90% of paid development (and ~2% of useful code).  I don't think your argument really applies to those tasks.",1200425005
98786,comment,98705,98705,0,0,mynameishere,,,"You aren't going to be 5-10 times more productive by avoiding the nightmare that is System.out.println(), or any of the other things he mentions. For instance, I can't believe this warrants attention:<p><pre><code>  if ( a > b )\n  {\n      a = b;\n      b = c;\n  }\n\n  if a > b :\n    a = b\n    b = c\n</code></pre>\nWhy he thinks the Python example is better here I won't speculate upon--why he thinks the Python example would contribute to a 5x or more productivity increase I will attribute to foolishness--but it did give him a chance to gloss over meaningful whitespace, something that should have died with FORTRAN.<p><i>a number of influential voices in the programming community have been expressing serious doubts about the supposed advantages of static typing. </i><p>Ooh, an argument from authority. Well, I'm convinced. I could just as easily say that ""IBM supports Java""--well, IBM is full of influencial voices, yes?<p><i>Each top-level public class must be defined in its own file. If your application has 15 such classes, it has 15 files.</i><p>Again, pure foolishness to think that this contributes to productivity. ""Woe is me, I have to make another file."" At any rate, I'm not sure ""top-level"" is an important distinction. I can put as many private or public static classes in the same file as I want. Do this enough, and you will find out why it is a bad idea.<p><i>You discover that F must throw exception SpecialException, and it must be caught by A.</i><p>False. To avoid this unmitigated nightmare, simply throw the exception up, or only use RuntimeExceptions.<p>Java doesn't have first-class functions. That's its biggest problem.",1200424926
98785,comment,98704,98745,0,0,dpapathanasiou,,,"It's not a question of cool or not; it just seems you haven't been exposed to functional programming yet.<p>Here's an introduction if you've got an imperative/OO background: <a href=""http://www.defmacro.org/ramblings/fp.html"" rel=""nofollow"">http://www.defmacro.org/ramblings/fp.html</a>",1200424439
98784,comment,98244,98358,0,0,yters,,,"How good is Arcs underflow checking?",1200424270
98783,comment,97829,97999,0,0,carlosabs,,,"Hi!\nI'm a ""9 to 6"" web developer in a telecom, and i'm also rolling with a nice WEB 2.0 personal project at home.\nThe only way i found to get motivation to keep developing at home after all those boring 8 hours is smoking some weed.\nAnd what you said about ""different perspectives"" is completely right. \nSometimes i drink some wine, but just a glass, more can make me sleepy and disturbed.",1200424071
