ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
62772,story,,,1,0,raithe,"WordHugger allows internet marketers to own a piece of the web.",http://www.centernetworks.com/wordhugger-launches,,1191445131
62771,comment,62453,62577,0,0,henryw,,,"""Hofstadter's Law: 'It always takes longer than you expect, even when you take into account Hofstadter's law.'""",1191444823
62770,comment,62630,62761,0,0,Shooter,,,"Two other thoughts based on a quick glance at your site:  <p>1. ""shortcomings"" has one 'm' (About PikLuk)<p>2.  Testimonials from guys names ""Joe Bob"" sound fake ;-)  Just 'Joe Larson' might be better.  Similarly, if you can only use the first name of a person providing a testimonial, you should add other descriptive info (such as 'mother of adorable 9 year old Susie"" or something.)  It is a small thing, but it adds a psychological weight to your testimonials.  There are tons of little odd marketing tricks that have been studied and shown to increase conversion rates.  That is one of them.  \n",1191444758
62769,comment,62630,62763,0,0,myoung8,,,"If it's something people truly want, they'll be willing to pay for it. <p>I could see parents shelling out $5-$10/month so their kids have virgin eyes and ears for an extra half-decade...",1191444587
62768,story,,,1,0,niels,"Testing Django applications",http://www.djangoproject.com/documentation/testing/,"New documentation for testing django apps. I especially like the test client you can use to simulate http requests with.",1191444352
62767,story,,,2,4,igexome,"Ask YC: User feedback?",,"I'm wrapping up my last year of school and plan on applying for the summer YC program with two friends to work on a project we're experimenting with now. One of the key elements that I proposed was having an absolute seamless user feedback system.<p>I spent the past six months as an intern at a company that practiced a mix of scrum and XP methodologies and learned how important getting feedback is for the success and direction of a product, so I'm asking every bright person here for any examples or ideas in integrating in a feedback system for a web application. I like twitter.com's system [<a href=""http://twitter.com/help"" rel=""nofollow"">http://twitter.com/help</a>], but that is simply to request to get help. What about a way of allowing for user suggestions? My only concern is that it could easily be ""overdone"" and draw away from a clean and usable site.",1191444310
62766,comment,62617,62728,0,0,pius,,,"Let's say you know you've gotta design a bowling pin from scratch.  TDD and ""standard"" coding practices both require the same initial thought.  You'd say, ok, what's this thing actually have to <i>do</i>?  Maybe you start with, ""it has to fall when hit by a bowling ball hard enough.""<p>If you weren't using TDD, you might go off and create a BowlingPin class, a BowlingBall class (if it's not extant), and hack together a method in some arbitrary order and method.  That's cool, but the TDD approach would have you write a mini ""test.""  In pseudoRuby:<p>[<a href=""http://pastie.caboo.se/103470"" rel=""nofollow"">http://pastie.caboo.se/103470</a>]<p>This, of course, will fail because there is no BowlingPin class.  So you write the class skeleton and re-run the tests.<p>Fails again.  Why?  There is no got_hit method on BowlingPin?  Shit.  Now you've got to go and write the simplest got_hit method that'll work.  So you write something like:<p>[<a href=""http://pastie.caboo.se/103471"" rel=""nofollow"">http://pastie.caboo.se/103471</a>]<p>Rerun the tests.  Dammit!  There's no ""fell?"" method -- gotta implement it!  And so on and so on.<p>There are a few things to note here.  First, it's pretty critical to use a decent test harness.  Running and writing tests <i>has</i> to be crazy fast otherwise this approach won't work well.<p>Next, in running through the TDD cycle you're actually (1) specifying the interfaces and behavior of your code and (2) implementing as narrowly as you can.  The actual ""tests"" you get out of it are almost secondary!  If implemented properly, it's really a design methodology.  That's why the new trend is to change the language from Test Driven to Behavior Driven.  The use of the word ""test"" seems to (understandably) evoke the same response you had of needing an iron-clad spec to work from initially.  It's just not the case.",1191443991
62765,comment,62640,62640,0,0,SwellJoe,,,"The most convincing part of his statement is ""works everywhere, from PC to mobile device"".  I think that's where we'll see a marked divergence between 2.0 and 3.0.  There's a few bits and pieces of it happening already, with Twitter and the Google Maps and gmail, etc.  As the devices get closer to the capabilities of a ""real"" browser, and developer begin to pay more attention to those ~8 billion devices, a whole new world will open up.",1191443966
62764,comment,62718,62738,0,0,neilc,,,"... or Mercurial, Monotone, Darcs, or Git, all of which make branching either fairly easy or utterly trivial.",1191443861
62763,comment,62630,62630,0,0,ibsulon,,,"I hate to be old fashioned, but where's the revenue stream?\n",1191443640
62762,story,,,7,2,SwellJoe,"The sometimes precarious business models for Open Source software",http://inthebox.webmin.com/open-source-and-business-a-precarious-partnership,,1191443624
62761,comment,62630,62637,0,0,Shooter,,,"Looks interesting.  I'd like to learn more about your business plan.  I DO NOT like the product name.  (It's not Teletubby bad, but it's not optimal either.)  I think I have a better name for you. Email me.  <p>",1191443568
62760,comment,62536,62757,0,0,rms,,,"If facebook isn't around in 20 years, it will only be because something better has replaced it. If I knew what that better thing was, I would make it now.<p>Parakey is facebook's trump card, I'm extremely curious to see how Parakey ends up being integrated into facebook.",1191443457
62759,story,,,9,0,nickb,"Making Ajax Elegantly Fast",http://www.dustindiaz.com/faster-ajax/,,1191443296
62758,story,,,1,1,nickb," JavaScript: Put everything in a namespace",http://www.lixo.org/archives/2007/09/14/javascript-put-everything-in-a-namespace/,,1191443265
62757,comment,62536,62536,0,0,mattmccor,,,"If you don't think Facebook is a fad, ask if you can really see Facebook being around in 20 years.  I certaintly can't.  It is a fad, just one that may take some time to run out.",1191443137
62756,comment,62617,62716,0,0,dfranke,,,"Crashes are a lot worse for business if you're an avionics company than if you're a social bookmarking company.",1191443021
62755,comment,62592,62592,0,0,mattmccor,,,"This is who the study was done by:<p>""Catalyst is the leading nonprofit corporate membership research and advisory organization working globally with businesses and the professions to build inclusive environments and expand opportunities for women and business""<p>Does it seem like an independent study?",1191442912
62754,story,,,24,2,nickb,"Practical Image Recognition (prevents cat entering house when she carries a mouse) ",http://www.quantumpicture.com/Flo_Control/flo_control.htm,,1191442782
62753,story,,,1,0,garbowza,"Microsoft focusing on software in battle against iPod",http://www.nytimes.com/2007/10/03/technology/03zune.html,,1191442542
62752,comment,62718,62748,0,0,palish,,,"For the most part, we all work in the mainline.  Each changelist description is representative of the changelist.. That is, there aren't any ""Work in Progress"" titles.  So our manager can read the changelist titles to see where the project is headed.<p>If we move everyone to their own branch, to simply sync to mainline we have to merge the mainline branch into our own.  In Perforce, that means it creates a changelist that's checked in.  Annoying when you're reading the unfiltered changelist titles, but there's something even more annoying:  All your work has to be checked in before you merge from the mainline (otherwise you get horrible merging problems).",1191442489
62751,comment,62630,62742,0,0,rms,,,"The very young and the very old are much more likely to click on ads because they are less likely to differentiate between advertisements and content.",1191442308
62750,story,,,17,12,jkush,".NET framework source code to be released",http://weblogs.asp.net/scottgu/archive/2007/10/03/releasing-the-source-code-for-the-net-framework-libraries.aspx,,1191442012
62749,comment,62571,62656,0,0,pg,,,"Also 35% does not equal ""likely.""  In fact it would have been roughly twice as accurate to have the opposite headline.",1191441938
62748,comment,62718,62718,0,0,sohail,,,"""One of the key issues is the information you get from the changelist. It's not that we don't want to see checkins, it's that the checkins that result from [merging branches] don't convey information. Or if they do, it's not obvious and right up front like it is now. I puruse the change list every day to see what's going on. It's critical to my global view of what's going on.""<p>""Like it is now"" <-- What does that mean?\n",1191441883
62747,comment,62630,62726,0,0,gibsonf1,,,"Wow - ok, nice job :)",1191441831
62746,comment,62617,62617,0,0,niels,,,"I've recently begun using automated tests of basically all my code. Both frontend and backend, when I'm doing web stuff. I usually write the code to a minimum first, and then implement tests. It's a huge relief to use these tests when I refactor and refine code. I definitely think automated testing is the way to go in most cases.",1191441664
