ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
92766,story,,,7,15,kirubakaran,"Startup Idea: Fight Evil",http://kirubakaran.blogspot.com/2007/08/simple-way-to-become-rich.html,,1198699018
92765,comment,92716,92716,0,0,tx,,,"Any kind of ""methodology"" is aimed at improving the predictability of results expected from a group of average coders. Thus it's no surprise that ""large client"" appears in the first paragraph of his blog post.<p>\nIn reality, software engineering is more like an art, and each project calls for a somewhat unique approach, unique style. There is a lot to be said about general sense of style and beauty when it comes to programming. Imagine Leonardo ""going Agile"" on Mona Lisa in order to speed up the process.<p>\nOf course there are always armies of copycat CRUD projects that have nothing unique about them. It only proves my point of average quality of ""agile programmers"" because good engineers aren't interested in CRUD work. Ruby-on-Rails is an awesome example of this: one good programmer did all necessary thinking for you. <p>\nIt is perfectly possible to deliver a ""typical Rails"" site without even caring for learning Ruby. A good methodology done right allows code monkeys with surprisingly low skill level to be productive (which is, of course, not a bad thing). Rails is agile-carved-in-stone approach that forces you to stay on track and punishes from levitating from it, I guess this is where word ""rails"" comes from.<p>\nThis drives many MBAs nuts: none of those dog-training managerial books filled with pompous common sense seem to work when applied to software: good programmers simply don't respond to ""positive reinforcement"" and average programmers produce average results no matter what. All those ""methodologies"" allow managers to get average results <i>reliably</i> regardless of quality of talent at their disposal.",1198698842
92763,comment,92739,92758,0,0,e1ven,,,"<a href=""http://kwout.com/quote/cfs2ukni"" rel=""nofollow"">http://kwout.com/quote/cfs2ukni</a><p>It does seem to take the picture very quickly, and I can't seem to find a way to alter the delay.\nFor instance- <a href=""http://kwout.com/quote/8bmv7gyj"" rel=""nofollow"">http://kwout.com/quote/8bmv7gyj</a><p>Additional requests of the same page seem quick, so I suspect it's doing some internal caching.<p><a href=""http://kwout.com/quote/ujifehrw"" rel=""nofollow"">http://kwout.com/quote/ujifehrw</a><p>Java does not seem to work-\n<a href=""http://kwout.com/quote/sr4x5az8"" rel=""nofollow"">http://kwout.com/quote/sr4x5az8</a><p>\nPassing it a PDF remains in the loading sceen for a long time, then gives a timeout error.<p>It appears to have Flash working, but not shockwave<p><a href=""http://kwout.com/quote/72rwdc36"" rel=""nofollow"">http://kwout.com/quote/72rwdc36</a><p>I was able to confirm the caching- I hit this page several times, but have the same version.<p><a href=""http://kwout.com/quote/a4v7gyjb"" rel=""nofollow"">http://kwout.com/quote/a4v7gyjb</a><p><p>I like it ;)",1198698505
92762,comment,92714,92749,0,0,aaco,,,"Heh, actually it already reached that point, more than 10 years old I think.<p>From <a href=""http://www.softwarebyrob.com/2007/04/19/interview-with-lutz-mueller-creator-of-newlisp/"" rel=""nofollow"">http://www.softwarebyrob.com/2007/04/19/interview-with-lutz-...</a><p>""Lutz: newLISP started on SunBSD in the early 90's, then moved to Windows 3.0/1 as a 16-bit application, then to Windows 95/98 as a 32-bit program. During all that time newLISP was more like a hobby for me. Around 1999/2000 I made it Open-Source under the GPL license on Linux.""",1198698377
92761,comment,92714,92753,0,0,aaco,,,"Thanks for the advice.<p>Actually I'm already studying Common Lisp (from the Practical common Lisp book), and, well, I really liked its concepts. And surely, it can be used for practical purposes. It's a different and old language, I believe it's worthy to be studied.",1198698286
92760,comment,92750,92750,0,0,aristus,,,"That is precisely what eval() is for. The downsides have to do with dumb/slow/insecure implementations and environments. You really do have to be careful, but only because you are running in a hostile environment.<p>0) eval() is slow. Why? Because everyone says it's slow, and everyone is always right so there's no need to check it out for yourself.<p>1) Read up on JSON: <a href=""http://www.json.org"" rel=""nofollow"">http://www.json.org</a> They go over a lot of the issues involved.",1198697851
92759,comment,363,92734,0,0,pchristensen,,,"I've never been able to handle the RSS feed.  The best things I've found is <a href=""http://hystry.com/newsyc/follow/"" rel=""nofollow"">http://hystry.com/newsyc/follow/</a>",1198697658
92758,comment,92739,92739,0,0,e1ven,,,"Nice tool!<p>Imagemaps are underutilized- I had posted one way that I had considered using them, but your idea on how to use them could be a lot more useful.\n<a href=""http://news.ycombinator.com/item?id=77853"" rel=""nofollow"">http://news.ycombinator.com/item?id=77853</a><p>The performance seems a bit sporadic- Sometimes it'll work well, but othertimes I get a black page without the URL.<p>Can you elaborate a bit on the way this works on the backend? It looks like it's using a Gecko backend- Are you rendering to the screen and then dumping, or are you using a custom back-end, just as the java-gecko port, and pulling directly from there?",1198697530
92757,comment,92673,92673,0,0,pchristensen,,,"I'm pretty sure Amazon would not let you add items to someone else's wishlist.  This would mean that anyone could send arbitrary items to anyone else.  While I'm sure you have good intentions, other people could use this to send inappropriate items (""Honey, did you order this Foxy Boxing DVD?"") or do mail harrassment.  You can receive unsolicited gifts using the Wishlist, but at least it's a pre-approved item.  <p>As far as I can tell what you're trying to do, you'll either need to get the person to add the item themself or get their address some other way.",1198697511
92756,comment,92648,92699,0,0,pchristensen,,,"and innovator's solution",1198697469
92755,comment,92752,92752,0,0,optimal,,,"Er, catsup?<p>Timely post, because that's what I'm doing today. Or I was doing it, until I started procrastinating here.<p>I should really go now.",1198697454
92754,story,,,1,1,nickb,"IFPI wants ISPs to block The Pirate Bay, filter P2P traffic",http://www.p2p-blog.com/item-439.html,,1198697006
92753,comment,92714,92714,0,0,Shooter,,,"[Diplomatic Hat On] I would personally stick with a Scheme or with one of the better CLs (SBCL, etc.) over newLISP.  <p>NewLISP is interesting for the space it occupies and it can be fun, but it also has some really wonky ideas that I think are mistakes and that will make it more difficult for you to grok other Lisps in the future.  It is not a horrible language, but I think a person's time would be much better spent learning another Lisp.  I would suggest that you Google comp.lang.lisp for newLISP.  That should provide you with plenty of 'criticism' to digest.  Several other people have asked the exact same question before on comp.lang.lisp.  <p>Then, go to: <a href=""http://gigamonkeys.com/lispbox/"" rel=""nofollow"">http://gigamonkeys.com/lispbox/</a>  once you've moved on ;-)",1198696353
92752,story,,,17,8,ctingom,"Ketchup Week: Put off all of your other work and finally make your web app",http://www.ketchupweek.com/,,1198696323
92751,comment,92644,92748,0,0,cglee,,,"Well said.  That's why it's important to work on things you care about; even in downturns, you'll still be motivated to create.",1198696100
92750,story,,,5,8,edw519,"Ask YC: What's the problem with eval()?",,"I have a scenario where I want to do some logic in the browser, but I don't know what that logic is until run time.  As I see it, I have 2 choices:  1. Preload the page with some javascript logic to process pseudo-code sent down as data, or 2. Just send javascript down as data and eval() it.  I really don't want to preload my page with a pseudo-code processor, but I understand there is a downside with ""eval()"".  I always thought that this is exactly what eval() was for.  Anyone have any success/horror stories with using eval() in the browser?",1198696072
92749,comment,92714,92714,0,0,Hexstream,,,"First and foremost, I think ""newLISP"" is an horrible name. What will they do when ""newLISP"" is 10 years old? Or maybe they don't expect it to survive that long?...",1198695960
