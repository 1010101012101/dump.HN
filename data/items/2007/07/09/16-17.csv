ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
33280,comment,33246,33254,0,0,acgourley,,,"I agree, the for loop is not intuitive at all, just historically present. However, try comparing the ruby against:<p>\n for x in range(10):\n   print x  ",1184000083
33279,comment,363,15946,0,0,pg,,,"Does this still happen?",1184000023
33278,comment,33246,33275,0,0,aston,,,"I'm not claiming that that example is dense code in and of itself, merely that encoding important differences in subtle ways is a by product of the LSFP way of thought. Verbose code is the opposite of clever code, so far as I can see.",1183999770
33277,story,,,2,0,mcxx,"Alternatives to VC funding",http://www.businessfund.com/2007/top-25-alternatives-to-venture-capital/,,1183999442
33276,comment,363,17724,0,0,pg,,,fixed,1183999388
33275,comment,33246,33252,0,0,pg,,,"If (1...10) doesn't yield a list of numbers from 1 to 10 inclusive, that's a bug in Ruby.  The problem is not density.  It's perfectly clear what this code example <i>should</i> mean.",1183999106
33274,story,,,14,3,vuknje,"If programming languages were cars...",http://www.cs.caltech.edu/~mvanier/hacking/rants/cars.html,,1183998960
33273,comment,33246,33264,0,0,abstractbill,,,"I'm not so sure.  Most of the Common Lisp people I've met know Java.  I can't think of a single one who doesn't know C.<p>Or did you mean Common Lisp people tend to have only that language as their LFSP, no matter how many LFMs they know?  In that case I would agree - I definitely see CLers ignoring Ocaml, smalltalk, etc.  For my part I guess it's because CL took a <i>long</i> time to learn fully and I need to build up some energy before I invest that amount of time in another LFSP.",1183998927
33272,comment,33246,33251,0,0,shabby,,,"I work in a Java shop but do some statistical work using R.  For me, Java is the easiest way to gather together data for an analysis.  R is the clear winner over Java for doing statistical modeling.  Gluing them together is possible, and some people have written bindings.  However, these are not well documented, and they are not mature enough to use in a production environment.  The difference when mixing together use of (J/X)* languages is that they have mature bindings (often simply because they are all written in Java).<p>I'm all for using the right tool for the job, but it's really hard to take on the risk of an integration one might have to maintain or expand upon.  Using two languages isn't itself a problem, either for developers or managers.",1183998922
33271,comment,33074,33169,0,0,Psyonic,,,"While getting a $25000 college graduation present would be fantastic (although I bet she just bought a car), your projection is a bit optimistic.  While yes, she would have a million dollars, that million dollars would only be worth $295712 after accounting for inflation (at a constant 3% yearly.)  Still great, but she's not exactly ready for retirement.",1183998913
33270,comment,33246,33256,0,0,brlewis,,,"I don't think the "".."" vs ""..."" level of density is universal in LFSP design.  Macros in Lisp/Scheme are words.  See the sql-repeat macro with group-beginning? and group-ending? for example.  It makes things more transparent than your typical LFM implementation would:<p><a href=""http://brl.codesimply.net/brl_4.html#SEC31"" rel=""nofollow"">http://brl.codesimply.net/brl_4.html#SEC31</a>\n",1183998740
33269,story,,,2,0,jcwentz,"Corporate vs. Startup behaviors",http://www.scottconverse.org/2007/07/corporate-vs-startup-behaviors.html,,1183998362
33268,comment,33144,33144,0,0,far33d,,,"You sure did mix metaphors. If the ""entrepreneurs"" are living 10 to an apartment and eating ramen, why would they be driving a Prius? <p>Some people just get off on being contrarian.\n",1183998257
33267,comment,33246,33260,0,0,palish,,,"I'm a game developer.  At work, we use C++, C# and our own scripting language.  Our language is embedded, so the communication protocols between C++ <-> our language are straightforward, and C++ <-> C# happens through function callbacks.<p>At home, I use C++ plus Lua.  I tried to use Lisp, but the CFFI had problems interfacing with certain foreign libraries.<p>To get around C++'s constraints, my solution is to move all of my game engine code to Lua with only a lightweight wrapper in C++.  Lua is extremely powerful - for example, functions are first class objects, so it has closures.  It's dynamically typed, so I'll spend less time convincing a compiler I should be able to run my code.  It's very fast, because it has a JIT compiler which uses DynASM to generate assembly code, so it's about 1/10th the speed of C - huge for a scripting language.  But most importantly, the communication protocols between Lua and C are extremely clearly defined, and <i>work</i>.  Communication between Lisp and C is much more vague, and only sometimes works - Calling Lisp from C, for example, don't work on all platforms.<p>So I'd guess what influences me in my choice of multiple languages is how well two languages can communicate with one another.  Can all constructs from Blub translate into Floob?  How does Blub call into Floob, and vice-versa?  Is it supported on all platforms?  <i>Is there a lot of example code?</i><p>You can certainly have a language mashup and solve problems in elegant ways, but it all hinges on how elegant the communication is.<p>If you use several different languages, and if they don't share resources (Window handles and such), and if communication between them is not speed-critical, then you can write a networking layer which each language uses to communicate with every other language.  But that option seems pretty rare.<p>Shawn",1183998231
33266,comment,33246,33250,0,0,pg,,,"Actually Vanier may have a point that LFMs make programmers more interchangeable at big cos.  So ultimately the argument against them may be startups.",1183998162
33265,comment,33246,33246,0,0,pg,,,"I'd forgotten how well written that was.  It's better than 99% of the essays on the web.  And yet it was just an ordinary email, not intended for publication.",1183997999
33264,comment,33246,33260,0,0,nostrademons,,,"I dunno - most LFSP-people I know use multiple languages regularly, learn new ones as a hobby, and their ""preferred"" LFSP is just the top of a long list of skills.  That's why we call them ""smart people"". ;-) Take a look at Programming Reddit - most of the Haskell evangelists are also quite fluent in Python and C and usually know Lisp, Ocaml, etc. too.  <p>There do seem to be exceptions - Common Lisp in particular seems to be a LFSP where many of its leading practitioners <i>only</i> know Lisp.  Smalltalk, too, but to a lesser extent since all the commercial Smalltalk jobs morphed into Objective C or Java jobs.  But I don't really see Lisp as being at the top of the blub hierarchy any more - there's been 20 years of progress since then and some really interesting developments.",1183997835
33263,comment,33255,33255,0,0,donna,,,"Thanks for sharing, been there done that. ;-D",1183997361
33262,comment,33037,33037,0,0,Tichy,,,"Any chances for recreating this in a telecommuting way? I would have loved to attend, but crossing the Atlantic seemed too far (although now I almost regret that I didn't go anyway). <p>Maybe a 48 hour startup competition would do, too? Not working on a startup together, but everybody on their own startup? I participated in the 48h game programming competition once, and it was a lot of fun. People would just exchange advice and ideas in irc while the event was on, and it was a great sense of community.",1183997331
33261,comment,33129,33173,0,0,gambeht,,,"Shawn, thanks for your detailed feedback, we believe you're dead on about the points you discussed. We're making changes now. Thanks again - Jamal. ",1183997311
33260,comment,33246,33257,0,0,tuukkah,,,"Insightful! But does this in your opinion apply only to LFM-people - my understanding is most LFSP-people don't see multiple languages as an option either?\n",1183997173
