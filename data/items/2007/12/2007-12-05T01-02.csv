ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
86178,comment,86043,86090,0,0,michelson01,,,"also, with the value of the dollar plunging below even the canadian dollar, the US stock market prices in terms of euros, for example, haven't been climbing that much, iirc (might even be declining?).  someone can probably point to a graph of US stock prices in euros, but it's interesting, as i recall.  
",1196818991
86177,story,,,1,0,DocSavage,"Building Mashup-Friendly Sites in Rails",http://www.oreillynet.com/pub/a/ruby/2007/12/04/building-mashups-in-rails.html,,1196818071
86176,comment,86086,86086,0,0,staticshock,,,"The jquery plugins are young, and you can usually find answers to all these things in #jquery on freenode. I'm surprised they break your IE, because jquery is one of the few libraries that does some very extensive optimization for IE, unlike some of the other top dogs.<p>I think a common paradigm is to develop for firefox (because it's convenient to debug with firebug, etc.) and then test in IE and figure out where IE's issues are. You'll learn things that IE doesn't like and avoid them in the future. IE doesn't have some of Gecko's js features, like generators and array comprehensions, so don't touch those. Also, in IE, a trailing comma in an inline object declaration is a syntax error:<p>var x={0,};
//i find this syntax convenient, so that always pisses me off<p>The event object disappears if your event handler invokes something to be done on a fresh callstack, even if you still have a reference to the object itself:<p>function someHandler(e){ setTimeout(function(){alert(e);},0); }
//only lost when called via event invocation, and i'm not sure how widespread this problem is<p>Some DOM properties/attributes may be different/present/absent, but if you use jquery that'll be abstracted away. The event model in IE is lame (level 2 stuff), allowing you to attach only one listener per event per object, but jquery abstracts that away as well. What else... IE is known for leaking memory because each DOM element is actually a COM object, and cyclical references between the js engine and COM are undetected. There's a young tool called sIEve (currently v0.0.8) that can help you detect what leaked. anything else you want to know?",1196817223
86175,comment,86001,86001,0,0,alaskamiller,,,"You can be king in two ways: bring the content or make the content.",1196816463
