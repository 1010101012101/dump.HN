ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
83198,comment,82835,82989,0,0,ajju,,,"That's the definition of poverty in the U.S. For the poor in Asia and Africa poverty still means not getting two square meals a day and sometimes starving to death.",1195919914
83197,comment,82864,82864,0,0,edw519,,,"My follow-up thread:<p><a href=""http://news.ycombinator.com/item?id=83196"" rel=""nofollow"">http://news.ycombinator.com/item?id=83196</a>",1195918029
83196,story,,,12,13,edw519,"Follow Up to Crappy Programmer Thread",,"I am adding this thread for 2 reasons: the original thread has become very cumbersome and the debate got out of hand to the point where someone referred to my arguments as ""idiocy"".  This is unfortunate in a forum like this.  I come here much like everyone else, to share and learn and take a nice break from time to time.<p>Perhaps I didn't explain myself well enough in the previous thread.  Well, here goes...<p>I wrote the Fixed Assets module for a division of CSC in 1987.  Everything went pretty much as planned (analysis, design, coding, testing, deployment) until the code review.  The beta customers were very happy, but my code could not be accepted into the repository because it was in violation of their standards.  The minor violations (usually variable names) were easily fixed, but the biggest violator?  Early exits.  I thought that this was ridiculous and used many of the same arguments people used in the previous thread: less code, cleaner, faster, easier to read, etc., etc., etc.<p>The response... ""You don't understand.  We have a backlog of 495 bugs on the bug list.  The original cause of about one third of these was the original programmer violating ""single entry/single exit"".<p>This was hard for me to wrap my head around.  How could cleaner, simpler code be harder to maintain?  Because you can't count on those who follow you to be competent.  So there are standards that a lot of people much smarter than me came up with to minimize the problem down the road.<p>I have fixed thousands of bugs since then and my lesson was well learned.  About half the bugs I've seen were caused either by poor variable naming or single entry/single exit violations.  Sure, ther program worked fine at first, but after many mods, things got lost.  Structured programming was meant first and foremost to extend the life of the code by avoiding this.<p>So I ask any programmer, ""How long do you expect what you're writing today to be in production?  What changes will be needed in the future?  Who will apply them?  Will they have enough time to do it right?  Will they be competent?""<p>(Hint:  The answer to all of those questions is, ""I don't know."")<p>That's why I offered a few ""tips"" related to structured programming.  I didn't make any of this up.  I speak from the experience of cleaning up lots and lots of messes.  Your code may look beautiful today, but who knows how others will mangle it down the road.<p>Do what you want with my input, just like any other.  Take it or leave it.  Just a little offering from a digital canary in the coal mine.",1195917905
