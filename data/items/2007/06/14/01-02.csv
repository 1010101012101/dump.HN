ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
27973,comment,27972,27972,0,0,dbosson,,,"I would like to debate Paul Gram's partiality towards hackers and whether or not this has a negative effect on creativity.<p>I will open the debate by arguing that being partial to a specific group of people, in this case hackers, does limit creativity.  In Paul Gram's essay 'The 18 Mistakes That Kill Startups' he says \n	\n""when I think about what killed most of the startups in the e-commerce business back in the 90s, it was bad programmers. A lot of those companies were started by business guys who thought the way startups worked was that you had some clever idea and then hired programmers to implement it. That's actually much harder than it sounds--almost impossibly hard in fact--because business guys can't tell which are the good programmers. They don't even get a shot at the best ones, because no one really good wants a job implementing the vision of a business guy.""<p>I don't understand why a really good programmer would not want to help implement the vision of a business guy.  <p>The whole point of a startup is to improve people's lives.  Paul Gram understands this; he even says the most important aspect of a startup is making something people want.<p>Well what if that business guy has a vision that will improve a lot of peoples lives?  What if that business guy has an idea for something a lot of other business people would want?  Why would a great programmer not want to work with the business guy? <p>My concern is that if hackers do not keep an open mind about working with others their creativity will be limited to their own interest, needs, and desires.  If Hackers are only willing to implement their own visions they may be missing out on some wonderful opportunities to make something people want.<p>\n",1181786385
27972,story,,,3,19,dbosson,"Paul Gram, his following, and the hacker partiality",,,1181786356
27970,comment,27875,27884,0,0,SwellJoe,,,"""Without automatic testing dynamic languages are not very productive because they do not catch type mismatch errors during compilation time (there isn't one). With statically typed languages you get a lot of tiny issues taken care of once you hit magic ""compile"" button and compiler does some basic sanity checks.""<p>You're just exhibiting a basic dislike of dynamic languages.  Type mismatch errors are mostly orthogonal to testing.<p>""Without solid unit tests backing you, activities like removing ""obsolete"" methods or renaming classes/modules turn into nightmare with duck typed languages.""<p>This is a nightmare regardless of typing.  If you remove a method that is still used somewhere, you've broken something, and you may not spot it until after it ships to customers.  It doesn't matter whether you have type checks or not.  A compiled language that links in those classes and methods at compile time does resolve this issue, but it's not related to types (and you have to wait on the bloody thing to compile every time you change one character in the file).  Testing does resolve this problem--but it's not a problem specific to dynamic languages.<p>If you get a warm fuzzy feeling from type checking from your compiler, then by all means, enjoy it.  But there are tools for most mature dynamic languages (Perl and Python for example) that will do that checking without having to write tests manually.  But, having never found type errors to be a problem in my Perl or Python code, I've never used them.  Some problem sets are more prone to type mismatch bugs than others, and I guess my areas of interest are among the ones that are rarely effected.",1181786151
27969,comment,27967,27967,0,0,vlad,,,"Well, I think auctomatic.com, a graduate of their Winter Program, was started by two business guys.  Also, Sam Odio got an internship at Anybots this summer, and he's a business guy.  Finally, the last user who posted a job offer on YC News was also a business guy.",1181786034
27968,comment,27453,27453,0,0,rzwitserloot,,,"Just posted part 2:\n<a href=""http://fourstarters.com/2007/06/14/all-transactions-are-based-on-trust-part-2/"" rel=""nofollow"">http://fourstarters.com/2007/06/14/all-transactions-are-based-on-trust-part-2/</a>",1181786016
27965,comment,27962,27962,0,0,henryw,,,"I've been using Prototype/script.aculo.us for a over a year now, and have found it pretty good. I've also just started using JQuery, and found that to be really cool, much more fun than Prototype. Please post what js framework you use and why. Thanks. ",1181784519
27964,comment,27743,27947,0,0,SwellJoe,,,"I agree.  The most valuable thing, out of a wide array of valuable things, for us turned out to be the other founders.  I can point to a dozen new features in our product that came from discussions at YC dinners (Ruby Gems module, mobile access, multiple usability enhancements, EC2 support, S3 support, and on and on).<p>Our new website (launching soonish) turned out vastly better than it would have been without the feedback of guys like Kevin Hale of Wufoo and Evan from SocialMoth/Overhear.us (and some anonymous YC'ers on Overhear.us who took a look at it during various stages of development and gave us some pointers).",1181784458
27963,comment,27890,27890,0,0,amichail,,,"If you don't trust Facebook, then build a Facebook app with limited functionality to promote your full-featured service outside Facebook.",1181784421
27962,story,,,3,7,henryw,"What javascript framework do you use?",,,1181784303
27960,story,,,5,0,amichail,"Canada gets poor grade for failing to innovate",http://www.thestar.com/Business/article/224616,,1181783786
27959,comment,27707,27707,0,0,zach,,,"We all know VCs worship at the altar of the huge liquidity event, so it's no surprise to hear one speak of cashing out as utter blasphemy.  But finger-wagging about ""how it's done"" and how ""everybody benefits"" is excess protestation, especially considering the Facebook counterexample.<p>Investors have to look after their stake and so does every other shareholder.  It's not a moral issue whether a VC gets founders to take a Warren Buffett never-cash-out vow or lets them take pre-liquidity money.  It's a strategic, market-driven business arrangement made by people whom are accountable to the company's shareholders.  If I was Ron, I would try harder to look at ""paying off"" as an opportunity even if I dismissed it in interviews.  I hope he's doing that!",1181782853
27958,comment,27773,27865,0,0,joshwa,,,"You sound like you've looked at a lot of packages...Is there a good roundup anywhere?<p>Still looking for a network that will let me as a publisher pass keywords at load-time on a per-user basis, to serve contextual ads on a dynamic site, based on user-generated content...",1181782825
