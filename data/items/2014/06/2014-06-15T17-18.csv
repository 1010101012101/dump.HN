ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
7895819,comment,7894825,7895174,2,0,omonra,,,"Your point lacks credibility because the one link you cite is nothing but a Kremlin mouthpiece. Ie it&#x27;s painfully blatant & appears to be written by RT staffers.",1402855167
7895818,comment,7894816,7895430,1,0,michaelochurch,,,"<i>I&#x27;m constantly amazed that companies don&#x27;t consider the health of their employees, both physical and mental, worth investing in. It&#x27;s my firm belief that it would pay back many times over.</i><p>Oddly enough, the &quot;old-style&quot; corporations that have gone out of style, did. At many investment banks, you can still schedule a confidential appointment with an on-site doctor or therapist.<p>The depression stigma isn&#x27;t as strong at the banks as it is in technology companies and in startups. I&#x27;m basically unfundable (cyclothymia, aka &quot;bipolar 3&quot;) by VCs, but my condition, because it&#x27;s well-treated, would be a non-issue at most financial firms (even at high levels).",1402855162
7895817,comment,7895504,7895782,5,0,archgrove,,,"Very interesting, thanks.<p>I also ran up against another annoying bug/oversight/v0.1ism : You can&#x27;t inherit from a generic class without becoming generic yourself. So, even if you fully instantiate your parent&#x27;s type information, you have to be generic as well! For example:<p><pre><code>    class Foo<T> { ... }\n    class Bar : Foo<String> { ... }\n</code></pre>\nYou&#x27;d expect Bar to be a non-generic type, but this throws a compiler error. You have to declare:<p><pre><code>    class Foo<T> { ... }\n    class Bar<String> : Foo<String> { ... }\n</code></pre>\nWhich seems just odd. The best workaround I&#x27;ve found thus far is<p><pre><code>    class Foo<T> { ... }\n    class BarClass<String> : Foo<String> { ... }\n    typealias Bar = BarClass<String>\n</code></pre>\nBleh. I&#x27;ve filed a radar against this one - it seems like an annoying oversight, even for this early version.",1402855162
7895816,comment,7895504,7895719,56,0,wting,,,"A functor is a thing that can be mapped over. For example:<p><pre><code>    map abs [-1, 2, 3] => [1, 2, 3]\n</code></pre>\nArrays are the simplest example, but it looks like an iterable. However functors retain shape whereas iterables don&#x27;t. For example if we had a tree (represented visually):<p><pre><code>    oak = -1\n          / \\\n         2   3\n</code></pre>\nIf we used oak as an iterable, we would lose the structure of the tree:<p><pre><code>    map abs iter(oak) => [1, 2, 3]\n</code></pre>\nHowever if tree belongs to the functor typeclass (i.e. implements functor interface), then:<p><pre><code>    map abs oak => 1\n                  / \\\n                 2   3\n</code></pre>\nThe alternatives to functors are:<p>1. mutate the existing data structure<p>2. copy a new one and then mutate (two passes)<p>3. create a new one while mutating (one pass, increased complexity / bugs)",1402855149
7895814,comment,7893158,7893329,1,0,owlmonkey,,,"Totally agree with you on the computation costs.<p>In some slides in February ONT hinted at why they had to go to a full wet sample prep and it related to input DNA amounts I believe. Their new sample prep they said allowed them to reduce their input DNA amounts to similar amounts as competitor sequencers, but without that new prep it took 10,000x more DNA to load. I guess raw DNA just doesn&#x27;t load into the nanopores very easily, so it took that much higher concentration. Two years ago they claimed you could load raw blood into a chip after a 5 minute prep, but I&#x27;m guessing they will back away from that claim now since this wet chemistry is needed to get reasonable loading.<p>This to me implies that all nanopore technology under development will encounter similar problems. They really need biological or magnetic bead processes to &quot;load&quot; DNA through the pores in one form or another - or else need prohibitively high DNA concentrations and amounts - so that will mean wet chemistry.",1402855148
7895813,comment,7894816,7895609,2,0,vertex-four,,,"I do not see the article promoting self-diagnosis? I&#x27;m not sure where you got that from at all.",1402855134
7895812,comment,7889336,7890083,1,0,andyidsinga,,,"i spent HOURS looking at that amazing site",1402855106
7895811,story,,,6,2,lbarrow,"How To Talk About Programming Languages",http://lionelbarrow.com/2014/06/15/how-to-talk-about-progamming-langauges/,,1402855099
7895810,comment,7895301,7895541,2,0,benihana,,,"I&#x27;m working through Unity tutorials now and this is what I did, and I&#x27;d agree. Being a web developer and knowing JavaScript is awesome for this - HTML5 games are really fun and easy. I started with a Galaga clone[1] that taught me about game loops, input, rendering, and the state of the game world and how they interact and are separate. I think this has made working through Unity, where things are kind of magical, much easier.<p>1. <a href=""https://github.com/hoorayimhelping/Galaga5"" rel=""nofollow"">https://github.com/hoorayimhelping/Galaga5</a>",1402855095
7895809,story,,,1,0,fmitchell0,"I'm not your slave, America",https://gist.github.com/omega8cc/fa97ea1d471e1108ab35,,1402855086
7895807,comment,7895504,7895719,3,0,Dewie,,,"> Why is that called a functor instead of an iterable or enumerable though?<p>Probably because 1) it is inspired by category theory rather than some interface/signature from another programming language 2) &quot;Iterable&quot;/&quot;Enumerable&quot; might be misleading.<p>2): It might make sense for things like arrays, where you can think of the function (fmap) as enumerating/iterating over the array and then, for each value in the array, uses the supplied function on it. But Functors aren&#x27;t just things that you can iterate over; functions themselves are functors, and function composition is fmap. But how does the iteration-intuition make sense in this case? Other functors are more a kind of &quot;box&quot; than a collection that can be iterated over (for example: the Option/Maybe type). Sure, you can say that you can implement fmap on Maybe by iterating over the data that it holds, namely the single data that it holds, but that doesn&#x27;t really say much.",1402855051
7895806,comment,7894838,7894838,3,0,acc00,,,"I was confused for a moment, since where I come from, &quot;self-hosting&quot; means something different.<p><a href=""http://en.wikipedia.org/wiki/Self-hosting"" rel=""nofollow"">http://en.wikipedia.org/wiki/Self-hosting</a>",1402855005
7895805,comment,7894444,7894444,1,0,tectonic,,,"You may want to incorporate for liability protection, but I&#x27;m not a lawyer, especially not a Canadian one.  In the US (CA), when I was doing a lot of public side projects, I formed an LLC with a separate tax identification number and bank account to help reduce liability.",1402855000
7895804,comment,7894296,7894741,2,0,maaku,,,"I am for gay marriage. But I also understand that not all oppositions to gay marriage are rooted in intolerance, bigotry, or hatred. I respect the right of Eich to express his opinion and donate funds within the confines of the law & his personal life. It&#x27;s a shame that an organization like Mozilla couldn&#x27;t understand the intricacies of this situation.",1402854923
7895803,comment,7894288,7894506,1,0,Dorian-Marie,,,"Thanks, I googled his name and looked at his Github profile but couldn&#x27;t find if he was a Postfix developer or not.",1402854867
7895802,comment,7893068,7893815,1,0,vxNsr,,,"It&#x27;s not clear why, but the fourth wrapper in the link (1906-1911) actually says &quot;10 cents&quot; (possibly the wrapper is slightly larger)",1402854856
7895801,comment,7894816,7895079,3,0,michaelochurch,,,"I thought it was a good article.<p><i>THERE IS NO QUICK FIX.</i><p>Sure, and I think that&#x27;s well-acknowledged. Yes, we need to beat the stigma. However, that&#x27;s not going to cure these illnesses. It&#x27;ll just give people who have them a fair chance to recover. It&#x27;s just one step, but it&#x27;s an important one. For people in the mild-moderate stretch of the spectrum, the worst thing about these diseases (I&#x27;m bipolar) is that people kick you when you&#x27;re down.<p><i>There is no evidence to suggest that the software industry suffers disproportionately from mental health issues compared to any other.</i><p>I don&#x27;t know if we have a higher incidence of these problems (although it wouldn&#x27;t surprise me) but we suffer in some unique ways. First, many of us work in open-plan offices. That&#x27;s already unhealthy. But consider further that it takes a bit of an obsessive nature to get good at what we do. We genuinely want to do our jobs well, and get frustrated (and measurably anxious) when impeded. An open-plan environment that makes concentration impossible can be hell for a person like that.<p>Then add the &quot;Agile&quot; micromanagement, which is really just designed to put people on a treadmill and shoot the people who (for whatever reason) can&#x27;t keep pace. Now, added to the existing risk of having a bad week is <i>anxiety about</i> having a bad week.<p>We&#x27;ve let The Business treat us like garbage, and the result is that we&#x27;re constantly insulted with bad working conditions, micromanagement, low autonomy and deeply punitive environments. Some people can laugh this off, and many more of us get cynical with time, but the obsessively inclined people who tend to become programmers don&#x27;t do so as easily, because they care deeply about doing their jobs well and then get handed an environment that makes it impossible.",1402854846
7895800,comment,7893568,7895257,1,0,dang,,,"I&#x27;m pretty sure that&#x27;s not true at all.",1402854818
7895799,comment,7894825,7895219,2,0,clebio,,,"You&#x27;re absolutely right about that, and I apologize. It was pure sloppiness on my part. I meant no disrespect towards or commentary on Manning.",1402854817
7895798,comment,7895268,7895268,1,0,hyp0,,,"complaints ∝ usage: <i>There are only two kinds of languages: the ones people complain about and the ones nobody uses.</i> Bjarne Stroustrup<p><pre><code>  tl;dr they want to make things better\n</code></pre>\nLanguages are like products in a market that solve a problem. Many factors, product and non-product, make it hard to predict. e.g. do people know about it? how easy is it to get started?  has a core vocal and influential group picked it up? How exactly does it solve the problem? Can it be enhanced or bandaided so it&#x27;s workable for problems that it <i>almost</i> fixes?<p>But worse than products, languages are high-tech products. This makes them harder to evaluate, so the bandwagon effect is even stronger (oh, smarter-than-me guy says this is cool, I&#x27;ll believe it). That makes it even more unpredictable.<p>But worse than high-tech products, there are network effects: it matters hugely how many other people are using it... because they make libraries which makes it even better. They also use your libraries, making it more attractive. That is, a language <i>is</i> a market, itself. This makes it more unpredictable again.<p>Finally, why do people make new languages?  Well, there <i>is</i> real progress in language design.  People just want to make things better. For example, Go is written by the C guys... they want to make it better. (NB: no guarantee of success! those guys also wrote unix, and tried to improve it with Plan 9. &quot;What&#x27;s Plan 9?&quot;, you ask curiously. Exactly.)<p>Of course, the big companies with money also want to capture developers, instead of sharing, so instead of one language with the cool new features, you have several.  Just like in most markets, when there&#x27;s an improved style of product.<p><i>EDIT</i> what about smalltalk, lisp, haskell?  partly it&#x27;s the bandwagon effect that passed these by... partly it&#x27;s the purity of a cool idea.  This makes them attractive to idealists, and unattractive to pragmatists. e.g. homoiconicism is a very elegant idea, but awkward, complex, unintuitive - <i>everything</i> is sacrificed to its pure beauty.<p>These are like indie artists who haven&#x27;t sold out.",1402854769
7895797,comment,7895364,7895584,1,0,Thriptic,,,"Funding, regulations, educational policy etc",1402854750
7895796,comment,7895215,7895741,5,0,epistasis,,,"The problem is that a &quot;permanent&quot; decision has to be made before the user has the option to discover how to make it less permanent.<p>When it comes to UI issues, the existence of a solution with enough poking around is rarely a solution at all. The problem is that the UI is creating a conflict for the user at the beginning; being able to resolve a conflict is far worse than never creating the conflict at all.",1402854745
7895795,story,,,5,1,morganwilde,"Algebra and geometry – the MVC way of understanding mathematics",http://morganwilde.svbtle.com/algebra-and-geometry,,1402854684
7895794,comment,7892745,7895363,2,0,thinkpad20,,,"No problem. Thanks for the apology. I will take the opportunity to learn more about equational reasoning in Haskell. I&#x27;m currently going through TAPL and Software Foundations, so my theoretical focus in Haskell is more on type theory and less on category theory, although that&#x27;s long been on my &quot;to-learn&quot; list. If that makes sense :)",1402854643
7895793,comment,7895364,7895584,1,0,pcrh,,,"A lot of legislation cannot be approach scientifically, e.g. the right taxes rates, etc.  Other legislation can be very scientific, e.g. is marijuana dangerous?",1402854638
7895792,comment,7895189,7895189,1,0,unoti,,,"I&#x27;m a Ham radio operator, and interested in building my own real 2m/70cm transceiver that I can put in my car, complete with a little display to impress my friends and such.  So these Pi articles interest me, but I&#x27;m more interested in interfacing a microcontroller to a real quality transmitter that can operate at, say, 25+ watts.<p>Ideally I&#x27;d like for this project to run Android, and drive my car stereo too, and do a bunch of other crazy things like GPS.<p>There&#x27;s surprisingly little information out there on how to approach such a project.  I&#x27;ve looked for components I could use on Sparkfun, and there&#x27;s not really anything that jumps out at me, for either building 2m/70cm transceivers, or even for doing the stereo amplifier part.<p>I did find this fascinating article, though: <a href=""http://hackaday.com/2013/02/28/hacking-a-ham-radio/"" rel=""nofollow"">http://hackaday.com/2013/02/28/hacking-a-ham-radio/</a>",1402854634
7895791,comment,7894528,7895651,3,0,throwaway1509,,,"Sure, he is technically correct, which is the best kind of correct, if you get off on pedantry.<p>This is also technically correct: let’s assume Apple made $500M in iAd revenue in 2013 (his upper bound); they made about $150B in revenue in the same year, which makes iAd 0.3% of the revenue. That is clearly what’s driving the business.",1402854614
7895790,comment,7895215,7895704,4,0,halviti,,,"It doesn&#x27;t matter how common it is.<p>You never steal focus from the user, unless you&#x27;re designing a system to purposefully interrupt someone.",1402854564
7895789,comment,7893158,7893518,1,0,owlmonkey,,,"Ya the MinIon is more of a DNA sensor than a sequencer in its current incarnation, but awesome for portability. Super expensive per base though. If they can&#x27;t improve the cost significantly along with the accuracy it will never be a competitive sequencer.<p>You&#x27;re wrong about the PacBio though, the raw reads are random and cancel out easily with consensus. PacBio is the least biased and therefore the most consensus accurate next-gen sequencer available. See my other comments for some citations.",1402854560
7895787,comment,7893629,7894922,1,0,pbhjpbhj,,,"A fine tax dodge no doubt - Lichtenstein should nationalise that shell company, y&#x27;know, just for the giggle.",1402854483
7895786,comment,7893170,7895774,1,0,a8da6b0c91d,,,"Blacks from wealthy families in wealthy school districts exhibit the exact same test gap. Whatever the cause of &quot;the gap&quot; it isn&#x27;t the schools or access to opportunity. We really need to stop wasting literally billions of dollars pretending otherwise.",1402854452
7895785,comment,7894100,7894520,1,0,bluthru,,,"I think he has enough money to not profit off of making people unhealthy.",1402854405
7895784,comment,7895301,7895478,2,0,Eric_WVGG,,,"What kind of web development do you do? Dwarf Fortress could totes be accomplished in Angular.js",1402854351
7895783,comment,7894838,7895318,1,0,ibisum,,,"> breeds a load of ignorant and lazy &quot;sysadmins&quot;<p>I think that what is happening here in the hosting sphere is the same thing that happened in the OS/user space, inasmuch as packaging has become the solution to solving the layers of abstraction.  Todays .ipa archive is yesterdays .app bundle, was last centuries filesystem-containing standalone .exe, is todays &#x27;one dock fits all&#x27; deployable-application solution.<p>Whereas in systems past the user was required to absorb a cognitive load of abstraction (&quot;C:\\DOS&quot;), yet today we have far friendly flick and execute interfaces, the same is true of sysadmin abstractions becoming less and less significant and more and more point and click.  Yesterdays &#x27;tar xvf somesources.tar.gz && cd somesources && ./configure && make install&#x27; is todays &#x27;docker run -i -t someapp&#x27;, and so on ..<p>But yet, we still must face the quandry that the more these abstractions become compartmentalized, the more we can just pile new crap on top and end up with new abstractions requiring eventual compartmentalization, ad infi...",1402854337
7895782,comment,7895504,7895723,9,0,danabramov,,,"<i>>However, I ran up against the lack of generic protocols myself today (for those with access, there&#x27;s an interesting debate at <a href=""https://devforums.apple.com/thread/230611?tstart=0"" rel=""nofollow"">https://devforums.apple.com/thread/230611?tstart=0</a>). It seems like a deliberate design choice, but one I&#x27;m not really sure about.</i><p>So did I! A few more related links if you&#x27;re interested in this question:<p><a href=""http://schani.wordpress.com/2014/06/11/associated-types-considered-weird/"" rel=""nofollow"">http://schani.wordpress.com/2014/06/11/associated-types-cons...</a><p><a href=""http://www.artima.com/weblogs/viewpost.jsp?thread=270195"" rel=""nofollow"">http://www.artima.com/weblogs/viewpost.jsp?thread=270195</a> (this is about Scala, but Swift somewhat follows Scala with this design)<p><a href=""https://groups.google.com/forum/#!topic/swift-language/3PtydRXR0ao"" rel=""nofollow"">https://groups.google.com/forum/#!topic/swift-language/3Ptyd...</a>",1402854328
7895781,story,,,1,0,p4bl0,"Cryptis: a game about cryptography",http://inriamecsci.github.io/cryptris/,,1402854280
7895780,comment,7895301,7895478,2,0,lgieron,,,"That&#x27;s what&#x27;s possible as a one man project:\n<a href=""http://www.shiningrocksoftware.com/game/"" rel=""nofollow"">http://www.shiningrocksoftware.com/game/</a><p>AFAIK he did all the game design, coding and assets (models, textures, sounds etc.)",1402854254
7895779,comment,7895744,7895744,1,0,rdl,,,"Another potentially smart choice is getting into an absolutely top tier school, even if you can&#x27;t pay for it, and dropping out with unpaid bills (rather than loans); the bills get forgiven or can be discharged in bankruptcy, and dropped out to do join or found a startup is a really reasonable reason to leave.  You get the signaling effects of a top tier school with virtually none of the financial cost, and depending on how long you stick around, potentially little of the time cost.  (I did this at MIT; I couldn&#x27;t get any financial aid because my parents wouldn&#x27;t participate, so I ended up taking classes semester after semester and then getting retroactively de registered for the semester once they realized the bill hadn&#x27;t been paid.) I believe Steve Jobs did this at Reed, and I know of other people.  It is probably safest in a rich private institution vs a state school.",1402854245
7895778,comment,7893494,7893641,3,0,aschampion,,,"A modeler is making a faithful recreation of the upper four decks in CryEngine[1], which is quite an undertaking because of the multiple, contradictory, and often physically impossible schematics used during TNG&#x27;s production. CryEngine has some support for in-world user interfaces with mouse interaction (although Doom 3 still did it best), and with Awesomium you could hook it up to a more familiar CSS/HTML stack. Significant modification would probably be required to scale anything to the number of interactive displays on the ship, though. So get cracking on a robust LCARS spec, get the modeler onboard, get sponsorship from Oculus for a virtual Enterprise launch title, and make CBS a pitch they can&#x27;t turn down.<p>[1] <a href=""http://www.trekbbs.com/showthread.php?t=217183"" rel=""nofollow"">http://www.trekbbs.com/showthread.php?t=217183</a>",1402854189
7895777,comment,7895230,7895230,3,0,cmdkeen,,,"My finger hurts. Good inspiration on how you can put something together fairly quickly. I&#x27;ve been playing with a medieval simulator for a while now - and this has galvanised me to get back into it. Cheers!",1402854178
7895776,story,,,1,0,kevin818,"Meth pours into Central California as liquid",http://www.sfgate.com/news/crime/article/Meth-pours-into-Central-California-as-liquid-5552400.php,,1402854109
7895775,story,,,1,0,kaiyi,"Tim Cook making Apple his own",http://mobile.nytimes.com/2014/06/15/technology/tim-cook-making-apple-his-own.html,,1402854090
7895774,comment,7893170,7894689,1,0,xenadu02,,,"As a reasonably successful white male, let me explain:<p>It is quite obvious, if you bother to look, that the majority of black and hispanic students do not have as much access as us whites. They are more often from single-parent households or households where both parents work multiple jobs. They live in worse neighborhoods (because they can&#x27;t afford anything else), and their older social peers are of worse character. Because of where they live, they attend worse schools. They may not have a computer or internet access at home.<p>The abject failure you see at the high-school level has its ground-work laid way, way back in elementary school, both in-school and at home. It takes a whole system to grind kids down and eliminate creativity, inquisitiveness, confidence, and a desire to succeed. Sure, some people will just meander through life and there&#x27;s nothing you can do about them, but in my experience the majority of young kids have at least some area they show promise in and some level of curiosity.<i></i> By the time they reach junior high-school, a greater percentage of black and hispanic kids have been put through the meat grinder and ruined. Further, since far more of their social peers are a result of the same failures, they spread an attitude of despair and pessimism about school and the potential for a better life. Just think back at the stupid crap you did when you were young as a result of peer pressure, now imagine everyone is peer-pressuring you to quit school because it&#x27;s a waste of time.<p>This negative feedback loop continues to recycle people back into the same old situations and set them up for failure. Sure, some will overcome that and succeed, but it takes far more effort than it took for someone like me to succeed. Now we are just talking averages here, any individual case may be different. Chris Rock&#x27;s kids live a life of luxury much greater than the vast majority of white children in the US, but that doesn&#x27;t prove or disprove anything about the overall picture.<p><i></i> Similarly, I see people claiming that &quot;some people are just going to be homeless&quot;, when actual experience shows that if you give homeless people an apartment free of charge first, then work with them to find a job, etc a far, far greater percentage of them do not go back to being homeless and end up as reasonable employed people who pay their own bills and are productive members of society. But that doesn&#x27;t fit the story we like to tell ourselves that people &quot;get what they deserve&quot;, so if they are homeless they must deserve it. Or the narrative that &quot;some people are just losers/lazy/-insert adjective here- and there&#x27;s nothing you can do about it.&quot;",1402854059
7895773,comment,7895364,7895733,2,0,raverbashing,,,"No, the point stands.<p>Especially because you don&#x27;t need to be a Wall Street banker to do just like them. They just have more power, but people should consider their actions regardless of salary.",1402854056
7895771,comment,7895504,7895719,4,0,tel,,,"If something is Iterable, it&#x27;s a Functor, but not the other way around. Iterable implies there&#x27;s an order to the elements, for instance. It also implies that you could get ahold of the elements if you chose.<p>Types which are Functors may have orders and may provide access to the elements, but the Functor interface does not provide those means. This allows you to instantitate more restrictive types. For instance (in Haskell notation)<p><pre><code>    data Pretend a = Pretend\n</code></pre>\nis a data type with only one element (`Pretend`) that pretends to be a container. Consider the two types<p><pre><code>    Array Int\n    Pretend Int\n</code></pre>\nYou can still consider Pretend to be a Functor (the mapping function is just a no-op) but it certainly isn&#x27;t iterable.<p>In Haskell, Iterable is called Foldable and effectively is the following interface<p><pre><code>    instance Foldable c where\n      toList :: c a -> [a]\n</code></pre>\nbut `Foldable` is used because typically instead of converting it to a list you want to fold over the elements<p><pre><code>      fold :: Foldable c => (a -> b -> b) -> b -> c a -> b</code></pre>",1402854013
7895770,comment,7894816,7895406,7,0,michaelochurch,,,"<i>In 2014, the stigma surrounding depression is every bit as harsh as it was in 1998, when I was diagnosed. In some ways it&#x27;s even harsher. That really sucks.</i><p>I think it&#x27;s worse. People are more aware of the illness itself, but there&#x27;s more conformity, which means that it&#x27;s harder to find accommodation for symptoms that are mild but embarrassing (e.g. needing a quiet room, instead of an open-plan hell, to recover from a panic attack).<p>What&#x27;s new and upsetting is the <i>competitive</i> conformity of the Millennial generation (or maybe I&#x27;m just biased against my won age group). Gen Xers in 1995 may have had to show up for work at 9:00 and wear slacks, but they didn&#x27;t rat each other out. They knew it was them against the system. The rising generation seems to have more house-slave types who&#x27;ll rat each other out. I don&#x27;t mind conforming (to a reasonable degree) and I don&#x27;t mind competing, but when people <i>compete to conform</i> I just want to punch everyone in the face.",1402853980
7895769,comment,7893068,7895444,2,0,nekopa,,,"Hey, I understand what you are saying. But he did have a point, why use hostility? You could have made the same comment without the first line saying &#x27;use your brain&#x27; and kept everything civil. Even if you are right, do you need to denigrate others who have gotten something wrong?",1402853977
7895767,comment,7894100,7894369,3,0,saalweachter,,,"The principle difference between BRK.A and BRK.B is voting rights.  If you don&#x27;t intend to exercise your voting rights (or don&#x27;t need to -- if Bill Gates has a concern about how Berkshire Hathaway is being run, you don&#x27;t think he can just call Warren Buffett up and have a chat?) why would you pay the premium for voting shares?",1402853854
7895766,comment,7894838,7895552,3,0,chubot,,,"I think the point is that any system which is meant for people to self-host AND which is based on a Linux distro (Debian, Red Hat, etc. -- YunoHost is based on Debian) is broken by design.<p>Running &quot;sudo apt-get update&quot; and &quot;sudo apt-get upgrade&quot; in a cron job is not a security solution.<p>Operating systems have to be designed so that a security hole in a single application can&#x27;t compromise the entire system.  If not, I would argue they are unsuitable for the average user to &quot;self host&quot;.  Modern Linux distros don&#x27;t meet this criteria.<p>OpenMirage is solving some of the same problems as YunoHost, just on a longer time scale and with real solutions rather than hacks piled on top of hacks (I&#x27;m not affiliated with the project).  apt-get is a big hack and not suitable for distributed computing.",1402853834
7895765,comment,7888198,7889464,1,0,rahimnathwani,,,"I don&#x27;t think it&#x27;s primarily the distance.  It costs less than $200 to travel from Sofia to London by bus.  This is less than half the median monthly income.<p>However, getting a job in London or another city will take time, and the cost of essential services like accommodation and public transport will quickly add up.",1402853826
7895764,comment,7895504,7895719,6,0,orbifold,,,"More precisely it is an endofunctor in the category whose objects are Swift types and morphisms are functions between Swift types. All this really means is that given a Swift type, say Int or String, there are Arrays of Int or String, and given a function like showInt(a : Int) : String, a functor gives you a function from an Array of Int to an Array of String (in this case it would just apply showInt to each element of the Array and the result would be the Array of String) in such a way that if you have two functions (to keep with the example, say toUppercase(s : String) : String, the function you get by applying the functor to the composition (toUppercase . showInt) is the same as the composition of functions gotten from the application of the functor to the individual functions. In addition it is required that the identity function is mapped to the identity function.",1402853818
7895763,comment,7893440,7893440,1,0,j2kun,,,"I want to hear from people who do math all day every day, and not just programming language theory. I want to hear about algebraic geometers, topolgists, ring theorists using Haskell and saying &quot;Yeah this is really helping me in my work.&quot;",1402853788
7895762,comment,7893722,7893722,1,0,tambourine_man,,,"Browser support?",1402853785
7895761,comment,7893158,7893937,1,0,owlmonkey,,,"Totally agree. It is at best a semi-portable sensor (with wet prep) not a sequencer. Cost would be another big obstacle for using MinIon on human data. At about 100 megabases and $1000 per cell that&#x27;s three orders of magnitude more expensive per base than a HiSeq X. (edit: spelling)",1402853778
7895760,comment,7894816,7894977,2,0,michaelochurch,,,"<i>One person I know explicitly refrains from treating his bipolar disorder because he thinks manic episodes make him productive.</i><p>Does he have hypomania or actual mania?<p>True mania (not hypomania, which is sometimes benign) is a hot mess and I&#x27;d be surprised if he&#x27;s employed 12 months down the road. It&#x27;s pretty devastating, and I can&#x27;t see why anyone would want it.",1402853747
7895759,comment,7893440,7895724,3,0,hollerith,,,"The literal answer to your question is<p><pre><code>   readIOArray m (i,j)\n</code></pre>\nBut that is misleading because there are two kinds of arrays in Haskell, and the kind (namely, mutable) I used in my literal answer is the less common kind. In fact, it is so uncommon and so contrary to the spirit of Haskell that the language implementations do not take the trouble to make it fast.  Last time I played with the Glasgow Haskell Compiler, for example, a related operation (readIORef) was over 100 times slower than its counterpart in C.<p>Parenthetically, because you need to use &quot;a monad&quot; to perform any sort of mutable operation in Haskell, the translation of<p><pre><code>   m[i,j] := m[j,i]\n</code></pre>\ninto Haskell is not<p><pre><code>   writeIOArray m (i,j) (readIOArray m (j,i))\n</code></pre>\nlike someone unfamiliar with monadic style might think, but rather<p><pre><code>   readIOArray m (j,i) >>= writeIOArray m (i,j)\n</code></pre>\nor equivalently<p><pre><code>   do\n      element <- readIOArray m (j,i)\n      writeIOArray m (i,j) element\n</code></pre>\nBut that is a side issue.  The central fact is that even though it is technically possible, it is considered bad style in Haskell to access or update individual array elements.",1402853744
7895758,comment,7895364,7895364,7,0,bushido,,,"This is extremely insightful and applies to a lot of industries:<p><i>I&#x27;ve learned that we can&#x27;t tell the difference between luck and skill. Out of millions of investors, a few will be phenomenally successful due to luck alone, yet no one is willing to admit they are one of the lucky ones.</i><p>I recall reading this statement written in different words in a few articles and essays from PG and others.",1402853708
7895757,story,,,2,0,guiomie,"Godwin's Rule of Nazi Analogies",http://en.wikipedia.org/wiki/Godwin%27s_law,,1402853668
7895756,story,,,23,10,ausman,"Towelroot by geohot to root Galaxy S5 with one click",http://www.shoutpedia.com/towelroot-v1-released-download-links-guide/,,1402853658
7895755,comment,7895504,7895719,3,0,afthonos,,,"Let&#x27;s begin with the array. Imagine I have an array of characters:<p>var a = [&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;]<p>I&#x27;d like instead to have the index of their position in the alphabet. That&#x27;s another array of the same length that would look like this:<p>var i = [0, 1, 2]<p>To each element in a, there corresponds an element i, at the same index. And the operation we use is the same for each element:<p>f(&#x27;a&#x27;) = 0<p>f(&#x27;b&#x27;) = 1<p>f(&#x27;c&#x27;) = 2<p>But we could also want an array that gives us the next letter in the alphabet, like so:<p>var n = [&#x27;b&#x27;, &#x27;c&#x27;, &#x27;d&#x27;]<p>Here the function is:<p>g(&#x27;a&#x27;) = &#x27;b&#x27;<p>g(&#x27;b&#x27;) = &#x27;c&#x27;<p>g(&#x27;c&#x27;) = &#x27;d&#x27;<p>But we&#x27;re very much doing the same thing. We call it <i>mapping</i>. So Arrays in Swift have a map function defined that works like this:<p>var i2 = a.map(f)<p>We&#x27;re passing the function to apply to each member, and we get an array back, of the same length, with the result of doing so.<p>A functor is a generalization of that concept. It takes a type parametrized by another type, say Box<V> and a function from the parametrized type to another type, say f:V -> W. Then, according to rules that are specific to Box, if you map f over Box<V>, you&#x27;ll get a Box<W> out.<p>The key is that exactly how a Box<V> becomes a Box<W> is up to Box.",1402853629
7895754,comment,7895301,7895706,2,0,JonnieCache,,,"That ridiculous fedex quest at the end kinda took the shine off it for me. It felt really lazy.",1402853629
7895753,comment,7894816,7894816,3,0,read,,,"Being vulnerable is powerful.<p><a href=""http://www.ted.com/talks/brene_brown_on_vulnerability"" rel=""nofollow"">http://www.ted.com/talks/brene_brown_on_vulnerability</a><p><i>You are vulnerable, but you are not weak.</i><p><pre><code>  It is a sign of weakness to avoid showing signs of\n  weakness.\n\n  - Nassim Taleb</code></pre>",1402853614
7895752,comment,7895504,7895719,13,0,JoshTriplett,,,"The name &quot;Functor&quot; can be confusing; it&#x27;s a thing you apply a function <i>to</i>, not a function itself.<p>A Functor is a type <i>t</i> parameterized by some other type <i>a</i>, such that if you have a function from type <i>a</i> to type <i>b</i>, you can apply that function to a <i>t</i> of <i>a</i> and get a <i>t</i> of <i>b</i>.<p>Most commonly, a functor will be a container of values of type <i>a</i>, and the mapping consists of applying the function to each value, resulting in a container of values of type <i>b</i>.<p>Other common functors include a computation that returns type <i>a</i> (use composition to apply the function to the result to get a computation that returns type <i>b</i>), or a possibly null pointer to type <i>a</i> (map null to null, map pointer to <i>a</i> to pointer to <i>b</i>).",1402853582
7895751,story,,,1,0,97-109-107,"Unix pioneer Rudd Canaday has a blog ",http://ruddcanaday.com/blog/,,1402853519
7895750,comment,7895268,7895268,1,0,bcoughlan,,,"Speculation:<p>- LLVM is an awesome project and quite mainstream now, making it a bit easier to write an optimized compiler.<p>- Rust: C is a language built for single core use. The future is many-core machines. Mozilla realized that the archaic C language was making multi-core processing far more difficult because of missing language constructs, slowing down development and holding back the future of browser performance. The idea is that multicore/multichip aware languages can greatly simplify developing parallel applications.<p>- Go: Also aims to modernize &quot;systems languages&quot;. Dependency management, better type systems, garbage collection, parallel computing. multi-core awareness, compile times. <a href=""http://mashable.com/2009/11/10/go-google-language/"" rel=""nofollow"">http://mashable.com/2009/11/10/go-google-language/</a> . It&#x27;s your C/C++ replacement.<p>- Swift: Probably an Apple move to attract more app developers and to increase the quality of apps with better tools.<p>So the answer is both because the computing landscape is changing, and the move towards Python, despite its performance issues, signals developer demand for better tools.<p>Remember that HN/proggit users are generally interested in new ideas and ways of working, and most people working in industry have probably never heard of Haskell. HN is also susceptible to marketing from time-to-time - MongoDB and Rails were two huge trends that did not deserve their popularity, at least at the time.",1402853512
7895749,story,,,1,0,amitagarwal,"The best websites to learn coding",http://www.labnol.org/internet/learn-coding-online/28537/,,1402853498
7895748,comment,7895215,7895637,1,0,jannes,,,"Yes there is! It&#x27;s always in the context menu of the page, right next to &quot;View Source.&quot;",1402853437
7895747,comment,7895268,7895268,4,0,norswap,,,"My take on a few languages you mentioned. I&#x27;ll try to stay as neutral as possible, but some things are bound to be controversial.<p>- C#: Microsoft&#x27;s answer to Java, supposedly does some things better (Java seems to be catching up some), but cross-platform support is so-so.<p>- Go: I don&#x27;t understand Go. It seems to be conceived as an improvement over C, and it gets many things right (and a few things wrong, like error handling). Unfortunately, it gets the most important things wrong: performance and low-level access, which are the only reason anyone uses C nowadays. If you don&#x27;t need C&#x27;s performance, you get languages that are much nicer and faster than Go (like Java or C#). As a result, it drew Python programmer rather than C programmer, because Go is still faster than Python, and feels quite similar to basic uses of it. Also Go seems to draw people who have drunk too much of the anti-OO kool-aid.<p>- Swift: A bit too new to tell. Objective-C was a notable improvement on C without incurring the complexity of C++. It suffers of a bit of Go syndrome, but Apple forces you to use it, so there&#x27;s no debate to be had. Swift is an improvement over Objective-C. It seems to be that this heritage lead to some shoehorning and there are maybe clunky angles to how some things were designed (i.e. the type system).<p>- C++: many people have said it, C++ is very powerful but it&#x27;s way too easy to break everything in a subtle manner without realizing it. The problem of C++ is that it has a <i>very</i> large set of core features, which can all interact in ways that are hard-to-predict if one is not a language lawyer. C++ is the opposite of elegance in language design. Despite this, it is used because it is fast and gets stuff done (good expressiveness). And if you run into strange feature interaction, you can always work your way around them by making the design a bit more ugly, thereby avoiding to have to gaze into the pit of hell.<p>- Rust: very interesting because it promises more safety when doing low-level work, while retaining performance. I&#x27;m still waiting for the development dust to settle to give it an in-depth look.<p>- Smalltalk: the language itself is nice enough, kind of like a Ruby that would have been pushed to the level in terms of meta-programming. The environment, however is awful. The &quot;image&quot; in which you work completely traps you, and has a super poor UX despite the inclusion of very powerful introspection/debugging tools. At any rate, Ruby is mostly good enough, and you rarely need the added meta-stuff from Smalltalk.<p>- Erlang: genuinely useful for its use case, distributed systems. This is a language where the intended use was really woven in the language design, to great effect. For the rest, it&#x27;s a bit like ML without types. Personally, I see no good reason for leaving out types, so that tends to annoy me a bit.<p>- PHP: Many things (mostly bad) have been said about it, and many of them true. However, its success is not undeserved in the sense that it was a very easy language to get started with, from the fact that it could be embedded inside the html directly (allowing for nifty cut-and-pasting) to the availability of easy-to-configure servers. It also has top-notch documentation.<p>- Common Lisp: The problem of Common Lisp is that it feels old. Many things seem antiquated, especially the library ecosystem. It&#x27;s very hard to tell if there are good libraries, because the ecosystem is so scattered. Some libraries may not have been worked on for some time, but still be adequate, but that&#x27;s hard to tell beforehand. There is few endorsement/sponsorship of libraries/tools by organizations or companies; most artifacts are the product of the work of some lone hacker (at least, that&#x27;s how it feels). Maybe quicklisp is solving the problem, but then again, it&#x27;s in &quot;beta&quot; since 2012. As for the language itself, well it is quite nice with all the macros and stuff, albeit I once again miss types (mostly for documentation purpose, as Lisp can sometimes be quite cryptic). Typed Lisps exist btw, such as Shen.<p>- Javascript: Javascript reminds me of Lua, in the sense that both languages have a quite small set of basic features that turn out to be remarkably expressive. There are obvious problems however in Javascript, which are mostly the consequences of how fast the language was produced. Under the circumstances, it turned out admirably well. Javascript became popular because that&#x27;s what was supported by the browsers, and this looped into a spiral of support/development.",1402853434
7895745,comment,7894100,7895519,2,0,saalweachter,,,"There is a lot of variation in how people taste artificial sweeteners.<p>In my informal surveys, some people think Diet Coke tastes sweeter than regular Coke, and some people think regular Coke tastes sweeter.  In general, people seem to prefer the one that tastes less sweet.",1402853407
7895741,comment,7895215,7895560,3,0,jannes,,,"You can always re-enable the translation popup through the page&#x27;s context menu. It has an entry for &quot;Translate to English&quot; (or whatever your preferred language is) right there.",1402853329
7895740,comment,7895268,7895268,1,0,pigDisgusting,,,"C# isn&#x27;t particularly new. It&#x27;s almost 15 years old.<p>You might be more interested in Microsoft&#x27;s as-yet-unreleased new language, which seems to be codenamed &quot;Oslo&quot;?<p><a href=""https://news.ycombinator.com/item?id=6974494"" rel=""nofollow"">https://news.ycombinator.com/item?id=6974494</a><p><a href=""https://news.ycombinator.com/item?id=6983649"" rel=""nofollow"">https://news.ycombinator.com/item?id=6983649</a><p><a href=""https://en.wikipedia.org/wiki/Oslo_(Microsoft)"" rel=""nofollow"">https://en.wikipedia.org/wiki/Oslo_(Microsoft)</a><p><a href=""http://joeduffyblog.com/2013/12/27/csharp-for-systems-programming/"" rel=""nofollow"">http://joeduffyblog.com/2013/12/27/csharp-for-systems-progra...</a><p><a href=""http://blogs.office.com/2014/03/03/work-like-a-network-enterprise-social-and-the-future-of-work/"" rel=""nofollow"">http://blogs.office.com/2014/03/03/work-like-a-network-enter...</a>",1402853327
7895739,comment,7894528,7895603,3,0,caycep,,,"It&#x27;s always hard to say about the 5C because Apple isn&#x27;t going to telegraph their punches - I suspect Cook & co are quite happy - it&#x27;s like selling the iPhone 4S but with higher margins, which is probably what it was intended to do.",1402853285
7895738,comment,7894332,7895417,2,0,wmf,,,"<a href=""http://read.cs.ucla.edu/click/click"" rel=""nofollow"">http://read.cs.ucla.edu/click/click</a>",1402853244
7895737,comment,7894332,7894765,1,0,wmf,,,"You&#x27;d probably want to combine ECN and dropping.",1402853176
7895736,comment,7894528,7895708,5,0,webwielder,,,">As GP said, you would be hard-pressed to find someone either inside Apple or outside who would seriously make the argument that the 5C was anything other than a disappointment.<p>Nope, that&#x27;s not what they said. What they said was:<p>>I don&#x27;t think many people inside or outside of Apple are arguing that the 5C was a disappointment sales wise.",1402853132
7895735,comment,7893629,7893935,1,0,pbhjpbhj,,,"I don&#x27;t think IKEAhackers passes on 2 or 3.<p>They use the mark in the URL and site design, which is more than is necessary to identify the origin of the goods mentioned on the site. They use the livery and typefaces (or look-alikes) and the site style matches IKEAs - eg the line drawn cartoons are close in style - and I&#x27;d say all these factors suggest an endorsement that is not <i>clearly</i> and prominently disclaimed (it is disclaimed on the site however).<p>Now all that with no commercial aspects to the use (no advertising) and it&#x27;s looking a bit thin on the plaintiff&#x27;s side; but with the commercial use ... in short the use doesn&#x27;t <i>feel</i> [!] purely referential (or &quot;nominative&quot; in the language of the US caselaw) to me.",1402853119
7895734,comment,7894838,7895717,4,0,webmaven,,,"Most but not all, and that won&#x27;t change without consumer pressure in that direction. Projects like this, if they become popular, can help create that pressure.",1402853116
7895733,comment,7895364,7895364,7,0,Blahah,,,"Mostly insightful, but this bit:<p><i>Those who criticize the behavior of &quot;greedy Wall Street bankers&quot; underestimate their tendency to do the same thing if offered an eight-figure salary.</i><p>You have to be greedy to go into Wall Street banking in the first place. Most of us deliberately didn&#x27;t become bankers because we aren&#x27;t motivated by greed. This makes bankers fair game for criticism.",1402853095
7895732,comment,7895147,7895303,0,0,dang,,,"We didn&#x27;t change the url. As far as I can tell from the logs, no one did. A moderator changed the title from &quot;Fonts in Google Chrome on Windows no longer look like they’re from the XP-era&quot;, which was a blatant violation of the HN guidelines. \nIn addition, the post was flagged by users, probably because of that title.<p>Submitters: please read the HN guidelines and don&#x27;t rewrite article titles to express your opinion. Please post an article that pertains to the news you have in mind. If no other article will do, you can always clarify the context by posting a comment to the thread.<p>Edit: I also just added &quot;(2011)&quot; to the title because <a href=""https://web.archive.org/web/20111109050857/http://msdn.microsoft.com/en-us/library/windows/desktop/dd371554(v=VS.85).aspx"" rel=""nofollow"">https://web.archive.org/web/20111109050857/http://msdn.micro...</a> makes it clear that it goes back at least that far.<p>Edit 2: If you or anyone else can suggest a better article, we&#x27;d be happy to change the url.",1402853066
7895731,comment,7895504,7895694,13,0,afthonos,,,"Author here. To be fully honest, it&#x27;s somewhere between the two. Yes, I&#x27;m aware of the irony of the statement. But what I failed to make clear in the post is that the code in the last two examples passes the type checker. Where it fails is at the intermediate representation stage. So the  grammar of the language supports the constructs but the backend hasn&#x27;t caught up yet.<p>It&#x27;s possible, of course, that Apple will modify the grammar to make these use cases impossible. But I would be very surprised. I can&#x27;t blame anyone for accusing me of rose-tinted glasses until we know for sure, though.",1402853048
7895730,comment,7895268,7895642,1,0,danellis,,,"JavaScript became popular because it was the only(1) language that did what it did -- scripting in the browser. It has become popular on the server side lately(2) partly because some people are reluctant to learn another language, and partly because people believed that Node&#x27;s nonblocking hype was something new.<p>(1) Yes, there were others from MS, but only JS has been cross-platform and cross-browser.<p>(2) Node.js wasn&#x27;t the first server-side JS environment, but it was the first to be popular.",1402853046
7895729,comment,7894296,7895216,2,0,gaius,,,"Correct IS &quot;widely seen as right by a large group&quot;. People in the 1950s were not evil or stupid, they were much as people are now: well-meaning and sincere in their beliefs. Their correct is not our correct, but in context, it&#x27;s not &quot;worse&quot; than ours. If you&#x27;d been an adult then, you&#x27;d have beliefs in tune with the zeitgeist too.",1402853046
7895728,comment,7893170,7894286,1,0,xenadu02,,,"In a way, randomness would be preferable because those with ability (who otherwise wouldn&#x27;t meet the criteria or pass the tests) would get a chance to succeed. The ones that flunk out would make room for some more random attempts. Eventually the system would settle into a steady-state of X% of previously-found high performers and Y% of ever-rotating randoms, where occasionally one of the randoms moves into the high-performers group.<p>This stuff also continues to reinforce and highlight how arbitrary and capricious success often is; many people are successful as much for their family/money/connections/opportunities as for their actual talent.",1402853009
7895727,comment,7895189,7895189,1,0,cskau,,,"Does anybody happen to know if it&#x27;s just as easy to read the pins at 91.25, 94.75, and 95.75 MHz?<p>Lately I&#x27;ve been trying to find a way to do exactly that - initially using audio in - but so far without any luck.",1402852995
7895726,comment,7895268,7895268,4,0,klibertp,,,"> When I ask those questions I am in no way trying to discredit new languages and their usefulness, I am just young, naive, not very smart and trying to get and idea of how the real world of programming and computer works.<p>Welcome to the war.<p>Please don&#x27;t hold any hard feelings for the community if you get flagged or downvoted to hell. People who will do this to you are generally smart, sympathetic and considerate individuals who just were on the frontlines for much too long. Being cold-hearted and eliminating every threat swiftly, no matter how innocent it seems, is the only way of preserving one&#x27;s sanity here.<p>I&#x27;m a PLT and Type Theory enthusiast, although I lack any formal education in this direction. I try to follow new research and I&#x27;m constantly learning new things (like the ones from the &#x27;60 which were then forgotten) and really new things (original research happening now which acknowledges what was done in the field already). I graduated (last year) from just learning new languages and I&#x27;m writing my toy languages (thanks to Racket&#x27;s being an absolutely wonderful framework to do so), but I still learn every single language that seems interesting. This includes both nearly-mainstream languages like Erlang and the ancient, largely forgotten like Prolog, APL and Forth (which you should include in your list next to C, Smalltalk and Lisp).<p>I&#x27;m fascinated by the notion of computation, of how we can encode computation, how we can reason about computation and how we can transform computation to preserve its semantics. I&#x27;m fascinated by language design: what features a particular language has and what it omits, I&#x27;m always trying to discover what kind of turtle (and if really all the way down) a language is built upon. I&#x27;m feeling happy and safe reading papers from Racket and Haskell people, it feels like I&#x27;m reading a suspenseful novel in a quiet library somewhere.<p>Then I go to StackOverflow or here and the reality hits: screaming, shooting, blood and intestines everywhere, people fighting for their salaries and self-respect, so ultimately for their lives.<p>You&#x27;ll hear about technicalities from other people here: type systems, concurrency primitives, memory safety and direct memory access, static vs. dynamic (not only typing), syntactic support for common idioms, having (or not) a built in support for certain concepts (like inheritance or composition). I&#x27;m not going to tell you about all this. I&#x27;d love to, and I really like the topic, but I feel that you wouldn&#x27;t benefit from it nearly as much as from the other half of the story.<p>You see, programming languages are tools which people make for people to use. Not only that - both the makers and consumers do what they do to feed their families. I recently saw a Byte magazine from 1980 (IIRC) where I saw an ad of TinyPASCAL, which promised 4x increase in speed over the equivalent code in Basic. It came with some additional libraries (and it was available for a couple of different machines) and cost $8. There was another ad, which claimed that you won&#x27;t ever need another Fortran after you buy the one being advertised, because it was fast and had additional libraries, for example (IIRC) for calculating log (or lg). It was some $15, I think. Not having lived then I miss <i>a lot</i> of context, but what I see here is that people were using programming languages to make money for quite a long time.<p>This is not a problem in itself. The problem is the nature of our industry, which is for the most part impossible to measure or experiment with. When have you last heard about double-blind (how would that even look like...) experiment of building the same large corporate system 5 times with different tools and simultaneously? I didn&#x27;t. And that&#x27;s not all. We <i>are</i> certain about some things, because the mathematicians discovered some very clever proofs of these things. But they are rare, few and far between. For my favourite example: what &quot;readability&quot; even <i>is</i>? People fight to their last breath and last shred of dignity for their particular take on readability, yet we don&#x27;t have a slightest idea what the hell readability is, let alone how it impacts us. It&#x27;s the same, just many times worse, with other features, like famous allowing assignment in conditionals, or preferring mutability over immutability, or providing pointers or not and so on. We know for sure that, if the language is reducible to a very few operations which form one of the basic models of computation, that it&#x27;s able to express everything expressible in every other language. That&#x27;s a baseline and it&#x27;s basically useless, because there <i>are</i> real differences between how good are different languages as a tools and we have no idea at all what makes the difference. We have lots and lots of anecdotes, though.<p>All this - people wanting better tools and people getting used to their tools, people designing new tools and people marketing the tools they make as better, and having no meaningful way of defining what &quot;better&quot; even means here, but having a vague feeling that how good the tool is directly impacts your performance and your pay leads to the current situation. People have their beliefs, and there are people - some sincere, some not so much - who profit from their beliefs. Languages are being viewed as tools for writing software and for generating revenue... both by corporations and individuals. All programmers make decisions about which philosophy, which belief system to buy into and they all know that this decision is an important one. For companies it - having a language with large following - can make a whole difference between winning and loosing on the market. Similarly for individuals, belonging to a particular tribe makes them feel safer, they can more easily ask for help, they can find jobs more easily. It&#x27;s really a circle of illusion which works, because it is economically possible for it to work, and because no one can really dispel that illusion (of knowing what &quot;better language&quot; means, for example) yet.<p>So, to answer your question - what makes languages successful or not? Please do read other answers and pay attention to all the technical details, they <i>are</i> important - but in the end I believe, at least for the last 40 years and some more to come, the answer is really simple: people. It&#x27;s people, which are social creatures, which have emotions, which are susceptible to manipulation, which are rebellious, which are compliant, which are used to things, which are tired of things, which have wants and fears beyond and above technical matters - it&#x27;s just people who make languages successful or not. It&#x27;s almost purely a social issue. Think for a moment - what does it even <i>mean</i> for a language to be successful? Doesn&#x27;t it mean to be popular with people?",1402852985
7895725,story,,,2,0,chinstorff,Multisnake,http://frontfish.net/games/multisnake/,,1402852969
7895724,comment,7893440,7895466,1,0,sampo,,,"I meant, just accessing a matrix element i,j which in many languages happens by m(i,j) or m[i,j].",1402852892
7895723,comment,7895504,7895504,43,0,archgrove,,,"Compiler bugs really don&#x27;t worry me - despite the name, this is is really an alpha release. However, I ran up against the lack of generic protocols myself today (for those with access, there&#x27;s an interesting debate at <a href=""https://devforums.apple.com/thread/230611?tstart=0"" rel=""nofollow"">https://devforums.apple.com/thread/230611?tstart=0</a>). It seems like a deliberate design choice, but one I&#x27;m not really sure about.<p>The primary vibe I&#x27;m getting from Swift is <i>pragmatism</i>. They had various red lines to follow: must be as fast as Objective C; must have a minimal to non-existent runtime (so AOT compilation all the way); mustn&#x27;t have garbage collection, must interoperate with Objective C/normal C with ease; etc. This had led to a language which, despite being at version 0.1, has a fair few oddities and warts already. For example, the &quot;almost but not quite immutable&quot; arrays seem to be an artefact of absolutely wanting array performance to be equal to standard C. Typealiases vs parametric protocols seem to be a desire to have as much type information fixed as soon as possible.<p>It seems that rather than design a language where they might not have solutions for their red lines up front, they&#x27;ve designed a language where they can provide them. Rather than make theoretically &quot;better&quot; choices the compiler can&#x27;t deliver perfectly in V1, but can in V4 or 5, they&#x27;ve gone for &quot;yeah, we can almost certainly ship that&quot;. Given that this is essentially Apple&#x27;s private language, I assume they&#x27;ll be quite aggressive about deprecating features and moving people onto the &quot;better&quot; solutions (high-kinded types, richer immutability etc) when they can deliver them whilst meeting the core goals. It&#x27;s an interesting approach - most other languages are happy to take a few years to get going, whereas Swift seems to want to go from 0 to 60 in 4 months. It reminds me most of C# 1.0, but with harder restrictions on what they&#x27;ve been told to deliver. At the moment, it&#x27;s interesting, and a big leap from Objective C. By V3, it might be &quot;excellent&quot;.",1402852891
7895721,comment,7895268,7895268,6,0,chubot,,,"> How do languages get popular? Money, syntax, portability?<p>One particularly good way is to be attached to an OS or platform.<p>- C came with Unix (although was so good that it migrated off it to Windows and basically every other platform).<p>- JavaScript came with the browser<p>- C# comes from an OS vendor; Microsoft.  They built APIs for their platform in C#.<p>- Likewise, Objective C was for NeXT, and Swift is for iOS.  They built APIs for their respective platforms.<p>- Java is an interesting case because Sun wanted the JVM to be an OS, to replace Windows, but they ended up with just a language.  This is great evidence that a language itself is unprofitable; an OS/platform can be <i>hugely</i> profitable.<p>You have all the main OS cases represented: Unix, Apple, and Microsoft.<p>Google is sort of an OS/platform company, with Android and ChromeOS.  However they reused Java in the former case.  They designed their own VM (Dalvik) instead of inventing a new language.  For the web platform, they are designing and implementing Dart.  For the &quot;cluster of servers&quot; platform, Go is very appropriate.<p>Mozilla is also a platform company; it&#x27;s not surprising that they are investing in Rust.<p>So my takeaway is that OS/platform vendors are the ones with the main interest in the huge effort of designing and implementing a language.  How successful the platform often has more to do with the success of the language than the language itself.  Java might be the exception.",1402852882
7895720,comment,,7895051,3,0,anon96342,,,"Thank you Nanzikambe.<p>This is anon48191, I apologize for using yet another anonymous user. As outlined in my, unfortunately dead, comment I have reasons to stay anonymous (check shadowdead if you&#x27;re interested in my original comment).<p>I would also like to quickly address the comment by Flow:<p>It might very well be that people around me already know. However, there&#x27;s a big issue between knowing and officially knowing. Further, I never talked about medication. I personally don&#x27;t believe much in medication. The steps I was considering were talking to a psychiatrist and take it from there. However as soon as I do this, it is bound to become public, as in public within my circles.<p>I will not question Flows intention in their comment, their knowledge or familiarity of the issue. However, and you&#x27;ll have to take the word from an anonymous commenter on the internet for this, I am most definitely depressed, if not worse, and outright claiming my (however anecdotal) comment is wrong, seems a bit harsh.",1402852872
7895719,comment,7895504,7895504,7,0,leorocky,,,"I don&#x27;t understand what a functor is or why an array is a functor. Can anyone please explain? I did the wikipedia article for category theory and I read some stack overflow questions and I&#x27;m not sure I understand why an array is a functor. It seems some languages have their own meaning for what a &quot;functor&quot; is, confusing the issue.<p>My initial guess is that a functor is just sort of like a function that casts or does something like return an interface type from a type that implements the interface or a base class. Is that right? I still don&#x27;t understand why an array is a functor though, I&#x27;d imagine it would at least have to be a function?<p>Edit:<p>Actually I think he&#x27;s talking about Haskell&#x27;s version of an iterable, and it would then make sense to call an array a functor.<p><a href=""https://en.wikibooks.org/wiki/Haskell/The_Functor_class"" rel=""nofollow"">https://en.wikibooks.org/wiki/Haskell/The_Functor_class</a><p>Why is that called a functor instead of an iterable or enumerable though?",1402852861
7895718,comment,7892724,7893202,1,0,dTal,,,"Can you find the link? FLAC is not supposed to be lossy under any circumstances. In the worst case, if none of several algorithms are successful at compression, the block is stored verbatim. A single-sample deviation on any input would be considered a bug.",1402852838
7895717,comment,7894838,7894838,1,0,mthoms,,,"Isn&#x27;t self-hosting forbidden by the terms of use in most consumer level internet packages these days?",1402852828
7895716,comment,7895215,7895215,1,0,jitl,,,"Chrome has a good flow for this already if you want sometimes-translation. If the feature is bothering you,<p>1. Never translate this language<p>2. When you want a page translated, click the Translation icon in the URL bar and choose to translate.",1402852812
7895715,comment,7895364,7895627,3,0,bushido,,,"<i>> an order of magnitude smaller than the bubbles mentioned</i><p>The thing about money and markets is it all <i>relative</i>(%).<p>Whenever talking on these topics people revert to absolute($) comparisons, this is where most analysis breaks.<p>I am not arguing or commenting on bitcoin success, just that your mention of &quot;order of magnitude&quot; sounds like an absolute value.",1402852802
7895714,comment,7894838,7895385,2,0,Morgawr,,,"I wouldn&#x27;t like to perform update && upgrade (and also reboot!) automatically every day or so. Why? Because updates/upgrades are always something that should be overseen by a capable administrator. Sometimes updates break, sometimes they override your personal config files with less secure default files, sometimes the system crashes and you&#x27;re left in an inconsistent and dangerous state, etc etc.<p>I definitely don&#x27;t want to automate my server&#x27;s updates in such a way.",1402852796
7895713,comment,7893170,7895410,3,0,yummyfajitas,,,"I don&#x27;t claim it&#x27;s identical, I claim it&#x27;s the best point estimate we have.",1402852753
7895711,comment,7894296,7894892,3,0,cdcarter,,,"> Other people hold a different political view, and what they did about it was to try to punish someone who had expressed the first political view.<p>No, no, see. Other people hold a different political view, and what they did about it was lobby to have a major organization run by someone who doesn&#x27;t express that first political view.<p>I know of NOBODY who wanted to &quot;punish&quot; Eich for his actions. I know of PLENTY who wanted to have someone tolerant running the volunteer driven organization.",1402852745
7895710,comment,7895364,7895364,2,0,jeremysalwen,,,"I don&#x27;t think it&#x27;s true that &quot;The country is richer than it&#x27;s ever been.&quot;  According to this graph, that would be in 1999, not now. <a href=""http://upload.wikimedia.org/wikipedia/commons/3/37/Median_US_household_income.png"" rel=""nofollow"">http://upload.wikimedia.org/wikipedia/commons/3/37/Median_US...</a>",1402852719
7895709,comment,7893206,7893206,0,0,clubhi,,,"Interesting. Here is a similar animated graph of the population of our solar system over the last 10K years or so.<p><a href=""http://www.nationsonline.org/gallery/Earth/Solar_System.jpg"" rel=""nofollow"">http://www.nationsonline.org/gallery/Earth/Solar_System.jpg</a>",1402852658
7895708,comment,7894528,7895623,3,0,chimeracoder,,,"> It&#x27;s not about a statement being less than flowery. It&#x27;s about a statement that is misleading.<p>It is not misleading in the least to say that the 5C was a disappointment. It did not do a particularly good job of living up to its all-but-stated goal of penetrating the lower-income market in the developing world, namely China[0].<p>As GP said, you would be hard-pressed to find someone either inside Apple or outside who would seriously make the argument that the 5C was anything other than a disappointment.<p>[0] Nor did it even do a particularly good job of selling to lower-income households in the US (which wasn&#x27;t even the goal in the first place, but since OP mentioned the US, let&#x27;s address that). It&#x27;s hard to say, but inferring from the movements in market share, it seems the 5C ate into 5S sales more than it converted Android or Windows Phone users.",1402852649
7895707,story,,,1,0,dfuego,"The Most Important Milestones in History",https://medium.com/@dsaezgil/f47595c4453a,,1402852607
7895706,comment,7895301,7895634,4,0,antidaily,,,"I thought it was pretty fantastic the whole way.",1402852603
7895705,comment,7895189,7895189,2,0,startrak,,,"Anybody have information regarding the strength of the output signal? I know the FCC here in the US very touchy about radio broadcast strength...",1402852589
7895704,comment,7895215,7895567,1,0,JelteF,,,"Why wouldn&#x27;t he tick the always translate this language? I feel like it&#x27;s very uncommon that someone would like a language translated half of the time.<p>I&#x27;m Dutch myself, so I have English and Dutch never translated. And everytime I&#x27;m on a webpage with another language I like that I can ask Google to translate it for me and remember it for that language.",1402852579
7895703,comment,7895268,7895650,1,0,jschwartzi,,,"If I&#x27;m writing software for an MCU I&#x27;m going to want something that can directly address and manipulate memory, which excludes interpreted languages and things like Java.<p>For example if you look at the Android platform sources you&#x27;ll see that all the code which supports hardware abstraction is written in C/C++ and then the API is made accessible through JNI.<p>This is somewhat like how homes typically have foundations built of concrete, on which wood is layered and assembled to construct boxes that people can put their stuff in.",1402852553
7895702,comment,7894816,7894816,6,0,LordHumungous,,,"It&#x27;s not just limited to startups. The &quot;<i>everything is awesome!</i>&quot; cult of constant positivity is becoming standard throughout corporate America, particularly the tech sector. IMO it is a counter productive attitude. Does ignoring the negative possibilities of life really increase your chance of avoiding them? It seems to me that recognizing those possibilities head on is a healthier and saner way to go through life.",1402852548
7895701,comment,7835099,7849945,1,0,andybak,,,"You mean a methodNameThatOverlyExplainsEverythingEvenThoughTheContextMakesItClear()?",1402852496
7895700,story,,,68,5,JoshTriplett,"Twilight Princess Eyes Breakdown",http://www.benjones.us/twilight-princess-eyes-breakdown/,,1402852464
7895699,comment,7895364,7895508,8,0,dllthomas,,,"That&#x27;s a paraphrase of a much older story, told about Joseph Kennedy, Sr. and a shoe-shine boy, ahead of the &#x27;29 crash.",1402852440
7895698,comment,7895364,7895641,3,0,antidaily,,,"&quot;Truly at the precipice&quot; is subjective there.",1402852398
7895697,story,,,1,0,jimlast,"How To Watch The 2014 FIFA World Cup Online – A Flowchart",https://ghostpath.com/blog/watch-2014-fifa-world-cup-online/,,1402852389
7895696,comment,7895268,7895573,1,0,r-s,,,"I feel many of the C++ criticisms I read have to do with the older standards (98/03). C++11/14 is a very major upgrade to C++. C++ certainly still has its pitfalls, but things have gotten much better. It honestly feels like a new language to me.",1402852379
7895695,comment,7884371,7891715,1,0,Nursie,,,"Androi is not just aimed at me though, extra protection for the uninformed is not a bad thing. IMHO.",1402852365
7895694,comment,7895504,7895613,2,0,andybak,,,"By my reading the author made that statement, not naively, but with full awareness of it&#x27;s slightly ridiculous nature. I think that whooshing sound was their joke going right over your head.",1402852357
7895693,comment,7895215,7895215,1,0,Aoyagi,,,"I&#x27;ve been seeing that for ages and I&#x27;m not a Chrome user. It could be disabled last I checked...",1402852350
7895692,comment,7895268,7895408,1,0,krapp,,,">Javascript was an exception, IMO, because... they had a monopoly on being the only language that lets u modify webpage content programmatically<p>I have a very dim memory of Microsoft attempting to push VBscript but I can&#x27;t recall ever having even seen it run anywhere.",1402852317
7895691,comment,7895215,7895437,2,0,drdaeman,,,"Say, I have basic understanding of Japanese language. I will want assistance in many cases, but I can find my way across basic navigation and in some cases can get a grasp of what&#x27;s written by glancing (i.e. without fighting translation artifacts).<p>What I don&#x27;t want is a popup slamming into my face on every single Japanese page visit (or even refresh). I&#x27;m not shy with my browser (huh), and I will surely ask for help when I want it.<p>The issue is, if I would click &quot;never translate from Japanese&quot; - the icon in address bar would never appear anymore - the feature will be lost. It wouldn&#x27;t be an issue if there&#x27;d be at least an option &quot;don&#x27;t suggest to translate, but keep the opportunity&quot;.",1402852295
7895690,comment,7895076,7895660,3,0,mh-,,,"<p><pre><code>    % aws ec2 describe-instances --instance-ids &#x27;[&quot;i-3026a249&quot;,&quot;i-28739551&quot;]&#x27; \\\n    | jq &#x27;[.Reservations[].Instances[].InstanceId]&#x27;\n    [\n      &quot;i-28739551&quot;,\n      &quot;i-3026a249&quot;\n    ]</code></pre>",1402852286
7895689,comment,7893690,7893900,1,0,elementai,,,"Quite a lot of plastics leach chemicals that can have estrogenic activity, according to this study <a href=""http://www.ncbi.nlm.nih.gov/pmc/articles/PMC3222987/"" rel=""nofollow"">http://www.ncbi.nlm.nih.gov/pmc/articles/PMC3222987/</a> Take it with a grain of salt though.",1402852257
7895688,comment,7895268,7895635,1,0,Tyr42,,,"I&#x27;m going to agree on the Go part, but do think that Rust can beat C and C++ at their own game.  I really do feel like it&#x27;s the best of C++, combined with Haskell, and a really smart compiler.  A lot of Rust could be translated back into C++ with shared_ptr and && references (the lifetime stuff at least), but Rust gives stronger guarantees about safety and const correctness.",1402852238
7895687,comment,7895561,7895561,1,0,jamesgagan,,,"Just some thoughts for Father&#x27;s day on what it means to be a dad trying to get a startup off the ground.",1402852225
7895686,comment,7893068,7894113,2,0,Curmudgel,,,"Apple already has different model identifiers and different model names for their MacBook Pros. That&#x27;s because they don&#x27;t sell only one version of each laptop; they usually offer two or three versions that have different processors and different amounts of RAM. There were 6 different model numbers and 9 different configurations (across two different sizes and two different batches) of the MacBook Pro sold in 2013 alone:<p><a href=""http://support.apple.com/kb/HT4132"" rel=""nofollow"">http://support.apple.com/kb/HT4132</a><p>I&#x27;m not suggesting that they advertise the MacBook Pros by their model numbers. My point is that they already have to differentiate between different models and different configurations, so it would not be difficult for them to make the model numbers different (it could be simple as one letter or digit change at the end) when they change such a significant part component.",1402852213
7895685,comment,7895268,7895659,1,0,dalke,,,"Also, Prolog as an example of a logic-programming languages.",1402852206
7895684,comment,7893494,7894193,2,0,pavel_lishin,,,"This is how the show portrayed women for the first several seasons. Would you prefer a retcon?",1402852205
7895683,comment,7895301,7895301,1,0,kevin818,,,"Are these same kind of techniques applicable to mobile devices or is the hardware just not there yet? I&#x27;ve always wondered about whether console development and mobile development have converged or not yet.",1402852205
7895682,comment,7895504,7895504,6,0,dirtyaura,,,"I&#x27;ve had very similar experience: I try to port non-trivial, but still rather simple functional code, for example containing a couple of nested closures, and the compiler crashes. And it seems that the Xcode playground, the command line compiler and REPL all behave a bit differently. In one case playground works, but REPL crashes, in another, compiler works, REPL has trouble of figuring out types.<p>I have absolutely no experience on implementing compilers, but for a layman these inconsistencies seems very odd.",1402852203
7895681,comment,7893629,7895580,2,0,jacquesm,,,"That&#x27;s an excellent one. And it seems to be free. You should mail her.",1402852174
7895680,comment,7894838,7894838,1,0,general_failure,,,"Site down?",1402852160
7895679,story,,,1,0,tilt,"Genymotion is the next generation of the AndroVM open source project",http://www.genymotion.com/?,,1402852144
7895678,comment,7895268,7895598,3,0,rch,,,"Or Tom Waits for that matter. I&#x27;ve heard more than a few people say it wasn&#x27;t until a particular album, or or perhaps 10 or so years after their first attempt that they started to really &#x27;get&#x27; Tom Waits. I&#x27;ve heard almost the same for a number of fundamentally great programming languages over the years too.",1402852138
7895677,comment,7895480,7895480,1,0,pwg,,,"> pay out of pocket for a few hundred gigs of storage<p>2T Seagate Barracuda on Newegg right now: 89.99<p>2x2T (redundancy) would then be 179.98.  An out of pocket expense, yes, but not terrible.  Your cable tv bill (if you can cable) likely equals that in 1.5-2 months.  Plus, until a drive fails, this is a one time, single out of pocket expense.  If you are paying crashplan 9.99/month, then after 18 months you are &quot;out of pocket&quot; enough to have bought a pair of drives.<p>2T would be sufficient to backup what you list above with ample room for growth at the moment.  And it is yours...  You can do whatever you want with it, with no restrictions as to what some company wants you to do.<p>> What works for you, and what would you suggest as a solution for me?<p>Three 2T WD red&#x27;s, in a Linux md raid5 config, with rsnapshot as the backup tool.<p>About 2 months ago, a laptop I&#x27;d put BTRFS on had the filesystem corrupt beyond recovery.  Dump, reinstall Linux, rsync back over the backup data from the local backup server (the 2T WD&#x27;s in Linux md raid5) and the machine was back up and running again as if nothing had ever happened to it.",1402852135
7895676,comment,7894528,7895614,7,0,rgbrenner,,,"1) the incident you are referring to was between Google and Ebay. Apple wasn&#x27;t involved at all.\n<a href=""http://pando.com/2014/03/22/revealed-apple-and-googles-wage-fixing-cartel-involved-dozens-more-companies-over-one-million-employees/"" rel=""nofollow"">http://pando.com/2014/03/22/revealed-apple-and-googles-wage-...</a><p>2) The incident involving Google and Apple was between a recruiter and an engineer at Apple. Not some VP, executive, etc.\n<a href=""http://pando.com/2014/03/25/newly-unsealed-documents-show-steve-jobs-brutally-callous-response-after-getting-a-google-employee-fired/"" rel=""nofollow"">http://pando.com/2014/03/25/newly-unsealed-documents-show-st...</a>",1402852131
7895675,story,,,1,0,tilt,"AndroVM: Running Android in a Virtual Machine",http://androvm.org/,,1402852113
7895674,comment,7893839,7893839,1,0,e40,,,"<i>this smaller black hole should precess at 39°-per-orbit, and should inspiral in to the larger one in a timeframe of just a few thousand years!</i><p>So we are just incredible lucky to be here at this moment to have observed it?  Fascinating.",1402852106
7895673,comment,7895364,7895499,11,0,tokenadult,,,"Who would you expect to do better than Congress in making those decisions, and through what process would they jointly make those decisions? (I&#x27;m genuinely curious, because I can think of three or four different ways to go in policy-making to respond to your concerns, but I think I&#x27;ll understand your point better if I thoughtfully read your suggestion about different approaches to making decisions about those issues.)",1402852087
7895672,comment,7895364,7895508,3,0,bushido,,,"Contrarian indicators. It&#x27;s rarely the UPS guy, more likely it&#x27;s an uncle/relative/a friend.<p>The key to acting opposite to the behavior of contrarian indicator requires knowing all their other behavior patterns.<p>The original saying dates back to the great depression and was likely more accurate than the UPS guys generalization. If I recall correctly I first read about it in a book called Zurich Axioms.<p>Looked it up found the story somewhere else. <a href=""http://archive.fortune.com/magazines/fortune/fortune_archive/1996/04/15/211503/index.htm"" rel=""nofollow"">http://archive.fortune.com/magazines/fortune/fortune_archive...</a>",1402852085
7895671,comment,7893206,7893206,1,0,markbnj,,,"I&#x27;ve never seen a less surprising info-graphic. Nicely done, though.",1402852054
7895670,story,,,1,0,raelmiu,"Let's put some ethics in UX design",http://jesperbylund.com/2014/06/lets-add-some-ethics-to-design/,,1402852052
7895669,comment,7895591,7895591,3,0,0x006A,,,"previous discussion <a href=""https://news.ycombinator.com/item?id=7894838"" rel=""nofollow"">https://news.ycombinator.com/item?id=7894838</a>",1402852013
7895668,comment,7894816,7895046,2,0,electronvolt,,,"Just on the subject of not medicating, specifically for bipolar disorder: in the case of bipolar disorder, medication is considered the only completely responsible primary treatment, with anything else acting as a supplemental treatment.  (Therapy simply won&#x27;t prevent later episodes, lifestyle changes can only lower the chance, and are less reliable than medication.)  Medication adherence is also a problem in bipolar patients because mania and hypomania are characterized by euphoria, delusions of grandeur, overconfidence, and a lot of other symptoms people find enjoyable in the moment.<p>I&#x27;d echo the suggestion of educating yourself to the best of your ability.  Most people from HN are pretty intelligent:  learning about one disease and the treatments for it is not difficult to do at a basic level.  Generally those who&#x27;ve spent years studying it (say, doctors) are going to know more and be able to better contextualize that information, but it helps to know what the evidence is for a particular treatment, if it&#x27;s considered responsible, what side effects to expect, etc., as it helps you better evaluate the doctor and makes you aware of your options.",1402851997
7895667,comment,7894528,7895614,2,0,throwaway1509,,,"Where did you get that information?<p>The original report on that story says “a Recruiter for the ‘Google.com Engineering’ team formerly known as the ‘Site Reliability Engineering’ team” nothing about COO or any other exec position, just engineering. — <a href=""http://pando.com/2014/03/25/newly-unsealed-documents-show-steve-jobs-brutally-callous-response-after-getting-a-google-employee-fired/"" rel=""nofollow"">http://pando.com/2014/03/25/newly-unsealed-documents-show-st...</a>",1402851983
7895666,comment,7895364,7895641,1,0,d0mine,,,"> I&#x27;ve learned that short-term thinking is at the root of most of our problems<p>Greedy (aka &quot;short-term thinking&quot;) algorithms provide optimal solutions for many (but not all (obviously)) problems.",1402851927
7895665,comment,7895268,7895268,1,0,baumbart,,,"So, the first thing you have to think about is: What is a programming language? Or better, what is the purpose of a programming language? PLs give the programmer a way to express their idea in such a form the computer can understand. Here are two aspects already: 1) Expressing an idea, and 2) interpretation by the machine.<p>Certain PLs exist to formulate certain ideas in certain ways, that the computer interpretes in certain ways. That way, the popularity of a PL depends on<p>1) how many people think that way,<p>2) how much effort those people put into developing the needed tools<p>3) how much this way of thinking is needed and supported by the industry<p>4) how well this way of thinking is compatible with previous work<p>5) how well the computer can execute these expressions using its architecture<p>6) what architectures exist for which purpose, and whether these purposes comply with the way ideas are expressed in a PL<p>7) ... and so on, this list is endless<p>For example, stack-based CISC computers using the von-neumann-model have a long history and are very powerful these days, and using software has become common in non-IT industries, which is why object-oriented imperative programming languages like Java and C++ are so common.<p>When some great programmers love a special language because because it matches their way of thinking, then it&#x27;s most probable that this PL is not very popular, simply because few people think this way. A genius may invent the mightiest programming language in the world, but nobody else would use it because nobody else could understand it.<p>You could say, the only thing that a PL actually expresses can be seen on the people who use it.",1402851923
7895664,comment,7895268,7895268,2,0,Tyr42,,,"Lets look at PHP a little bit.  It made moving from a static site of just html files to a slightly dynamic site dead simple, just rename the file .php, and add in a few <php? blocks.  And then it was deployable with just ftp, which helped because some hosts didn&#x27;t give ssh, and many people wouldn&#x27;t have know how to use ssh at first.\nThat&#x27;s why it &quot;won&quot; on the server side, at least for small sites.  It solved the problem of &quot;I don&#x27;t know much about web programming, but I have a website and I want it to do a bit more&quot; really, really well.\nIt doesn&#x27;t matter if it lacked higher level features to them.  So it didn&#x27;t have them.  So experienced programmers, who knew how to get cgi scripts running and could make a website using a &quot;real&quot; language look down on it, since it doesn&#x27;t add value to them, and, frankly, it does suck a bit.  Tons of gotchas, but they couldn&#x27;t fix them once it became popular so fast.  It&#x27;d be a much better language if it had time to mature before becoming popular.<p>That&#x27;s actually a similar story to Javascript, since it really didn&#x27;t have any time to mature before shipping out to everyone.  But I think both languages have improved as they&#x27;ve been upgraded.  But make no mistake, we could have built them better if we started over now, and didn&#x27;t have to worry about backwards compatibility.  We have learned which parts we&#x27;d want to keep and which parts might require some ironing out.<p>Now, for the longest time, Haskell had a unofficial motto of &quot;avoiding success at all costs&quot;[1], (page 10).  &quot;When you become too well known, or too widely used and too successful suddenly you can’t change anything anymore. &quot;<p>So, it&#x27;s not a big surprise that Haskell isn&#x27;t super popular, since the creators don&#x27;t really benefit from it being super popular, and it makes their research harder.<p>[1]: <a href=""http://www.computerworld.com.au/article/261007/a-z_programming_languages_haskell/"" rel=""nofollow"">http://www.computerworld.com.au/article/261007/a-z_programmi...</a><p>Do check out this article, it&#x27;s great if you want to learn about languages.\nThe whole site is.\nPage three talks about how languages pop out of nowhere:  &quot;In my experience, languages almost always come out of the blue.&quot;<p>Let me look at a few new languages<p>Go:\nIt works great for concurrency, and shuns the hierarchies of OO for interfaces, but keeps the nice syntax.  It feels a lot like Python even with it&#x27;s static types.  It&#x27;s lack of proper generics cause it to get looked down upon sometimes by PL folks, and it&#x27;s GC make it unpalatable for C/C++ tasks.  I&#x27;m sure it&#x27;s useful for Google.<p>C++11:\nIt feels like a different language from C++.  A lot of the verbosity of doing things the idiomatic way falls off (`for(const auto& x : things) {}` is much better than the old way).  It definitely makes the language better, and can help speed it up and make it safer too.<p>Rust:\nIt actually feels a bit like C++: The Good Parts, plus all the concurrency goodness from Go, and the little things you hate going without from Haskell (Algebraic Data Types is a big one).  It&#x27;s pretty ambitious, but if they can pull it off, I think it&#x27;ll one of the best languages.<p>I&#x27;ll pick Rust to beak down your question about how <i>I think</i> it&#x27;s better.\nIt&#x27;s &quot;better&quot; than C++, because it leaves out all the foot shooting and messiness, and has just the good parts.  And it&#x27;s nice to have Option types without pulling in Boost.  \nCompared to Ruby, well, it&#x27;s aimed somewhere different, but I think it&#x27;s faster while being at least close in expressively. Ditto for Python.  \nLisp, well, again, it&#x27;s aimed differently, but Rust does have macros and strong functional programming support.  Personally, I&#x27;d take the type system and leave Lisp behind. \nJava?  Well, apart from not running on the JVM and being more complicated, I think you can say more clearer and have it run faster in Rust.\nSmalltalk?  I don&#x27;t know if Rust is better, I haven&#x27;t used smalltalk at all.\nErlang?  This one is actually somewhat comparable, since both have strong functional programming support, and good concurrency.  I think you can actually do more in Erlang, with it&#x27;s actors approach, and it certainly wins with the hot code swapping and really cool features there.  And Erlang also has better bit level logic support.  But those features are exactly what are needed for Erlang&#x27;s niche, so I&#x27;m not sure if I&#x27;m being fair.  I can&#x27;t say if one is better than the other here.<p>Swift:\nWow, this one is new.  But, it does take some of the things I really like, such as Algebraic Data Types (it&#x27;s enums), along with things that you really expect from a modern language these days, such as tuples, lambdas/closures, map, filter, and generics (I&#x27;m looking at you Go!).  It also inherits a bit from Objective-C, and I think that&#x27;s at least partly why it is it&#x27;s own language, and not some other language with some libraries.  Also that playground feature seems like it&#x27;s pretty neat; it&#x27;s what Bret Victor was talking about.<p>Does my rambling help in any way?<p>PS: Haskell isn&#x27;t the pinnacle, it&#x27;s just a gateway to Idris :D",1402851880
7895663,comment,7895592,7895592,0,0,paulhauggis,,,"So you know when to stop wiping.",1402851860
7895662,comment,7877147,7881213,1,0,z3t4,,,"In Node JS you can spawn child processes. It&#x27;s also designed to be asynchronous. But what I like about JS is that it doesn&#x27;t force me into paradigms.<p>And when you run something heavy in Node JS the VM can use many threads. So I think it&#x27;s weird to say it&#x27;s single threaded. Aren&#x27;t all programming languages single threaded then?",1402851823
7895661,comment,7895301,7895301,12,0,magoghm,,,"Zelda games have a lot of interesting implementation details. You might also be interested in Twilight Princess Eyes Breakdown: <a href=""http://www.benjones.us/twilight-princess-eyes-breakdown/"" rel=""nofollow"">http://www.benjones.us/twilight-princess-eyes-breakdown/</a>",1402851809
7895660,comment,7895076,7895616,3,0,pavel_lishin,,,"Hey, me too! It&#x27;s pretty awesome, although the documentation/examples aren&#x27;t as great as they could be - it took me some time to figure out how to properly parse arrays, and I&#x27;m still not sure how to actually do what I want to do (I want to convert an array of two instance objects into an array with just two instance IDs.",1402851798
7895659,comment,7895268,7895268,2,0,Slackwise,,,"> How many of them really bring something new to the table, a better way than the old one?<p>&#x27;Better&#x27; being subjective, but there are languages, or classes of languages, that bring new paradigms that change the way you approach a problem. Some may work better with the way you mentally model a problem, or they may naturally help with modeling certain problems.<p>So we&#x27;ve got...<p>- Imperative sub-procedure languages, like C, Algol, Fortran, etc.<p>- Object-oriented variants of C, like C++, Java, C#.<p>- Smalltalk, and Smalltalk OOP based languages like Ruby and Objective-C.<p>- Forth, a stack-based programming language.<p>- Tcl, a command-based programming language.<p>- Unix shells, string-based programming languages.<p>- Lua/JavaScript, prototypal/hashtable oriented languages.<p>- Lisp, tree/list-oriented languages.<p>These are the languages/classes of languages you should study, if you want to see something different. Something that may change the way you think.",1402851674
