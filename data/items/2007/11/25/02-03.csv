ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
83271,comment,83235,83235,0,0,dyu,,,"There should be a way for the readers of wiki to know which sections have been there for a while (therefore probably more accurate), and which parts are frequently changed (therefore more debatable), so that they can get a better picture of the reliability of those information.",1195959085
83270,comment,83161,83240,0,0,Goladus,,,"I agree that a language should be chosen primarily for the features that suit your needs.  Expressiveness, stability, reliability, etc.<p>But within a given domain, there is often no clear choice which has the best features.  This is especially true for Ruby, Python, and Perl.  Some people are happy in the fires of CPAN hell, for example.",1195958511
83269,comment,83188,83266,0,0,mudge,,,"That onion story got me busting up laughing.",1195957884
83268,comment,83161,83240,0,0,Andys,,,"In the past 2 years I've adopted Ruby for 99% of my coding needs.  My experience sounds different to yours:<p>I started with plain C when PCs were so slow you needed a compiled language. When I moved from C to C++ in order to better write Windows applications, it was nice to have classes, constructors/destructors to make memory management easier, but the other stuff (eg. templating system and supplied hash/array/string classes) caused pain and I avoided it.<p>I was excited about Java.  It seemed like a cleaner language for ex-C programmers to move to OO, but then I got really irritated when trying to actually use it for developing real applications, for all the reasons you mentioned.<p>I kept searching, dabbled with functional programming in Haskell, and happily used Perl for a long while until finally discovering Ruby.<p>To me, Ruby was like a Perl that really was more enjoyable to use.  By that I mean I really value a system that quickly lets me express my thoughts and lets me get applications up and running faster.  Often, well-written Ruby looks like pseudocode.<p>In my case, subconsciously the enjoyment factor of the language really was a stumbling block that slowed down my progress on my projects.<p>There have been no downsides.  CPUs haven't stopped getting faster since my first steps in ASM/C 15 years ago, so I have no Ruby performance problem.  Architectural changes that Ruby enables make it fun to write performant code.",1195956796
