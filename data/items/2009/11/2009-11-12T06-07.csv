ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
937310,story,,,10,4,peter123,"Google’s Strategic AdMob Misstep",http://www.homethinking.com/brontemedia/2009/11/11/googles-strategic-admob-mistep/,,1258009120
937309,story,,,4,0,sidsavara,"Self Discipline - Use It, Exercise It, Eat Donuts to Temporarily Strengthen",http://sidsavara.com/personal-development/will-power-how-to-improve-your-personal-self-discipline,,1258009097
937308,comment,937175,937175,0,0,jollojou,,,"The article succeeds at least in one thing. It shows that not everything Google releases is perfect and great. Keep your eyes open.",1258009094
937307,comment,937073,937201,0,0,noodle,,,"it seems like a good idea for both of them.  but in absolute terms, bing probably has more to gain.",1258009091
937305,comment,937226,937226,0,0,yason,,,"In the end it's the user's choice.<p>If you want stability, use Debian or Ubuntu LTS. Sure, you won't have the latest stuff but you're bound to not spend too much time reconfiguring the system so that you can focus on writing or coding or whatever you _actually_ do.<p>If you want new features -- as most people do, it seems --, use Debian testing/unstable or the latest Ubuntu. Things won't always work but that's the price to pay for the new features. Software is ready when it's ready, a six-month cycle can't change that. The reason why OS X is more stable might be just that: OS X gets released every two years or so, and then just patched but not upgraded.",1258009034
937304,comment,937175,937272,0,0,nostrademons,,,"Most languages don't have functionality to resize an array in place.  If you realloc in C, you get back a pointer that may or may not be the same as what you passed in.  If you 'new' in Java, you must assign that pointer to your initial variable.  If the loop body never assigns to the array, the compiler can be sure that it still points to the same block of memory, and its length will be the same.<p>This is a specific example of dataflow analysis, which is a fascinating area of compiler design.  Usually you'll use something like a use-def chain to figure out all the points where a variable might've been defined.  If all of those are outside of the loop, then the computation itself may be moved outside of the loop too, and the loop just refers to the temporary that's the result.  I'd encourage you to pick up a book on compiler design if you're interested; here's the Wikipedia article:<p><a href=""http://en.wikipedia.org/wiki/Use-define_chain"" rel=""nofollow"">http://en.wikipedia.org/wiki/Use-define_chain</a><p>This explicitly doesn't apply to ""smart"" containers like Vectors, which automatically resize themselves.  If you were to inline these methods, you'd see that the internal buffer pointer may change inside the loop (assuming that you call functions that mutate the object; if you don't, and the language has a notion of const-correctness, a sufficiently smart compiler could probably optimize them too), and so the compiler can't move any code outside.  Same with strlen; its return value depends upon the contents of the memory buffer pointed to, so unless the compiler can prove that that memory buffer never changes (hard; any function may reach in through a pointer and set a character to null), it can't optimize the call away.",1258008991
937303,story,,,4,0,niyazpk,"The Perfect Cuboid Problem",http://www.billthelizard.com/2009/11/unsolved-perfect-cuboid-problem.html,,1258008956
937302,comment,,937295,2,0,bayareaguy,,,"I think this poll is dumb.  Someone please kill it.",1258008947
937301,comment,,937295,2,0,bayareaguy,,,"I think the proposal's problems outweigh its merits.",1258008947
937300,comment,,937295,0,0,bayareaguy,,,"I think the proposal's merits outweigh its problems.",1258008947
937299,comment,,937295,1,0,bayareaguy,,,"I think the proposal would affect my privacy.",1258008947
937298,comment,,937295,0,0,bayareaguy,,,"I think the proposal would affect my work.",1258008947
937297,comment,,937295,0,0,bayareaguy,,,"I think the proposal would affect my income.",1258008947
937296,comment,,937295,0,0,bayareaguy,,,"I've read much of the actual proposal.",1258008947
937295,story,,,3,2,bayareaguy,"Poll: Legal consent for cookies?",,"Since folks feel I went overboard on my first attempt at a poll about the http://news.ycombinator.com/item?id=931596 law, I've limited the choices.",1258008947
937294,comment,936693,937195,0,0,staunch,,,"You work at Facebook, I know you say that on your profile, but you should probably disclose that in comments supporting them.",1258008925
937293,comment,923260,923260,0,0,nullexpulsion,,,"apparently, as a supporter of the NoSQL movement, i would just like to state a small 'analogy'...<p>Imagine if someone from amongst our early ancestors hadn’t thought of creating the wheel, where would we be?<p>And so it is with NoSQL - it is just an alternative way of looking at a problem which in this case is that of databases  and looks at it in terms of a non-relational model. Therefore, i would like to urge all who are 'hostile' towards it - just let us do what we want. If the results are not to your liking what can we do.<p>i personally believe that through pursuing the principles on which NoSQL is based we will manage to achieve something new that mayhap replace SQL.<p>Additionally, please do also give thought to the fact that Google's Big Table, Amazon's Dynamo and Cassandra can be thought of as part of NoSQl movement..
Rebels are at first turned away from society in general - but later on society realises that the rebels had the correct idea. Change is always essential to progress without which i would not have been typing this..<p>On another account (sorry for the detour) i am rather getting quite interested in Gopher these days. Anybody interested in Gopher?<p>[ I apologise for the non-tech response.]<p>[ Null Expulsion - nullexpulsion [at] gmail [dot] com - how long will it be since spammers figure out how to detour around this? ]",1258008909
937291,comment,936980,937261,0,0,GeneralMaximus,,,"I have no idea about that, but recently I've started using LeechBlock to block out all websites that lead me into ""dopamine loops"". On my blocklist are Twitter, Facebook, Reddit and news.YC, among others.<p>The problem with LeechBlock is that it only works with Firefox, and only if I choose to install it. I'm seeking out a system that I can install on my router so that I can block time-sinks on all my computers at once. My router runs Linux, so there must be a way.",1258008812
937290,comment,936980,936980,0,0,sidsavara,,,"I wrote an article regarding dopamine as well, I saw a couple recently on HN on the subjects of dopamine and self discipline, if you guys are interested. Much more in depth than the articles I've seen make it onto HN - but I didn't really think this was the appropriate place for them, that's why I never submitted them.  Kind of off topic IMO, but for readers who like it here they are:<p>Dopamine, rewards, pleasure center of the brain -> <a href=""http://sidsavara.com/personal-development/personal-development-roadblocks-pushing-pleasure-buttons"" rel=""nofollow"">http://sidsavara.com/personal-development/personal-developme...</a><p>Willpower research -> <a href=""http://sidsavara.com/personal-development/will-power-how-to-improve-your-personal-self-discipline"" rel=""nofollow"">http://sidsavara.com/personal-development/will-power-how-to-...</a>",1258008754
937289,comment,937175,937231,0,0,asher,,,"That was my first thought.  I ran the ""slow loop"" through the online compiler at:<p><a href=""http://closure-compiler.appspot.com/home"" rel=""nofollow"">http://closure-compiler.appspot.com/home</a><p>And whether I checked ""Simple"" or ""Advanced"" I got:<p>for(var a = 0;a < arr.length;a++)<p>So it's not optimizing that pattern yet.",1258008727
937288,comment,936693,937206,0,0,sjs,,,"Resigning to the fact that you're a sharecropper[1] is implicit in developing on Apple platforms.<p>[1] <a href=""http://weblog.raganwald.com/2004/11/sharecropping-in-orchard.html"" rel=""nofollow"">http://weblog.raganwald.com/2004/11/sharecropping-in-orchard...</a>",1258008678
937287,story,,,4,0,mjfern,"HP to Acquire 3Com for $2.7 Billion",http://www.hp.com/hpinfo/newsroom/press/2009/091111xa.html,,1258008661
937286,comment,936258,937277,0,0,tom,,,"You're drawing conclusions where they don't exist.<p>The ""startup life"", the life of a startup founder is in fact, hard.  Building a product is hard.  Building a company is hard.  Building anything of value is hard.  It has nothing to do with a trendy crowd or a decidedly non-trendy crowd, it has entirely to do with folks who are having, have recently, or will have a lot of the same challenges as you.  I'm not sure why it's hard to understand having friends who've been there, done that, or are doing it is very, very helpful.  I'm glad you're able to do it all on your own, but some of us either aren't, or have realized it's a waste of time to.  Being a martyr will help you much less than having the smarts to ask folks who can help you not waste time on the things that don't actually move your business forward, but can only impede progress - there's your value.  Man, this kool aid is yummy ... it tastes like improving my odds ... and that tastes great!",1258008617
937285,comment,936980,936980,0,0,marcell,,,"The dopamine loop has been well described in a number of articles, and many start ups and websites are taking advantage of it. I can feel it affecting the way I think, and I feel like it's damaging. I wish startups would try to address this problem rather than using the dopamine loop to their own advantage.<p>PS. Is this article meant to be a case-in-point? It's written in bite-sized paragraphs with catchy subject sentences.",1258008549
937282,comment,936980,937261,0,0,yason,,,"Let me Google for the answer!",1258008411
937281,comment,937210,937210,0,0,envitar,,,"Let's Go! Put a Python on Rails and C what happens!",1258008410
937280,comment,937175,937275,0,0,tumult,,,"I'm talking about the class tracing V8 does, not prototype chains. ""Property chain"" meaning in V8, it must climb the series of what it calls ""hidden classes"" in order to find all of the properties. Other engines do various things when you pass a totally dynamic property lookup in. Some slower engines probably use naïve hash tables, I don't know.<p>Feel free to correct me if I'm wrong on this one, though. I've never really ripped open V8 or any of the other engines to look inside, I just go by what I read from their design docs.",1258008322
937279,comment,937175,937257,0,0,zemaj,,,"Agreed, very poorly written article. You can't approach optimisation in isolation like that. There's a whole range of factors like readability, situational awareness, concurrency etc... that need to be considered.<p>Plus this is the first release of what has previously been an internal-only library. It needs a little time to mature. jQuery wasn't perfect of the gate either.",1258008220
937278,comment,937032,937232,0,0,PStamatiou,,,"and at Georgia Tech as well.",1258008178
937277,comment,936258,936978,0,0,japherwocky,,,"Sounds like you both are sipping from the same giant pot of kool-aid.<p>Seriously, ""the startup life""?  A startup's success or failure rides on <i>associating with the trendy crowd</i>?<p>Blech, let's get back to writing a lot of good code and listening to user feedback.",1258008103
937276,comment,936698,936859,0,0,lionhearted,,,"> The question is ""Do we want a society primarily controlled by those who inherited money?""<p>There's a Dutch expression, ""Clogs to clogs in three generations."" It means the first generation, who wears clogs (regular people's shoes), they work hard and make money, they know struggle, they're frugal.<p>The second generation doesn't know about making money and struggling, but their parents explain what it was like and teach the kids how to manage money and keep the fortune alive.<p>The third generation doesn't learn these things from their parents, because their parents don't really know either, and the third generation wastes the money and winds up back in clogs - regular people's shoes.<p>So - will society be controlled by people who inherit money? Not unless there's government backed heredity privilege, like European nobility, the Japanese samurai system, or the Indian caste system. If not, things balance out over time. How many of the astoundingly wealthy families from 1850 are controlling society now without having added anything? Not many.<p>> The reason we had huge numbers of smart people become investment bankers was the fact that conning stupid wealthy people is profitable.<p>I would rebut this, but I don't think it's a well thought out view. Some investment bankers moved money around without doing anything of value. Many did incredibly valuable things. They built and developed real estate, ports, railroads - heck, I know a guy who put the money together for researching technology for non-government spaceflight. Pretty cool stuff.<p>>  But, it's also a zero sum game that does little to help society at large.<p>First, I think it's very easy for someone not inside an industry to claim that their work is useless/easy/unimportant while maybe missing the intricacies in it. Second, I'm not sure what this has to do with my comment, which is that I think the mental concept of ""birth lottery"" and de-emphasis on family is a scary thing. It seems to say that people should support and even things out for everyone irrespective of what their parents do, while parents working hard to give their children a better life is a huge motivator and has been for almost all time, much more so than improving the common good. If you look at history, for instance, whenever farming was nationalized under a war economy or communism, output fell. People working to feed the nation work less hard than people working for themselves and their children. This has been borne out in many different places, throughout ancient and recent history.<p>> It's far better for society when the most efficient method for gathering wealth is generating it.<p>Agreed. Getting back to your original point, I'm not ignoring the ""birth lottery"" argument - I think it's flawed, and I'm addressing that flaw. The question isn't about who gets to control society, it's about what is the fundamental unit of society? Is it the individual? The family? The community? The nation? The whole planet? The prevailing Western view seems to be focusing on things on a national level. I don't think that's a good thing. I think a mix of individual choice, strong family support structures, and entire planet development is the answer. I think, arguably, the nation is one of the worst places to work on developing humanity.<p>That's my opinion based on my reading and research into behavior and history, but it seems like societies that empower individuals do well, it seems like societies that promote family do well, and it seems like societies that promote the whole planet do well. It seems where things are controlled by the nation more than by the individual, family, and whole planet do more poorly.<p>I'm not worried about inherited money controlling the planet, because it really only has a heavy influence in the next generation, many of whom do great things and make their own contributions. After that, without contributions it burns itself out. I am worried about national level empowerment, because it grows on itself and doesn't burn out unless it collapses in a bad way.<p>This is my opinion based on my readings and research, and I'd be happy to hear others' opinions who agree or disagree.",1258008086
937275,comment,937175,937257,0,0,andreyf,,,"<i>it must crawl the property chain on the object until it eventually reaches 'undefined'</i><p>If it were a normal property lookup, yes, but not with `hasOwnProperty' - that's the same as any old hash table lookup. So efficiency here really depends on the implementation, and Google's is probably faster. Regardless, we're really splitting hairs - these optimizations will get a few milliseconds, on average. As much as I am a perfectionist, it's all completely negligible in terms of UX.",1258008038
937274,comment,935790,936623,0,0,davidw,,,"I think the problem is that there are very few 'hops' between ""trusted, respected person writes something intelligent"" and ""flame wars"" when the topic is emotionally loaded/political/economics/etc...   Fluff articles aren't quite so bad, but I think they still beget more fluff.",1258008019
937272,comment,937175,937255,0,0,qeorge,,,"Really interesting, thanks. I don't spend a lot of time with compiled languages these days.<p>Question: how can the compiler be sure an array's length wouldn't have changed? I suppose it could examine the code within the loop, but then the same could be said for strlen. What's the difference?",1258007984
937271,comment,937032,937153,0,0,jmtame,,,"oh suhail, do share with the class. and mixpanel.com does not count ;)",1258007957
937270,comment,936698,937114,0,0,auston,,,"dude I just upvoted you& it's not counting it!",1258007953
937269,comment,937032,937115,0,0,jmtame,,,"hourtown.com (now bookfresh.com) might address this",1258007932
937268,comment,935674,935990,0,0,sjs,,,"lesson: pick your battles",1258007893
937267,comment,935674,936755,0,0,sjs,,,"It doesn't help that it's titled ""Stevie's Karate Tournament"".",1258007847
937266,comment,937050,937050,0,0,jister,,,"Django fails, Ruby fails, Java is dead...what's next? <i>sigh</i>",1258007797
937265,comment,937210,937250,0,0,rooshdi,,,"Yea, these people are ruthless lol.",1258007660
937264,comment,936403,936883,0,0,paraschopra,,,"Thanks for explaining. Where did you get the information/data about this?",1258007469
937263,comment,936544,936544,0,0,garnet7,,,"I've seen a lot of good analysis of Go, and I hope its creators carefully consider it and work to make Go (if they keep the name) even better.",1258007446
937262,comment,937137,937137,0,0,weaksauce,,,"I don't think it's the SICP of Design but the non-designers design book is a good terse book of design for us CS folk. Though for strict design and not aesthetics the ""universal principals of design"" should serve well.",1258007398
937261,comment,936980,936980,0,0,drinian,,,"Personal experience tells me that information addiction is very real. So, the question is, how do we turn this to our advantage, rather than becoming information burnouts?",1258007313
937260,comment,936544,936772,0,0,oconnor0,,,"> I think a better mental model for ""interface"" is ""implicitly matched mixin"".<p>Or ""named structural types"".",1258007231
937259,comment,937175,937244,0,0,nostrademons,,,"Closure was written by many, many different people.  I can attest that the core developers (the ones whose names are on the project) are very aware of these optimizations - one of them interviewed me when I was being hired, and another was in charge of my JS readability review.  But Closure's a big chunk of code, though, and the core developers tend to be very busy people, and not everyone can review everything.",1258007118
937258,comment,937175,937175,0,0,nuggien,,,"Way too nitpicky, and the memory leak point regarding the unbound cache is reaching a little bit.",1258007076
937257,comment,937175,937175,0,0,tumult,,,"Some Sitepoint Article: How not to Critique a Javascript Library<p><pre><code>    for (var i = fromIndex; i < arr.length; i++) {
    
    This for loop looks up the .length property of the array (arr)
    each time through the loop. Simply by setting a variable to
    store this number at the start of the loop, you can make the 
    loop run much faster:
</code></pre>
From six lines above, in <i>array.js</i>:<p><pre><code>    if (arr.indexOf) {
        return arr.indexOf(obj, opt_fromIndex);
      }
    if (Array.indexOf) {
        return Array.indexOf(arr, obj, opt_fromIndex);
      }
</code></pre>
It only falls through to there if Array <i>already has no indexOf prototype method on it at all</i>. In that case, performance on ""for"" loop is the least of your concerns, because you're using a terribly slow browser where it won't matter anyway. They used a cached length property later on in the very same file, in places where it might actually matter.<p><pre><code>    Google’s developers seem to have figured this trick out
    later on in the same file. From array.js, line 153:
    var l = arr.length;  // must be fixed during loop... see docs
    ...
    for (var i = l - 1; i >= 0; --i) {
    
    This loop is better in that it avoids a property lookup each
    time through the loop, but this particular for loop is so
    simple that it could be further simplified into a while loop,
    which will run much faster again:
    var i = arr.length;
    ...
    while (i--) {
</code></pre>
On V8 and SquirrelFish Extreme, these two loops are exactly the same speed (and indeed, probably generate near-identical native code.) On FireFox and older Chrome/WebKit, the average difference on an array of 10,000 elements is something like the difference between 0.068ms and 0.072 ms to iterate (I don't remember the actual figure on my machine, it's negligible.) In V8, Google's own native iterators are implemented <i>in JavaScript</i> using that incrementing 'for' loop.<p><pre><code>    But not all of Closure Library’s performance woes are due
    to poorly optimized loops. From dom.js, line 797:
    switch (node.tagName) {
      case goog.dom.TagName.APPLET:
      case goog.dom.TagName.AREA:
      case goog.dom.TagName.BR:
      case goog.dom.TagName.COL:
      case goog.dom.TagName.FRAME:
      case goog.dom.TagName.HR:
      case goog.dom.TagName.IMG:
      case goog.dom.TagName.INPUT:
      case goog.dom.TagName.IFRAME:
      case goog.dom.TagName.ISINDEX:
      case goog.dom.TagName.LINK:
      case goog.dom.TagName.NOFRAMES:
      case goog.dom.TagName.NOSCRIPT:
      case goog.dom.TagName.META:
      case goog.dom.TagName.OBJECT:
      case goog.dom.TagName.PARAM:
      case goog.dom.TagName.SCRIPT:
      case goog.dom.TagName.STYLE:
        return false;
    }
    return true;
    
    This kind of code is actually pretty common in Java, and
    will perform just fine there. In JavaScript, however,
    this switch statement will perform like a dog each and
    every time a developer checks if a particular HTML element
    is allowed to have children.

    Experienced JavaScript developers know that it’s much
    quicker to create an object to encapsulate this logic:

    var takesChildren = {}
    takesChildren[goog.dom.TagName.APPLET] = 1;
    takesChildren[goog.dom.TagName.AREA] = 1;
    ...
    This code can be further bulletproofed against outside
    interference using hasOwnProperty (see below for a full
    explanation of this).
    
    return !takesChildren.hasOwnProperty(node.tagName);
</code></pre>
Really? You tested it? Because a 'switch' does not necessarily generate the same code as a dynamically constructed set of object properties. In Google's original example, if none of the cases match, it immediately returns 'true'. In Sitepoint's example, if the property does not match on the highest level, it must crawl the property chain on the object until it eventually reaches 'undefined'. Not to mention you are making two inner function calls and a fully dynamic property lookup (!(), hasOwnProperty, and node.tagName), none of which I believe can be calculated statically.<p>Actually, I'm going to end this rant early, because I just read more of the article, and it looks like the author just keeps pulling random shit that he remembers reading from ""Javascript: The Good Parts"" or whatever and vomiting it back up onto his keyboard.",1258006988
937256,comment,935590,935718,0,0,Poleris,,,"Hi Jacques,<p>re: 1, do I just put it on github and hope people find it by themselves? Do I advertise it? If so, how?<p>Thanks for the interest, I'll work on cleaning it up now.<p>- Edwin",1258006939
937255,comment,937175,937248,0,0,nostrademons,,,"In compiled languages it's usually not worth breaking convention to factor it out, because the compiler will apply loop-invariant code motion and pull it out of the loop body anyway.  The exception is if you're calling a function that the compiler can't prove to be referentially transparent, eg. strlen.",1258006920
937254,comment,936657,936775,0,0,vegai,,,"The difference is how early you get bitten. With a stronger language, your ass would be full of bitemarks weeks before you went to production.",1258006886
937253,story,,,78,15,jacobian,"Writing great documentation: technical style",http://jacobian.org/writing/great-documentation/technical-style/,,1258006873
937252,comment,937175,937242,0,0,manvsmachine,,,"In a case like this, it doesn't really matter how much of a performance benefit you get because it's <i>ridiculously</i> trivial to inmplement. This in particular is one of those optimizations that I remember being told back in CS101.",1258006809
937250,comment,937210,937210,0,0,rms,,,"It's never had much of a sense of humor. Jokes are usually mercilessly downmodded unless they are really, really funny.",1258006723
937249,comment,935590,936562,0,0,Poleris,,,"That is exactly why I'd like to open-source my work. My concern is more about the practical question of how and/or seeing if I persuade someone to walk me through the process.",1258006717
937248,comment,937175,937219,0,0,qeorge,,,"Checking the length of an array on each iteration of a loop is an amateur mistake, in any language. Some of these points were pretty nitpicky, but I thought this was a valid complaint.",1258006612
937247,comment,937050,937170,0,0,kingkilr,,,"I'm the author (although not the submitter), I didn't intend this as any sort of flame-bait, I was just curious how well Django did at this stuff (a long time ago I remember seeing a better error message wiki page).",1258006578
937246,comment,937175,937239,0,0,mark_h,,,"Interesting, thanks.",1258006443
937245,comment,935533,935533,0,0,dbz,,,"Am I the only one who is in awe of that tree house? It is totally epic! I would love to have a tree house like that one.<p>I agree they are indeed too young at the moment to appreciate the tree house, but when they are older they will most certainly appreciate the fact that it is HUGE and their parents build it; furthermore, it will be a totally cool place to hang out in.",1258006411
937244,comment,937175,937231,0,0,qeorge,,,"Perhaps, but it does seem that the Google Closure developers are unaware of these optimizations. Unless the compiler was written by an entirely different group, I would be surprised.<p>Of course, there's an easy way to find out. :)",1258006325
937243,comment,937175,937215,0,0,boucher,,,"I'd say it isn't. As you said, most of the problems are minor. Some of the performance assumptions are false. Very little of this seems to be of any consequence.",1258006280
937242,comment,937175,937227,0,0,brown9-2,,,"But just stating why a more performant option exists doesn't tell us how much performance you'll squeeze out just by making this change.<p>In other words, it's not very helpful to say ""this is so slow, you should do this instead"" without at least trying to quantify the difference somehow.",1258006136
937241,story,,,5,3,snewe,"Open source cloud computing technologies",http://blog.rgrossman.com/2009/11/11/cloud-computing-at-sc-09-from-la/,,1258005999
937240,story,,,3,0,vijaydev,"Bing integrates Wolfram Alpha results",http://arstechnica.com/microsoft/news/2009/11/bing-integrates-wolfram-alpha-results.ars,,1258005975
937239,comment,937175,937234,0,0,nostrademons,,,"I think it's an oversight.  The coding conventions I work with ban that form of a for-loop, precisely because the .length access can potentially be very costly.  (I'm in a different part of the company, one that doesn't use Closure, but our latency constraints are even tighter than theirs are.)  If you're iterating over a NodeList and not just an array, it can actually turn an O(N) loop into an O(N^2) one.",1258005952
937238,story,,,8,0,r11t,"Interface Design Basics",http://www.slideshare.net/smoofles/interface-design-basics-2182094,,1258005750
937237,comment,937015,937015,0,0,chime,,,"1. ATMs - Only charged if you're at an ATM outside of your bank's network.<p>2. Travelers Checks - They were useful long ago when credit cards did not exist and carrying large amount of cash was dangerous.<p>3. Check Cashing - The bank that issued the check will cash it for free, regardless of account status.<p>4. Currency Exchange - Can minimize this by ATM / credit cards (MasterCard/Visa) but in reality, there's currently no way to get around currency exchange fees. Here's an article on this topic: <a href=""http://travel.nytimes.com/2006/06/25/travel/25prac.html"" rel=""nofollow"">http://travel.nytimes.com/2006/06/25/travel/25prac.html</a><p>5. Coinstar - Never had to use this (wife takes away all my change and it magically disappears).<p>6. Gold buyers - This one is not like any of the above despite what the author claims. Liquidity of the gold has nothing to do with it but rather the issue that the gold buyer's judgment is what decides the value of the goods. In all of the above, the financial company treats everyone based on pre-set rules (1% charge, $10 fee etc.) And my 1,000 quarters are just as valuable as your 1,000 quarters to Coinstar. Not so with gold buyers. They will offer the smallest amount that they think the gold seller with accept. The amount of gold or precious metal is a factor but not the sold variable.<p>I think #1-5 are pretty good services and shouldn't be lumped with the scams of #6. However, this article does highlight that people will pay for services like accessibility, insurance, portability, and security of assets that they already own.",1258005746
937236,comment,937137,937186,0,0,niels_olson,,,"> web design is information first and aesthetics second<p>Agreed, though bad aesthetics can/will destroy any value the user assigns to your information. Edward Tufte's books are good. <a href=""http://www.edwardtufte.com/tufte/books_vdqi"" rel=""nofollow"">http://www.edwardtufte.com/tufte/books_vdqi</a>. He also has some recommendations (<a href=""http://www.edwardtufte.com/tufte/bookreviews"" rel=""nofollow"">http://www.edwardtufte.com/tufte/bookreviews</a>) and the works of others that he cites are usually also excellent.<p>The cheap version is to just read through the Ask ET forum on his site.<p>One that is harder to come across: Josef Albers ""Interaction of Color"": <a href=""http://www.yalebooks.co.uk/yale/display.asp?isb=0300115954&TAG=&CID="" rel=""nofollow"">http://www.yalebooks.co.uk/yale/display.asp?isb=0300115954&#...</a>",1258005641
