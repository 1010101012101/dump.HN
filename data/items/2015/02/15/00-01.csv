ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
9051388,comment,9049630,9051245,0,0,moe,,,"You seem to be confusing client and server. When people say I/O-bound or CPU-bound they usually refer to servers.<p>And most clients aren&#x27;t network-bound either. They are server-bound (i.e. they spend more time waiting for the server to create a response than for the network to transfer it).",1423961964
9051387,comment,9050316,9051331,0,0,peteretep,,,"He means you have to climb the IO Monad learning curve.",1423961918
9051386,comment,9050343,9051382,0,0,tehwebguy,,,"My guess? Because you were first. I wouldn&#x27;t be surprised if the others are gone soon.<p>Side note, searching on your site pulls up a slightly different domain for me. Is that on purpose?",1423961917
9051385,comment,9049467,9051165,0,0,tel,,,"I&#x27;m very much a fan of that POV. I think OO has a lot of mythology, but the technology is relatively similar to something like OCaml or Haskell. Classes are essentially just functions which return &quot;structures&quot;.<p>Inheritance and open-recursion/dynamic binding are usually what remain. I&#x27;m not terribly sure I miss them.",1423961859
9051384,comment,9050436,9051048,0,0,dmnd,,,"First thing I noticed. Amazon has them: <a href=""http://smile.amazon.com/Weyland-Yutani-Corporation-Building-Vintage-T-Shirt/dp/B0064ORD7O?sa-no-redirect=1"" rel=""nofollow"">http://smile.amazon.com/Weyland-Yutani-Corporation-Building-...</a>",1423961818
9051383,story,,,3,0,turtleofdeath,"I Also Suffer from Information Paralysis",http://scodub.com/2015/02/14/information-paralysis/,,1423961798
9051382,comment,9050343,9051317,0,0,whocalledus,,,"There&#x27;s a couple million phone calls reported, but there&#x27;s less than a million telephone number pages for Google to index. There&#x27;s 63 thousand numbers with more than 1 comment, 195 thousand with at least 1. If the problem is that the caller ID name with date of call is not rich enough data for Google, then I can limit the sitemap to only pages with textual comments. But Google is not saying that, or that they will reinclude it if I do that. They&#x27;re not saying anything except that the site is using illicit practices.<p>Prior to Google removing whocalled.us, it accounted for 68% of traffic. 15% was direct, 6% Yahoo, 4.6% Bing. The fact that it is an extension of search, and not primarily a website people want to return to does not in any way demote its value to people. I do not visit Wikipedia directly, but I still want it in my search results.<p>If the time of this kind of site is over, then great, remove them all. Why pick on whocalled.us?",1423961795
9051381,comment,9051041,9051250,0,0,CHY872,,,"Mm, I&#x27;m not sure. These are slides, presumably designed to go alongside a talk, which could have fleshed out the points better. If you consider them as being summaries of what a speaker&#x27;s saying, it makes much more sense.<p>Fwiw, of the six bullets, I see three which are clearly subjective, one which is a clear advantage of gerrit, and two which I don&#x27;t really know enough about to refute.<p>When it comes down to build systems, I think it&#x27;s very easy to spend a lot of time moving sideways or backwards - and if the tool you&#x27;re moving to has deficiencies compared with what you had before, it can be very frustrating. Certainly, if the tool people want you to move to offers few advantages over your current infrastructure, a quick dismissal is reasonable.<p>Getting set up with their current contribution system might seem a little clunky, but I don&#x27;t think it&#x27;s particularly hard to do, and definitely seems like a &#x27;run-once&#x27; thing. Once it&#x27;s set up, it seems to integrate into a workflow well.<p>Their contributors will have their current workflows set up nicely - and unless github&#x27;s issues system has compelling advantages, it&#x27;s definitely not worth them switching due to the temporary loss in productivity.",1423961779
9051380,comment,9049907,9050740,0,0,poolpOrg,,,"thanks ;-)<p>It is already available as a package on various Linux distros: Gentoo, Arch, Fedora, ... as well as all BSD variants.",1423961769
9051379,comment,9042891,9045098,0,0,yellowapple,,,"I&#x27;m wondering the same.  I have a PowerBook G4 running OpenBSD 5.6 that I suppose I could test with, though Firefox has traditionally been pretty slow on that particular machine.",1423961712
9051378,comment,9050793,9051367,0,0,enneff,,,"We&#x27;ve spoken to GitHub about this. They&#x27;re not happy with how PRs work, either. I stand by my statements.",1423961682
9051377,comment,9049208,9050500,0,0,Filthy_casual,,,"Your comment really resonated with me. It&#x27;s like that person who attempts to beat procrastination in order to get things done by... reading books about procrastination.<p>I&#x27;ll follow your advice.",1423961641
9051376,comment,9050793,9051201,0,0,eternalban,,,"Not an uncommon view: <a href=""https://twitter.com/kellabyte/status/564531804837654528"" rel=""nofollow"">https://twitter.com/kellabyte/status/564531804837654528</a><p>(That&#x27;s not me, to be clear.)<p>We all like Go. Just wish we could discuss these matters without unduly raising temperatures. &quot;It&#x27;s just code&quot;.",1423961613
9051375,comment,9051246,9051246,0,0,kator,,,"I have often wondered what Jordi&#x27;s[1] vision would really be like.. Maybe this is a peek into his world.<p>Imagine all these things, wifi, FM/AM Radio, iBeacons, cell towers etc.. It must be so noisy in the radio spectrum..<p>[1] <a href=""http://en.wikipedia.org/wiki/Geordi_La_Forge"" rel=""nofollow"">http://en.wikipedia.org/wiki/Geordi_La_Forge</a>",1423961582
9051374,comment,9051271,9051271,0,0,oliyoung,,,"Great great (old school) DJ, single-handedly can break an artist and has an impeccable taste in music. Really interesting to see what he&#x27;s going to do at Apple, I assume it&#x27;s iTunes Radio/rebooted Beats",1423961565
9051373,story,,,42,19,MilnerRoute,"Am I Being Tracked",http://amibeingtracked.com,,1423961559
9051372,comment,9049208,9050204,0,0,bendingb,,,"I second your idea about &quot;bonding with people who are already bonded with the idea&quot;.<p>For the longest time, one of the things on my bucket list was to learn/make a game (with no prior experience before). During the last three years, I&#x27;ve started/restarted on my own but to no avail.<p>Two months ago, I joined an incubator for new game-makers and just being around so many supportive mentors (and other newbies who were creating games) pushed me to actually focus in on an engine, focus in on one idea and actually make significant progress in making my first game. I&#x27;m now about 80% complete with my game.<p>Guess I just needed a little push, a little encouragement and some accountability to finish something I&#x27;ve started so many times before!",1423961557
9051371,comment,9051271,9051271,0,0,daledavies,,,"I really enjoyed his shows on Radio 1. The following article gives a little more information, mentioning rumours about Apple&#x27;s plans to start a music streaming service in competition to Spotify...<p><a href=""http://www.independent.co.uk/news/people/zane-lowe-quits-radio-1-presenter-heads-for-exciting-times-at-apple-10046798.html"" rel=""nofollow"">http://www.independent.co.uk/news/people/zane-lowe-quits-rad...</a>",1423961516
9051370,comment,9042891,9049947,0,0,yellowapple,,,"Isn&#x27;t EME supposed to address that?  Or is that not adaptable to non-HTML5 video (even though this <i>is</i>, technically, HTML5+Javascript that happens to be able to play Flash animations)?",1423961502
9051369,comment,9049233,9050232,0,0,tux,,,"Really ? I thought it is because they say this; &quot;If you work with Ubuntu, the following commands should resolve all necessary build dependencies:&quot; Also use apt-get Thanks for the down votes for honest mistake lol",1423961492
9051368,comment,9050436,9051233,0,0,rlucas,,,"That&#x27;s certainly not what went on here, from the description. Your assertion is truthy, in that, yes, the /practice/ of fractional reserve banking increases the money supply.<p>However, to do the equivalent in the way the example described would have required mocking up a loan (asset) which would be offset by a liability (deposit account balance), and a reserve amount (loss allowance and bank capital) behind it.  In that manner you create 10,000 in an account which may be withdrawn where the &quot;real&quot; money in the bank is only 1,000. This happens every day, but not by hackers, just by run of the mill self-dealers and fraudsters.  At the end of the day the 9,000 comes out of the capital of the bank (or the deposit insurance if things get dire), but it can take months or years ... See the s&l crisis for more.<p>But hackers don&#x27;t give a shit about the books seeming to balance for years to snooker regulators. They just want to withdraw the $9,000.  The books obviously won&#x27;t reconcile end of day, but who cares?<p>So yeah, fractional reserve banking is interesting to know about and not without its hazards, but this exploit could have happened against a full reserve depository institution just as well.  The fractional reserve thing is spurious.",1423961487
9051367,comment,9050793,9051301,0,0,wereHamster,,,"If you said &quot;GitHub pull requests don&#x27;t fit our culture&quot; or &quot;The GitHub pull request UI is insufficient for our needs&quot; then it&#x27;d accept that. Both are perfectly valid reasons for preferring Gerrit. But placing this blanket statement about the whole &quot;pull request culture&quot; is just wrong.",1423961484
9051366,comment,9051041,9051306,0,0,jrochkind1,,,"> it&#x27;s very difficult as a user to figure out which version I should be using for my code to run correctly.<p>I&#x27;ve rarely had trouble with assuming master (or ideally a tagged release) on the original repo (not a fork) is the one I should be using. Assume all forks are forks.<p>In any cases where this hasn&#x27;t been true, it&#x27;s been clear to me the blame is due to poor release management (or poor communication of release management, which is the same thing), rather than somehow the fault of github&#x27;s PR or forking system. Although you can hypothetically argue that certain UI&#x27;s encourage poor release management and others support it, I personally have not seen this to be an issue in github&#x27;s UI.",1423961470
9051365,comment,9051041,9051220,0,0,ChuckMcM,,,"Wow you are my new favorite person. What I <i>was</i> going to say was that the GP was correct in that it just took a bit more work on the maintainers part to keep the history clean, but even that is unnecessary apparently :-)",1423961385
9051364,comment,9042891,9049957,0,0,yellowapple,,,"Steps:<p>0) Have a Macbook Air running OS X Yosemite<p>1) Install Firefox<p>2) Install Adobe Flash<p>3) Install Nightly<p>4) Install Shumway<p>5) Attempt to open <a href=""http://www.albinoblacksheep.com/flash/shumway"" rel=""nofollow"">http://www.albinoblacksheep.com/flash/shumway</a><p>6) Watch Firefox complain that the tab crashed<p>7) Try to reload the tab<p>8) GOTO 6<p>Disabling Flash (via the Addons screen in Firefox/Nightly) seems to fix the issue.",1423961380
9051363,comment,9050970,9050970,0,0,Udo,,,"This is a good idea.<p>Myself, I noticed that almost all my websockets projects could easily share one single code base, and finally I just made a Websockets boilerplate repo that I can pull from for any given project. This is what node.js really excels at, and it&#x27;s an execution model fundamentally different from websocketd: being a message broker between the client and the request-based web server.<p>Some people don&#x27;t like the separation between web server and websockets server, but when you think about it they don&#x27;t belong quite on the same level of abstraction. Plus, it&#x27;s usually orders of magnitude easier to reason about single requests than to reason about a complex persistent application server&#x27;s state.",1423961353
9051362,comment,9051041,9051350,0,0,jrochkind1,,,"Well, it depends on what documentation you mean. The alternative is using standard git commands that are in the git documentation, which is exactly what OP&#x27;s alternative presumably involves?<p>(But I am entirely sympathetic to the opinion that git itself exposes too much plumbing and has a pretty baroque end-user interface for doing certain things. And it&#x27;s also certainly legit to wish or suggest that _github_&#x27;s UI worked differently than it does, although the merge commits don&#x27;t really bother me, and some people prefer them, it&#x27;s a point of some contention).",1423961304
9051361,story,,,2,0,jlturner,"Informer says Apple's car will be self driving",http://gizmodo.com/apple-might-really-seriously-be-working-on-a-car-1685754028,,1423961264
9051360,comment,9050793,9051348,0,0,enneff,,,"Part of the reason Go exists is because of such issues. Believe me, it&#x27;s not desirable.<p>My point is, on typical machines today, even a 10mb binary is not an issue at all.",1423961243
9051359,comment,9034673,9037086,0,0,TheSpiceIsLife,,,"> This exporting of goods is what drove the British, and the Imperial powers in general, and what produced a wealthy economy in those countries.<p>Deirdre N. McCloskey in her book &#x27;Bourgeois Dignity: Why Economics Can&#x27;t Explain the Modern World&#x27; does a pretty good job of explaining that this imperial trade (amongst other factors) doesn&#x27;t do enough to explain why The West became wealthy.<p>To quote McCloskey: &quot;What&#x27;s wrong with such images? This: the world did not change by piling up money or capital. It changed by getting smarter about steam engines and wiser about accepting the outcome of innovation.&quot;<p>If imperialist trade is what caused British wealth to increase by a factor of sixteen or more since the 16th or 17th century, why didn&#x27;t countless other states become modern-day wealthy during countless other imperialist expansions?<p>Nor did the Industrial Revolution do it. The printing press was invented in China (1041) some 400 years before Gutenberg (1450) caught on to the idea, and the Industrial Revolution didn&#x27;t happen for another 300 year after that!<p>McCloskey&#x27;s suggestion is that Bourgeois Dignity is what caused the change. That society came to dignify innovation. That average Jane Citizen came to be able to invent and bring to market innovation. Not only that, we now glorify the innovator, rather than prosecute them.<p>So it wasn&#x27;t British imperialism that made Britain rich. Free trade does more to cause the wealth of nations than imperialism ever could. But free trade isn&#x27;t enough either.<p>McCloskey argues it isn&#x27;t Capitalism that is so important to modern wealth, because capitalism -the accumulation of capital- has been a thing since people have been gathering seeds.<p>As Sam says in his article it is Innovationism that made the modern world so extremely wealthy. That we are prepared to iterate so rapidly, ever more rapidly, and dignify those who do the innovating.<p>So I disagree that the imperial redistribution of wealth is what has caused &#x27;those regions&#x27; to be affected to this day. As India embraced Innovationism -in manufacture, call centres, software development- we have watched it become increasingly more wealthy.",1423961219
9051358,comment,9046829,9050355,0,0,dmourati,,,"Thanks for the reply.",1423961139
9051357,comment,9050009,9050009,0,0,overgard,,,"I can&#x27;t remember where I saw it (pypy dev list maybe?) but unfortunately I think the project has been mostly abandoned. Wouldn&#x27;t hurt for someone to fork it though, it seems like a great idea if someone had the time to move it forward.",1423961133
9051356,comment,9051041,9050793,0,0,jrochkind1,,,"Yeah, I dunno, the github PR &#x27;culture&#x27; I&#x27;ve engaged in has often in fact been about code review. I don&#x27;t see any problems with forking a repo publicaly to make a PR (what is there to hide?), am not really bothered by merge commits (and in some cases they are actually quite useful, some people prefer them, it&#x27;s a point of some contention), and I don&#x27;t really understand what they mean by &#x27;Comments are sent as they are written; you cannot &quot;draft&quot; comment&#x27;<p>But to each their own -- I&#x27;m curious what alternative system (if any) of accepting patches they have. If it&#x27;s emailed git patches on a listserv, then I would definitely find it a barrier to submitting patches, myself, compared to github PR&#x27;s.<p>I think in general, github PR&#x27;s have proven succesful at soliciting code contributions from a wider field, which seems to be the goal of their UI (over command line git itself). Of course, this can seem a downside too, as committers have to spend time dealing with those submissions.",1423961131
9051355,comment,9051246,9051246,0,0,k__,,,"This with the hololens could be rather nice to debug.",1423961123
9051354,comment,9050993,9050993,0,0,ild,,,"...and it contains acrylamide",1423961105
9051353,comment,9049467,9051341,0,0,jonsterling,,,"1. that&#x27;s why I qualified it &quot;proper&quot;. Of course there is unsafePerformIO, but in the presence of laziness, this is <i>really unsafe</i>. as opposed to ML, where doing IO may harm your ability to reason about stuff, but it won&#x27;t be unsafe.<p>Debug.Trace is also unpredictable; actually, it&#x27;s perfectly predictable if you understand laziness, but it&#x27;s still not what&#x27;s really wanted in most cases.<p>2. ST is a single instance of an effect that can be interpreted into &quot;pure&quot; code. There are plenty of other effects that don&#x27;t work like this in Haskell, not to mention the problem of composing them together.<p>So thanks for chiming in! But what you have said is not really that different from what I have said.",1423961104
9051351,comment,9050316,9051173,0,0,codygman,,,"> The choice of a pure functional language like Haskell to do lots of IO seems like a strange choice given that Haskell makes side effects like IO more difficult than other languages. I&#x27;m curious to know how that affected the implementation. I&#x27;d like to use more functional languages, but since my job is primarily IO of some sort, watching people struggle with writing to sockets leaves me more than a little hesitant.<p>Disclaimer: I haven&#x27;t read this yet, but your comment above caught my eye and what I&#x27;m about to comment applies regardless.<p>Maybe it makes IO slightly more difficult to begin with, but you can be sure that your all cases are handled after that. Plus once you know about fmap and >>= you can apply pure functions to monadic functions (functions of type IO are monadic because they implement the Monad typeclass (think of it as an interface for now)).",1423961088
9051350,comment,9051041,9051125,0,0,pjc50,,,"<i>Don&#x27;t use the merge button, just</i><p>This is the smell of git plumbing again. Don&#x27;t use the obvious UX that&#x27;s been presented to you, do some other workflow that doesn&#x27;t appear in the documentation.",1423961083
9051349,comment,9051246,9051246,0,0,VonGuard,,,"This is brilliant, I wish it&#x27;d get more upvotes and attention. Wireless waves are such nebulous, hard to understand things. It&#x27;s great to see a visual representation!",1423961081
9051348,comment,9050793,9051093,0,0,eternalban,,,"From what I hear you have the funds and resources to operate at that scale.",1423961055
9051347,comment,9049698,9050782,0,0,tokyo1000,,,"What if that&#x27;s just because people have fewer problems with Nim than they have with Rust? The number of SO questions is a better measure of how often and how many people run into problems than it is a measure of overall popularity.",1423961029
9051346,comment,9051041,9050793,0,0,ak217,,,"<i>Can only view diffs on a single page (can be very slow).</i><p>I&#x27;ve seen GitHub take five seconds to render a 100K line diff. In my experience all of the other tools I&#x27;ve used, including some of the ones listed, can take longer to render individual file sections of such a diff. It&#x27;s fast enough.<p><i>Comments are sent as they are written; you cannot &quot;draft&quot; comments.</i><p>I&#x27;m a bit puzzled as to why you would need to draft comments inside the PR interface, especially in light of the fact that they can be edited.<p><i>Cannot compare differences between patch sets.</i><p>You most certainly can. Just use branch/revision compare.<p><i>To create a patch one must fork the repository publicly (weird and unnecessary).</i><p>Also immaterial.<p><i>Accepting a patch creates a &quot;merge commit&quot; (ugly repo history).</i><p>This comes closest to being a legitimate complaint. Because GitHub emphasizes recognition of contributors, it doesn&#x27;t let you rewrite the commits in the PR as you merge them with the merge button, but there are multiple ways to merge on the command line that avoid the merge commit and play nice with the PR.<p><i>In general, pull request culture is not about code review.</i><p>WTF?<p>Sounds like a strong case of NIH.",1423960975
9051345,comment,9051041,9051204,0,0,pjc50,,,"Local history is not a concept in SVN. There is only one history which is the same for everyone.",1423960973
9051344,story,,,1,0,adam_quartzy,"Email Marketing Manager",https://boards.greenhouse.io/quartzy/jobs/37639?gh_jid=37639#application_form,,1423960957
9051343,comment,9050793,9051330,0,0,enneff,,,"> <i>I posted a comment summarizing (in my opinion) the state of Go.</i><p>Not trying to be rude, but your uninformed opinion is less valuable than you think.",1423960903
9051342,comment,9050316,9051173,0,0,kryptiskt,,,"> the authors worked really hard to implement in Haskell something that is trivial and well-understood in Python and other languages.<p>So where do you get the idea that it was hard work in Haskell?<p>&quot;It was a breeze to rapidly prototype and test individual components before composing them into a whole.&quot;<p>&quot;Very surprisingly we got done really quickly.&quot;<p>> The choice of a pure functional language like Haskell to do lots of IO seems like a strange choice given that Haskell makes side effects like IO more difficult than other languages.<p>Haskell separates IO, it doesn&#x27;t make it harder.",1423960874
9051341,comment,9049467,9051067,0,0,peter-fogg,,,"> 2. benign effects: in Haskell &quot;proper&quot;, you do not have effects; rather you have &quot;codes&quot; for effects, which get interpreted into effects by the RTS; this rules out the possibility of, e.g., using effects to implement a semantically pure interface. On the other hand, OCaml has actual effects, which can be used in an open-ended way to implement all sorts of functional interfaces.<p>So, to be all pedantic and stuff... You&#x27;ve always got unsafePerformIO, first off. This is used in Debug.Trace (<a href=""https://hackage.haskell.org/package/base-4.7.0.2/docs/src/Debug-Trace.html#trace"" rel=""nofollow"">https://hackage.haskell.org/package/base-4.7.0.2/docs/src/De...</a>) to allow printf debugging in pure code. This is also used in some Haskell libraries to provide restricted effects in monads other than IO. But if you don&#x27;t want to use unsafe* functions, you can always use ST to get direct access to mutable memory in a safe way. If you can runST within that interface, then you can present a pure interface to users.",1423960867
9051340,comment,9049467,9051237,0,0,jonsterling,,,"sgeisenh —  wow! How cool. If that is the case, than that&#x27;s awesome, and makes me very happy.",1423960859
9051338,comment,9049467,9051067,0,0,spyder81,,,"Thanks! (I&#x27;m the author). I focussed on JavaScript because it&#x27;s what I know, it&#x27;s my day job, and I wanted to share a bit of my research while trying to introduce AltJS to it.<p>I wasn&#x27;t (and am still not) really enough of an expert in either Haskell or OCaml to talk about other differences; including a bunch of dot points I don&#x27;t understand wouldn&#x27;t help anyone :)",1423960841
9051337,comment,9050793,9051322,0,0,enneff,,,"Values (&quot;off-GC primitives?&quot;) are first class-citizens in Go. Stack-allocated structs have much more value than you think.",1423960811
9051335,comment,9049467,9051237,0,0,sgeisenh,,,"> I&#x27;ll mention, though, that Haskell does have one form of modularity which ML doesn&#x27;t really, which is the fact that you can write algorithms separately, compose them together after the fact, and expect to get reasonable performance in most cases.<p>I&#x27;d actually argue the opposite. MLton is one of the best whole program optimizing compilers I have ever used. There are virtually no penalties for abstraction. OCaml has a bit of trouble here, from what I&#x27;ve heard, but I&#x27;ve never personally run into serious performance problems as a result of abstraction.",1423960754
9051334,comment,9049467,9051172,0,0,jonsterling,,,"lps25:<p>> Consider the case of a set implemented as a binary tree. The type of such a set should be parametrised by the type of the elements and the ordering used. With applicative functors this is the case as your set type will be `Set(O).t` where `O` is a structure containing the type and the ordering. With generative functors each individual set type is abstract -- so the type itself is not parameterised by the ordering.<p>You make a good point about this not being strictly about type classes. But I&#x27;d say that the issue is only a problem in the presence of implicit resolution, since otherwise, you can just bind the result of the functor to a structure once and be done with it. It becomes an issue with type classes, because you don&#x27;t have the choice to share a single structure during elaboration.<p>IMO, the generative version is still better for most use-cases (pure or not), but it&#x27;s nice that you can have both in OCaml.",1423960709
9051333,comment,9050793,9051266,0,0,justinmk,,,"Force pushes <i>to the PR fork</i>. We have set receive.denyNonFastForwards=true on the upstream master.",1423960682
9051332,story,,,1,0,philDunphy,"Android Wear smartwatches used by less than 0.1% of Android smartphone owners",http://www.ibtimes.co.uk/android-wear-smartwatches-used-by-less-0-1-android-smartphone-owners-1487834,,1423960680
9051331,comment,9050316,9051173,0,0,mbrock,,,"&quot;The choice of a pure functional language like Haskell to do lots of IO seems like a strange choice given that Haskell makes side effects like IO more difficult than other languages. I&#x27;m curious to know how that affected the implementation. I&#x27;d like to use more functional languages, but since my job is primarily IO of some sort, watching people struggle with writing to sockets leaves me more than a little hesitant.&quot;<p>Haskell has excellent I/O support. How do you mean that Haskell makes I/O difficult?",1423960663
9051330,comment,9050793,9051187,0,0,arsv,,,"> After doing your research, you&#x27;re welcome to submit a magical CL and PR that brings down the binary sizes, then you won&#x27;t need to argue anymore.<p>The original link is titled &quot;The State of Go&quot;. The first thing I want to know about a state of a new language is whether it works. Then how well it works. Then, maybe, how to fix it and which VCS to use. There is an issue I think is within the range of these two questions, but it is not even mentioned there.<p>So to make life a bit easier for people who like me expect that issue to be discussed first, I posted a comment summarizing (in my opinion) the state of Go.<p>My thoughts on how to fix it are hardly relevant to the current state of Go.<p>> It doesn&#x27;t print just strings. It can print anything.<p>The fact it is just a string should be statically (build-time) inferable in a strongly-typed language. Reflection, at least as I understand it, implies run-time type information. So the question does make sense. Yes, I understand why it may be needed for a particular implementation of printf, this is why I called it a lesser issue.",1423960660
9051329,comment,9049467,9051319,0,0,jonsterling,,,"Hey, sorry... You&#x27;re right, I shouldn&#x27;t have said this. Over the past few days, certain parts of the Haskell community have been particularly vicious (toward me and others), and I have been feeling a bit beleaguered. I shouldn&#x27;t have brought it here though. Cheers.",1423960638
9051328,comment,9050970,9050970,0,0,riobard,,,"I guess the next logical step is to build a virtual filesystem such that each connection is represented by a file. Then you can further decouple the connection handling from the actual application. Applications can start later to talk to a connection established before.",1423960625
9051327,comment,9046829,9050060,0,0,rdtsc,,,">  and doesn&#x27;t address any of the reasons why people prefer containers to VMs for some types of workloads<p>I was responding to one reason -- which is &quot;running any image on any platform&quot;.<p>> why people prefer containers to VMs for some types of workloads<p>Sure but there are no magic unicorns underneath, knowing what you get from a technology requires some understanding on how it works. Saying things like &quot;I want very lightweight but also want it to run any image on it&quot; is asking for a trade-off. Or a complicated multi-host cabaility based platform.",1423960597
9051326,comment,9050793,9051268,0,0,enneff,,,"It doesn&#x27;t matter what the mechanism is; writing code that depends on code that changes is more complex than simply not doing that.",1423960587
9051325,comment,9051041,9051086,0,0,geofft,,,"From the web interface, no, but you can close PRs with `git push` just fine.",1423960563
9051324,comment,9051041,9050793,0,0,jakub_g,,,"I tried to mitigate some of the pains with GitHub code review UI by writing a helper userscript to track the progress of big code reviews. Some of the items listed in the link can be fixed in this way.<p>The idea is to expand/collapse files, store progress of the review and collapse status of the files in local storage of the browser, so you can stop and resume at any time (I also have in mind serializing this stuff into a hash in the URL so you can forward it to the other machine for instance, and recreate the progress there).<p>I work on it every now and then and have a number of items in the backlog. If someone is interested to contribute I&#x27;ll be happy to accept pull requests (sic!) :)<p><a href=""https://github.com/jakub-g/gh-code-review-assistant"" rel=""nofollow"">https://github.com/jakub-g/gh-code-review-assistant</a>",1423960540
9051323,comment,9051041,9051248,0,0,geofft,,,"This is actually one of the things I miss about SVN: in addition to a record of the commit being generated on a branch, there&#x27;s a record of the commit being accepted onto trunk, and when and why.<p>Rust has an integration robot that does all the merges into master, that records who reviewed it, what the link to the PR (and the code review on that PR! it exists!) was, etc. It was a little weird as a complete newcomer not to see humans in the `git log --first-parent` view, but I really like it now, because if I want to know why some commit was merged the way it was, that discussion is recorded nicely. (The merge commit has the subject/body of the PR, which doesn&#x27;t need to match the subject/body of any commit in the PR.) Compare with, like, the Linux kernel, where the best you can do is Google for LKML threads with the same subject line. There&#x27;s even a convention of [PATCH 0/10] for summaries, but those summaries are nowhere to be seen in the git repository.<p><a href=""https://github.com/rust-lang/rust/commits/master"" rel=""nofollow"">https://github.com/rust-lang/rust/commits/master</a>",1423960517
9051322,comment,9050793,9051105,0,0,eropple,,,"I don&#x27;t believe that this is true. You use the exact same patterns and tricks in both for perf-critical code: off-GC primitives and object pools rule the day. What are you considering a &quot;much better&quot; option available in Go?<p>(I considered stack-allocated structs in Go, but honestly that doesn&#x27;t strike me as a particularly major thing; it may be slightly more terse, but fundamentally the same behavior.)",1423960461
9051321,comment,9050452,9050980,0,0,seanmcdirmid,,,"WPF has not only a UI thread, but a closed-off rendering thread responsible for translating scene graph modifications into screen pixels. It was never clear to me if browsers did the same thing (dom being changed in the single UI thread, dom changes being processed in an off limits rendering thread).",1423960456
9051320,comment,9049467,9051135,0,0,manu3000,,,"The first chapter of Dreyer&#x27;s thesis &quot;Understanding and Evolving the ML Module System&quot; (<a href=""http://www.mpi-sws.org/~dreyer/thesis/main.pdf"" rel=""nofollow"">http://www.mpi-sws.org/~dreyer/thesis/main.pdf</a>) talks about generativity",1423960427
9051319,comment,9049467,9051067,0,0,codygman,,,"Awesome response, but....<p>>  (In case the Pedagogical Brethren wish to come and &quot;correct&quot; me.)<p>Seems very unnecessary and is a big departure from the Haskell community I&#x27;m personally used to. On top of that, it&#x27;s not the tone I&#x27;m used to on HN for the most part either.<p>Apologies for going off topic, just felt obliged to chime in.",1423960423
9051318,comment,9045305,9046861,0,0,dredmorbius,,,"I Firefox with Vimperator they&#x27;re included in URL search as you start entering URLs.  Based on either the URL <i>or</i> the page title / bookmark description.<p>This ... is exceptionally powerful.",1423960406
9051317,comment,9050343,9050343,0,0,tehwebguy,,,"In my opinion you have been extremely fortunate to have made it this long before getting smacked down. Continue for <i>my opinion</i> which is pretty harsh:<p>1. Almost all of your pages probably have no content<p>You&#x27;ve got 1.9M+ calls. Some numbers like 2145627653 have multiple calls but none of them provide anything new. Others like 4802550681 have 1 or more calls but no information other than city + state which is available on like every phone now. Others have no calls, no information at all.<p>2. As a result, almost all search users probably bounce, immediately<p>People want to know who is calling them, right now. They have like 6 seconds before the caller hangs up so they need to know - when they realize there is no information they are going to bail. They are also going to be pissed off that the top result on Google is asking them for information rather than giving it to them.<p>3. Your traffic is probably almost exclusively from search<p>Again I&#x27;m guessing here but I can&#x27;t imagine that you are getting more than 5-10% of your traffic from sources outside of people searching for information on a phone number. That says to me that people don&#x27;t think there is a reason to come back.<p>Yeah, you were first, but who cares? Your site sat around pissing off search engine users (including me) for a decade and still looks like the MVP it was in 2006. You may not be actively spamming the web but your website is passively spamming Google. Those other guys might be worse but who cares? That doesn&#x27;t change the other facts and their punishment will likely come soon. That argument doesn&#x27;t get you off the hook with Google.<p>If you want to get back on top you&#x27;re going to need a better offering than effectively being the first result on Google and a comments system.",1423960340
9051316,comment,9050343,9050424,0,0,whocalledus,,,"I&#x27;ll be the first one to critique whocalled.us, and tell you all the ways it could be much better. But that is a different issue than whether or not Google should completely remove it from its search results.<p>That page you linked to is mostly useless, and I would prefer to remove it from the index. But if I search that same phone number on Google, the #1 result is an empty page, &quot;Be the first to comment:&quot; (<a href=""http://www.callhunter.com/numbers/2104495665"" rel=""nofollow"">http://www.callhunter.com/numbers/2104495665</a>).<p>There are plenty of pages that have a lot more information. Try this one (<a href=""http://whocalled.us/lookup/6023888058"" rel=""nofollow"">http://whocalled.us/lookup/6023888058</a>). It is a messy site, with profanity, and plenty of noisy data. But how is that &quot;Pure Spam&quot; as Google insists?<p>I&#x27;ll gladly reorganize the site if there&#x27;s a significant problem with how it&#x27;s structured. But Google has indexed this website in this same form for many years, and it continues to index its competitors. Why delete it now?<p>They might&#x27;ve detected something I have not found yet, but why not tell me so I can fix it? They provide me with no specifics about <i>why</i> whocalled.us is &quot;Pure Spam&quot;.",1423960334
9051315,comment,9051041,9051120,0,0,scrollaway,,,"It&#x27;s hijacking Alt+Left/Alt+Right (back/forward in the browser) too. Nasty.",1423960330
9051314,comment,9049698,9050690,0,0,jwecker,,,"Thanks for the thoughtful response- it didn&#x27;t come across as combative at all to me.<p>The true, provable safety of Rust was what drew me to it as well. I&#x27;ve always hated having to choose between un-principled memory management (with it&#x27;s security and functionality vulnerabilities that can lie dormant for many years before kicking your butt) and garbage-collection forcing you away from the metal and removing deterministic reasoning about memory usage, runtime behavior, and runtime overhead.<p>I&#x27;ve been going through the academic papers, forerunners, and source-code for Rust&#x27;s static memory routines and borrowing semantics. My hope and suspicion is that it can be added to Nim without core changes to the language like lifetimes. It&#x27;s definitely not a guarantee, but with lots of experience in both languages now I feel very strongly that adding region-based-memory-management to Nim is possible while adding Nim&#x27;s clarity, abstractions, and efficiency to Rust feels impossible.<p>I agree that at the moment Rust is the only responsible choice right now if provable memory safety is a primary concern, but I suspect that will change. In the mean-time, for us anyway, the price was too high in productivity when we discovered that we could do manual memory management in Nim in very well-considered isolated places and confidently use Nim&#x27;s fast, real-time deterministic per-thread garbage-collection for everything else without a noticeable performance penalty.<p>Having said that, I don&#x27;t think I actually disagree with anything you said (:",1423960327
9051313,comment,9045677,9049425,0,0,eridius,,,"When did I ever say anything about reply-to? Please do not put words in my mouth and then speak condescendingly to me. It&#x27;s extremely irritating.",1423960327
9051312,comment,9050793,9051228,0,0,GFK_of_xmaspast,,,"Grow up.",1423960276
9051311,story,,,3,0,rachbelaid,"Platter - Python build/deployment tool",http://platter.pocoo.org/,,1423960255
9051310,comment,9049208,9049297,0,0,aswanson,,,"&quot;Whom the gods wish to destroy, they give unlimited resources.&quot;<p>These terse words at once explain the sophomore jinx in music, why famous scientists never outdo their work before they are famous, and some of the deepest paradoxes of my own life.  Thanks for this.  Classic.",1423960222
9051309,comment,9051041,9051248,0,0,scrollaway,,,"> which to my eyes is more useful than a &quot;pretty&quot; repository.<p>A pretty history is extremely important when you need to attract new contributors to your repository. I&#x27;ve maintained extremely clean git logs and extremely nasty ones too. New contributors are immediately turned off in the latter case, because a good developer will generally git log extremely early when discovering a new project.",1423960218
9051308,comment,9045677,9050920,0,0,eridius,,,"You did the action, but that does not ever justify sending the email with an envelope claiming it came from you. Because you did not send the email. It could certainly put you as a Reply-To on the email, and it might possibly justify putting your name on the From line, but actually claiming to have been sent from your email address is wrong.",1423960214
9051307,comment,9050970,9051031,0,0,comboy,,,"I like the project. But it says:<p>> Full duplex messaging<p>And the examples only show single direction. Is my understanding correct that everything received goes as STDIN? And is it also possible to run websocketd as a client?",1423960209
9051306,comment,9051041,9051192,0,0,rmrfrmrf,,,"If PRs were a instantaneous thing, I don&#x27;t think it would be a problem. However, if you&#x27;ve ever looked at a network graph of a repo that requires rigorous code review or doesn&#x27;t have a diligent maintainer, some of those forks can sit in limbo for a really long time. And, as more pull requests pile up, it&#x27;s very difficult as a user to figure out which version I should be using for my code to run correctly.<p>I just ran into this issue the other day when I was using Node with a lot of dependencies that still haven&#x27;t been patched for issues that cropped up in OSX Yosemite.",1423960195
9051305,comment,9050436,9051079,0,0,justincormack,,,"Not sure, double entry bookkeeping is apparently not baked in everywhere, if you can increase an account balance it might not be picked up. If this is creating money, well thats another question.",1423960192
9051304,comment,9050793,9051266,0,0,hk__2,,,"What? Pull requests should be on their own branches, if you want to keep one commit per PR but need to edit it you <i>must</i> rebase it and thus force push. It’s a terrible habit if you’re sharing your branch with others, it’s completely normal if not.",1423960165
9051303,comment,9050343,9050343,0,0,gress,,,"I have been receiving spam calls recently despite being on the national do not call register.  Thanks to google, I wasn aware of this resource until today.<p>There is no defense against Google&#x27;s actions here other than to acknowledge that they make mistakes and need to take more  responsibility given the power they hold.<p>If they don&#x27;t become more transparent about appealing these mistakes, eventually we as a society should develop a legal recourse.  There simply isn&#x27;t enough competition in search to enable these kinds of errors to be corrected through market mechanisms.",1423960137
9051302,comment,9051041,9051125,0,0,bdarnell,,,">> Comments are sent as they are written; you cannot &quot;draft&quot; comments.\n> How is that different from pull requests via emails? (Also, on the website itself the comments can be edited.)<p>With github PRs, notifications are sent as soon as you write your first comment; in systems like gerrit and rietveld (and email) they are not sent until the reviewer chooses to send them. This leads to either awkward interactions if you start replying to comments while the reviewer is still reviewing, or unresponsiveness if everyone introduces hysteresis to avoid this situation.<p>This is IMHO the biggest problem with Github PRs; I don&#x27;t necessarily agree with the Go team&#x27;s decision to abandon the PR system but on smaller projects I have pushed for rietveld over PRs for this reason.",1423960137
9051301,comment,9050793,9051292,0,0,enneff,,,"> <i>And argue that the vast majority of pull requests on GitHub are simple ones which don&#x27;t need much discussion, so in general the GitHub UI works just fine.</i><p>Right. And what you say validates my exact point: &quot;pull request culture is not about code review.&quot; If all you want to do is cast your eye over it and click &quot;merge&quot;, it works great. That&#x27;s not how we work, though.",1423960124
9051300,comment,9050436,9051070,0,0,justincormack,,,"Even widespread two factor auth would mitigate a lot of this. Banks are often quite backward because there are few software suppliers, and it is an industry that took to computing early so there is a lot of legacy. But they vary a lot - the implication of the story is that these were perhaps banks in smaller countries - the banks that got defrauded recently in another large case with cashpoint withdrawals from fake cards were middle eastern. You have a lot of choice of banks, choose the weakest...",1423960101
9051299,comment,9049218,9049968,0,0,keslag,,,"I liked Ansible a lot; during our evaluation I had a single Ansible file provisioning a sample dev setup in around 50 lines.  We need to support windows servers primarily, much to my objection, so the &#x27;blessing&#x27; of the machine to automate Ansible on windows required a manual step at the time, which wasn&#x27;t acceptable for our use case.  We ended up picking chef, both for it&#x27;s more agnostic approach to OS&#x27;s, but also it&#x27;s much more developer friendly, regardless of it&#x27;s overly verbose generators, git repository litter, and quirks that still have me scratching my head.",1423960059
9051298,comment,9051041,9051120,0,0,boulos,,,"Each slide was okay when viewed horizontally, but then advancing then shows the damn address bar.  I had to annoyingly advance, rotate, rotate back, and then read.  After a while I just gave up on the titles...",1423960058
9051297,comment,9049467,9050352,0,0,spyder81,,,"As far as I can tell Elm is more of a GUI focused language, when I was evaluating AltJS languages I was looking for something a bit more low level. The JS and DOM bindings of js_of_ocaml were what really sold me although I didn&#x27;t mention this in the post.",1423960025
9051296,comment,9049467,9051054,0,0,tpetricek,,,"I guess it&#x27;s more difficult than shifting the focus towards industrial use cases. Industrial use cases are a great thing, but it is something that the industry has to provide :-) (we tried to do something like that for F# here: <a href=""http://manning.com/petricek2"" rel=""nofollow"">http://manning.com/petricek2</a> (sorry for a shameless plug!)).<p>But many people contributing to functional programming (in one way or another) are in academia. They are not the best people to contribute industrial case studies - but I think there is still a lot to be done there too! The nice thing about the FRP paper is that it is really just a fun (and very simple and somewhat impractical) example, but it is nice inspiration showing (what was back then) a novel use of functional programming. Some of the more recent academic work around FP lacks this kind of creativity...",1423960020
9051295,story,,,1,0,sethbannon,"The Obamization of Uber",http://www.politico.com/magazine/story/2015/02/obama-uber-115166.html,,1423959986
9051294,story,,,2,0,minimaxir,"On Kickstarter, Everyone Is Peter Molyneux",http://arstechnica.com/gaming/2015/02/on-kickstarter-everyone-is-peter-molyneux/,,1423959975
9051293,comment,9050793,9051190,0,0,vardump,,,"JIT has potential to be faster than compiled native code. Better runtime information. Compiled code needs to cover all potential options and this means more instructions to execute.<p>Say a variable value is set through a command line option to be a certain value. Compiled native code has to assume the value to be dynamic, but a JIT can optimize it away, effectively hardcoding it for that particular invocation. Same applies to more complicated type of software. Some configuration and invocation parameters tend to be effectively static during that particular invocation. JITs can capitalize on this fact.<p>JITs have also better chance to adapt to exact hardware it&#x27;s running on. Compiled code is forced to make one or a limited number of assumptions of available CPU hardware configuration.<p>In the end, both options are running compiled native code. JIT just does it a bit before running.<p>Of course current reality is the opposite, but the key word here is <i>potential</i>.",1423959924
9051292,comment,9050793,9051142,0,0,wereHamster,,,"> GitHub is painful for non-trivial reviews.<p>That may very well be the case. But note how you said <i>for non-tivial reviews</i>, whereas in the presentation about go they said <i>in general</i> (see the line I quoted in my original comment). And argue that the vast majority of pull requests on GitHub are simple ones which don&#x27;t need much discussion, so <i>in general</i> the GitHub UI works just fine. I don&#x27;t have any hard numbers to back up my claim.",1423959914
9051291,comment,9050793,9051202,0,0,kryptiskt,,,"Android does AOT compiling with ART, it became the default in Lollipop.",1423959907
9051290,story,,,1,0,zafka,"The trip treatment",http://www.newyorker.com/magazine/2015/02/09/trip-treatment,,1423959832
9051289,comment,9048772,9049964,0,0,dredmorbius,,,"As of 2014 it was closer to a 50-50 split:<p><a href=""http://www.huffingtonpost.com/2013/10/30/edward-snowden-poll_n_4175089.html"" rel=""nofollow"">http://www.huffingtonpost.com/2013/10/30/edward-snowden-poll...</a>",1423959782
9051288,story,,,30,0,Thevet,"350 years of publishing from the world's oldest science journal in pictures",http://www.theguardian.com/higher-education-network/gallery/2015/feb/12/philosophical-transactions-of-the-royal-society-350-years-of-science-publishing-in-pictures,,1423959771
9051287,comment,9050452,9050980,0,0,kaoD,,,"Actually, it&#x27;s the other way around: the single thread in a browser is an UI thread, and what&#x27;s seriously broken is using it for anything else!<p>If you ever want to do non-UI work, you should use Web Workers, which were invented specifically because doing non-UI complex tasks in the UI thread got really common when HTML unexpectedly became an application platform.",1423959759
9051286,comment,9050452,9050980,0,0,statictype,,,"Code running in the browser also has a UI thread that it needs to run on. Just that until recently the UI thread was the <i>only</i> thread you had access to.",1423959755
9051285,story,,,2,0,tugberk,"Software Applications Should Work Like Restaurants",http://www.tugberkugurlu.com/archive/software-applications-should-work-like-restaurants,,1423959734
9051284,comment,9050970,9051166,0,0,asergeyev,,,"Untold rule is not to run &quot;sudo websocketd --devconsole bash&quot; :)",1423959733
9051283,comment,9050372,9050372,0,0,hiroprot,,,"The title of the article is &quot;THE DARK SCIENCE OF INTERROGATION&quot;, not &quot;Dark Side&quot;.",1423959705
9051282,comment,9049467,9051172,0,0,lpw25,,,"I think I disagree with this. Your functors should generally be pure, and for pure functors applicative is a nicer semantics.<p>Consider the case of a set implemented as a binary tree. The type of such a set should be parametrised by the type of the elements and the ordering used. With applicative functors this is the case as your set type will be `Set(O).t` where `O` is a structure containing the type and the ordering. With generative functors each individual set type is abstract -- so the type itself is not parameterised by the ordering.<p>You could consider this to be just an example of what you are calling &quot;Modular Type Classes&quot;, but there doesn&#x27;t need to be a system of implicit module parameters for it to be useful.",1423959676
9051281,comment,9049467,9050276,0,0,lmm,,,"I think most people who wanted a cross-platform, VM-based, corporate-ecosystem-integrated ML derivative with good concurrency support have already found Scala :P.",1423959653
9051279,comment,9049467,9050594,0,0,spyder81,,,"I knew about scala.js when writing the post (although it was still experimental at the time) but I didn&#x27;t mention it because I don&#x27;t like Scala. It looked promising when I first saw it, but then I had to write some production code in it.<p>My opinion now is that if you&#x27;re forced to use the JVM then Scala is one of the best options. But that&#x27;s a low bar, given the choice I would pick something else.",1423959624
9051278,comment,9048772,9049662,0,0,schoen,,,"There are possible structures of problems and solutions in which this search strategy would get stuck in a local optimum -- if you agree that some solutions preclude others or make other problems worse.",1423959545
9051277,comment,9050054,9051196,0,0,morb,,,"A mistake? All I see is pure malice. The guy threatened the developers with bad press, and then he followed through with it. I don&#x27;t see how that is a &#x27;simple mistake&#x27;, it was plain extortion. \nTalking about reputation, what about SPI&#x27;s reputation?<p>Did you read the links in the linked article?\nWe may be reading the same thing and getting a different impression, and that&#x27;s ok too.",1423959535
9051276,comment,9050793,9051139,0,0,hammerandtongs,,,"Just as a minor point -<p>One of the major blockers to clojure in android is that the lack of treeshaking/deadcode elimination makes for 10 second+ startup times in most environments.",1423959530
9051275,comment,9050970,9050970,0,0,keyle,,,"Oh my! I have been waiting for this, trying to write my own websocket server implementation in multiple esoteric languages! Fantastic!",1423959516
9051274,comment,9050279,9050279,0,0,biomimic,,,"This text summarizer will be open sourced soon: <a href=""http://genopharmix.com/TuataraSum"" rel=""nofollow"">http://genopharmix.com/TuataraSum</a>",1423959510
9051273,comment,9050793,9051090,0,0,falcolas,,,"You&#x27;re right - it will be significantly larger. But then again, it doesn&#x27;t depend on your system having all of the necessary libraries of the correct version and the overhead of dynamic linking.<p>It&#x27;s a tradeoff, and worth it in my opinion.",1423959495
9051272,comment,9049630,9049630,0,0,pmorici,,,"Does anyone actually do #27, &quot;27. Over-provisioning is useful for wear leveling and performance&quot;  It&#x27;s been my experience mucking with the innards of flash devices that they already have ~10% more NAND in them than their labeled capacity exactly for this purpose.  Seems like over provisioning is bad advice unless you have a very special situation.",1423959492
9051271,story,,,34,7,lewispb,"Zane Lowe to join Apple",http://www.bbc.co.uk/newsbeat/31470124,,1423959455
9051269,comment,9048772,9050163,0,0,schoen,,,"I&#x27;ve been happy to see (and participate in) a recent discussion on software update transparency, which I think could change this situation someday -- assuming software users and publishers have enough interest in reducing the publishers&#x27; power.<p>Some publishers understand that a reason to try to do this is to be less vulnerable to coercion, and also to be <i>seen to be</i> less vulnerable to coercion -- like when distributing software to foreigners who think that your local government might try to force you to backdoor it.  A recent example I heard along these lines was a Chinese vendor who was interested in pursuing a means to help customers confirm that the software updates they got hadn&#x27;t been backdoored at the behest of the Chinese government.  Technology distributors who are based in other countries might face similar concerns.",1423959406
9051268,comment,9050793,9051262,0,0,hueving,,,"It&#x27;s not complicated at all if you use merge commits. That&#x27;s exactly what you are doing with a feature branch. Failing to realize merge commits are useful is what makes them complicated.",1423959337
9051267,comment,9051041,9051242,0,0,kasey_junk,,,"And then I have to follow a completely different work flow and inconvenience the maintainers.",1423959316
9051266,comment,9050793,9051142,0,0,falcolas,,,"Wait. Force pushes? That&#x27;s a terrible habit to get into; force pushes have decimated more than a few a open source project&#x27;s repository.<p><a href=""https://news.ycombinator.com/item?id=6713742"" rel=""nofollow"">https://news.ycombinator.com/item?id=6713742</a>",1423959288
9051265,comment,9043577,9044007,0,0,hueving,,,"Nope, you&#x27;re describing a mistake grade school children have made for many years. It used to be corrected by high school, but failing education systems have led to confusion between discrete sets and continuous sets. Let&#x27;s not try to defend ignorance.",1423959209
9051264,comment,9047786,9050737,0,0,agibsonccc,,,"Right. Being able to trouble shoot models with some level of certainty is  better than nothing. Tuning neural nets is still more of an art than a science in some respects, I&#x27;m not aiming for anything magical here. My first step with neural nets is to make them usable.",1423959202
9051263,comment,9042186,9042186,0,0,auxym,,,"I wish I had explored more artsy endeavours in high school and college, instead of being such a nerd focused on only science. Litterature, drama, creative writing, music.",1423959169
9051262,comment,9050793,9051180,0,0,enneff,,,"One nice thing about Git is it lets you choose your workflow.<p>Our general workflow for the Go project is to review single commits, and sometimes do major new work in feature branches. When we submit a single change we cherry-pick. When we merge trees, we create a merge commit.<p>We don&#x27;t write commits that depend on other pending work. That&#x27;s overly complicated (IMO) even if you always use merge commits.",1423959155
9051261,comment,9049698,9051147,0,0,jwecker,,,"I actually coded a predecessor to the system under development a few years ago and have used Erlang and more recently Elixir a lot, but in the end it just wasn&#x27;t low-level enough, fast enough, or runtime-free-enough for our current project (for example we need to generate real-time processing kernels that can run on GPUs and FPGAs-- a realm not even really contemplated at the Erlang level).",1423959130
9051260,comment,9051041,9051220,0,0,jbish,,,"Yes! I&#x27;ve been wanting to do this and didn&#x27;t know it was this easy.",1423959108
9051259,comment,9043577,9047769,0,0,hueving,,,"Who said anything about needing to drink?",1423959105
9051258,comment,9049467,9051161,0,0,purescript,,,"Right now, the translation is very direct. My basic rule of thumb is - only perform those optimizations which the user opts into. Some things are standard though, like a few inlining rules and tail call elimination, but the plan is to provide a rewrite rules engine so that the developer can be as fine-grained as they like when it comes to optimizations.",1423959102
9051257,comment,9050793,9051228,0,0,nutate,,,"MFW I read this: \n<a href=""http://makeitthentelleverybody.com/wp-content/uploads/2014/07/coasterdogteeth.jpg"" rel=""nofollow"">http://makeitthentelleverybody.com/wp-content/uploads/2014/0...</a>",1423959083
9051256,comment,9043577,9044003,0,0,hueving,,,"It sounds like you were just an alcoholic or at least hanging out with alcoholics. I have never had any issues with having to walk on eggshells or have friends have outbursts. We only have one or two drinks so what you described is a non issue.",1423959061
9051255,comment,9043594,9049248,0,0,AlexeyBrin,,,"You don&#x27;t need to install MinGW or MSYS in order to use GCC (I assume you are interested only in C99 here and not in POSIX programming). Here is an example of a standalone GCC (contains C, C++ and Fortran compilers):<p><a href=""http://www.equation.com/servlet/equation.cmd?fa=fortran"" rel=""nofollow"">http://www.equation.com/servlet/equation.cmd?fa=fortran</a>",1423959058
9051254,comment,9050970,9051200,0,0,asergeyev,,,"Not supported in any of IE versions... <a href=""https://status.modern.ie/serversenteventseventsource?term=EventSource"" rel=""nofollow"">https://status.modern.ie/serversenteventseventsource?term=Ev...</a><p>And WebSockets is working since IE10\n<a href=""https://status.modern.ie/websocket?term=WebSocket"" rel=""nofollow"">https://status.modern.ie/websocket?term=WebSocket</a>",1423959040
9051253,story,,,2,0,benbreen,"Happy Lupercalia (2011)",http://resobscura.blogspot.com/2011/02/happy-lupercalia.html,,1423959037
9051252,comment,9050343,9051049,0,0,whocalledus,,,"After the first few reconsideration requests, I questioned whether they were truly read by a human. The time between request and response was often the same, but not always. Whether I wrote a descriptive formal reasoning for reconsideration, or simply &quot;You&#x27;re idiots.&quot;, I still received the same exact template message:<p>> Reconsideration request for <a href=""http://whocalled.us/"" rel=""nofollow"">http://whocalled.us/</a>: Site violates Google&#x27;s quality guidelines\n> February 14, 2015<p>> Google received a reconsideration request from a site owner for <a href=""http://whocalled.us/"" rel=""nofollow"">http://whocalled.us/</a>.<p>> We&#x27;ve reviewed your site and we believe that <a href=""http://whocalled.us/"" rel=""nofollow"">http://whocalled.us/</a> still violates our quality guidelines. These guidelines outline illicit practices which may lead Google to take action on a site in order to keep webspam out of search results. In order to preserve the quality of our search engine, pages from <a href=""http://whocalled.us/"" rel=""nofollow"">http://whocalled.us/</a> may not appear or may not rank as highly in Google&#x27;s search results, or may otherwise be considered to be less trustworthy than sites which follow the quality guidelines.<p>> Please correct or remove all content that is outside our quality guidelines. Keep in mind that simply deleting all of your site’s content and immediately requesting reconsideration will not lead to success. Instead we recommend that you spend considerable time and effort to make sure your site provides original, valuable content for users. In order to have a successful reconsideration request, you will need to show that your updated site contains content that does not violate our guidelines.<p>> For more specific information about the status of your site, visit the Manual Actions page in Webmaster Tools. From there, you may request reconsideration of your site again when you believe your site no longer violates the quality guidelines.",1423959013
9051251,comment,9049113,9051215,0,0,scintill76,,,"I wonder if &quot;0 seconds&quot; means it&#x27;s disabled, which would make sense for a consumer build.",1423958992
9051250,comment,9051041,9051224,0,0,Mithaldu,,,"I must admit i have not, and to make clear: I am not taking offense to their implication that Github is worse at some things than other tools (it is). My post above is merely objecting to the opinions that were borne out of some lack of knowledge (which is acceptable), yet are posited as facts (which is not).",1423958988
9051249,comment,9049218,9049902,0,0,keslag,,,"Absolutely, I should have specified &#x27;a single vm&#x27; in my response.  I didn&#x27;t understand that when I was first trying to understand boot2docker, and now I&#x27;m using imprecise language to help confuse others.  Thanks for clarifying.",1423958965
9051248,comment,9051041,9050793,0,0,falcolas,,,"Personal opinion here, but I much prefer merge commits as opposed to fast forwarded commits. With a merge commit, there&#x27;s one commit to revoke if something breaks, and there&#x27;s one commit per PR to step through with git bisect, and more importantly it maintains history, which to my eyes is more useful than a &quot;pretty&quot; repository.<p>Drafting comments... if you want to draft comments, can&#x27;t you do that in a separate editor? Better than relying on the browser as an editor.<p>I agree, though, the public repository requirement for making a PR is a bit awkward.",1423958942
9051247,story,,,1,0,zyngaro,"Memory Barriers",https://www.kernel.org/doc/Documentation/memory-barriers.txt,,1423958923
9051246,story,,,695,56,bane,"Now, I can see wifi signals",https://imgur.com/gallery/jdNA6,,1423958895
9051245,comment,9049630,9051158,0,0,mathgeek,,,"If network-bound apps are rare, then you believe that mobile apps and web apps are rare. Both are, combined, likely to make most other app types seem rare.",1423958872
9051244,story,,,2,0,reuven,"Chinese have their own Internet censorship song",http://www.marketplace.org/topics/world/final-note/chinese-have-their-own-internet-censorship-song,,1423958854
9051243,comment,9043524,9044952,0,0,hueving,,,"Did you even read the article? They got with other manufacturers and agreed to put an age limit on the bulbs. Anyone that violates the pact was fined by the others? That is exactly what a conspiracy is and is one of the reasons we have anti trust laws now.",1423958851
9051242,comment,9051041,9051211,0,0,Mithaldu,,,"I was hoping for more reasons, since the very first and simple one is usually the one that has the most and simplest workarounds. You could for example make a patch with git on your local machine and attach that to an issue.",1423958817
9051241,story,,,1,0,ndr,"Alcazar – A Sudoku without numbers",http://www.theincrediblecompany.com/alcazar-1/,,1423958816
9051240,comment,9050793,9050959,0,0,crawshaw,,,"That&#x27;s really nice of you to say. Thank you.",1423958813
9051239,comment,9050793,9051090,0,0,nutate,,,"That&#x27;s not a reasoned point then.",1423958802
9051238,comment,9050793,9051228,0,0,enneff,,,"This probably reveals more about you than anything else.",1423958791
9051237,comment,9049467,9051223,0,0,jonsterling,,,"There is a weak form of modularity which can be achieved by using two parts of haskell:<p>1. hiding constructors in files\n2. type classes<p>But it doesn&#x27;t really begin to approach the kind of structuring that is possible in an ML-like system. Unfortunately, the issue is very (needlessly) controversial, and I don&#x27;t think I want to get dragged into it here.<p>I&#x27;ll mention, though, that Haskell does have one form of modularity which ML doesn&#x27;t really, which is the fact that you can write algorithms separately, compose them together after the fact, and expect to get reasonable performance in most cases. This is because of two things: haskell is non-strict, and GHC has pretty good fusion. In ML, you often end up manually fusing things together in order to get good performance, so composition can be a bit more difficult.",1423958780
9051236,comment,9049467,9050935,0,0,wyager,,,">Keep in mind that writing something like this is not actually going to be perceived as helpful to most people who may have difficulty with Haskell<p>No, but hopefully it well help people who have yet to learn Haskell that not everyone thinks it&#x27;s particularly difficult. I&#x27;m not interested in convincing the people who&#x27;ve tried and given up on it.<p>>That&#x27;s great, but to people for whom they don&#x27;t come so easily, this could easily be considered discouraging, or else bragging.<p>So what do you propose? That I pretend it&#x27;s really hard for me, even though it&#x27;s not? What effect do you think that&#x27;s going to have?<p>>So unless you&#x27;re SPJ or beyond, I wouldn&#x27;t be quick to claim that Haskell isn&#x27;t &quot;unusually hard to learn.&quot;<p>You don&#x27;t have to be SPJ to learn Haskell (or talk about how hard it is). Do I have to be Stroustrup to pass judgement on how hard it is to learn C++?<p>>In particular people who are older and have &quot;work/life balance,&quot; ... and the life part of that work/life balance doesn&#x27;t allow much time to do so.<p>I obviously don&#x27;t mean that Haskell is easy for every single person in the world to learn; I mean that, as far as languages go, it&#x27;s relatively easy enough to learn. If I didn&#x27;t have enough time to learn Haskell, I also wouldn&#x27;t have enough time to learn C++ or Python.<p>> but just maybe don&#x27;t be so glib to claim it is not hard.<p>Again, what do you propose? Lie and tell people that it&#x27;s super hard, so I don&#x27;t hurt their feelings if they can&#x27;t figure it out?",1423958780
9051235,comment,9050379,9051141,0,0,harmonium1729,,,"Yeah - I think it&#x27;d take some serious chops to construct this from scratch (note: it wasn&#x27;t me! author: twitter.com/teachwithcode). But I&#x27;ve been having a blast deconstructing the equations.<p>Here&#x27;s a fun intermediate step (circles instead of hearts), with a few of the numbers parametrized as sliders:<p><a href=""https://www.desmos.com/calculator/irg4qa2s4h"" rel=""nofollow"">https://www.desmos.com/calculator/irg4qa2s4h</a><p>[disclaimer: I work at desmos]",1423958774
9051234,comment,9050970,9051195,0,0,asergeyev,,,"There is closed ticket (github.com/joewalnes/websocket) where we were battling this out, you&#x27;re always welcome to join with good ideas, that would be appreciated.",1423958714
9051233,comment,9050436,9051184,0,0,hyperion2010,,,"Fractional reserve systems mean that private banks can and actively do create money by lending.",1423958708
9051231,comment,9049113,9049406,0,0,nitrogen,,,"Start by learning about logic analyzers: <a href=""https://en.wikipedia.org/wiki/Logic_analyzer"" rel=""nofollow"">https://en.wikipedia.org/wiki/Logic_analyzer</a><p>You can get cheap (but slow) analyzers as open hardware, such as the Bus Pirate ( <a href=""https://en.wikipedia.org/wiki/Bus_Pirate"" rel=""nofollow"">https://en.wikipedia.org/wiki/Bus_Pirate</a> ).  Also check out the Saleae USB analyzers ( <a href=""https://www.saleae.com/"" rel=""nofollow"">https://www.saleae.com/</a> ).",1423958700
9051230,comment,9049698,9051068,0,0,pcwalton,,,"> That said, clang has lots of options to tame C&#x27;s undefined behaviour. Guess what, you can enable these too for C code generated by Nim.<p>They aren&#x27;t really designed for performance though. For example, `-fsanitize-undefined-trap-on-error -fsanitize=null` emits explicit comparisons against null for every pointer load instead of catching SEGV like (for example) Java or Go do.<p>From what you&#x27;re saying it sounds like maximum performance plus memory safety isn&#x27;t a design goal for Nim. That&#x27;s totally reasonable. It does mean that Nim and Rust have very different aims, however, and comparisons between the two need to take this into account.",1423958683
9051229,comment,9050480,9050928,0,0,GuiA,,,"GUI usability is one thing, GUI programming usability is another.",1423958682
9051227,comment,9050793,9051136,0,0,enneff,,,"> <i>The bigger one is why do I see about 600 reflect.</i> entries in the resulting ELF instead of a single one for the string type.*<p>There is definitely work that can be done to improve dead code elimination in the Go tool chain. The transition to Go will make this easier to achieve.<p>> <i>What I suspect I see here is a kind of C++ vtable problem built deep into the language design somewhere.</i><p>Don&#x27;t suspect. Dig into the problem and make some informed commentary. Idly speculating on HN is just spreading FUD, and benefits no-one.<p>You should read about Go&#x27;s implementation of interfaces. It&#x27;s not the same as C++&#x27;s vtable issue. <a href=""http://research.swtch.com/interfaces"" rel=""nofollow"">http://research.swtch.com/interfaces</a>",1423958629
9051226,comment,9042282,9046190,0,0,hueving,,,"Nope. The FDIC made sure they didn&#x27;t do the crap they did with depositor money. It&#x27;s the reason the FDIC insurance wasnt massively triggered during the crisis. The accounts that got screwed were investment accounts which were not insured by the FDIC.",1423958621
9051225,comment,9051041,9051220,0,0,Mithaldu,,,"That is great, and i thank you for bringing that to my, and everyone else&#x27;s attention! :)",1423958612
9051224,comment,9051041,9051125,0,0,CHY872,,,"Just out of curiosity, have you ever used a tool such as Gerrit or Atlassian Stash? There are different mindsets, and both have their advantages.",1423958603
9051223,comment,9049467,9051067,0,0,YAYERKA,,,">1. modularity (and now that they have added generative functors à la SML, you can have true abstraction)<p>Could you share some information regarding Haskell and it&#x27;s &#x27;modularity&#x27; problem (vs. the ML family of languages). I&#x27;m fond of the way SML projects can be structured.  How are people solving this using Haskell?  Are there any interesting solutions for creating modular Haskell application/system&#x27;s I can see today?<p>Thanks for your comment.",1423958596
9051222,comment,9051041,9051204,0,0,Mithaldu,,,"Your building strawmen does not help your credibility much, nor your attempt to convince me of your view. &quot;Revisions that never existed&quot; do exist, and if you put a rebase of a branch on master without verifying the rebase, then you may end up in a mess, but it&#x27;s your fault. Code review is a thing that is done for a reason.<p>Frankly, i find your style of argument through implication, and through trying to disregard something because it doesn&#x27;t fit your definition of truth to be much more condescending than anything i wrote before.",1423958522
9051221,comment,9049467,9050395,0,0,spyder81,,,"I&#x27;m the author, and to be honest I agree. I was still fairly new to OCaml (and ML in general) at the time, so I tried to focus on what I knew rather than rattle off a list of things I had heard were better but didn&#x27;t really understand.",1423958507
9051220,comment,9051041,9051125,0,0,justinmk,,,"> Don&#x27;t use the merge button, just add the requester&#x27;s repo as a remote to yours<p>Actually, you don&#x27;t need to do that. GitHub provides a special <i>pulls</i> remote &quot;namespace&quot; on the upstream repo, so you can add it as a fetch pattern to your .git/config like so:<p><pre><code>    [remote &quot;upstream&quot;]\n      url = https://github.com/neovim/neovim.git\n      fetch = +refs/heads/*:refs/remotes/upstream/*\n      fetch = +refs/pull/*/head:refs/pull/upstream/*\n</code></pre>\nThen when you `git fetch --all`, you will have ALL pull requests available in your local repo in the local pull/ namespace. To check out PR #42:<p><pre><code>    git checkout -b foo refs/pull/upstream/42</code></pre>",1423958496
9051219,story,,,1,0,hutt,"Pebble Firmware 2.9 was released",http://pbl.io/f,,1423958494
9051218,comment,9042282,9045763,0,0,EpicEng,,,"I&#x27;m also in the medical device industry, though we don&#x27;t farm our V&V work out.  The bugs are supposed to be caught in the verification phase; validation is all about making sure that the software is functioning correctly from a <i>user</i> perspective?  Are you just conflating the terms here for the sake of simplicity?",1423958452
9051217,comment,9050793,9051201,0,0,enneff,,,"I disagree with &quot;channels are slow&quot;. They may be faster than you think. Defers needn&#x27;t add as much overhead as they do today; this can be fixed.<p>I think it really depends on your definition of &quot;performance-critical&quot;. I agree Go isn&#x27;t suitable for <i>all</i> performance-critical tasks, but it covers a vast swathe of them quite comfortably.",1423958443
9051216,comment,9050343,9050894,0,0,whocalledus,,,"Exactly. But if you search a telephone number you should be given new information, not an empty page for you to fill out. Otherwise we end up with the situation we have now, where there&#x27;s endless empty pages in the search results.",1423958405
9051215,comment,9049113,9050526,0,0,Yetanfou,,,"Well, there is this line in the output:<p><pre><code>    Delaying boot for 0 seconds. Hit enter to break into the command prompt...\n</code></pre>\n...which gives at least the impression of there being a command prompt. As to how it would register a hit on that enter key remains to be seen, of course.",1423958403
