ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
80968,story,,,1,0,shayan,"Google offers API for Outlook migration to Gmail",http://www.infoworld.com/article/07/11/16/Google-migration_1.html,,1195322326
80967,story,,,1,1,shayan,"You can change who you are",http://www.ft.com/cms/s/0/12b6a7d4-94b1-11dc-9aaf-0000779fd2ac.html,,1195321317
80965,comment,80933,80933,0,0,stevei,,,"Pretty misleading title - the issue wasn't a C# memory leak, it was that these developers didn't remove old objects from an event subscriber list...\n",1195320226
80964,comment,80647,80819,0,0,imsteve,,,"Not everyone has a stable day job before they get into a startup. It's not in everyone's best interest to suffer through one for a few years first either.",1195320181
80963,comment,80951,80951,0,0,fauigerzigerk,,,"He's right for most situations, but some things cannot be tested. Concurrency comes to mind. If I'm told that a particular deadlock or inconsistency cannot occur, I prefer formal proof to a green light bulb on 100 test runs. The issue might only crop up at test run 9999999 using a particular cluster of particular CPUs.",1195319642
80962,comment,80719,80719,0,0,usurper,,,"ok looks like i got quite a few(in fact nearly all) things wrong there.. <p>@socmoth: ya i no the list aint accurate and highly pessimistic but was just tryin to get an idea of whos around and whos not.. and some sort of data to discuss wld be better than none at all so..<p>Once again no offense meant to any hus very much alive and kicking.. and i see that all those under my doubtfuls list are also very much alive.. heartening to know.\n the updated list looks thus:<p>Alive: Weebly, Virtualmin, Jamglue, Scribd, Pairwise, auctomatic(blog returns error but they'r brand new so..), Bountii(again no blog but new), draftmix(no blog), fuzzwich, anywhere.fm, Xobni, i'm in like with you, Justin.tv,Versionate, Octopart, Buxfer, adpinion, Socialmoth, Heysan.<p>well only the follwing companies remain in the dark now:\nThinkature(Dec 2006), Shoutfit(site doesnt even load!), Flagr(Dec 2006).<p>No1s commented on their status..",1195319615
80961,comment,80915,80915,0,0,mrtron,,,"To answer your question in the title...MVC is a good solution.  The way frameworks implement it also varies, but basically the idea is to setup a way to separate things into a few layers.  I have found MVC-based systems easiest to implement and modify because of this separation.<p>Caveat: My MVC experiences have been mostly with Java (Struts) and Python (Django) \nThen to get into your actual points:<p>1) The view CAN do the work of determining what will be shown.  To quote the Django site: ""In our interpretation of MVC, the ""view"" describes the data that gets presented to the user. It's not necessarily how the data looks, but which data is presented.""<p>2) Anything that is a common widget should be abstracted and included on the page in some sort of ""include"".  Either have some sort of base page that does the work, or on the individual pages do some method of ""include"".  This really doesn't relate to MVC, other than your point about adding the data to your context/session, which should again be done generically and non per-page.<p>3) The general idea for any MVC system is to have the flow go through one controller.  This controller may delegate to sub-controllers, but the idea is everything goes to one spot. <p>4) What is the best solution?  There are many good solutions for writing a web app.",1195319539
80960,comment,80915,80915,0,0,gregwebs,,,"Many people accept the MVC dogma as the word of god.  In truth, it is a design trade-off just like anything else.  You should really look at SeaSide or UncommonWeb.  In SeaSide the view and controller are combined into a component in the way you describe as intuitive.  In Rails best practice is  to create partials (partial views) that can be re-used across views, put code into the model instead of the controller, and use before_filter to trigger re-usable functions.",1195319388
80959,comment,80845,80845,0,0,nostrademons,,,"C for Dummies.",1195319141
80958,comment,80845,80845,0,0,mullr,,,"Data Binding in Windows Forms 2.0.  The book is terrible, but the API is worse, so...\n",1195319072
80957,comment,80909,80936,0,0,gruseom,,,"Oh, that's much better. Thanks. Funny that all my Googling only dredged up that barely legible photo.",1195318945
80956,comment,80915,80915,0,0,optimal,,,"I don't think the most tangible benefit of MVC is reuse, but rather code organization. In MVC, if you're looking for something, you know where to find it. That saves a lot of time. It's easy to write an application, but harder to maintain it.<p>Also, imagine an application with a Web view displaying a data set returned from a controller. Now the client/user wants an OS-native version of the app. That's simple, just build a native (OS-specific) window view and call the same controller for the data set (model). Or maybe an API is needed for external consumption. In that case a web service ""view"" can be built to return the same data set from the same controller. We're just swapping views here--it's plug-and-play.<p>It's a clear separation of responsibilities. I believe that used to be called ""modular"" programming. ;)\n",1195318944
80955,comment,80925,80925,0,0,rms,,,"$999 is way cheap for 23andme to be selling this, the microarrays cost $650 each before they are analyzed. As per a Techcrunch comment, I suspect they are subsidizing or selling below cost which will probably work out because of the rapidly falling costs in this area.",1195318802
