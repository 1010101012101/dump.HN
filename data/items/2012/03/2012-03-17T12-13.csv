ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
3716977,comment,3716458,3716904,2,0,brown9-2,,,"It doesn't say python is faster than C++, just that it's easier to write.",1331989186
3716976,comment,3716781,3716915,3,0,muuh-gnu,,,"> but they're in a brand new market on brand new devices.<p>But they still had no problem starting with an ecosystem with zero apps. Now they have hundreds of thousands.<p>> I still think the main difference is that you have to install Linux yourself.<p>Over the years, I've had several people, whom I talked into checking out Linux, give it up and go back to Windows because they refused to accept that they have to upgrade the whole distribution just to be able to install new versions of single apps. Did you ever try to explain a Windows user what a ""backport"" is, and whats it good for, and why there are none on Windows and why he can he can install whatever app and whatever version of an app he wants on Windows, but cant on Linux?<p>> Your average random laptop buyer who just spent $600 on a laptop from Staples would be able to use Linux perfectly well if that's what his laptop came with<p>For 6 months, then he wouldnt be able any more to update his apps.",1331989164
3716975,comment,3716606,3716606,1,0,pragmatic,,,"Cue comments about how obviously this problem could be avoided and this person is doing something wrong.<p>Never mind her explanation of how this happened and how it's a real problem and how real users (far less technical than the author) could run into problems.<p>This is a mess that happens with most companies that have been in business for a while (Microsoft, Google, Apple) and their various id schemes + services over time.<p>It's a real problem Apple could solve.",1331989144
3716974,story,,,1,0,robinwarren,"Actionable definition A Players and how to hire them",http://blog.jobstractor.com/2012/03/17/actionable-definition-of-an-a-player-and-one-tip-on-how-to-hire-them-via-mixergy-and-jeff-hyman/,,1331989122
3716973,comment,3716781,3716884,6,0,lubutu,,,"On the other hand, being able to install software so easily with package management is a huge benefit of distributions. Perhaps the solution is to create a new package management system for a desktop distribution. A system which ensures that when upgrading an application only its personal namespace (libraries etc) changes, while other applications remain untouched. Libraries are second-class citizens, almost. That way we get the benefits of packages and libraries, but each application is logically isolated from changes to any others.<p>I very much agree with the idea of a slow-moving core, though. That's how I've tended to use Debian: a stable foundation upon which I can install less stable higher-level software (the things I actually interact with). Of course, this doesn't address the distro fragmentation problem Ingo is talking about.",1331989116
3716972,comment,3716882,3716953,2,0,baq,,,"of course you can. the whole point is that you don't have to.",1331989104
3716971,comment,3716606,3716870,1,0,wazoox,,,"That's the way I solved this particular problem. No iTunes -> no account -> no problem. As I don't like what Apple products are becoming, I advise people to choose this solution. Haters (fanbois) gonna hate, etc.",1331989101
3716970,story,,,1,0,david0219,"HP Pavilion dv6-3091tx Battery",http://www.hp-batteries.com/index.php?main_page=index&cPath=147_529_303,,1331989076
3716969,comment,3715831,3716198,1,0,LukaD,,,"So why do it?
I have no idea why people do it. I'm just glad I'm not developing software for apple products.",1331989073
3716968,story,,,1,0,wturner,"Building an opportunity without a product",http://journal.wikiaudio.org/?p=1,,1331989024
3716967,comment,3716781,3716938,2,0,nknight,,,"> <i>Isn't creating one of those Windows installers also complicated?</i><p>Not for years now, no. The process for creating an .msi for a basic stand-alone app in Visual Studio is pretty simple and well-documented.",1331988889
3716966,comment,3716779,3716848,1,0,tikhonj,,,"The same is true with undefined. You should use void 0 rather than undefined because undefined is just a normal variable which happens to be undefined unless somebody defines it, while void 0 is always going to be undefined.",1331988880
3716965,comment,3716781,3716946,4,0,barrkel,,,"I use Linux every day; I haven't used desktop Linux much since a fairly unpleasant experience with the original Eee PC (701, in 2007).<p>But package management (I live with Debian apt-get and friends) is a bane of my life. Generally, the binaries that come when I install a package are too old, or don't have the right compile-time options configured, or there is some dependency missing that I don't have installed and is for some reason missing in the repository due to bitrot. It's usually more reliable to download the source, configure, build and install it the old-fashioned way. That also means fixing build errors, tracking down missing libraries, and generally a whole load of work I wouldn't trust an otherwise fairly competent software engineer to do, never mind the average user.",1331988875
3716964,story,,,1,0,bootload,"Mapping the Infrared Universe - The Entire WISE Sky",http://www.nasa.gov/mission_pages/WISE/multimedia/pia15481.html,,1331988856
3716963,comment,3716606,3716851,1,0,wazoox,,,"I don't know the details in and out as I don't use them. I care about privacy (no FB account) and openness (Free Software for ever). Apple is on a downward slope on both accounts.",1331988834
3716962,story,,,1,0,karterk,"A Lean Story for Eric Ries at SXSW: MedChart",http://droidmaker.blogspot.in/2012/03/lean-story-for-eric-ries-at-sxsw.html,,1331988795
3716960,story,,,1,0,morrissadd,"Stamped concrete chicago",http://www.sundekofillinois.com,"Decorative concrete contractor in Chicago IL? Sundek of Illinois (847) 392-3939 offers concrete overlays & concrete resurfacing for commercial & residential projects.",1331988790
3716959,comment,3704153,3706309,1,0,HerraBRE,,,"If I don't like the license you use, I don't.  Except when I have no choice, which has unfortunately often been the case due to natural monopolies or social pressure.  A decade ago, that problem was Microsoft.  Today it is becoming SaaS in the cloud (witness Facebook's natural monopoly on all things social).<p>Regarding devaluing developers by making the entire industry more efficient... you can't possibly believe that's bad for society.  You sound like <i>you feel entitled</i> to a big paycheck and government granted monopoly protection for your work (that is what Copyright and patents and the like are, artificial government granted monopolies).<p>I disagree with that sense of entitlement. And as a result, I do think your so called rights (privileges would be a better word) should be restricted a bit. :-) But I honestly don't think it will harm you. Without a complete paradigm shift in how code is created, programming will remain a highly sought after and highly valued skill for a very long time.  There are still so many unsolved problems out there, and people will pay to have them solved, no matter what the license and no matter what the legal environment.",1331988762
3716958,comment,3716267,3716751,1,0,aptwebapps,,,"For most taxpayers in the US state taxes make up a much smaller portion of their total tax burden than federal taxes. So, overall, the tax burden in Washington isn't so much more regressive than a state with income tax.<p>You can have luxury taxes, but it's hard to match income tax if your goal is to have a fairly progressive tax.",1331988726
3716957,comment,3716606,3716886,2,0,wazoox,,,"I first used iTunes on Mac OS 9. Since then it only grew bigger, slower, more cluttered (I don't care about iP* devices, I wouldn't use them at any price).<p>For years I've found it much too big and clunky for my taste. VOX is indeed fine.",1331988722
3716956,comment,3716458,3716458,3,0,gorset,,,"Performing the intersection of sorted lists is a well studied problem in information retrieval, so nothing new or surprising here...<p>The performance can be improved even further by for example using a compressed integer list with an embedded skip list or by using compressed bitmaps. Using sorted int32 lists is the naive solution :-)",1331988694
3716955,comment,3716882,3716943,3,0,cygx,,,"Not really - optimizers <i>are</i> smart enough to get the same performance out of runtime-generic C code using void* and function pointers; after all, it's a simple matter of type inference and constant propagation.<p>However, that's only true if you let them do their job, ie use link-time optimizations or code inclusion (which is where most of the template performance comes from).<p>Including the source of qsort() instead of linking against a DLL blob might be enough to make the C code perform as well as the C++ code.",1331988684
3716954,comment,3716781,3716922,2,0,bergie,,,"You still package and build an application separately for each distro version. And then the community tests it before it goes to the stable apps repo. So broken packages (either by packaging, or by app not functioning properly) are unlikely to pass QA.<p>So if your package conflicts with something, either fix that issue or don't release for that distro versio.",1331988677
3716953,comment,3716882,3716882,7,0,tikhonj,,,"Couldn't you replicate most of C++'s optimizations by hand in C? Because that's what I always took to be the real reason C is fast--not because pretty code is fast, but because you can make the code as ugly as you want (hello instrinsics!) to optimize it.<p>For example, couldn't you just inline the relevant code manually in C? Sure it would be ugly, but it would be fast. Besides, in an absolute sense pretty much any C or C++ code is going to be ugly; if you want pretty code and a compiler that valiantly tries to optimize it, use something like Haskell :P.",1331988638
3716952,comment,3716882,3716882,2,0,lzm,,,"How can one ""limit branching"", and ""optimize for the second level memory cache""?",1331988629
3716951,story,,,1,0,GreekOphion,"Hands on: Firefox 11 improves syncing",http://www.itworld.com/software/258804/hands-firefox-11-improves-syncing,,1331988579
3716950,comment,3716781,3716920,3,0,barrkel,,,"That's true to the degree that the implementation of those libraries does not require other things from the rest of the system. If they are just libraries of code, attached to nothing, sure.<p>But when they need integration with things beyond that? That's when it breaks down. That's when you need interfacing libraries that adapt one version of a library's interface to the next version, and very careful API and ABI design. I see that there's very little reason to take that approach for open source everywhere, but that kind of environment is essential for the stability commercial development needs.<p>Static libraries aren't the answer. A careful API and ABI interface to the core system, with managed compatibility from release to release, is needed. This is hard work; incredible amounts of effort went into making Windows 95 work as smoothly as it does, and some of the best war stories from Raymond Chen's blog date from this effort.<p>Things like preserving bugs in the moral equivalent of malloc to accommodate software that used memory after freeing it. This very concept - bug compatibility - is something that I see OSS community in general as being fairly hostile to, thinking that the software with the bug should be fixed, rather than making things work for the user. Of course the buggy software should be fixed; but making things work for the user is more important still.",1331988568
3716949,comment,3716882,3716882,1,0,livebeef,,,"This was also explained in the book ""Programming Pearls"".",1331988567
3716948,story,,,203,93,borism,"Sad but true: Napster '99 still smokes Spotify 2012",http://www.theregister.co.uk/2012/03/17/parker_fanning_on_napster/,,1331988538
3716947,comment,3716781,3716917,5,0,zmmz,,,"Is there a linux equivalent of PC-BSD[1]?:<p>_Programs under PC-BSD are completely self-contained and self-installing, in a graphical format. A PBI file also ships with all the files and libraries necessary for the installed program to function, eliminating much of the hardship of dealing with broken dependencies and system incompatibilities. _<p>[1]:<a href=""http://www.pcbsd.org/index.php?option=com_zoo&view=item&Itemid=86"" rel=""nofollow"">http://www.pcbsd.org/index.php?option=com_zoo&view=item&...</a>",1331988390
3716946,comment,3716781,3716925,4,0,_delirium,,,"The semi-standard commercial solution for widget toolkits, excluding old software tied to something legacy, is typically to use Qt, which has both LGPL and (reasonably priced) commercial license options. Audio isn't really a problem for statically linked apps not doing anything particularly strange; it works fine in anything I've tried. Even ancient audio APIs in ancient binaries are transparently emulated through something-or-other in a way that ""just works"".<p>If you haven't used Linux in ""many years"", that might be the source of your impressions. I remember mucking with that kind of stuff on Slackware in 1998, but I haven't touched OSS or ALSA or whatever in a decade; it just does its thing under the hood. Audio even works fine when I run Windows applications under Wine!",1331988369
3716945,story,,,9,1,shioyama,"How to Care for Introverts",http://approache.com/blog/how-to-care-for-introverts/,,1331988314
3716944,comment,3713514,3713514,0,0,pbhjpbhj,,,"No-one seems to be tying in DNS to all of this. That gives Google a signal aide from the link-graph and social that tells them which sites are being use and how often. Its power will increase vastly when IPv6 brings static IPs and Google then can say that you followed a specific link from your fridge and made no further DNS hits for 3 minutes, etc..",1331988288
3716943,comment,3716882,3716935,2,0,thedigitalengel,,,"The point is, unless you are using some macro magic in C, you'll almost always have to make such a compromise to get an abstracted out sort function.",1331988272
3716942,story,,,1,0,albont,"Seagate GoFlex Satellite reportedly getting firmware update on March 19th",http://www.engadget.com/2012/03/17/seagate-goflex-satellite-firmware-update/,,1331988212
3716941,story,,,1,0,miracucina,"TORTINE CAROTE E FINOCCHI",http://blog.giallozafferano.it/miracucina/tortine-carote-e-finocchi/,,1331988165
3716940,comment,3716458,3716590,5,0,gorset,,,"> a) How can you make standard-OOP-like method dispatch faster than vtables?<p>The JVM optimizes this by using (P)ICs, which are faster than regular vtables.<p><a href=""http://en.wikipedia.org/wiki/Inline_caching"" rel=""nofollow"">http://en.wikipedia.org/wiki/Inline_caching</a>",1331988148
3716939,comment,3716882,3716882,0,0,VMG,,,"Shouldn't he be using <i>getrusage()</i> instead of <i>gettimeofday()</i> in his timer code (<a href=""https://gist.github.com/2057981"" rel=""nofollow"">https://gist.github.com/2057981</a>)?",1331988091
3716938,comment,3716781,3716840,3,0,tikhonj,,,"Isn't creating one of those Windows installers also complicated? To me, it seems even <i>more</i> complicated than packaging software for Linux, yet it has never stopped anyone.",1331988089
3716937,comment,3716781,3716917,11,0,muuh-gnu,,,"> But what is the alternative to a non-distributions based gnu linux operating system?<p>A small core set of libraries that change _very_ slowly and arent intentionally obsoleted every few months. Think of Windows like slow, stable and supported for a decade. Distribution of apps decoupled from the distribution of the base. Never make an app update trigger a lib update.<p>> How do you manage the 1000 packages and their libraries and dependencies?<p>You dont do that at all. Developers to that themselves like they do on Windows and OSX. Every dev packages his own app and puts it either into the App store or distributes it himself. You manage only the libs and dont allow them to change fast or in an uncoordinated, chaotic way.<p>> What you're saying basically is that linux is failed.<p>From the point of a normal user, yes. For a normal user, it is not an option. Everybody I personally know who tried it, went back. The main reason for most of them was the insanity of application management. (And lack of hardware drivers and games, but thats not Linux' fault.)<p>> since I cant see another way to distribute and manage the massive amount of packages that sit on gnu.org.<p>Decouple libs and apps. Dont change APIs and lib versions every few months. Make the base a very reliable and slow moving target. Dont force anybody to change everything every few damn months.<p>> It is my opinion that the one who solves these problem is in for a lot of business-opportunities.<p>The problem is already solved, at least under Windows and OSX. Thats why Windows and OSX get all the desktop business and Linux gets none.",1331988083
3716936,comment,3716229,3716229,1,0,Donito,,,"It doesn't sound like you're looking for ""obfuscated"" code, which is what the links below show. But rather real code that's more complicated than slide examples.<p>I would look for random code people wrote, for example on github:<p><a href=""https://github.com/search?utf8=%E2%9C%93&q=sort&repo=&langOverride=&start_value=1&type=Code&language=Java"" rel=""nofollow"">https://github.com/search?utf8=%E2%9C%93&q=sort&repo...</a><p>And then just look at the code and try to understand how it works. This result for example seems to implement basic functions and is well commented:<p><a href=""https://github.com/erlide/erlide/blob/6b836bcb0770d23c4471f490bea50b9141d1909e/org.erlide.core/src/org/erlide/core/common/Util.java"" rel=""nofollow"">https://github.com/erlide/erlide/blob/6b836bcb0770d23c4471f4...</a><p>Hope this helps",1331988054
3716935,comment,3716882,3716882,6,0,udp,,,"Or rather, <i>""Sorting with std::sort: 3 times faster than qsort""</i>.",1331988040
3716934,comment,3716781,3716834,3,0,tikhonj,,,"I don't think the Gnome/Unity/KDE split is nearly as significant as people find it. You don't have to support them all! I use KDE, and programs written for Gnome fit right in. As far as I know, there is no reason at all to depend on some particular environment exclusively; even things like notifications work uniformly across different systems.",1331988019
3716933,comment,3716781,3716871,1,0,downx3,,,"App stores can suck too, think Blackberry.  You don't have to resort to the command line to install packages.  Synaptic just needs a little freshen up that's all.  I far prefer it to Ubuntu's software centre.  A load of crap icons and screenshots just feel like clutter, and don't tell me anything.",1331988008
3716932,story,,,1,0,audiencealive,"Voting System Service",http://www.satellite.ae/,"Satellite Visual Communication, Dubai, UAE is a leading presentation company with a focus on next-generation digital media services & solutions offering Professional Powerpoint Presentation Creation to Electronic Voting using Audience Response Systems.",1331987988
3716931,comment,3716781,3716781,3,0,richardk,,,"I've been happily using the stable branch of Debian for about 4 years now. Whilst I agree bureaucracy and politics should be avoided where possible, it seems to me that handing everything off to a 3rd party to focus on the ""core packages"" harms overall system performance.<p>Time and again I hear people in the lab complain about all these bugs in their applications, running Debian I can honestly say I don't have this problem. Ofcourse, I don't have the latest software either, but for me that's the price I pay for a stable system.",1331987952
3716930,comment,3716290,3716872,6,0,palish,,,"The simple answer is: the larger the eye, the more ""pixels"" (cells of the retina which respond to light energy). So larger eye == higher resolution.<p>The current theory regarding ""why is all that resolution necessary?"" is: there are tiny creatures swimming alongside the squid, which respond to a sperm whale's sonar by emitting a tiny amount of light. When the squid sees this light, it knows that a whale attack is imminent, and runs. (Well, jets.)<p>If the eyes were smaller then there wouldn't be enough resolution to make out the tiny dots of light emitted by those tiny creatures.<p>Another way of thinking about it is: the eye needed to evolve larger in proportion to how tiny the creature is. If the creatures were twice as big, then the eye would've evolved half as large as it currently is. (If the theory is true.)<p>Mathematically, there need to be enough retina cells such that ""1 tiny creature at distance D can be detected per degree of viewing angle"". E.g. if the squid has a 130deg field of view, and it needs to be able to see the creature light up within 1 foot of its eye, then it needs enough retina cells in order to scan the entire conic volume of the space between the eye point and ""1 foot in front of the eye point"". By the Nyquist frequency, that suggests there need to be at least two retina cells per ""tiny creature body length projected from a distance of 1 foot"". (The farther it is from the eye, the smaller its projection; and thus correspondingly more retina cells are required, which requires a physically larger eyeball. Note that as the eye gets larger, the field of view remains the same.)<p>To clarify: the squid isn't looking at the whale at all. Rather, the squid is looking at tiny sea creatures very close to its face that light up when hit by a whale's sonar. Thus they act as an early warning system for the squid.",1331987935
3716929,comment,3716781,3716832,8,0,HerraBRE,,,"I do this at <a href=""http://pagekite.net"" rel=""nofollow"">http://pagekite.net</a> - I build both RPMs and DEBs and host my own repos.  This works fine for the most part and is relatively easy for technical users to take advantage of.  It was a bit of work to get it working (and my packages arguably aren't good enough yet), but it's doable, even for a small shop like ours.<p>The problem is, this is horribly, horribly insecure.<p>If you add my repo to your sources.list, I can offer a ""security update"" to any app on your system, a binary which does anything I want.<p>Obviously, it would be signed by me and could be traced back to me, and I would never do that ... but it would still be a really bad idea to go around adding repos to keep up with the latest GNOME FartButton Free.  Add 1000 repos, and the odds of a successful hack or a stupid packaging mistake breaking your system go up by at least that much.",1331987923
3716928,comment,3715831,3715831,1,0,Shank,,,"I love the complaint about data. Oh, the app is trying to conserve battery, but the explanation isn't explicit enough so we'll count that as a flaw.",1331987881
3716927,comment,3716781,3716841,7,0,tikhonj,,,"Even more proprietary software that doesn't make it to Linux is written by people who don't seem to care about the end-user experience. I've spent enough time battling horrible programs on both OS X and various versions of Windows to know that this isn't unique to open source software.<p>Of course, on the proprietary platforms, the <i>core</i> programs--browsers, office, media...etc are all good. But that is true of Linux programs as well. And open source projects--even ones that are not terribly responsive--are still <i>more</i> responsive than most proprietary programs.",1331987766
3716926,comment,3716781,3716892,4,0,downx3,,,"Some of the bloat could be dealt with by the file system.  If you download a library you already have, then simply discard it - and make do with a reference.<p>What I'd like to see, is the possibility of having multiple versions of software and libraries residing on the OS with ease.<p>I think these problems are surmountable.",1331987755
3716925,comment,3716781,3716910,2,0,barrkel,,,"Sure you can statically link binaries, so long as you have a license for all those libraries, or if you write your own UI etc. from the ground up not much removed from the X protocol. And when UI refreshes come around, your UI will look frozen in time in a way that UIs using standard controls don't in Windows.<p>And how about those libraries that control shared resources? For example, sound output. It's been many years since I bothered to try and use Linux as a desktop OS, but I recall wholesale choices of sound subsystems, with options for one subsystem to emulate another, etc. How well would that mess work with static linking? And these are only the most basic of shared resources; not thinking about file/app association, icon display in file managers, and other really really basic OS services that have seen repeated whole reinvention in Linux.<p>IME Linux is unusable beyond the command-line, preferably via ssh.",1331987672
3716924,comment,3715816,3715816,2,0,Estragon,,,"Slightly OT: I'd be really interested to hear a list of specific advantages to using R over using scipy.  I have been holding off on learning R for years because scipy has served my purposes pretty well so far, but sometimes I wonder what I'm missing.",1331987627
3716923,comment,3716683,3716683,2,0,ryanbraganza,,,"The demo (just above the comments) in the jQuery docs is helpful.<p><a href=""http://api.jquery.com/mouseenter/"" rel=""nofollow"">http://api.jquery.com/mouseenter/</a>",1331987614
3716922,comment,3716781,3716913,2,0,DrCatbox,,,"You would still need to maintain and manage the core distro. The packages in their would update and break the systme, you'd have lvm issues and what not.<p>Any way, care to give links to more on maeom/meegos architecture?",1331987591
3716921,comment,3714269,3715391,2,0,Tycho,,,"But it doesn't own Foxconn. There's just as much reason for them to meddle in Foxconn's business as there is to meddle in any other point of the supply chain which they don't control (eg. the mining of the metals used in their products, the transportation of all raw materials, etc.).",1331987565
3716920,comment,3716781,3716912,3,0,icebraining,,,"That has nothing to do with sandboxing: it's a matter of distributing the libraries with the package itself, either as .so files or as a big statically compiled binary, and using those instead. Nothing forces the developer to use the distro provided libraries.<p>And frankly, I think this is one of the things where you can't please everyone; personally, I rather have dependencies and know that a security fix in a  library will fix all applications that use it than having to hope each developer releases an updated version, like on Windows.",1331987549
3716919,comment,3715890,3716419,2,0,ChrisLTD,,,"I'm seriously considering getting one of those high DPI MacBook Airs now.",1331987506
3716918,comment,3716781,3716895,4,0,tikhonj,,,"A program that works in KDE will work in Gnome and Unity and Xfce, so that divide is not strictly relevant. In KDE, at the very least, even GTk programs look very good. And, moreover, those programs would also work on Windows and OS X.",1331987491
3716917,comment,3716781,3716884,3,0,DrCatbox,,,"But what is the alternative to a non-distributions based gnu linux operating system?<p>How do you manage the 1000 packages and their libraries and dependencies? Many of them have separate runtimes which may or may not depend on the other packages runtime. How would you design an application sandbox to cover them all?<p>What you're saying basically is that linux is failed. At least for me, since I cant see another way to distribute and manage the massive amount of packages that sit on gnu.org.<p>I agree with you, and It is my opinion that the one who solves these problem is in for a lot of business-opportunities.",1331987463
3716916,story,,,2,0,ekpyrotic,"The Trouble with Politics: Tony Judt",http://www.nybooks.com/articles/archives/2010/apr/29/ill-fares-the-land/?pagination=false,,1331987339
3716915,comment,3716781,3716899,6,0,tikhonj,,,"Yeah, but they're in a brand new market on brand new devices. People who already have a proprietary PC OS aren't going to switch to Linux out of the blue, but they are going to buy a shiny smart phone.<p>So the two situations are really not comparable. I still think the main difference is that you have to install Linux yourself. It's not even that installing is <i>difficult</i>--it isn't!--it's that normal people don't even realize it's an option. Your average random laptop buyer who just spent $600 on a laptop from Staples would be able to use Linux perfectly well if that's what his laptop came with--I suspect some wouldn't even realize it wasn't just a different version of Windows. But since his laptop invariably came with Windows, that's what he's going to use, not for any reason but inertia.",1331987300
3716914,comment,3716104,3716392,2,0,praxeologist,,,"That's what I want and I don't really understand why I would want to give access to ADB or whatever.. I've used linux just enough to have a feel for what sudo is, but don't have a feel for how Android works.<p>I put CM7 on a Nook Color before but just got my first smartphone 2 days ago. I never updated the CM on my Nook because it seemed like a pain but plan to try to do more on the phone since I will be using it more.",1331987270
3716913,comment,3716781,3716781,16,0,bergie,,,"The solution for this is quite simple: split the distro to a core, and a separate 'apps' repository, and let app authors control (but with a mandatory QA step) when their software gets released or updated. We did this with Maemo (and later MeeGo), and it has worked great:
<a href=""http://bergie.iki.fi/blog/application_quality_assurance_in_linux_distributions/"" rel=""nofollow"">http://bergie.iki.fi/blog/application_quality_assurance_in_l...</a><p>Cross-distro app repositories are also a possibility, thanks to the Open Build Service (<a href=""http://openbuildservice.org"" rel=""nofollow"">http://openbuildservice.org</a>). And since MeeGo's community apps service is open source (<a href=""https://github.com/nemein/com_meego_packages"" rel=""nofollow"">https://github.com/nemein/com_meego_packages</a>), all software needed for this (including an app store client app) already exists.<p>What is needed is a major distribution to make the first move on this.",1331987227
3716912,comment,3716781,3716893,5,0,barrkel,,,"State is the big evil in software. Minimize shared state, and many, many problems go away.<p>Centralized package management with a web of specific versioned dependencies is a huge hairball of state as it is. And when installed applications poke around inside your system, it only takes one or two oversights here and there to mess up this state.<p>Sandboxing, where feasible, minimizes shared state; usually at the cost of other things, but with modern software and modern resource constraints, our ability to deal with complexity is usually the tightest constraint. Sandboxing reduces the probability that things will break horribly (e.g. installing one app, and finding you need to install a new version of a library, which in turn means you need to reinstall 100+ more apps, which may bring in a new desktop or some other abomination).",1331987134
3716911,comment,3716781,3716892,1,0,icebraining,,,"<i>This is all compounded by the fact that there is no app bundle.</i><p>A ""collection"" type for installing multiple packages transparently would be nice, but I have to point out that nothing prevents you from doing the exact same thing that you do on Mac OS X, which is to distribute the .so libraries in the same package as the application, or even compile it statically.",1331987124
3716910,comment,3716781,3716894,6,0,_delirium,,,"You can statically link binaries and distribute those, which companies do when there's enough of a market to bother. That's how Matlab is distributed, for example. I think the bigger problem is that there usually isn't enough of a market; AutoCAD was discontinued on Unix because too many shops were retiring their Unix workstations in favor of Windows desktops, not because Unix software distribution was too hard.",1331987124
3716909,comment,3715831,3716285,3,0,mcherm,,,"Some outside forces are arbitrary, capricious, and driven significantly by greed (as demonstrated in this article). Others are not.",1331987063
3716908,comment,3716781,3716781,2,0,VMG,,,"Maybe Android will conquer the desktop then?<p>All it needs is mouse and keyboard support in the interface and higher-resolution apps, which will come for tablets anyway.",1331987038
3716907,comment,3716856,3716856,1,0,gghh,,,"Is it just a trick to get immunity (italian here, I know something about that)? Or is it substantial? I guess only time will tell. But knowing the man, I'd trust him. And anyway, the surprise-sex thing was a joke since the beginning. Immunity would just be justice.",1331987027
3716906,story,,,1,0,couponcircles,"NHL Discount Coupons",http://www.couponcircle.com/discount-coupons/NHL,,1331987025
3716905,comment,3716781,3716892,2,0,tikhonj,,,"Maybe the experience is different on other systems, but on Fedora with KDE there already is <i>no</i> friction to installing random stuff. If I want to install, say, Google Chrome, which is not in the normal repositories, all I have to do is download the package and open it. A nice GUI program then takes care of the rest for me automatically; the main differences from installing a program on Windows is that it then updates automatically and I have to enter my password.<p>So really, there is <i>less</i> friction than on OS X--I don't have to drag anything anywhere! In fact, on Firefox, I just download the package and it figures out to open it with the right program automatically. And then it just works.<p>Of course, if a program is in the repositories it's even easier, but that's a different story...",1331986998
3716904,comment,3716458,3716458,2,0,dhruvbird,,,"Is this guy serious or joking?<p>""Have you ever used the STL? I did for about 6 months professionally, and I'm glad that I could go back to C and Python. More seriously, object orientation in C++ doesn't come for free. Aside from the pain of the syntax of using C++ templates (and difficult to parse error messages), all of that object orientation hides the complexity of method dispatch in what are known as vtables.""<p>Seriously?<p>1. Python is faster than C++?<p>2. All OO features (method invocations) in C++ use the vtable?<p>IMHO, just using the right iterator abstraction and using the STL algorithms should be within performance limits.",1331986996
3716903,comment,3716779,3716866,3,0,ghusbands,,,"While you're entirely correct that results can differ between browers, many of the links are to jsperf, which compensates for test-run variance and shows a comparative graph of all results; some of those graphs demonstrate the opposite of what the linking slides say.<p>For an example, they link to <a href=""http://jsperf.com/undefined-void0-perf"" rel=""nofollow"">http://jsperf.com/undefined-void0-perf</a> to show that using void 0 instead of undefined is not a performance win. The data shows there's no browser in which void 0 is slower than undefined and several browsers in which is it faster, by as much as 50-60%.",1331986979
3716902,comment,3716781,3716852,3,0,Shank,,,"It'd be a lot more popular if it was as easy as the Android apk export wizard.<p>My 2c: Improve the tools and the developers will follow.",1331986951
3716901,comment,3715831,3716632,1,0,oemera,,,"You gain the trust of users to the platform. If I don't want to give out my data I should be able to do just that and this argument is really huge from user perspective. Apple says if you are using GPS coordinates please tell and show the user that you do so.<p>There are a lot of people who don't know anything about IT and Software like my sister. She just doesn't care about such stuff. So she doesn't know who is using GPS and who is not. Hell, she even doesn't know what GPS signals really are. And she only wants to know: a) are you using my data, ask me first so I can say I want it or I don't want it _and_ b) if you are using my data, show and visualize that you are using it cause otherwise it might be that I don't know it.<p>I'm certain that this rules can help gain quality and help people to get an understanding for the device and what is going on _without_ having IT background.",1331986891
3716900,story,,,1,0,wernalroy,"Well Experienced Lawyer at Westchester",http://scutierilaw.com/,"Our well established legal firm provides professional lawyers for all your legal issues. We have more than thirty years of legal experience working throughout Westchester County. Our attorneys have a high level of experience in real estate, business and family law. To know more details please have a look on our website.",1331986885
3716899,comment,3716781,3716821,6,0,muuh-gnu,,,"> The main reason why OSX/iOS, Android, and Windows attract more commercial developers is because those platforms have a much greater installed base!<p>A few years ago, Linux had a bigger installed base than both iOS and Android. Both of them outran linux with ease.",1331986838
3716898,story,,,1,0,mdesantis,"0 A.D. is on Pledgie (and cannot be on Kickstarter)",http://pledgie.com/campaigns/16218,,1331986689
3716897,comment,3711628,3711628,1,0,rmah,,,"For me, the money quote in the article was ""It's a change for Apple, which was once criticized for its micromanaging of the App Store. Now the problem is not too much control, but too little.""",1331986689
3716896,story,,,1,0,ajaykr,"Leh Ladakh Tourism",http://www.lehladakhtourindia.com/,"Leh Ladakh Tourism",1331986682
3716895,comment,3716781,3716781,1,0,yaix,,,"Good point. But most of these apps are written, because they can make money for the author. There just isn't a large enough user base in Desktop Linux to make that money, and hence much less people willing to invest the time to write apps. And the much smaller userbase is split up between Gnome and KDE and now Unity and Xfce and so on. So there is even less incentive to write apps.",1331986523
3716894,comment,3716781,3716821,7,0,barrkel,,,"Another reason is commitment to binary compatibility of a set of components over a time scale of 10 years or more. Linux has historically been relatively unstable, with an ideological focus on source rather than binary compatibility; and fragmented into different distros, which may have different ideas about which versions, configurations etc. of components are pieced together.<p>That's a perfectly understandable focus - even laudable, if you take the GNU line - but it makes it hard to release reliable, tested binary software. The landscape has too many variables.<p>I think this is a significantly bigger problem than install base. And I think it would be addressed with an appropriate focus on exactly the problem Ingo is pointing out: the lack of a defined, high quality core that can be relied upon.",1331986473
3716893,comment,3716781,3716877,1,0,icebraining,,,"I agree that having to make and sudo install is essentially impossible for a common PC user, but how does the sandboxing have any impact in user adoption?",1331986348
3716892,comment,3716781,3716832,12,0,Aqueous,,,"What you think is easy is actually not easy. Any time you've added one, two, three more steps to a problem after clicking the link in the browser you've already lost. Adding repositories? Already too late. Touching the command line? Sorry, as much as we love it, for most users it's already too late. Going into Aptitude or Synaptic and pasting in the repository URL? Yep. Too late.<p>This is all compounded by the fact that there is no app bundle. Mac OS X has the bundle and a terrific way to install it: Drag and drop it into the Applications folder, just like we did in the days of the Mac Classic and MacPaint. It hasn't changed. (Well, it did for a while, but thankfully they went back.)<p>If you say, ""Well, that means you end up installing 5 different versions of the same library on the same system"" - Who cares? Disk space isn't a priority any more, and from a developer standpoint it makes a lot more sense to target a dependency whose version number I know, instead of a dependency whose version only the package maintainers know for sure. I don't want to be forced to target v1.3 of a library if it's only been tested (by me) on v1.2. It makes for much better application stability for the developer to be in control of dependencies and not these package maintainers.<p>I want to ship a self-contained bundle of awesomeness,  not a dysfunctional shard among ten thousand other shards.",1331986258
3716891,story,,,3,0,mquaes,"How to square numbers closer to 50 in just 3 seconds",http://mathema-tricks.blogspot.com/2012/03/squaring-numbers-from-30-70.html#links,,1331986248
3716890,story,,,1,0,ayushhgoyal,"How to install LibreOffice (3.4.5 and 3.5.0) on Linux (Fedora, RHEL, CentOS)  ",http://www.linuxstall.com/how-to-install-libreoffice-3-4-5-and-3-5-0-on-linux-fedora-rhel-centos/,,1331986210
3716889,story,,,1,0,bootload,"Zombie followers and fake re-tweets",http://www.economist.com/node/21550333,,1331986146
3716888,comment,3716064,3716064,4,0,mbostock,,,"Nice; animated transitions are great for maintaining continuity when data is changing. Handling changes in the y-scale can be another source of distraction, so it's nice if you're able to fix the domain (as [0,1] in your example).<p>In January, I wrote a tutorial on how to implement this sort of real-time graph in D3.js, using transform transitions. (Don't get distracted by the top example; it's intentionally wonky.)<p><a href=""http://bost.ocks.org/mike/path/"" rel=""nofollow"">http://bost.ocks.org/mike/path/</a>",1331986060
3716887,comment,3715715,3716340,2,0,apinstein,,,"We switched from tracker to Planbox about 6 months ago and have been thrilled. Same general model as tracker with better execution. It's a young product so there are still some issues but it's clearly heading in the right direction. They also have an import from tracker so it's painless to try out.",1331986045
3716886,comment,3716606,3716824,1,0,hackermom,,,"Btw., I can't stop thinking about your comment regarding iTunes, ""stopped being vaguely usable around 10.4"". I don't mean to pick an argument, but I really wonder what you mean by that. As far as playing music it is just as good (meaning perfectly fine) now as it was back in 10.3 when I began using OS X.<p>iTunes sure has grown since, and does a lot more than playing music today, but it <i>still</i> plays music painlessly, just as it did 7 years ago.<p>And then there's always Vox: <a href=""http://voxapp.didgeroo.com/"" rel=""nofollow"">http://voxapp.didgeroo.com/</a>",1331986041
3716885,comment,3711603,3713545,1,0,Create,,,"nonsense.<p><i>1989 people in several parts of central Europe rose up for freedom--courageously</i><p>there was no need to rise up in central Europe: the regime collapsed by itself, primarily for financial reasons. The countries were surveyed by the West years before, and given IMF loans. The rest in 89 was literally a show, albeit not in theatres but on screens. the regimes just morphed, like now in China.",1331986012
3716884,comment,3716781,3716781,58,0,muuh-gnu,,,"The reason I stopped recommending Linux to ""normal users"" is _because_ of the concept of distributions.<p>Coupling the updates of single apps with the updates of the whole desktop or framework and libs, is just plain wrong. Having to upgrade the whole distro (including all the other installed apps you dont want to upgrade) just to install a new version of one single app you _want_ to update is a nightmare. Total bullshit. Users. Dont. Want. That. Users dont want one update to trigger another update, or even to trigger the upgrade of the whole desktop.<p>The blog post by ESR is one prominent example: <a href=""http://esr.ibiblio.org/?p=3822"" rel=""nofollow"">http://esr.ibiblio.org/?p=3822</a><p>He basically wanted to upgrade just one (obscure) app, and the process triggered the automatic removal of Gnome2 and installation of Unity. Just _IMAGINE_ how nightmarish this must look for normal users. You simply dont remove somebodys installed desktop sneakily from under their feet. You simply dont. That feels like the total loss of control over your computer.<p>I personally had, during the last 10 years, people go from Linux (which I talked them into trying) back to windows, _precisely_ of this reason, of having to upgrade the whole distribution every few months just to be able to get new app versions. They dont have to put up with this insane bullshit on Windows, why should they put up with it on Linux?<p>This ""distribution"" bullshit is not what is killing desktop Linux, it is what _already_ killed desktop Linux.<p>The other reasons why desktop Linux never made it (no games, no preinstallations on hardware) are imho just consequences of the distribution concept and the 6-month planned-obsolescence cycle. Nobody wants to bother with something which will be obsolete half a year down the road. Nobody wants to develop for a target that moves _that_ fast.<p>Windows installations, once installed or preinstalled, run for a decade. Develop something, and it will run on a 10 yr old Windows your grandparents use. Most people encounter new Windows installations only when they buy a new computer. PC manufacturers know that customers will hate it when their new computer OS is obsolete within half a year and that they wont be able to install new apps, so they dont preinstall Linux, it's as simple as that.<p>If anybody _ever_ really wants to see Linux succeed on the desktop (before the desktop concept itself is gone), he will have to give up on the distribution concept first.",1331985867
3716883,comment,3716606,3716824,1,0,damptrousers,,,"You don't want any accounts, you don't have any accounts. Why are you even commenting on the article? The problem has nothing to do with you. What next, tell us how you haven no tv?",1331985809
3716882,story,,,21,42,radiospiel,"Sorting in C++: 3 times faster than C",http://radiospiel.org/sorting-in-c-3-times-faster-than-c,,1331985798
3716881,comment,3716781,3716781,6,0,icebraining,,,"So, how does the fact that any person or company can host their own packages or even full repositories that can be added <i>with a single click</i> and are not dependent on hierarchical organizations fit in that?<p>GNU/Linux distros, at least APT based ones, are perfectly distributed if the person wants to.<p> If you have apt-url installed, which Ubuntu has <i>by default</i>",1331985789
3716880,story,,,1,0,11000mail,"Export Email From Google Mail to Outlook",http://endia.info/export-email-from-google-mail-to-outlook/,,1331985770
3716879,comment,3716458,3716458,5,0,radiospiel,,,"I actually like both this and the ""1000 fold performance improvement"" articles. There is a problem, and then there is a solution, which works, and is faster in a spectacular way.<p>However, both articles mention that a C++/STL solution would bring in a vtable runtime penalty. This is just not true - quite the opposite: using C functions a la qsort(3) require you to explicitely pass in a pointer to the comparison function. Now: this is the vtable approach, but in plain sight. A C++ version would quite likely not call any functions via pointers.<p>I prepared a small test which shows that in simple cases C++ can actually be faster than C by a factor of up to 3: <a href=""http://radiospiel.org/sorting-in-c-3-times-faster-than-c"" rel=""nofollow"">http://radiospiel.org/sorting-in-c-3-times-faster-than-c</a>",1331985678
3716878,story,,,7,1,ytNumbers,"Pirate Party Likely to Win Seats in Parliament This Month in Germany","http://www.spiegel.de/international/germany/0,1518,821093,00.html",,1331985629
