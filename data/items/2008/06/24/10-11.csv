ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
226069,comment,225764,225995,0,0,mleonhard,,,"string.join(ary, ', ')  # python - ok: join ary with a str<p>The parameters to Python's join function are in a better order than Perl's.  This is expected since Perl perverts the concept of function arity.<p>Also, twisted is not an example of the best Python code.",1214305107
226068,comment,225254,225254,0,0,jjguy,,,"University of Washington in Seattle\nUniversity of Maryland in DC\nUniversity of Texas in Austin<p>3 top-tier programs at public schools.",1214305069
226067,story,,,22,25,bootload,"Innovation, Or the Complete Lack Thereof, In the Start-up Community",http://kurt.karmalab.org/articles/2008/06/24/innovation-or-the-complete-lack-thereof-in-the-start-up-community,,1214304664
226066,comment,225759,225759,0,0,wallflower,,,"C'mon Amazon, we could use an official S3/EC2 status twitter broadcast account. @ComcastCares why not Amazon?",1214304082
226065,comment,224520,224520,0,0,logic_fiend,,,"I'm currently in my last year of computer science. This will be my second degree, the first being a B.A. in Philosophy. I definitely think that your on the right track with the comp.sci./math double major. However, like you, I find the comp.sci courses easy and, for the most part, really uninteresting. Not that the info. isn't useful, it has mostly to do with having to sit through lectures where the professors have been teaching the same courses for years now and are utterly bored with the material as well. Unfortunately, a degree seems to be the main currency with employers, despite the fact I don't think that a comp.sci. degree adequately prepares you for becoming a competent programmer.<p>Ultimately, I would recommend sticking with your program but pursuing your own programming and mathematical interests on the side (if you have time) in order to sustain and augment your enthusiasm for your future profession.<p>Best of luck.",1214303819
226064,comment,225589,226062,0,0,wallflower,,,"For those of you trying bomomo.com through the iPhone, it is intriguing - it looks <i>like</i> a flash-based application (albeit non-interactive).<p>If only Apple were to create some hook for WebKit/Sproutcore that allowed iPhone web applications to do something with finger touches (this is difficult because of the pinch gestures require mouse/t-pad tracking - but maybe they can have a JS API hook to toggle/disable pinching for webapps)",1214303232
226063,story,,,1,0,vineet21,"Personalized Experiences Make Online Shoppers Loyal ",http://internetrack.blogspot.com/2008/06/personalized-experiences-make-online.html,"""Consumers both want and expect online merchants to provide personalized experiences and product recommendations based on shopping behavior.""",1214302136
226062,comment,225589,226042,0,0,mattmaroon,,,"iPhone is some tiny fraction of a percent of the overall market, and I'd be surprised if it ever gets to 1%. I'd be more surprised if it does so without flash support.<p>Flash works fine on OSX in my experience. A good portion of our startup depends on it, and my cofounders code on Macbooks.",1214302058
226061,comment,225577,225577,0,0,ralph,,,"Kernighan and Plauger's _The Elements of Programming Style_ covers exactly this ground, showing in turn poor code and how it could be better.  They use real-life bits of code they come across, not artificial constructions.  Kernighan and Pike's later _The Practice of Programming_ also partially covers this.  Both are must-reads.  <a href=""http://troff.org/pubs.html#style"" rel=""nofollow"">http://troff.org/pubs.html#style</a> and <a href=""http://troff.org/pubs.html#tpop"" rel=""nofollow"">http://troff.org/pubs.html#tpop</a>",1214302045
226060,comment,225756,225756,0,0,fizx,,,"Generally, we use GP to make optimizations in exponentially sized search spaces.  Lets say you're searching in a 60-dimensional space.  If every dimension you add doubles your space, 10 years of Moore's law gets you a ~65-dimensional space.<p>It's useful to keep in mind that given an entire universe's worth of entropy and a few billion years, the best (apparently) nature could come up with is us.<p>That said, I do have a few fun ideas:<p>1. Evolve a simple natural langague date parsing library (e.g. GNU getdate, but smarter and able to handle noise) over an approximate regex library like agrep.  Can you create a regex equivalent to an autoencoder?<p>2. Create a database of abstract syntax tree chunks from every OSS project you can find on the web.  Try to learn a system that would dump chunks of code into your IDE when you hit a hot key.  For example, you could write a method that takes an integer argument, and perhaps it would insert a for loop counting to n.  A more intelligent system could take into account instance variables, available methods, etc.  Think of it as an extension of statistical natural language methods; like SCIgen (the fake CS paper generator).",1214301982
226059,comment,225871,225871,0,0,chrisbroadfoot,,,"This is pretty big news. I wonder whether other states will follow?<p>Also, there is mention that Google might host some of the e-mail in Australia itself (I have the feeling the local govt would push for this.)",1214301979
