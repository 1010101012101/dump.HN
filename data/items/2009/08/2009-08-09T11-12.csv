ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
750680,comment,749724,749724,0,0,gtuhl,,,"Thought I was add that the PostgreSQL documentation is really, really good for learning.  It is a bit dense but overall very well written, includes nontrivial examples, and you can really get a solid dive into a topic reading it.<p>The current 8.3 documentation is here:
<a href=""http://www.postgresql.org/docs/8.3/static/"" rel=""nofollow"">http://www.postgresql.org/docs/8.3/static/</a><p>I especially enjoy the sections on indexes:
<a href=""http://www.postgresql.org/docs/8.3/static/indexes.html"" rel=""nofollow"">http://www.postgresql.org/docs/8.3/static/indexes.html</a>",1249819150
750679,comment,750608,750670,0,0,TomOfTTB,,,"I'm not sure I see why this would be hard.  I'd say the law could look something like this...<p>""Companies who create computing environments that are not open to all applications must clearly define the acceptance criteria for developers wishing to create applications for those environments""<p>I guess there will always be some ambiguity (What's ""clearly "" for example) but anything is an improvement over what we have now.",1249819024
750678,comment,750608,750668,0,0,apsurd,,,"Morally: yes.
Good business: yes.
Legislated: why?<p>I bring up Capitalism because this is about business.
All of your points are rock-solid data points of why NOT to do business with Apple's App store. Yet developers insist.<p>I am going start a company that manufactures pagers. Is this a bad business decision? Maybe ... Is it my choice ... yes...<p>Of course there's a difference. Your point is about retroactively pulling the plug for no disclosed reason. I get that - but again <i>all the more reason that its a bad business decision</i>.",1249819019
750677,comment,750604,750604,0,0,easyfrag,,,"I always keep paper around me to jot down ideas, sketches of interfaces, uml, whatever. The problem for me is retaining the content of the paper for later use, and being able to find it.<p>I tried a OneNote on a tablet PC for a while but having to wake/boot a sketchpad before capturing your thought just doesn't flow. I also tried OneNote (great program) on my main machine but the mouse and keyboard just isn't conducive to sketching.<p>What do you guys do?",1249818966
750676,comment,693786,693971,0,0,frednerk,,,"I've given this a few weeks' thought -- and I still think it's absolutely bonkers that a team of highly skilled BBC developers have spent more than two years building... a JavaScript library!<p>Long, rambling response below.<p>The Glow library is well designed, but why on earth did the Glow developers want to reinvent the wheel? The reason they give -- to support old browsers not covered by existing libraries -- just doesn't make sense.<p>They didn't want to fork jQuery, but they're happy to build and maintain an entire framework instead?<p>Why not a BBC operating system and browser while we're at it?<p>Glow's ultra-niche-browser-support argument is specious. The BBC has far more pressing accessibility needs than JavaScript support for Safari 2 -- which is what the Glow team cite. According to <a href=""http://marketshare.hitslink.com"" rel=""nofollow"">http://marketshare.hitslink.com</a>, Internet Explorer 5.0 market share is around 0.04% -- which Glow only gives partial ('level 2') support to -- and Safari 2 share doesn't even rate in the top 40 browsers, i.e. Safari share is below 0.03%.  In fact, it looks like other frameworks already have better browser and platform coverage anyway: the best Glow can offer is that ""our support table is actually closer to other libraries' than it has ever been"".<p>The BBC's comment on www.bbc.co.uk/blogs/bbcinternet that ""we merely felt it wasn't for us"" sounds like a very poor reason for spending a huge amount of effort and budget on not collaborating with jQuery.<p>The Glow team also claim that ""we need to ensure critical bug fixes, new features etc are released on a schedule we can control"". This doesn't make sense. Features are added and bugs are fixed on other JavaScript frameworks, by thousands of volunteers. In practice, production versions don't tend to have 'critical bugs': they have minor glitches, or miss relatively unimportant features. Unless Glow becomes a dominant JavaScript framework, which is highly unlikely, it will never be as reliable as other frameworks, because it will never have the same level of resources for bug fixing, testing, and feature development.<p>They also state that ""we needed a library that could sit alongside other potentially incompatible versions without namespace collisions or CSS styles clashing"", but what is the evidence that this happens in other frameworks?<p>Outside the BBC, who exactly will use Glow? The Glow team themselves say that Glow ""has been (so far) developed with the BBC's page templates in mind, and some modules may have issues outside of them"". Why on earth would I want to use Glow on my site then? And if it's only ever used on the BBC, why will anyone want to get involved in development?<p>Now the BBC is stuck with a massive code maintenance nightmare for many years to come, for every new and legacy hardware platform, operating system, operating system version, browser, browser version -- and all the individual OS and browser configurations that make frameworks a pain to maintain.<p>...and what about the 6% of browsers that don't have JavaScript, or have JavaScript disabled? All core BBC content and navigation must be accessible without JavaScript anyway, as stated in section 2.1 of the Future Media Standards and Guidelines: 'Our users MUST be able to get the core editorial proposition irrespective of the level of JavaScript support in their browser.' In other words, by BBC policy, JavaScript must only ever be an embellishment and not a core part of editorial content.<p>...and I'd like to know specifically what is not working in these old browsers anyway. I bet there are plenty of more pressing bugs and JavaScript accessibility problems: take a look at bbc.co.uk and there's bound to be something that doesn't work. It's highly likely that specific old-browser problems could have been sorted out case-by-case if really necessary, with a patch or plugin to existing frameworks. There was never any need to fork an existing library, let alone build a whole new framework.<p>JavaScript libraries such as YUI, jQuery, Dojo and Prototype are all far more mature than Glow. The BBC could have standardized on any one of them. All have excellent APIs, extremely high production values, and thousands of contributors -- including some of the world's very best programmers.  Do Glow have a Douglas Crockford or John Resig on the team?<p>Glow seems to have started life as an old-fashioned, in-house project, and now the BBC is attempting to open-source it in order to dodge the problem of maintenance -- even though the best external developers are unlikely to contribute to Yet Another JavaScript Framework. This is a reputation-damaging, wasted opportunity: the BBC could have set a healthy precedent collaborating with outside developers and software projects. As John Resig says of jQuery, existing framework developers would have bent over backwards to cooperate if the BBC had contacted them. Instead, the BBC stays a closed shop, and developers coming to the BBC will have to throw away their skills in jQuery (or whatever) and learn Glow from scratch.<p>It's healthy to have a market for alternative JavaScript libraries.  But at a time when the BBC is under tight scrutiny and intense political and budgetary pressure, why waste precious resources trying to compete when others will do it for free?<p>...and no doubt the BBC will now get flamed endlessly for spending two years wasting licence fee on an irrelevant project.",1249818966
750675,comment,749939,750177,0,0,gtt,,,tnx!,1249818889
750674,comment,750608,750608,0,0,drewcrawford,,,"Here's where the analogy breaks down:<p>Ingredients listed on food are provided so that people who have allergies can see what's in the food, and not die.  In a universe where foods don't have to list ingredients, foods without the ingredient label will be cheaper, meaning allergic people have to pay more to find out what's in the food.  Meaning that allergic people (""disabled"", if you will) are forced to pay more because of a from-birth (or from-young-age) disadvantage through no fault of theirs.<p>I'm republican and libertarian as the day is long, but I support government regulation that puts this sort of disadvantaged people on equal footing with everyone else.  That means elevators have to be in buildings, handicapped people should get free parking, learning disabled should get special classes in school, etc.<p>You can't be allergic to an iPhone app.  Being open and transparent about an app market is one of those things that should be competitive advantage.  Sprint or MS or whoever's building their app store should be able to say ""Look at our app store, it's open!  Come over here!"" as a selling point even when their software stack is inferior (no flamewars please).<p>I'm an iPhone developer and I am pissed at apple.  What they are doing is wrong and evil.  But developers are perfectly capable of staging a coup and changing Apple's mind (we did with getting them to release the app store in the first place).  I'm open to discussing why that doesn't happen (too many people are making too much money is my theory).<p>But what shouldn't happen is the government stepping in and saying ""Too lazy to stand up for yourselves?  Don't worry, we'll do it for you!""  That's so dumb I don't even know where to begin.  It sets an <i></i>awful<i></i> precedent.  Software developers are fiery and passionate, generally speaking, and I've seen way too many professions lose that because they outsource their righteous indignation to their government, and then become dependent.  And then there's regulation written for yesteryear affecting today's tech companies, and in about fifty years tech becomes the auto industry or the banking industry: one-brilliant people who gave their battles away to someone else to fight, and everybody paid the price for it.<p>Maybe that's a bit overdramatic for one government intervention.  On the other hand, for want of a shoe...",1249818831
750673,story,,,17,8,shalmanese,"The billion dollar genius ego dilemma",http://blog.bumblebeelabs.com/the-billion-dollar-genius-ego-dilemma/,,1249818806
750672,story,,,13,1,mgcreed,"Harsh Truths About Corporate Blogging",http://www.smashingmagazine.com/2009/08/09/10-harsh-truths-about-corporate-blogging/,,1249818741
750671,comment,750608,750664,0,0,diazamet,,,"""the public should have some oversight into what goes on"", the public do have some oversight.  The public could stop buying AT&T and Apple products/services.",1249818666
750670,comment,750608,750608,0,0,radu_floricica,,,"I voted Yes, I'd have a problem with this. Sounds like a common sense idea, but the implementation would be horrific. How exactly do you set the standards for this? You can't make a law especially for Apple, so you have to legislate ... what exactly?",1249818513
750669,comment,750142,750142,0,0,ANaimi,,,"ASP .NET MVC!",1249818492
750668,comment,750608,750660,0,0,jacquesm,,,"I don't think it has to do with whether or not it is the American/Capitalistic way either...<p>It's about whether it is right to have a platform that is closed without specifying clearly and unambiguously what the rules are for access to that platform.<p>Imagine you're an Iphone developer, you build your application, you get it accepted. Business is good. Then you hire some more people and you improve your application. Business is even better. Sooner or later you have an office full of people, and then one day your application gets rejected. Not only that, you'll have to pay back to the users that bought your application what they paid for it.<p>And all this without so much as an explanation why or a public rulebook where you could see for yourself <i>why</i> you were not in the clear.<p>Capitalism or the American way does not enter in to it. Think about a real-world analogy (and which like all analogies is broken) where the toll-keeper on a road would decide retroactively that the goods that you transported on their road did not meet their criteria, and that you have to reverse your business for the last N months, without any recourse on your part.",1249818457
750666,comment,749196,750475,0,0,gtuhl,,,"Agreed it was too strong of a statement, but denormalization really is something you do all the time in big databases.  It is not some targeted last resort technique.<p>If you have 30 million rows in a table you absolutely cannot do joins so you bring everything in that you commonly need.",1249818405
750665,comment,750608,750655,0,0,diazamet,,,"Ok, point taken but equally, nobody is forced to develop for the iPhone.  Develop for Android or Symbian.  Ultimately, so many developers have succumbed to Apples practices and they are responsible for giving Apple the power they have.  
This is still no reason for government involvement.",1249818364
750664,comment,750608,750608,0,0,jrockway,,,"I agree that the government should not be able to tell AT&T and Apple what to do ...<p>... as soon as Apple and AT&T deliver phone service without using any public infrastructure.  As long as they want to use the public airwaves, though, the public should have some oversight into what goes on.<p>(Remember, ""the big bad government"" isn't telling them what to do, the people that own the infrastructure, us, are telling them what to do.  It's just that the process is very, very indirect.)",1249818283
750663,comment,750608,750655,0,0,moe,,,"This might come as a shock to you: There actually is an 'elsewhere' beyond the iPhone. Last time I checked apple didn't go around forcing people to become app developers.<p>Don't like their rules?  Don't play on their lawn.",1249818241
750662,comment,750408,750611,0,0,fallentimes,,,"Can you please explain?",1249818230
750661,comment,749196,750477,0,0,gtuhl,,,"JOINs rightly get a lot of crap - they are massive performance bottlenecks if you are working with large tables.<p>Having a single awkward example does not detract from that.<p>I'll add to this by noting the post does say ""For smaller tables it doesn’t matter but as tables get bigger avoid joining when you can"" which is sound advice.<p>I'd say joining scales up to perhaps a million or two rows unless you have a lot of RAM (you can see join spills to disk in the EXPLAIN ANALYZE output).  I often am working with tables in the 10-30 million row range so my 
perspective is probably a little slanted towards the negative.",1249818160
750660,comment,750608,750654,0,0,apsurd,,,"I understand your point. But very simply, that is not what Capitalism entails. Capitalism is like biology's natural selection. You don't arbitrarily go determining rules of engagement and codes of conduct within the animal kingdom, so as to even things out. Why? Because those things are taken care of <i>naturally</i>.<p>I'm not saying I know what's best for anyone. Rather, it's just not the American/Capitalistic way. And Americans, they like their Capitalism.",1249818115
750659,comment,750514,750514,0,0,drewcrawford,,,"There's a fundamental disconnect between what the ISPs are saying and what the users are saying.<p>Being in a fairly rural area, my options are currently limited to Clearwire, which is a pre-wimax service that advertises 1.5MB/sec for around $40/month.<p>What actually happens is there is something of a ""soft cap"".    Download more than a few GB a day, and you get a phone call threatening to cut you off (and are forced to pay the contract ETF).  So what they are actually selling you is rolling capped service, and what you thought you were buying--what they were advertising, in fact--was throughput-based service.  And, FYI, this isn't something that's published anywhere, not even the fine print: just an extremely vague AUP that says something like ""Don't use the network too much.""<p>This is on top of the packet shaping and interfering with torrent traffic and (somewhat legitimate) issues like transfer power and crosstalk.<p>The statement that ""If they really had to guarantee bandwidth it would cost way too much"" is totally beside the point.  What's happening is that consumers are being sold a service with advertising that is false and misleading.  I might buy that services that advertise ""up to"" speeds are fair enough for the normal person to figure out, but when you throw packet shaping and soft caps into the mix, ""up to"" advertising is flat-out lying.  It's fraud.",1249818013
750658,story,,,71,28,jgrahamc,"In which I switch on a 30 year old computer and it just works",http://www.jgc.org/blog/2009/08/in-which-i-switch-on-30-year-old.html,,1249817997
750657,comment,749932,750001,0,0,fhars,,,"Actually, apple has been found guilty of doing exactly what you claim they never do in norway:
<a href=""http://news.cnet.com/8301-10784_3-6153085-7.html?tag=mncol;txt"" rel=""nofollow"">http://news.cnet.com/8301-10784_3-6153085-7.html?tag=mncol;t...</a>",1249817769
750655,comment,750608,750651,0,0,jacquesm,,,"I think you are missing the point regarding the acceptance of applications, it's not an end-user issue.<p>It's mostly the app store developers that are setting themselves up for trouble because of this.<p>So that should read 'if developers don't like Apples practices regarding the App store they are free to go elsewhere', only there is no 'elsewhere', the only way to the Iphone leads through the app store.",1249817728
750654,comment,750608,750646,0,0,jacquesm,,,"Not really, he's showing that the government already has 'full disclosure' rules for some industries and suggests that the digital world might benefit from that same principle.<p>You could easily trivialize this by suggesting that the food supply is a critical resource, but if a company gets large enough to employ a bunch of people living in Apples 'eco-system' and Apple decides to pull the plug the results for those people are quite comparable to eating something bad. In both cases there are people that have no way of knowing what is going on 'under water' whose health and well being depends on being informed.<p>To ask for that information is the only right thing to do.<p>Consumers don't have the power to bend a large corporation to their will, but the government can do that.",1249817629
750653,comment,749898,749898,0,0,HalcyonMuse,,,"Didn't chemistry.com start as a referral engine test by a PhD? (This may be heresy.)",1249817593
750652,comment,750019,750626,0,0,christofd,,,"I do re-check threads I've commented/ voted on. I assume others do as well and want to be held accountable: this is HN! I have no interest in spending time on here if this turns out to be another noisy channel.<p>I assumed some Google fan-boys voted me down initially, which angered me, nearly frying my development machine on a flash video (Chrome beta runs at 100% CPU with certain plugins).",1249817552
750651,comment,750608,750608,0,0,diazamet,,,"I see no reason why the government should get involved.  It's an free market, if people don't like Apple's practices regarding the App store, they are free to go elsewhere or buy a phone from a different manufacturer.",1249817550
750650,story,,,18,6,miked,"Worldwide Slump Makes Nigeria's Online Scammers Work That Much Harder",http://www.washingtonpost.com/wp-dyn/content/article/2009/08/06/AR2009080603764.html,,1249817543
750649,comment,750608,750608,0,0,thingie,,,"Couldn't you just ask ""would you agree""? Mabye it's confusing because you are making statement like if you were going to ask ""would you agree"", but then ask a question expecting opposite answer (if you were going to agree, you have to say ""no, I don't have a problem""). And I think there is no real difference between saying I agree and I don't have a problem with that.",1249817484
750648,comment,750607,750640,0,0,jacquesm,,,"mod_rewrite is one of the nastier apache modules, it's like a swiss army knife with 75 blades, there is always a way to do what you want but you'll end up with some blood on your shirt, even if you're careful.<p>Don't sweat it, everybody goes through this phase when they start with mod_rewrite, then after a while it gets easier.",1249817353
750647,story,,,27,23,bearwithclaws,"The Rasterbator - Create huge, rasterized images from any picture.",http://homokaasu.org/rasterbator/,,1249817234
750646,comment,750608,750608,0,0,apsurd,,,"The hell?<p><i>laissez-faire</i><p>You are comparing the nations food supply ...
with iphone applications...<p>...",1249817173
750645,comment,750597,750638,0,0,jacquesm,,,"It's strictly machine-to-machine, basically this is a way of extending the functionality of a website without having code server side, all the extension code runs on the browser of the end-user and talks to the server using the API.<p>The server side code for the project is going to be in PHP.<p>Think of it as HN on steroids, custom filtering and alternative user interfaces, tweaks and so on by adding chunks of javascript to the site, either just for yourself or if you think your stuff deserves a greater audience as a switchable plug in for others. If something is very well thought out we might make it default to 'on'.<p>Greasemonkey allows you to do some of this for a single user, but you normally wouldn't have access to the 'raw' data that builds up a site, in this case you would, all the
rendering comes from the javascript. Another part of the configurables is custom stylesheets.<p>The general idea is that you can completely overhaul the front end of the site from a plug-in on the assumption that more than one person will want to make those changes we make those changes available to the rest of the users.<p>I got the idea a while ago while browsing HN, it's one of the things that made me wonder how far you can push customization of a website and my conclusion is very far if you are willing to give up control.<p>So the only criteria I would attach to public distribution of an extension would be that the extension is not malicious in intent. Beyond that it is 'anything goes'.<p>A 'hackable' social network. Very simple in basis but extremely extensible.",1249817117
750644,story,,,1,0,bearwithclaws,"Five principles of good social software design",http://www.asis.org/Bulletin/Aug-09/AugSep09_Crumlish.html,,1249816982
750643,comment,750623,750623,0,0,scottjackson,,,"So I hacked together a quick and dirty application this afternoon that graphs your tweets based on when you sent them. you can look at the graph and see what time of day you tweet at most frequently.<p>I know it's not an uber-cool application, but it's a weekend afternoon project. And best of all, unlike (seemingly) every other Twitter-related application, you don't need to give it your Twitter password!",1249816941
750642,comment,749510,750374,0,0,michael_dorfman,,,"Did you read any of those publications?  There was (for me, at least) a latent excitement underneath the surface, of the absolute <i>coolness</i> of the possibilities that seemed to be at our fingertips.  Every issue was filled with articles that had somebody showing you how to do something you never even dreamed of.",1249816821
750641,comment,750267,750406,0,0,pheres,,,"12"" netbooks are just too big.  If it has 12"" screen it better be a ""fully"" powered laptop.<p>Todays netbooks are too limited to even deserve a screen bigger than 10"" and I guess the main purpose of a netbook is to be small and portable.",1249816817
750640,comment,750607,750633,0,0,brandnewlow,,,"Thanks.  I'll look into that.  I'm working on understanding the syntax of these rules, but it's been slow going.",1249816727
750639,story,,,8,11,hackingsicp,"Ask HN: SICP says ""Program == Language Evaluator"" What does this  mean?",,"Chapter 4, 2nd page (in my edition)<p>""Metalinguistic abstraction -- establishing new languages -- plays an important role in all branches of engineering design. It is particularly important to computer programming, because in programming not only can we formulate new languages but we can also implement these languages by constructing evaluators. An evaluator (or interpreter) for a programming language is a procedure that, when applied to an expression of the language, performs the actions required to evaluate that expression.<p>It is no exaggeration to regard this as the most fundamental idea in programming:<p><i>The evaluator, which determines the meaning of expressions in a programming language, is just another program.</i><p>To appreciate this point is to change our images of ourselves as programmers. We come to see ourselves as designers of languages, rather than only users of languages designed by others.<p>In fact, we can regard almost any program as the evaluator for some language.""<p>I didn't understand that last sentence at all. The authors give some examples(a constraint propagation framework etc) from earlier chapters, which they say are languages with their own primitives etc.<p>But the claim seems to be more generic (emphasis mine) ""we can regard <i></i><i>almost any program</i><i></i> as the evaluator for some language""<p>I am having some trouble wrapping my head around that. What ""language"" would a typical web app be viewed as? What are its semantics?<p>Let us say I have an inventory tracking web app <i>program</i> which deals with, say users, warehouses, orders etc. How is this ""viewable as a language""? How do I go about writing an evaluator for this ""language""?<p>Where does a program stop being ""viewable as a language"" If I write a small program (say to calculate Fibonacci numbers, can that be ""viewed as a language""?<p>I am missing something very profound here. If anyone has any insights, I would be very grateful.<p>Help?",1249816668
750638,comment,750597,750597,0,0,TomOfTTB,,,"My first question would be ""what are you writing this social network in?""  Because I think every mainstream language in existence has free libraries to create both XML and JSON output (Javascript is made for it, .Net has WCF, there are several Gems for Ruby, php has _encode, etc...).  So implementing both should just be a matter of passing the values to the appropriate function and reaping the benefits of already available libraries.<p>That in mind I'd say both.  If for some reason you insist on choosing I'd probably say JSON.  XML's only real advantage over JSON, imho, is it's human readability.  That makes it great for stuff like configuration files.  But for machine to machine communication JSON is faster and less prone to conversion errors.  Plus it's easier to accept JSON in Javascript which you defined as your target audience.",1249816442
750637,comment,750441,750569,0,0,Mz,,,"""Market: People don't know what they want til they see it.""<p>Ditto that.  If people could figure out for themselves what would solve the issue they had, then they wouldn't need a start-up to provide it.<p>""Development: You don't know what problems your idea has (nor their solution) til you see it.""<p>The military has some saying along the lines of ""No battle plan survives the first engagement.""  And Bill Gates has said ""Your most unhappy customers are your greatest source of learning.""<p>For me, three years of talking to people online with little in the way of results has convinced me that there is a huge information gap and this is what I need to overcome.  But no one could ""tell"" me that.  I just had to figure out why I am getting such poor reception (and so much hostility) for a solution to a problem that everyone desperately wants fixed.  The solution I offer doesn't fit with their concept of what a solution should look like and they can't wrap their brains around it.  There are two types of people who are relatively more receptive.  Both groups are intrinsically less accepting of current dogma than is typical.",1249816382
750636,comment,750113,750487,0,0,abalashov,,,"Really?  The authorities think pedobear hangs out at Bebo?<p>How strange...",1249816286
750635,comment,750113,750168,0,0,abalashov,,,"I'd just come in in parachute pants, strummin', ""Woke last night to tha sound uf thunda!!!""",1249816221
750634,story,,,1,0,_giu,"Debunked LINQ Myths",http://www.albahari.com/nutshell/10linqmyths.aspx,,1249816143
750633,comment,750607,750627,0,0,jacquesm,,,"The infinite redirect loop means that your rule is buggy, but that is the way to go.<p>Probably you are matching too much.<p>with the information you gave above I see a much simpler way to solve this:<p>Set up your webserver (I'm assuming apache) to map www.yourdomain.com and yourdomain.com to one virtual host and <i>.yourdomain.com to another.<p>Then do the .htaccess in the root of the virtualhost associated with </i>.yourdomain.com<p>That way you can not make any infinite loops.<p>good luck!",1249816142
750632,comment,750441,750504,0,0,10ren,,,"It's like that old joke, that the first telephone was the hardest sell (<i>who ya gonna call?</i>)<p>Joshua Schachter (delicious founder) said something about network effects that really struck me: make something that has network effects, but which is <i>also</i> useful and valuable even if no-one else is using it.<p>There's a related view that's applicable to my startup: make something that useful and valuable on its own, that can have <i>additional</i> network effects if others are using it.<p>BTW: I've searched for where Joshua said that, but I've not been able to find it (there were three points). Anyone know which interview I mean?",1249815905
750631,comment,750597,750597,0,0,thelonecabbage,,,"JSON if you need SPEED at the client or server ends.
If speed isn't a major factor than XML may win out, depending on the complexity of the data your sending back. XML in large, hierarchies is going to be easier to read.",1249815894
750630,comment,750441,750573,0,0,prawn,,,"A tonne of companies would be providing that sort of service to restaurants and they would likely already have a head-start, industry contacts, etc. You'd want far more of a niche than that IMO.",1249815860
750629,comment,750514,750538,0,0,abalashov,,,"The thing about SLAs is - as they are conventionally provided in the mainstream - that they're largely meaningless in terms of the provider's liabilities if the fail to honour the commitment.<p>Not only is the burden of proof on the user to show that the provider did not meet the committed information rate at a particular time, but you don't really get to collect anything.<p>Forget residential/consumer-grade broadband connections;  even the business-class, ""dedicated"" connections like point-to-point leased circuits (e.g. T1s) that typically do come with SLAs don't give you much bang.  A typical SLA about T1 uptime, for instance, will offer to credit the user by prorating their monthly rate proportionally to any downtime.<p>OK, so, I'm paying $400/mo for a T1 and it goes down for a whole day.  400 / 30 = $13.34.  So, I get about $13 back.  If I've got an office of 10 people I'm paying an average of $16/hr to work in an Internet-dependent way, we shall say conservatively, that means that I just paid $1280 for 10 people to sit on their butt, not to mention lost business and other arguable opportunity costs, etc, etc.  In any event, it's obvious that $13 doesn't cover the business impact of the outage, even in a commonsensical sort of way.<p>No provider would take the risk of crediting you the entire rate - or even half - for a day's outage or something like that.<p>Besides, if you're dealing with anyone but the telco and/or cable MSO that actually owns and operates most of the facilities involved, the issues involved in circuit repair are so phenomenally out of the control of the ISP that the exposure would just be insane.  And if you are dealing with the actual megacorp, their repair processes are so bureaucratised and slow that they wouldn't take the hit on the MTTR (Mean Time To Resolution) either.",1249815845
750628,comment,749321,750445,0,0,moe,,,"Thank you!",1249815839
750627,comment,750607,750616,0,0,brandnewlow,,,"Not sure I follow 100%.<p>I've got a drupal site configured so the groups have URLs like groupname.domain.com/<p>I'm using the subdomain module (<a href=""http://drupal.org/project/subdomain"" rel=""nofollow"">http://drupal.org/project/subdomain</a>) to create these ""fake"" subdomains.<p>For a few reasons, I want to move to a structure like this:<p>domain.com/groups/groupname<p>I can switch off the subdomain module and change the paths to my existing groups to take the desired format.  But I need to redirect all traffic going to the old URLs to the new ones.<p>You're saying adding a Redirect to my htaccess isn't the best way to go?  The guy over on stack overflow suggested a rule but it creates an infinite redirect loop.",1249815821
750626,comment,750019,750511,0,0,GHFigs,,,"These comments added nothing of value to the discussion. Asking why people voted a certain way is foolish at the very least because those whose voting so vexed you will have already moved on. The very people you demand answers from did not even hear the question. Everyone else is just annoyed.<p>The truth is that voting never makes much sense. In aggregate, people vote based on agreement or disagreement whether they ""should"" or not, and complaining about it is not going to change that. A post with a score of 50 could represent an intriguing and nuanced exploration of a topic just as easily as it could represent a strongly-worded yet vapid and utterly one-sided opinion. All that voting really tells you is that at least 49 people found it something about it emotionally moving enough to click a button before closing the tab.",1249815737
750625,comment,749932,750602,0,0,tjogin,,,"I still think that's anti-competitive douchebaggery. iTunes has become the standard platform for organizing music, thanks to the success of the iPod. I think it has elevated to a position where Apple should have to tread carefully in anti-competitive waters.",1249815645
