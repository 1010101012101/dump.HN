ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
108447,comment,108115,108115,0,0,thorax,,,"We launched <a href=""http://bug.gd"" rel=""nofollow"">http://bug.gd</a> in late 2007 as a way for everyone to search and capture solutions to error messages. Happily, it was covered on TechCrunch, Digg, Mashable, etc. Exciting stuff. We recently created a full Firefox extension that makes it even more natural. <a href=""http://bug.gd/download"" rel=""nofollow"">http://bug.gd/download</a><p>bug.gd plans to drive its revenue through corporate intranet sales of our software and P2P helpdesk solutions. The public-facing error database is expected to always be free and ad-free as a consequence.<p>Interesting primarily to places like YC, we're about to announce our <a href=""http://featurelist.org"" rel=""nofollow"">http://featurelist.org</a> which is really just a tool we use for our feature tracking and thought we'd open it up to the world. It's a free little Reddit-inspired site for startups and open source projects to let their community vote on features. Anyone can host a project there and have users visit <a href=""http://featurelist.org/MYPROJECT"" rel=""nofollow"">http://featurelist.org/MYPROJECT</a> to request/vote on features. This will probably go public beta in a couple of weeks, but it's really just a gift back to the community more than anything we want to make $$$ with.<p>Very, very busy lately. Back to work. :)",1201985993
108446,comment,108433,108433,0,0,bayareaguy,,,"Arc seems to embody the idea that ""Language design is library design, and vice-versa"", but how can we tell where the boundry is?<p>When I look at something like<p><pre><code>  (defop said req\n    (aform [w/link (pr ""you said: "" (arg _ ""foo""))\n           (pr ""click here"")]\n      (input ""foo"") \n      (submit)))\n</code></pre>\nwhat I see is more or less ordinary lisp that uses a library to solve an issue with applications that rely on http.  I'm sure plenty of us could do the equivalent with the appropriate Python/Perl/Php/Ruby library, but then the obvious criticism would be that you're not really comparing lanugages.  You would be comparing libraries.<p>Plenty of examples over here: <a href=""http://arclanguage.com/item?id=722"" rel=""nofollow"">http://arclanguage.com/item?id=722</a><p>Is it really the case that when you boil it down, Arc (language+libraries) is about making small web programs?  If not, why this challenge and if so I suspect it won't live up to the 100-year idea.",1201985964
108445,comment,100827,101377,0,0,gigamon,,,"I think YC is a great concept.<p>It is actually not a VC but more like an adoption agency that takes promising orphans off the street (not based on needs and not based more merits, but based on genetic match) ... feed them and cloth them, then send them off to foster parents (real VC's) who can afford to bring them up properly.<p>I don't mean to be harsh.  And I have great respect for everyone who is involved with YC.  And I am certainly not trying to be a sour grape.<p>I am just saying that it is unique.",1201985510
108444,comment,108382,108382,0,0,dkokelley,,,"This game is about pure numbers. Color coding is good, backgrounds are distracting. If anything, I would only recommend polishing the rest of the site. Music could be optional, but I would opt for sound effects over background music. In any case, I'm almost addicted to this game. Keep up the good work! I'm going to go play some more...",1201985350
108443,comment,108180,108425,0,0,apgwoz,,,"It was. You probably care not, but:<p><a href=""http://www.xent.com/pipermail/fork/Week-of-Mon-20080128/048253.html"" rel=""nofollow"">http://www.xent.com/pipermail/fork/Week-of-Mon-20080128/0482...</a>",1201985032
108442,comment,108383,108383,0,0,gruseom,,,"This works for information that's physical or pictorial. The examples cited in the article (e.g. Google Earth) fit into this category. Other forms of information (literary, musical, social, mathematical, you name it) aren't nearly as easy to represent this way. There's a reason why humans use symbolic notation.",1201984259
108441,comment,108386,108416,0,0,Tichy,,,"You were there? So was I - too bad, it would have been nice to meet somebody from news.yc...",1201983896
108440,story,,,1,0,__,"The peanut butter jar is empty",http://www.skrenta.com/2008/02/the_peanut_butter_jar_is_empty.html,,1201983677
108439,comment,108383,108383,0,0,vdm,,,"This article is OK. I thought it was unfortunate that there is no mention of the late Jef Raskin, who covers zoomable interfaces at length in his book, The Humane Interface.",1201983608
108438,story,,,3,0,mqt,"Amazon's hot new item: its data center",http://news.yahoo.com/s/ap/20080201/ap_on_hi_te/amazon_web_services,,1201983411
108437,comment,108386,108434,0,0,ardit33,,,"no, the ui is programmatic also.  But if you just follow their examples, they mostly use the xml descriptor,  which I find are not useful for small applications.",1201982974
108436,comment,108386,108415,0,0,ardit33,,,"I am playing around with it, and it is good and bad at the same time.<p>The good:<p>1.Their SDK and emulator are pretty good, even at this early stage (few bugs).  Not everything is documented, but at this early stage it is good enough.<p>2.There is a lot flexibility, many widgets to choose. It is very powerful when you compare to other platforms. Lot's of layouts, lots of things you can use.  You almost feel like a kid on the candy store, not knowing what to eat first.<p>3.You can do UI both programatically or with predetermined descriptors (xml).  In large applications this is pretty useful.<p>4. There is a resource file called R, which get's autogenerated and includes all the resources.  Given my experience, (I have a Constants file in very popupal J2ME app my company is doing,  that does the exact thing) it would end up with too much stuff into it.  Very useful for small applications though.\n>>>>>>>>>>>>>>>>>>>>>>><p>>>>><p>>>>\nThe Bad:<p>1.The API is not elegant as it could have been.  Some classes extend other classes, which extend other classes, the result? Something like Gallery,class has over 50 methods, and a bunch of constants.<p>2. They included everything that is under the sun, making it confusing, as there are 10s of ways to do something.  This is a Java problem also, but their API made it worse. (compare it with the pythonic way of thinking as there should be one very obvious and easy way to do something).<p>3. Too much XML.(which I really disslike). You can describe screens, and UI with XML descriptors, (xml is very lame, something more looking like CSS would have been much better).  Even the Manifest is fricking XML.  There was absolutely no need for this.  Sun's J2ME has the manifset in plain text, which makes it simpler.<p>4. Wierd namings and terminologies, make it confusing to get started.  Events, are called Intents, there icicle, bundle, and all other really wierd naming allover this place.  Did they do it purposely, so beginners will be so confused and wont be able to do anything with it?<p>>>>>>>>>><p>So, KISS was defenitetly not the mantra when building the android.  It was more ""Let's include everything under the sun"", so the developers will like it.  Well, that's great, but don't give me 10s of way to do something, which are just little variants of each other, and none does the exact thing I want to do.<p>Since I do Java for living, and Python for fun, I can say that I was slightly disapointed by android.   Lot's of power, but not elgant enough to be called a perfect platform.<p>So, yes, I probably would be developing for it, but not necessary just for fun.",1201982799
108435,comment,108370,108370,0,0,gojomo,,,"The rundown of the 13 mostly-inappropriate board members is the best part.<p>But would a good board even be possible and effective given the Sulzberger family control, through a dual-class voting structure? Do the Sulzbergers really want the NYTimes to be a profit-making enterprise, or do they get enough satisfaction out of it being the de facto mouthpiece of the bien-pensant establishment?<p>And might Google someday become ossified in the same way, given that it has a similar dual-class voting structure?",1201982609
108434,comment,108386,108415,0,0,iamwil,,,"No project, but I did play around with it.  Aside from the general complaints about getting use to Java after Ruby, I liked how the application fit into the overall OS.<p>However, one has to adhere to an application lifecycle, which was a little different, since we're use to pretending that the application we're writing is the only one on a machine.<p>The UI isn't programmatic, like Swing, but rather is reminiscent of web programming by defining the UI through an XML file.",1201982420
