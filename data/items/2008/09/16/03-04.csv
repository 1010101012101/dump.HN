ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
305394,story,,,2,1,jkopelman,"Redeye VC: LeaveWallStreetJoinAStartup.com",http://redeye.firstround.com/2008/09/leavewallstreet.html,,1221537387
305393,comment,305199,305199,0,0,boardrider_99,,,"Art of the Start- Guy Kawasaki\nGo It Alone- Bruce Judson (Yale professor of Management)\nMark Cuban's blog (blogmaverick or something like that)\nAnything by or about Warren Buffet",1221536818
305392,comment,305349,305388,0,0,tptacek,,,"I guess I'm asking, how does Haskell reduce the amount of effort required to write secure SQL?<p>* It helps in the first case, but then, so do parameterized queries, which developers already have and are familiar with.<p>* It doesn't help --- at least not elegantly --- in the second case.<p>* It can't help in the third case, because that error is happening in the database itself. (By the way, not sure why injections in dynamic SQL in stored procedures would be least critical).<p>I get you loud and clear that ""even though it's easy to avoid these problems in PHP, developers don't"". You're right. ""Use good code"" is not a solution for the problem of ""bad code"". But is Haskell?<p>I like the idea of static analysis in Haskell.",1221536754
305391,comment,304907,305062,0,0,DaniFong,,,"The region had Abū Rayhān Bīrūnī, and Avicenna as contemporaries, and then Omar Khayyam soon after. Persia in that era was like Florence in the fifteenth century. Something in the water? Genetic fluke?<p>Probably not...",1221536513
305390,comment,305183,305262,0,0,zitterbewegung,,,"For some reason the site is saying that its blocking me due to a ""hacking attempt"". I don't understand why it is doing this to me I wasn't trying to hack it or anything.",1221536493
305389,comment,305191,305359,0,0,louislouis,,,"So what's the difference between lobbying and corruption? Are you saying Congress accepts money to keep hush hush?",1221536422
305388,comment,305349,305381,0,0,rcoder,,,"You're right that #1 is indeed just a matter of using the right API. (I actually blame the poor state of many database client libraries and tutorial docs for the proliferation of interpolated query params, but the point remains that it's basically a mechanical fix.)<p>For #2, the problem is a bit trickier, but again, it just requires attention on the part of the developer.<p>Given the limited use of stored procedures by most LAMP developers, I think that #3 may be the least critical, even if it is the most difficult to tackle with a simple code analysis tool.<p>As you suggest, none of these issues are particularly hard to avoid via careful programming. The problem is that programmers often <i>aren't</i> careful, and when working in languages which offer ""one-size-fits-all"" string, array, and file types, they tend to just shove everything into and out of those containers without thinking about type or flow checking.<p>Type checking isn't a panacea, but it can flag issues of either type 1 or 2 early, which gives developers a chance to catch themselves before they commit (or even worse, deploy) a potential security hole.<p>Part of my motivation for this comes from reading a lot of unit tests and specs for webapp code. If you step back and think a bit, it becomes obvious that a lot of the test harness is simply devoted to type checking, and that the verbosity (and easy satisfaction of coverage metrics such tests provide) often mask otherwise glaring gaps in the actual test coverage.",1221536396
305387,comment,305191,305362,0,0,helveticaman,,,"I see one flaw here:  having people pick the best stocks can increase wealth by allocating money to where it is most efficient.  For instance, going back in time to 1965 and investing in Toyota instead of GM would not only have been a very lucrative move, but increased Toyota's ability to create wealth by increasing its access to capital.",1221536361
305386,comment,304736,305311,0,0,silentbicycle,,,"> If programmers were always that foresightful, programming in general would be a whole lot easier.<p>Agreed. That's what encapsulation is <i>for</i>, though. When code isn't separated into sections with defined borders, it tends to grow entangled and hard to change.<p>For a real (albeit simple) example, something I'm working on has several instances of an ordered collection (with a few irrelevant quirks). I presently have the type declared (once) as<p><pre><code>   type 'a coll = 'a list ref      (* pointer to a Lisp-style list *)\n</code></pre>\nfor the obligatory quick-but-inefficient scaffolding, and wrote a few one-or-two-line functions inserting, checking for membership, and the like. (They're just aliases to existing funs in the List module.) I expect to swap out the implementation so I can compare e.g. skiplist, RB Tree, hash table, etc., performance later. Given the constraints on the problem, none seems obviously better (though I'm betting on skiplists here, space reasons). 'a coll is used throughout the program, but changing that line and those few short functions will replace it everywhere (and it will notify me if I miss something). 'a coll is also polymorphic on another type, because the whole module is a functor. (It's for a language-agnostic source code analysis tool.)<p>This structuring is nothing specific to OCaml, though; data encapsulation is main idea of chapter 2 in SICP. (<a href=""http://mitpress.mit.edu/sicp/full-text/book/book-Z-H-13.html#%_chap_2"" rel=""nofollow"">http://mitpress.mit.edu/sicp/full-text/book/book-Z-H-13.html...</a>)\nLikewise, in an OO language I could swap in different collections subclassed from Collection, or just with the relevant methods, depending on if the OO implementation used class-based or structural/""duck typing"" polymorphism. That's the same overall result as the above, though by slightly different means.<p>> If a compiler is smart enough to know what needs to be fixed then it should just go ahead and fix it instead of fobbing the job off onto the programmer.<p>OCaml's H-M type system doesn't try to guess whether you meant all references to x to be type A or type B, it just tells you that they aren't internally consistent. It would be <i>guessing</i>. (How would the compiler know if you're gradually changing from A to B or B to A from just a snapshot, anyway? That's analogous to the Heisenberg uncertainty principle.)",1221536270
305385,comment,304907,305089,0,0,DaniFong,,,"My personal interpretation of Hacker News is it's news that's news to hackers...",1221536238
305384,comment,303780,305341,0,0,timr,,,"Well, regardless of the original intent, it's probably a pretty safe bet that people were voting for it because they <i>perceived</i> it to be a bash on MBA degrees.<p>My main gripe is with anti-intellectualism and other forms of low-brow snottery in general, not so much with your specific comment.",1221536048
305383,comment,305199,305199,0,0,comatose_kid,,,"how to get rich by Richard dennis.<p>Softwar - A bio on Larry Ellison, one where he writes footnotes responding to the biographer's text<p>Made in japan - Akio Morita and sony - written by Akio Morita - founder describes early days of the company",1221536024
305382,comment,305224,305271,0,0,noonespecial,,,"FTA :\n<i>Darwin was, in many ways, a model of good scientific method. He observed the world around him, developed a theory which sought to explain what he saw, and then set about a long and painstaking process of gathering evidence that would either bear out, contradict, or modify his theory. As a result, our understanding of the world is expanded, but the scientific process continues. In science, hypotheses are meant to be constantly tested.</i><p>Shoulda read two more lines...<p>I like this article. If all religious people were this reasonable, we'd have very few problems related to religion in this world.",1221536008
305381,comment,305349,305367,0,0,tptacek,,,"There's this meme about type checking defeating SQL Injection that I don't really understand.<p>There are basically three situations I see injection problems recurring in modern web code:<p>* The stupid cases where people are interpolating input strings directly into query strings, so that a query for ""O'Neill"" will accidentally break your SQL.<p>* The not-so-stupid cases where column sorts and query builders pass limits, sort orders, and groupings directly from user inputs.<p>* The cases where stored procedures resort to dynamic SQL.<p>The first problem is solved not by better type checking, but by switching to parameterized queries, where the query string is parsed prior to argument binding.<p>The second problem is solved by not passing SQL literals in and out of input.<p>The third problem isn't even happening in the application's programming language.<p>Which of these problems is handled well by application type checking?<p>As for XSS attacks, I'm again skeptical. If the problem was as easy as type checking, you'd solve it trivially by output filtering everything from the database, neutralizing HTML metacharacters. It's not that easy: there are lots of times when you really do need to honor HTML in input.",1221535726
305380,comment,305191,305299,0,0,helveticaman,,,"Agreed.  After a number of thought experiments involving dragons that hoard gold, defunct Buddhist temple construction companies, and irrational exhuberance, I came to the conclusion that owning stock makes no sense if there are no dividends.",1221535700
305379,comment,304581,305346,0,0,prospero,,,"I agree, Half Life 2 is amazing.  Like I said, Valve is a notable exception.",1221535586
305378,comment,303107,303479,0,0,kylec,,,"Interesting. I suppose we can, in part, blame Arc's brevity on the fact that Paul Graham uses vi:<p><a href=""http://paulgraham.com/pfaq.html"" rel=""nofollow"">http://paulgraham.com/pfaq.html</a>",1221535509
305377,story,,,4,0,bmatheny,"MySQL Multimaster Replication in an Asynchronous Environment",http://blog.mobocracy.net/2008/09/mysql-multimaster-replication-in.html,,1221535506
305376,comment,304180,304316,0,0,vlad,,,"Thank you for posting.  It was great meeting you earlier this year and I hope we're both crazy successful the next time we meet.  It's all about little steps, though. :)",1221535494
305375,story,,,2,0,mpresh,"Public Speaking/Entrepeneurship/Networking Club At MIT (Sloan)",,"Weekly meeting at MIT sloan building. (Tange Center) Entrance off Amherst Street.<p>E51-57. Tuesdays at 6pm to 7:30pm.<p>All are welcome! We meet to give presentations,\nnetwork, practice public speaking, discuss interesting ideas, practice leadership, have a good time, etc.<p>Location: \nhttp://whereis.mit.edu/map-jpg?mapterms=e51&mapsearch=go<p>Club Website: http://tuesdaytm.freetoasthost.com/index.html<p>I have been following Y Combinator for several years not and I have been part of this MIT club for some time as well. I would like to have some of the local Y combinator members to come check out the club and potentially make into a networking, discussion forum for startup related ideas among other stimulating topics.",1221535462
305374,comment,304180,304346,0,0,vlad,,,"Thank you, Omar!  And thank you for posting!  See you at next year's Startup School. :)  It is always fun.",1221535419
305373,comment,304921,304921,0,0,gojomo,,,"But I want to know: did he wear khaki on Friday, too -- or is this him ""cutting loose"" for his last day?",1221535344
305372,comment,305349,305368,0,0,rcoder,,,"You may find systems monitoring to be a bit challenging in Haskell if you're accustomed to Perl. By design, the normal POSIX abstractions that are so tightly integrated into Perl are held at arm's length in Haskell, if available at all; something as simple as forking a child process or switching effective UIDs will require far more code in Haskell than in Perl.<p>That being said, if you want to be able to <i>reason</i> about system configuration states, and write concise deterministic rules that dictate the triggers for and transitions between between such states, Haskell may be worth some additional attention.",1221535327
305371,story,,,13,8,auston,"Leave WallStreet - Join a Startup",http://leavewallstreetjoinastartup.com/,,1221535178
305370,comment,304736,305221,0,0,scott_s,,,"<i>Then you'll get unused to it again</i> is my favorite new phrase.",1221535144
305369,comment,305334,305334,0,0,DenisM,,,"<p><pre><code>  >Big Business as we know it is history\n</code></pre>\nNo, not really. All that happened is that one set of big businesses (Bank of America, Goldman, JP Morgan) has devoured the other set (LEH, Bear Sterns, Merryl Lynch). WaMu is next on the chopping block.<p>The first group won, the second group lost. Big business runs as usual.",1221534810
305368,comment,305349,305349,0,0,SwellJoe,,,"I've just started watching the Simon Peyton Jones videos on the subject (from OSCon last year), and I've been kinda thinking I might tackle some systems monitoring problems (I usually use Perl for that sort of thing...and most every other sort of thing, lately).  I, too, have been struck a bit by how low-level most of the libraries and such are, at this point (then again, compared to CPAN almost every language has a dearth of high level libraries).  And I'm still far too much of an amateur at the language to do much about it.  But it is an interesting language, and probably useful to tinker with even if no useful code ever comes of it.",1221534601
305367,comment,305349,305349,0,0,rcoder,,,"Personally, I think there are some very interesting possibilities for using Haskell in the highly-secure web application space. The most trivial example would be simply using the type checker to protect against SQL injection and cross-site scripting attacks by representing user input with a different type than query parameters or HTML output.<p>I've also thought for a while that Haskell would be a great environment in which to implement a static analysis tool to check the security of existing application code. In particular, I think that the PHP community could really use an information-flow and type-checking tool external to the core runtime which could be used to run a quick ""sanity check"" over source code. The simplicity of the language (relative to, say, Ruby or Perl) makes it a prime target for parsing and analysis, and the large body of existing code in the wild makes for an interesting set of test cases.",1221534526
305366,story,,,2,0,thingsilearned,"Sciencedebate 2008: Candidates's policies on top science issues.",http://www.sciencedebate2008.com/www/index.php?id=42,,1221534448
305365,story,,,17,1,soundsop,"Bentley's Rules from Writing Efficient Programs",http://www.hipecc.wichita.edu/bentley.htm,,1221534348
305364,story,,,2,0,soundsop,"Welcome to the World Wide Web Foundation",http://www.webfoundation.org/news/2008/09/welcome-to-the-world-wide-web-foundation.html,,1221534237
305363,comment,305199,305289,0,0,wh,,,"any business books which are pleasure to read.",1221534119
305362,comment,305191,305191,0,0,vitaminj,,,"Warren Buffett says this far better in his 2005 letter to Berkshire shareholders.<p>Relevant excerpt from CNN:\n<a href=""http://money.cnn.com/2006/03/05/news/newsmakers/buffett_fortune/index.htm"" rel=""nofollow"">http://money.cnn.com/2006/03/05/news/newsmakers/buffett_fort...</a><p>Original source: <a href=""http://www.berkshirehathaway.com/letters/2005ltr.pdf"" rel=""nofollow"">http://www.berkshirehathaway.com/letters/2005ltr.pdf</a>\n(you'll have to wade through to page 17)",1221534079
305361,comment,304335,305185,0,0,DaniFong,,,"That's true, but my main point was you don't really have time to react to something being 'out of sync'. It might feel a little sluggish, but only just. (I suspect)",1221534057
305360,comment,304781,305321,0,0,bootload,,,"<i>""... 1.) Pool money together to buy the book. 2.) Photocopy it -- this is the tricky part. nowadays we can scan it ...""</i><p>In most cases you didn't even have to buy the book, simply look it up in the library or class copies. Simply borrow the book and copy it. It was laborious and I didn't do this for all classes but some texts are simply not worth purchasing for the value they give. Others are priceless.",1221534037
