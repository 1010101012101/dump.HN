ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
1641861,comment,1641763,1641763,0,0,neodude,,,"Counter-anecdote: I just got rejected from a startup because I was too inexperienced, despite having 4+ years of professional experience under my belt. They said there's no reason why I wouldn't be awesome, but I've just done too little for them to know for sure.",1283011176
1641860,comment,1641032,1641032,0,0,maukdaddy,,,"A big part of the problem is startups that want world-class talent but are only willing to pay 50k.  The economics simply don't work.",1283011156
1641859,comment,1641301,1641553,0,0,mark_l_watson,,,"I agree, I also prefer the slightly longer version. OK, enough small talk ... :-)",1283011111
1641858,comment,1640861,1641428,0,0,ShabbyDoo,,,"I perceive NetFlix's DVD-by-mail strategy as an ingenious hack to get market penetration into a market which required eventual movement by large entities -- (1) the telcoms to provide sufficient bandwidth to consumers and (2) the studios to allow their content to be streamed.  It was obvious that #1 and #2 would have to happen eventually, but only a fool would have built a business whose success was contingent on the timing of these changes.  Brilliant.",1283011105
1641857,comment,1641578,1641839,0,0,vyrotek,,,"While I think this is a neat use of <i>dynamic</i>, I think I'm still going to stick with my strongly typed models.<p>More specifically, I really like the 'ViewModel' technique. I won't give up my Intellisense and Compile Time validation anytime soon.",1283011098
1641856,comment,1641578,1641819,0,0,keithwarren,,,"You fail sir, you cannot disparage their work for being old and say it is being 'eschewed by newer techniques' without providing some examples.",1283011086
1641855,comment,1641032,1641684,0,0,HilbertSpace,,,"""When the job requires very high technical skills its a dead end.""<p>That's a very highly 'mixed' situation:  I hold a Ph.D. from a top research university in some very technical material, with a lot of connection with computing, and have published peer reviewed original research in some topics where, thus, I am a 'world-class' expert in those topics, and I can absolutely, positively guarantee you that (1) in a 'job interview' in such a topic I will totally blow away the interview questions and (2) really know so much that the interviewer will feel 'rejected'.  So, I won't get hired.<p>Uh, we're still back 100 years ago where the person hiring insists on knowing more and won't hire anyone who doesn't know less.  In particular, the person hiring wants the new person to look just like the person hiring wants, including what the hiring person does NOT know.<p>This situation is very general:  For a person with ""very high technical skills"", there is essentially no way to get interviewed or hired.  There is no way for that person to expect someone else to understand those skills or have a job for them.  The academic solution is for such a person to publish papers and, then, have others just count the papers, prizes, grants, whatever -- never try to read the papers.  In business there is really just one solution:  Have the person with such skills start their own business.<p>So, there really are people with ""very high technical skills"", but they essentially can't be hired, that is, they are unemployable.<p>For a hiring manager to insist that their particular list of skills, some good, some actually 'bad', are just the 'right stuff' is a mistake of the hiring manager.",1283011081
1641854,comment,1641072,1641072,0,0,Hexstream,,,"You know, I consider setting up filters in gmail to be a form a very high-level programming (DSL), and it's so easy that nonprogrammers can use them.",1283011067
1641853,story,,,2,0,emeltzer,"Check whether a site is dead or alive",http://ericmeltzer.posterous.com/dead-or-alive,,1283011014
1641851,comment,1640861,1641417,0,0,ShabbyDoo,,,"""Particularly if Apple predominantly buys, rather than leases""<p>Or, if the leases are quite long-term.",1283010833
1641850,comment,1639666,1640436,0,0,davidw,,,"Precisely.<p>Which is why we should not have politics here.",1283010753
1641849,comment,1641032,1641778,0,0,HilbertSpace,,,"Well put.",1283010722
1641848,comment,1639666,1640613,0,0,gruseom,,,"Gee, I don't think it takes much ""audacity"". As far as I can tell as an occasional reader, there's some anti-semitism and a lot more anti-Israel politics. But the picture you linked to is neither of those. It's garden-variety 4chan shockerism, and it looks like it worked.",1283010692
1641847,story,,,1,0,zeynel1,"God is Coke? Is the American Model of God Marketing Spreading Globally?",http://santitafarella.wordpress.com/2009/05/31/god-is-coke-is-the-american-model-of-god-marketing-spreading-globally/,,1283010625
1641846,comment,1640530,1640530,0,0,Evgeny,,,"Even that will not make me create a twitter account ...",1283010618
1641845,comment,1638926,1641413,0,0,jshen,,,"Your confusing different commenters.",1283010571
1641844,comment,1641072,1641722,0,0,Hexstream,,,"DSLs in general can do more than dumb skinning... bad example.",1283010377
1641843,comment,1641462,1641780,0,0,pencil,,,"i completely agree with you sir and i really appologise for not responding to this thread <a href=""http://news.ycombinator.com/item?id=1107996"" rel=""nofollow"">http://news.ycombinator.com/item?id=1107996</a>
to be honest with you i really don't know where i stand .what's my level of competence.
i recently gained interest in math and physics because i regret not taking these two subjects seriously back in college.now i work for a bank which pay's peanuts.i don't intend to get a job which helps me build my math/physics skills,i just wanna learn it because i have a burning desire to learn it.it's as simple as that.
yes.math requires hours and days of practice which i'am religiously doing but it's not enough for me as it's very evident by the level of knowledge/intellect that i possess.
with that being said the number of ways arranging the equation log(x)+3=2t hmm..
log(x)=2t-3 am i right??hope i'am not bullshitting you.<p>by the way the only definition of logarithm that i know is 'log is inverse of exponents'",1283010362
1641842,comment,1640384,1641723,0,0,ryanteo,,,"Sg! =)",1283010319
1641841,comment,1641032,1641772,0,0,HilbertSpace,,,"On your ego, I;m just guessing.  It's a common failing.<p>Broadly you seem to be recruiting a bit too close to the ground, to be straining over gnats and forgetting elephants.  E.g., my best work in concurrency was at the Watson lab in Yorktown Heights.  We had NO trouble hiring people with lots of smarts, knowledge, talents, and determination.  When I interviewed people, I asked more general questions.  So for concurrency, ask about some really solid topics in the field.<p>You gave a URL on your terminology:  I still don't think that the terminology is both solid and common enough to use in an interview.  Indeed, I would guess that a real expert in concurrency, e.g., a recent CS Ph.D. who did their research in the field, would not use such terminology.  What a Dijkstra semaphore is is solid.  So, might ask about that.  I don't think your terminology is good for recruiting real expertise.",1283010288
1641840,comment,1641325,1641770,0,0,ratsbane,,,"As far as I know, despite vague and generous public announcements, there is no legally-binding obligation by Microsoft to not do with .Net what Oracle has done with Java in suing for patent infringement.<p>ECMA standards do not require any relevant patents to be provided royalty-free; in fact, they specifically allow ""The patent holder is prepared to grant licenses to other parties on a non-discriminatory basis on reasonable terms and conditions."" (<a href=""http://www.ecma-international.org/memento/codeofconduct.htm"" rel=""nofollow"">http://www.ecma-international.org/memento/codeofconduct.htm</a> section 2.2)<p>The ECMA-334 & 335 standards you mentioned includes patent statements from Microsoft: ""...Microsoft Corporation will grant, on a non-discriminatory basis, to any party requesting it, licenses on commercially reasonable terms and conditions...""<p>I'm not a lawyer, so if there's something I'm missing please explain.",1283010169
1641839,comment,1641578,1641679,0,0,gokhan,,,"Clearer syntax. No need to define another ViewModel object for each page. Ability to refactor. Getting rid of naming the param as text.<p>ViewModel[""Something""] = ""Other"";<p>vs<p>ViewModel.Something = ""Other"";<p>The best use case for <i>dynamic</i> IMO.",1283010055
1641838,story,,,2,0,Eddk,"If you enjoy music while coding...",,"http://www.ruckusdj.com<p>use case example:http://vistev.blogspot.com/2009/04/data.html<p>Some of you may already have solutions that are better but if not then tryout RuckusDJ... If you use Linux then it essentially free since you can get the plugin from http://code.google.com/p/rhythmote",1283010032
1641837,comment,1641763,1641763,0,0,mberning,,,"That's not just Silicon Valley's dark secret. It is pervasive in the industry.",1283010014
1641836,comment,1641664,1641833,0,0,cpr,,,"Why less free? LLVM is actually more free (in terms of what freedoms you have with the source), being published under an MIT/BSD license.",1283010002
1641835,comment,1640219,1640550,0,0,hansel,,,"do you speak/read portuguese?<p>i think this is more of a 'support group'
<a href=""http://www.endeavor.org.br/cases-empreendedores"" rel=""nofollow"">http://www.endeavor.org.br/cases-empreendedores</a><p>energy innovation awards:
<a href=""http://www.edpbr.com.br/energia/"" rel=""nofollow"">http://www.edpbr.com.br/energia/</a><p>government VC:
<a href=""http://www.fundocriatec.com.br/"" rel=""nofollow"">http://www.fundocriatec.com.br/</a><p><a href=""http://www.time.com/time/magazine/article/0,9171,2010076,00.html"" rel=""nofollow"">http://www.time.com/time/magazine/article/0,9171,2010076,00....</a><p>work backwards from this list (see who funded the mobile ones):
<a href=""http://www.maisstartup.com.br/"" rel=""nofollow"">http://www.maisstartup.com.br/</a><p>Please share any interesting findings about VCs or good links you find about startups in Latin America.<p>An ideal angel for mobile would be that guy in mexico that owns the big movile company.",1283009939
1641834,comment,1641664,1641824,0,0,cpr,,,"Seems to me (an old compiler guy in previous lives, but not necessarily up to date technically) that LLVM has really taken the momentum from the GCC project, since they're starting afresh, and generally being more approachable.<p>Perhaps someone with technical experience with both internals could comment?",1283009938
1641833,comment,1641664,1641664,0,0,akkartik,,,"Last section on page 3: <i>""GCC code lacks clarity (intermediate semantics are opaque) as a matter of policy, and that this has worked against the greater design goals of GCC.. By making just building onto GCC and GPLing the code the path of least resistance, RMS hopes to motivate more people to produce free software.""</i><p>Last paragraph on page 4: <i>""GCC 4.5 was released in April 2010. A major new feature is a plug-in facility for third party code. One of the first plug-ins on offer is DragonEgg, an LLVM back end for GCC.""</i><p>Summary: Competition from LLVM has finally forced gcc to create a plugin architecture. It'll make less software free, but it'll get more people using gcc.",1283009871
1641831,comment,1639867,1641210,0,0,snom370,,,"Most people realize exactly what the quote is talking about, since the alternative (removing stuff until you're left with nothing, or with something barely working) makes no sense if the goal is perfection. Part of the appeal of the quote is that you have to make this realization. Just like a joke would lose its appeal if it was preceded by a list of assumptions that would explain the joke.",1283009675
1641830,comment,1639712,1640670,0,0,jonknee,,,"I don't think you piss off too many existing customers if they find out it's more expensive later on. They will feel like they got a deal. Now if it was half the price you could easily deal with some anger.",1283009670
1641829,comment,1638474,1640230,0,0,Groxx,,,"I quite like the error reporting links.  Massively more helpful than the ""success"" that most reporting mechanisms give you.<p>As to caching: to a certain degree, I doubt that, actually.  When a Windows component has crashed, the same ones that I mention go through the whole process, it <i>always</i> informs me that I'm offline if I disconnect from the internet.  For non-Windows ones, it <i>always</i> completes <i>instantly</i>, sends me no link, doesn't realize I've disconnected, and <i>always</i> says ""success"".<p>There's a disconnect here.  If it's cached, it should say so, not tell you it <i>succeeded</i> when it didn't.  Meanwhile, why do some detect internet connectivity and some don't?  It's fully possible you're right, but I've seen no evidence of it.",1283009665
1641827,story,,,107,49,grellas,"Chopin's Small Miracles",http://online.wsj.com/article/SB10001424052748703447004575449732019362448.html?mod=WSJ_LifeStyle_Lifestyle_5,,1283009628
1641826,comment,1639712,1641040,0,0,jonknee,,,"Churn rates and cost per new customer are two very highly watched metrics in telcos. Keeping you happy keeps up their numbers. That said, I wish they also bought my provider.",1283009530
1641825,comment,1638567,1639745,0,0,Mizage,,,"You might also checkout Divvy by Mizage for unique window management on Mac OS X:
<a href=""http://mizage.com/divvy"" rel=""nofollow"">http://mizage.com/divvy</a>",1283009496
1641824,comment,1641664,1641664,0,0,nanairo,,,"Reading these stories one keep seeing the same pattern. GCC vs. EGCS, just like the Emacs war. The problem are always an excessive centralisation of stewardship... which is kind of ironic coming from the guy who most strongly supported free software. On the other hand the fact that they could be forked and then merged shows some of the advantages of FOSS.<p>Maybe it will be similar with LLVM. Back in the days Apple suggested to put a gcc front end to LLVM, but the GCC people were strongly against it. They seemed to have a really dislike of LLVM, or its licence, or the company behind it.<p>Eventually Apple (and the rest of the LLVM community) continued on their own. If GCC one day will become irrelevant, I think it's got only itself to blame, and a certain type of elitist arrogance. I wish (for them and the FOSS community in general) that the successes of LLVM will help them clean their house and keep going for decades and decades.",1283009393
1641823,comment,1641199,1641199,0,0,sprocket,,,"If you're young, debt free and don't have any family relying on you for support, then I wholeheartedly recommend leaving to do what makes you happy.<p>When my job ended this past February, I booked a ticket to Europe and spent the next four months in ""mini apprenticeships"" making cheese in France and the UK.  I learned to milk goats and sheep, castrated pigs, sheared sheep, and improved my French markedly.  There's a lot to be acquired by immersing yourself in a different culture for an extended period of time.<p>Before I'd left I'd received a lot of remarks claiming I was ""sabotaging my career"" (or something to that effect) by taking extended leaves to follow my passions.  The way I look at it is that I'm doing these things while I'm young and still physically capable of doing it, at a time when I'm not prevented from doing them financially or because I have a family to support.<p>You could wait to start living the care-free dream when you're 65 and retired...but who knows if you'll even be around then?",1283009389
1641822,comment,1634471,1638183,0,0,bombs,,,"I dont think so. The ambient light sensor is next to the iSight camera. I'd wager the indicator light is most oft on when the lid is closed and the sensor unexposed to ambient light. It's just dimmer.",1283009368
1641821,comment,1641578,1641578,0,0,tomjen3,,,"The more I see stuff like this, the more I think the lift concept of view first and XML is better than the MVC model.",1283009357
1641820,comment,1639458,1640753,0,0,scrrr,,,"I think 6. is the most important point on your list. The rest can be summarized as ""control your marketing message so your message stays the same over time"" and ""you don't sell on specs, you sell on emotions.""",1283009331
1641819,comment,1641578,1641578,0,0,KirinDave,,,"Am I the only person who sees this and says, “Congratulations guys, nice work! Now if only you had done this in 2006, you might be on the cutting edge.” I don't mean to disparage their work, I am sure that is is technically sound and well-considered.<p>It seems like, among the leading-edge developers, this kind of tempting is rapidly being eschewed by newer techniques.",1283009289
1641818,comment,1640530,1640815,0,0,bhc3,,,"You write amazing blog posts, with great points of view (e.g. recent Yahoo post). One thing I've heard, and it strikes me as true, is that the best people on twitter are great writers. Why? When you write a post, you have a perspective, a point of view. That's the frame for your article. You then fill it with analysis, facts and perspective.<p>Twitter forces you to focus on the frame itself. And likely, just a part of it. Great for putting forth a central idea that can be pursued in greater detail elsewhere.<p>Your tweet on startups... ""Startups in 137 chars: Make something someone specific needs, launch fast, let users show you what to change, change it, repeat last two.""<p>...is a great example. There are multiple articles that could be written in relation to that observation. They help clarify and deepen the argument. But you managed to distill the essential elements of the idea into 137 characters.<p>I'd say think of the things you're seeing, the discussion you're following out there. Share your perspective, drawn from your own interests and activities, and the (possibly wrongheaded) points being made by others.",1283008954
1641817,comment,1641301,1641301,0,0,fourneau,,,"I'm really glad that JDK 7 finally has diamonds. (In more ways than one: <a href=""http://weblogs.java.net/blog/forax/archive/2009/08/27/diamond-gate"" rel=""nofollow"">http://weblogs.java.net/blog/forax/archive/2009/08/27/diamon...</a>)",1283008916
1641816,comment,1641032,1641753,0,0,HilbertSpace,,,"Now you are getting a little closer to reality:  You paid a guy a year to learn.<p>For your ""A very good C programmer in general will do well enough."", that sounds wrong:  C is just Brian W. Kernighan and Dennis M. Ritchie; sorry 'bout that; for ""C"", it's just that one, thin, 'idiosyncratic' book where I still can't make sense, parse the syntax, out of an arbitrary 'declare' (I borrow from PL/I since C likely has no good terminology) statement.<p>C in Kernighan and Ritchie is a DIRT SIMPLE language.  In particular, there is NOTHING, not a single line anywhere, in the language on concurrency.<p>Being a ""very good C programmer"" is a bit vague:  To get very far in C, about have to dig into material definitely not in the book and likely not standard or even well documented.<p>In C one place I started screaming was all their talk about ""the heap"" and malloc().  Their 'heap' likely has nothing to do with the heap data structure in 'heap sort', and they never said what their heap was or how malloc() worked.  I've done things in dynamic storage allocation, and not knowing the details, ANY of the details, of what C does was a BUMMER.  I couldn't hope to design serious software, especially for an operating system with concurrency, without knowing in fine detail just how malloc() and free() worked.  Not a chance.<p>Note that Microsoft just gave up:  They know that their Visual Basic .NET, C#, common language runtime (CLR), etc. just MUST work for long running, serious, production applications.  So, there, first-cut, it is CRUCIAL to let programmers not have to worry about memory leaks.  Second, even worse, Microsoft had to find some dynamic memory allocation that didn't have the memory of the application just grow slowly over the days and after two months have the program slow to a crawl or just die.  So, they went for the gold standard solution:  MOVE the data in memory and do full 'garbage collection'.  Some questions remain, but so far my timings indicate that it at least mostly works.  Just dynamic memory allocation AIN'T easy, ESPECIALLY in an operating system that we want to run for months or years.<p>Next, for threading in C, maybe go to the Posix things.  Again, that's not really just C, i.e., as in Kernighan and Ritchie.<p>Next, in C there's the 'stack':  To get very far using C, very much need to know a LOT about the details of 'the stack', especially for anything with concurrency in an operating system, but the details are not easy to find and likely not even standard.  Uh, do some moving of data in memory and totally mess up some stack pointers!<p>E.g., I could never find any decently clear details from C compiler or linkage editor documentation on just what the 'stack limitations' were or anything about 'stack overflows'.  All clear as mud.  The hope is that such things just won't happen, and for serious code that's DUMB.  Special case of a general situation:  For serious software, even just in applications, CERTAINLY in an operating system, C is DUMB.<p>Then there's the really big elephant in the room on using C for concurrency in an operating system:  WTF does C do with an interrupt or an exceptional condition?  The broad problem is freeing various 'resources' and popping back the 'stack' of 'dynamic descendancy' (another term from PL/I internals), but Kernighan and Ritchie provide no documentation about C to let one design how to do such things.<p>So, as a serious language for concurrency and serious work, say, in an operating system, C just SUCKS because of lack of solid features and documentation.  Write trivial little word whacking 'filters' as in Kernighan and Ritchie, sure.  The last C I did was as Microsoft .NET 'unmanaged' code called from Visual Basic .NET 'managed' code using 'platform invoke' -- what I did looks solid enough, but I want to avoid that subject like a barrel of poisonous snakes.<p>If I'd had to do much with C, then I'd have screamed myself hoarse.<p>Somehow I suspect that concurrency has made progress past, say, just<p>C. A. R. Hoare, 'Communicating Sequential Processes',<p>now in PDF near the top of a Google search.  So, if you want some expertise in concurrency, then get someone who had a recent, solid course in the subject, did well in it, has applied it, and maybe has done some serious work with it.<p>Concurrency is now a newly, very hot topic due to many cores, Web sites with tens of thousands of user 'sessions' at once, corresponding loads on data bases, MemCache, etc.  The latest I heard was that there are some fairly serious concurrency bugs in some of the most important 'frameworks'.  Going forward, doing much with concurrency will be a challenge.  Such work will just scream out for some totally rock solid 'proofs of correctness' -- and major applications of keep it simple, stupid -- since there is no hope even in heaven of duplicating failures from bugs.  Zip, zilch, zero hope.<p>Mostly what people are trying to do is to get some better concurrency 'primitives' way above interrupts with save and restore registers, spin locks, Mutexes, even 'transactional' topics like deadlock detection and resolution, and give programmers some robust, easy to use tools that actually work.<p>For how to modify an operating system, looks like you should get with whoever owns the operating system and what their 'guidelines' e.g., on concurrency primitives, etc., are for modifications.<p>Again, part of success is good problem selection.  So, if you can't do all the significant technical work yourself, then either you didn't pick a very good project or have one boatload of money and time to recruit, select, hire, relocate, train, and manage people.",1283008872
1641815,story,,,1,0,messel,"Security versus Liberty in an Uncertain Economy",http://www.victusspiritus.com/2010/08/28/security-versus-liberty-in-an-uncertain-economy/,,1283008825
1641814,comment,1640384,1640384,0,0,faikr,,,Sweden,1283008697
1641813,comment,1641325,1641762,0,0,tomjen3,,,"It properly won't be enough just to put the binary there, but I do believe you over estimate the cost to porting your software, especially if porting is taken into account before you start to write it.",1283008525
1641812,comment,1639458,1639458,0,0,plainOldText,,,"Only someone like Steve Jobs could talk about core values and branding wearing shorts. It's only for a short instance where you can see his shorts. Right before he introduces the ad.",1283008493
1641811,comment,1639712,1641040,0,0,mcyger,,,"Simplicity is a sign of a well-run organization. You ever heard the line, ""I don't lie because I have a terrible memory""? If you have 15 different price plans, you now need to maintain documentation, train customer service reps, detail tiered specs in a computer system, update all of the information, etc. You get the idea. Complexity leads to higher costs.<p>If they offer one (or a few) options with consistent service and pricing, they will do them better with higher consistency and quality.<p>Makes me think of In 'N Out Burger...getting hungry. :)",1283008443
1641810,comment,1640446,1640446,0,0,JonM,,,"We've got this very badly wrong right now and are suffering the consequences. In short we are in the middle of a huge re-development of our core product. Unfortunately my co-founder (who isn't a developer) has been telling users various different ""launch dates"" (which have conflicted; and many of which we have now passed without the launch) on public and the pressure has really mounted on our public support forum.<p>The long and short of it is that I'm under enourmous pressure, because according to our users it's already behind schedule.<p>I don't want to break face by just saying that my co-founder has jumped the gun massively and was in no position to make the promises, so at the moment I'm just living with the embarassment and trying to keep my head down an get it out.<p>In his defense, there is a reason for this and I wonder what advice HN peeps would give.<p>Day-to-day senario......<p>User: Is feature xyz available?
Company: No
User: Will it be available in the future?
Company: This does seem be a worthwile addition and we will discuss it in our next development meeting.
User: When will this feature be added?
Company: We don't have a launch date.
User: Ok, when will this feature be available becuase I need to use it now?
Company: We don't have a launch date available.
User: When will it be available, I'm getting annoyed.<p>At this point my co-founder usually breaks cover and gives a vuage, fairly distant forward projection; ""in a month"".<p>Should we really just be saving ""no"" and keeping silent on good ideas even though we are developing them?",1283008440
1641809,comment,1641578,1641773,0,0,nck4222,,,"I probably should have said that as a reply to the Scott Gu article.<p>From that article: ""Unit Testable: The new view engine implementation will support the ability to unit test views (without requiring a controller or web-server, and can be hosted in any unit test project – no special app-domain required).""<p>I was wondering how that would work, since as you said, they're notoriously hard to test.",1283008407
1641808,comment,1639110,1641383,0,0,evo_9,,,"I can only speak for myself, I don't expect anyone to dress a certain way (beyond what has been covered - aka a suit is over doing it, trying too hard). But me, I typically wear a pair of nice dress paints, let's say charcoal gray. I'd pair that with a button down dress shirt, long-sleave - something that is s solid color, usually a bold choice there to stand out such as burnt orange or a burgundy for example. That's pretty much it other than of course matching a proper belt and shoes (in this case black shoes and belt, I'd go to Aldo's for that). Just swing into Banana Republic or Limited for Men; poke around those shops and you'll get the hang of it. Maybe pick up an issue or two of GQ and Men's Health while you are at it. You can also switch out the long-sleave shirt in the summer for a shirt-sleave polo style shirt; I'd again get something more modern from a shop like Limited/BR, but you get the idea.<p>Anyway, that's literally what I wear to work most days. I have 3-4 pairs of dress slacks from a good store like those, different colors - black, charcoal gray, dark brown and a light gray (almost a tweed). Then you can buy a variety of different colored shirts. Then you just need a pair (or 2) of black and brown shoes, and matching belts (though you can probably get away with black shoes, and a black belt with the brown slacks, but I personally like to really look 'compete').<p>It's funny but I was starting to think about creating a post or blog entry on this because it's not that hard to dress really sharp without going too far. Also, if you aren't good at picking clothing bring a girl with you, or just ask one of the store clerks, they are usually really into this stuff and can point you in the right direction (but always pick things that appeal to you in some way, allowing them to influence your choice, not make it for you).",1283008363
1641806,comment,1641199,1641559,0,0,mortenjorck,,,"Potential Awesomeness Reminders.<p>""Good morning! Did you work on [side project] yesterday? You're not going to be awesome unless you do!""<p>Simply being accountable to a mysterious voice on the other end of the telephone every morning might actually motivate a lot of people.",1283008317
1641805,comment,1638868,1641133,0,0,jacquesm,,,Thanks!,1283008252
1641804,comment,1641072,1641072,0,0,jeromec,,,"<i>A couple of people I have seen with have gone so far as to insinuate that the reason programming is to hard for most people, is because we design our languages to be too hard, just to keep people away from programming, and to secure our jobs.</i><p>That's like saying building engineers erecting a skyscraper in New York design their blueprints to be complex and confusing to keep other people away and secure their jobs. That's totally ridiculous. Anyone with this line of thinking is truly ignorant of the complexities and considerations required to carry out certain real world jobs.<p>To be a ""programmer"" means you can effectively communicate with, and manipulate a machine. The more direct your communication, the more you are considered to be a programmer. Microsoft became one of the most successful software companies in the world because their Windows operating system allowed anyone to become an effective <i>operator</i> of their own computer. If you can only manipulate, but not communicate with a machine you are an operator, not a programmer. Programming the machine has not become any less complex because of the Windows GUI; it's just the complexity of managing the computer is handled by the operating system. The reason nerds will always be better at programming/technology is that we actually have an interest in the complex details of underlying technology, and putting in the time to learn. Some will even <i>write their own operating system</i> as Linus Torvalds did, just for the heck of it. If you are someone who can't program, but wants to, roll up your sleeves and learn. Don't start making excuses diminishing the talent and skill actual programmers/engineers have attained because of your own shortcomings. That's insulting.",1283008196
1641803,comment,1640530,1640815,0,0,huherto,,,"""if you say something unPC"" or if you say something unPG ;-)",1283008182
1641802,story,,,76,13,jjacobs22,"How A Non-Programmer Launched A Huge Software-Based Business",http://mixergy.com/runkeeper-jason-jacobs-interview/,,1283008072
1641801,comment,1641217,1641217,0,0,albertzeyer,,,"Almost all open source projects are very happy to get additional help. It might be difficult though to be able to contribute to their source code in some cases if you have too less experience in the field (for example, to contribute to the Linux kernel, you either must have very good OS knowledge or specific knowledge about how to implement a new kernel driver for some yet unsupported hardware or so). And I guess from your question that you are mostly interested in contributing to the code.<p>What open source tools are you using yourself? Have you ever found some bugs in some of them? Or missed some feature? Then this might be a good place where you could start: Just implement that feature or fix the bug. If you don't really know how to provide your patch to them or where to start: Just speak with their devs; in most cases, they will be glad to help you out.<p>Some other questions you should maybe ask yourself:<p>Do you prefer to work in a very big project (KDE or so) or would you prefer to work in a very small one? You will find OSS projects of all sizes, even often just of a single guy/girl where you could ask to join him/her. The experience you will get might be quite different depending on the size of the project. I think, but that is also hard to tell, that it maybe might be more fun in a smaller team (because then you know everybody and you just need less bureaucracy). You will also find quite a lot of dead projects, i.e. projects where there is no active developer anymore. The old maintainers of such projects will be very happy if you tell them that you want to revitalize that project.<p>What type of project should it be? Some tool? A webbrowser (Chromium, Firefox)? A game? A whole Linux distribution (Debian, Ubuntu, Gentoo, ...)? A window manager (KDE, Gnome, E17, ...)? Depending on that, the programming experience you will get will also differ quite a lot. I have found that developing a game will often lead to the most wide range of experience and knowledge. (I have written an article about that: <a href=""http://www.openlierox.net/wiki/index.php/Why_game_development_is_a_great_learning_playground"" rel=""nofollow"">http://www.openlierox.net/wiki/index.php/Why_game_developmen...</a> )<p>Where I am at it: I am one of the leads of the OpenLieroX project and of course, we can also need some help. :) We are a quite small team (3 devs basically) and have a quite huge codebase right now (about 300k loc -- could need some cleanup, though). Just for the purpose to tell people where to start, we also have a small article: <a href=""http://www.openlierox.net/wiki/index.php/Contribute_to_the_source_code"" rel=""nofollow"">http://www.openlierox.net/wiki/index.php/Contribute_to_the_s...</a><p>In that article, I also describe some further ways how you could get more experience at coding. Another way might be to start your own project from scratch, maybe together with some friends (or ask here or elsewhere for some strangers who might join you). However, this might be a quite difficult taks. Often, you are overestimating what you can do and the project will become quite big and often stay unfinished forever.<p>OpenLieroX started as an almost dead project. It was closed source in the beginning (called LieroX), then the original developer (just a single guy) stopped the development. And he did the right thing: Before letting the project die, he released the source code. And there is where OpenLieroX started. First there were two separated projects, one by me, one by another guy but once we have heard about each other, we also did the right thing and merged to one single new project.",1283007680
