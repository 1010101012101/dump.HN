ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
76040,comment,76007,76037,0,0,nostrademons,,,"Concurrency in web languages is a non-issue, because each request is independent (or should be, if you have a proper shared-nothing architecture).  You simply run multiple processes and give each process a full core.  Most FastCGI/SCGI webserver modules have functionality built-in to multiplex among backend processes.<p>Concurrency in the database is more interesting, particularly since that's where the bottleneck is in many web apps.  But that's a C/C++ problem, and many DBMS vendors have already invested a large amount of effort into solving it.",1194188250
76039,comment,75774,75774,0,0,aceregen,,,"I pay my due respects to all programmers if this article summarized what you have all went through.",1194187634
76038,story,,,20,9,drm237,"The factors of entrepreneurship",http://troutgirl.wordpress.com/2007/11/04/the-factors-of-entrepreneurship/,,1194187276
76037,comment,76007,76020,0,0,bilbo0s,,,"I think 'race' is one way of looking at it.  Another way to look at it is that there will be more than one 'winner'.  Just like today, I think in the world of tomorrow people will use more than one programming language.  So all of the languages that expect to be around tomorrow will need to evolve into languages for controlling concurrent systems on massively parallel architectures.<p>You are correct in saying that some languages are simply given as winners.<p>Erlang is a VERY impressive language from a performance standpoint.  That said, it really needs to be used in conjunction with some front end UI language to present the results of all of its processing.  Make no mistake about it, if one has so much data that one will need say 32 cores to process it, then a clever presentation layer is a must.  Another drawback here is that, for those Erlang programmers who are something other than elite, Erlang will handle all of the locking and synchronization on its own.  I think experienced senior programmers see where that one is going.  That said, the way Erlang implements concurrency is cool.  I like simple!<p>In my opinion, Java is another clear winner here.  From Wall Street systems with US$900,000,000,000 a day in transactions flying through them, to medical imaging systems rooting out cancerous pathologies, to petroleum exploration systems trying to find the precise limits to all of that new Cuban oil, Java is at the center.  When it comes to handling massive datasets in a maintainable fashion, Java is second only to the C,C++ languages.  Some would even say that C or C++ code is less maintainable than Java.  I would say they should hire new C programmers.<p>Lastly, C, C++ and Assembly will always be around because there will always be someone,(Carmack) who wants to outshine everyone else.  And we can all agree that nothing flies like an assembly routine.  As a bonus, we can get exacting control over concurrency, synchronization and locking.  It may be difficult to believe, but this option is attractive to a certain class of hacker.<p>Concurrency in todays web darlings, Ruby, PHP, and Python will be challenging.  I think someone out there will simply come up with a new language.  Or the web guys will switch to Erlang over time.  They will run into a data size problem though due to the way Erlang implements concurrency at a low level.  It will be interesting to watch them problem solve that.<p>On the front end, it's easy . . . Microsoft wins.  Anyone who understands concurrency in an intimate fashion knows the challenges of getting a scripting language like JavaScript to support it in a satisfactory fashion.  Do you lock and synchronize for the developer?  Do you let him/her?  Do you copy the heap and send messages?  What about client side memory in a tabbed browser?  The questions go on and on.  Java may have somewhat of a chance here, depending how things go, but basically Microsoft will continue to have the majority lock.",1194186675
76036,comment,75902,75933,0,0,jsmcgd,,,"The article doesn't mention legal downloads which might skew the results even further in favour of filesharing and will to some extent explain why CD sales are falling.<p>Another reason why I think CD sales are falling is because the music that the present day record industry puts most of its effort into promoting is of a lower quality than it used to be. I think things like Napster spooked the industry, it reacted incorrectly and it became extremely profit orientated to the point that it actually became detrimental to profits.",1194185890
76035,comment,75943,75943,0,0,ralph,,,"Anyone who saw _Top Gear_ last week will know these things are hilarious, especially if you're Jeremy Clarkson's size.",1194185096
76034,comment,75776,76032,0,0,greendestiny,,,"Sorry my comment wasn't really very clear. If you were running  a YC clone, how would you feel about encouraging people to join startups? I think you're a little quick to dismiss people who aren't initially very keen on startups. Just questioning if perhaps your opinion comes from a place where you don't really want others to see the startup light.",1194184873
