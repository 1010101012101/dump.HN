ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
4495353,comment,4494384,4495153,2,0,Ygg2,,,"I think term teleportation is still valid because they can entangle and teleport any kind of particles. Photons are merely used because of their convenience.<p>You can entagled protons, electorns. Hell, I think they managed to demonstrate entanglement on a larger scale.",1347181193
4495352,comment,4494739,4494739,-3,0,ArekDymalski,,,"We are The Scientists. Struggling to fight critical problems since 1964.",1347181146
4495351,comment,4494995,4495342,1,0,milkbikis,,,"Hmm, that wouldn't let me keep the colors etc. I'm on iTerm btw, perhaps you mean the title in a screen/tmux session?",1347181129
4495350,comment,4495089,4495089,13,0,tjoff,,,"I'm quite skeptical as to how you could ever come to a fair conclusion with a juror that isn't supposed to know about the field specifically.<p>How are you supposed to make an argument that some software patent is trivial to someone that hasn't programmed a single line in their life? It would take years to educate someone as to how computers and languages work for them to get any reasonable idea about what the case really is about.",1347181016
4495349,story,,,8,3,denzil_correa,"Cicso Lawful Interception Architecture [pdf]",http://cryptome.org/2012/09/cisco-lia.pdf,,1347180991
4495348,comment,4489288,4491198,1,0,ericingram,,,"The whole framework is very small, so yeah it would be easy to separate.",1347180973
4495347,story,,,1,0,NoBorders,"Estonias plan to get 6 year olds coding is a stroke of genius",http://gigaom.com/europe/estonias-plan-to-get-6-year-olds-coding-is-a-stroke-of-genius/?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed:+OmMalik+(GigaOM:+Tech),,1347180944
4495346,comment,4491216,4495122,2,0,marshray,,,"<i>I tried reading the code in intrusive/list_hook.hpp and intrusive/list.hpp, and it's quite difficult to read.</i><p>Yeah those Boost projects sometimes go off the deep end with the overengineering and abstraction a bit.<p><i>However, it does seem that it inserts an extra pointer to the member (beyond the prev/next) in order to avoid the ""cast"".</i><p>If it's a true C++ pointer-to-member often those can be completely optimized out if the compiler has the type information available at the time.<p>I've done a (much simpler) intrusive DLL template that certainly did not have that additional pointer, but I'm not sure if it met all of your requirements. I know it supported membership in multiple lists, but I don't think they were heterogeneous collections.<p><i>If it indeed does so, it is again less optimal than Linux's list.h. On 64-bit machines, 8 extra bytes for each list element is not always negligible.</i><p>Agree, I'm all for performance. At least when I'm on that kind of project.<p><i>Also, the examples do not showcase using the same list member node to put in multiple lists.</i><p>For that you could derive from multiple base hooks with different tag classes, or compose multiple member_hook<class T, class Hook, Hook T::* PtrToMember>. Each would have a different PtrToMember, but it would be known at compile time and thus should be optimize-outable.<p><i>There's also the unsafety of putting the list node in a union (mentioned in the article) which adds unsafety regardless of templates or not.</i><p>Boost has a safe type-discriminated union class you could probably use for that if you wanted to.<p><i>With list.h, it is possible to get the same safety (unless I am misunderstanding something about the boost example) by wrapping the list anchor and node structs with a struct (typically done by a macro to define the anchor/node), which adds an array-of-0-elements of the type of the container. This allows adding the same type checks demonstrated here using templates, implemented in the list iteration, insertion/deletion and downcasting macros.</i><p>Perhaps you could add an array of size 1 to represent the element data following the last pair of pointers. Or I may not be understanding this. Can you point me to an example online?",1347180915
4495344,comment,4492914,4494055,2,0,GeneralMaximus,,,"I've heard four to six hours a day, but I cannot cite sources. This Google query returns some promising results but you'll have to dig deeper than this for scientific studies: <a href=""https://www.google.com/search?q=six+hours+per+day+creative+work"" rel=""nofollow"">https://www.google.com/search?q=six+hours+per+day+creative+w...</a>",1347180880
4495343,comment,4495101,4495280,4,0,hasenj,,,"> I don't think my JS/CoffeeScript code is (significantly) less or more expressive and maintainable than the Python code I would have written<p>The loss does not come from JS or coffeescript, it comes from everything being done with callback (whether nested or not).",1347180856
4495342,comment,4494995,4495282,1,0,ralph,,,"I too prefer just PS1='$ ', I want the cursor to be the same distance from the margin every time, to have maximum length for typing without wrapping, and the ability to put in a few separator lines between command output by just tapping Return.<p>However, for your problem, have you considered the terminal's title instead of the top line of the tty?printf '\033]0;foo\007'",1347180806
4495341,comment,4495128,4495315,1,0,stinos,,,"kinda true, but on the other hand there are enough people on SO that will comment on the question instead of answering it, and the comment will be ""what have you tried?"" Sometimes I even see comments that really try to puch the OP to start thinking. Although I'm really in doubt if that helps, you cannot expect to change someones mindset with some comments.",1347180784
4495340,comment,4494778,4495260,3,0,jliechti1,,,"I think the bigger problem in Mandarin is the large number of homophones (at least, for me).<p>To help speakers of non-tonal languages understand how difficult it is to differentiate between tones, after you get used to hearing them - it is as apparent as the differences between ""rebel"" as in ""to rebel"" and ""rebel"" as in ""He's a rebel.""<p>So hearing is not as difficult as might you think. However, in line with what cageface said, I think it is easier to hear the difference, than to reproduce it yourself.",1347180693
4495339,story,,,1,0,julelara,"Arizona Cardinals vs Seattle Seahawks live stream watch here NFL football",http://www.facebook.com/pages/Arizona-Cardinals-vs-Seattle-Seahawks-live-stream-watch-here-NFL-football/271003493010537,"Arizona Cardinals vs Seattle Seahawks live stream watch here NFL\nfootball Regular season 2012 Week 1 and also enjoy full season\nSeattle at Arizona\nMatch scheduled: Date : SUN, SEP 9 2012 Time: 4:25 PM (ET)\nNFL Regular season 2012 Week 1 venu: U of Phoenix Stadium\nArizona Cardinals vs Seattle Seahawks live stream watch here NFL\nfootball,Arizona Cardinals vs Seattle Seahawks live stream watch here\nNFL football,Arizona Cardinals vs Seattle Seahawks live stream watch\nhere NFL football,Arizona Cardinals vs Seattle Seahawks live stream\nwatch here NFL football.",1347180530
4495338,comment,4494995,4495332,1,0,milkbikis,,,"I used the ANSI control codes for moving the cursor, which seems to overwrite previous lines. Not sure if there's another way to achieve that without overwriting lines though.",1347180512
4495337,story,,,1,0,joschi,"Creating Advanced MySQL-Based Virtual Hosts On Lighttpd (Ubuntu 12.04)",http://www.howtoforge.com/creating-advanced-mysql-based-virtual-hosts-on-lighttpd-ubuntu-12.04,,1347180489
4495336,comment,4495013,4495328,10,0,jeffool,,,"Which, in my case, allowed for bankruptcy. Until I hit financial hard times a few years later. By that time, they had (in 2005) retroactively removed my ability to declare bankruptcy on private student loan dept.<p>(And for the record, I don't expect you to debate every point or be an expert on the matter. I'm just saying that it's not a cut and dry issue, in my mind.)",1347180374
4495335,comment,4495101,4495298,4,0,hasenj,,,"No, that's not the basic reasoning here.<p>And btw, I actually love the Japanese language, I find it more poetic and actually more expressive too, because you can nest expressions more easily than in English or even Arabic (my native language).",1347180300
4495334,comment,4492678,4494033,1,0,stinos,,,"""are you doing that out of a need to have control and order or because you really think it is a worthwhile use of your time?"" both actually. For example I also do some woodworking, bicycle maintenance etc, requiring a bunch of tools. When starting some work I really like that I can think of any tool and just pick it up without having to look for it, could even say it makes me happy, while at the same time not finding something can seriously get on my nerves. At the same time, sometimes when putting back all tools after some job, I really think ""ha, this may take some time now, but it will be worth it next time"". Does all this affect my life? Not really since I'm used to it and it takes only a fraction of time/thinking in comparision with the rest of it.",1347180280
4495333,comment,4493779,4494439,2,0,akaBruce,,,"I'm going to start by saying I really don't know, but here are my guesses. It's all about the way they collect data for advertising and for analytics.<p>For example, Twitter gives you the option to tailor itself (its ads?) based on the websites you visit. <a href=""http://i.imgur.com/EWU2l.png"" rel=""nofollow"">http://i.imgur.com/EWU2l.png</a>\nFacebook tracks you with their Like button, I imagine Twitter is doing something similar. And while they can track you while logged out, they would probably be better off if they could tie that information to all the followers, followees, and behaviors associated with an account.<p>My second example is embedded tweets. Although I can't find the article or blog post, I remember seeing a while back that Twitter wanted to start pushing people to use their embedded tweets rather than images.\n<a href=""https://dev.twitter.com/docs/embedded-tweets"" rel=""nofollow"">https://dev.twitter.com/docs/embedded-tweets</a><p>Aside from providing the user with a better experience (like being able to click on the users' names to go to their profiles) or letting Twitter control the user experience, this also allows Twitter to embed tracking pixels.\nHighlighted in this picture are the tracking pixels loaded in Chrome when I embedded the latest tweet from the Twitter account on a web page. <a href=""http://i.imgur.com/SeVaQ.png"" rel=""nofollow"">http://i.imgur.com/SeVaQ.png</a><p>And this next example wasn't made for the web, but it plays into how they're trying to boost their own analaytics. While wrapping every link with their t.co url shortener does give them control over thing like killing spam links, it also lets them track which links became popular from which tweets. That's why they'll still use their t.co links on already short links (reminder: in my opinion). I believe this solution works out for them because if someone clicks a link from their official Android app or from a 3rd party app like MetroTwit, they can still track the referral came from a tweet.<p>To summarize, I believe they're trying to boost their advertising relevance and trying to improve their analytics offerings to business accounts by using browser cookies.",1347180228
4495332,comment,4494995,4495282,1,0,pdenya,,,"By messes up terminal history do you mean when you push up in terminal the previous lines that show up are rendered badly or that your actual history is effected in some way?",1347180185
4495331,story,,,1,0,hermioneway,"Google-backed Pashash wins Startup World: Cape Town",http://thenextweb.com/africa/2012/09/08/pashash-wins-startup-world-cape-town/?utm_source=HackerNews&utm_medium=share%2Bbutton&utm_content=Google-backed%20Pashash%20wins%20Startup%20World%3A%20Cape%20Town&utm_campaign=social%2Bmedia,,1347180123
4495330,comment,4495128,4495296,7,0,Ogre,,,"Just a little while ago a family member who has signed up for a Coursera statistics course was asking if I could help ""Download an R program"".  It took me a minute to figure out she really did mean the programming language, she didn't tell me straight off it was a statistics course, and she's about the last person I would have expected to take a course that involved programming of any sort.  But the class does say it's ""quite literally for everyone"", so good on her.<p>When I asked if they have instructions on how to do that in the course material, she told me there's a thing that says ""click here to download"" but she hadn't tried it yet.  She literally hadn't even tried clicking the thing that said it did exactly what she was asking me to help her do.  Not ""I tried it and I got an error"" or even ""I tried it and it didn't work"", or better yet, ""I downloaded something and don't know what do with it"" no, not even tried.<p>I'm now dying of curiosity to find out what happens the first time she has to actually write code vs. just typing stuff in she's been handed.  I might have to send her this article, we'll see!  I've never done any R programming, though it now seems inevitable that I will be doing some in the near future.",1347180066
4495329,story,,,1,0,dgmax,"     -  ",http://www.7raka.com/vb/t1004.html#.UExWEVZxhRk.hackernews,,1347180062
4495328,comment,4495013,4495261,6,0,patio11,,,"You go to a room and are given a two page contract, written in fifth grade English.",1347179956
4495327,comment,4495101,4495229,3,0,exogen,,,"Do you mean this SFS? <a href=""http://www.fs.net/"" rel=""nofollow"">http://www.fs.net/</a><p>That appears to literally be the official website.<p>Sorry, but your post just sounds like ""get off my lawn!"" But good luck trying to convince everyone to write their web apps in C++.",1347179914
4495326,comment,4492619,4495106,1,0,brandoncapecci,,,"Why am I getting downvoted for this? I am not making any commentary on price discrimination but instead, saying that the artificially created scenario could at least be more approachable for readers.",1347179879
4495325,comment,4494016,4494016,3,0,pknerd,,,"All  I know that whenever I needed a help, the SO community generously came forward and helped me. Thanks Joel and His Team",1347179824
4495324,comment,4493701,4495138,1,0,snogglethorpe,,,"> <i>why iPhone was so popular in Japan while the bleeding edge Japanese headsets were relegated to the home market? Surely it wasn't just marketing on apples part.</i><p>[Not sure what you mean by ""relegated"" to the home market -- Japanese phone makers have never shown much interest in foreign markets, because their attention was pretty fully occupied with the huge Japanese domestic market which they understood well.]<p>Of course the iphone wasn't just a marketing success.  As I noted, it really did offer a vastly improved experience over previous (and current non-smartphones) Japanese phones, which were often very <i>functional</i>, but confusing, inconsistent, etc.  [This isn't really just a phone thing... Most Japanese software, especially that written by hardware manufacturers, has pretty much always been like that.]<p>Worse, there was a tendency to try to nickel-and-dime the user to death, attempting to charge for all sorts of little services and features one could access from phones, often without a good indicator of how much the actual cost would be.  The iphone/android's concept of mostly limiting such payment to a well-defined place (the app-store) is pretty refreshing by contrast.<p>Until the iphone showed up, makers concentrated mostly on adding new ""functionality,"" without putting much effort into actually improving the base experience.  There was little incentive for them to do differently, because everybody else was doing the same thing, and Japanese companies tend to have both a laser-like focus on constant incremental improvements and an aversion to riskier large scale changes.<p>The iphone upset this cozy little arrangement, and android has allowed other makers to react to it pretty quickly.  Still, smartphone adoption in Japan is only half that in the U.S. or the U.K., which I suppose is due to the more functional nature of Japanese non-smartphones compared to those in other countries.<p>But, anyway, yeah, the iphone changed things; my point was only that Apple's innovations were mostly in software, and less so in hardware.",1347179777
4495323,comment,4491766,4492639,2,0,tangus,,,"I don't think they grew back; they are probably the result of modern irrigation.",1347179775
4495322,story,,,9,2,blumentopf,"Is your tablet password 235673? I think I saw it on the news yesterday.",http://blog.amp-off.com/dear-mrs-ashton-eu-foreign-minister/,,1347179696
4495321,comment,4494778,4495111,2,0,lifeisstillgood,,,"I honestly do not - I fear for China.<p>Over the past 150 years this past generation is the only one not to suffer some horrific war, genocide or starvation.  China has a revolt somewhere almost daily, it has none of the institutions we are pretty sure are necessary to managing power (independent judiciary, enforceable contracts etc) and has worrying signs of becoming a mafia state, with none of the benefits of one guy in charge ala Putin .<p>So basically there are a huge number of ways it can go wrong, very little to hold it together except the fear that if we don't keep on this course it will be a lot worse.",1347179533
4495320,comment,4495013,4495013,8,0,nchuhoai,,,"Giving out loans to people who shouldn't get them because they can't repay them? Sounds familiar",1347179521
4495319,comment,4494629,4494916,5,0,JamesLeonis,,,"I think one reason the conclusion doesn't satisfy is because the question of ""What do we do in a post-work world?"" is horribly open ended. I believe the question is relevant as technology and automation increasingly penetrate manufacturing, business administration, and (soon to be) transportation to name a few.<p>To put it bluntly, for most programmers, it's our job to put others out of a job. The things we build make it easier to automate, streamline, and other buzzwords, which generally means that a company doesn't have to keep as many workers on the payroll. The business administration side is fairly decimated, and I believe the falling prices of 3D printers and robotized factories will lead to automated on-demand manufacturing. This means more people won't be able to find work, which will depress the demand for products. It's an interesting problem.<p>> shouldn't it follow that there are potentially a myriad of possible projects which might be amazing and worthwhile things to build, even if they obviously won't turn a profit?<p>Yes. I would argue that the artifacts of human culture (portraits, frescoes, symphonies, statues, etc), in many cases, have no obvious financial benefit at the time. They exist because they appeal to our aesthetic side and the creators lived at the pleasure of rich sponsors.<p>Many programs of the Open Source universe started as an annoyance or a fling without any thought of profitability. Several tech companies started as research projects or ""the itch"" with no money in sight. Much of our software is still built pro-bono by an army of volunteers.<p>In this way programming starts to mirror the art world. The mindset to adopt is to create for the sake of creating, and letting others critique the work. Think about a programmer version of art hostels in Paris of early 20th century. In fact, go watch Midnight in Paris and see if you can picture (hah!) programmers drinking and talking instead of artists and writers. There are programmers out there like that, like Mr. Bellard and his DIY cell phone base station [1] or John Carmack's Armadillo Aerospace [2]. They build for the sake of building something cool.<p>[1]: <a href=""http://news.ycombinator.com/item?id=4469424"" rel=""nofollow"">http://news.ycombinator.com/item?id=4469424</a>\n[2]: <a href=""http://en.wikipedia.org/wiki/John_carmack#Armadillo_Aerospace"" rel=""nofollow"">http://en.wikipedia.org/wiki/John_carmack#Armadillo_Aerospac...</a><p>For your second question, I can only assume that many entrepreneurs enjoy the challenge of building successful companies. Being wildly successful means they have additional capital and can chase larger and more complex problems. SpaceX comes to mind. Granted I can't think of a founder that was very successful start something trivial (I'm sure they're out there).",1347179516
4495318,comment,4495101,4495311,9,0,luriel,,,"If anything Node is much more limited than the alternatives, both because of the language it uses, and because of limitations of the implementation, which basically (rather ugly hacks aside) doesn't scale at all beyond one core, and if any of your code turns out to be CPU bound, your performance goes right out of the window.<p>Go and Erlang are much better both in the concurrency models they provide and in their performance and scalability. Not to mention they are real languages carefully designed over many years by talented language designers, not the result of unfortunate accidents of history hacked up in two weeks like JavaScript.",1347179431
4495317,comment,4495101,4495101,1,0,protez,,,"Everything is terrible unless it fits. Period.",1347179411
4495316,comment,4495101,4495101,5,0,gothy,,,"Node is not for everybody. Node is not for everything.<p>2 hasenj: try using coffeescript to get expressiveness if you're coming from Python(like I do). You'll be much more comfortable with it. Especially when you're using it for both frontend and backend.<p>Node was a ""why not?"" choice for my last small inhouse realtime analytics. I could write it in python, but I've been writing LOTS of CoffeeScript recently so I've tried to go with node and redis. And it was a perfect fit for this task.<p>I'm pretty sure I wont use it for some complex business logic or number crunching. But that's not because I'm afraid to loose maintainability or peace of mind. It's because that would be just stupid, there is a lot of better tools for this. You should keep in mind whats your platform nature, whats it good for.<p>Every contending platform or language has it tradeoffs. I like ErlangVM features and philosophy, but I can't pass over the language weirdness. And VM speed sucks. And the community is much smaller. Nodejs is booming, you should agree on that.<p>Go is great, I'm planning to use it for my next ""why not?"" project. But it takes a lot of things you love in dynamic languages away. You choose between ""program performance vs programmer performance"". And again, the community and adoption is taking its first babysteps.",1347179344
4495315,comment,4495128,4495128,6,0,corwinstephen,,,"I think at least part of this phenomenon can be attributed to what I call the StackOverflow effect, that being point-based incentives.  People on SO answer questions much of the time because they believe their answer will earn them karma (or whatever it's called on SO).  In fact, I'd be lying if I said Hacker News karma didn't have at least a little influence on my decision to actually take the time to write this comment.<p>Because of the StackOverflow Effect, people will choose to answer even the worst questions as if they're fair play, simply because they have an answer they believe will earn them a couple points.  If points were not involved, I'm willing to bet a lot more people would get told off for their poor quality questions, and a lot less people would continue to post them.",1347179224
4495314,comment,4492619,4494550,4,0,stickfigure,,,"Yes and yes, but not necessarily.  Customers do not have perfect information about the market, and especially not about the inner workings of your company.",1347179201
4495313,comment,4495101,4495167,4,0,ebiester,,,"What bothered me is that I couldn't find a way to find out what code had triggered an event, or what listener was attached where. So, suddenly you're getting an error in code and you can't figure out why it's even being called, because it was attached from one of eight libraries that you picked up as to not reinvent the wheel.<p>...and grep emit isn't an effective solution. :)<p>I put a question up at SO and never received a response. <a href=""http://stackoverflow.com/questions/12215273/how-are-event-triggers-debugged-in-node-js"" rel=""nofollow"">http://stackoverflow.com/questions/12215273/how-are-event-tr...</a> -- the problem itself I finally worked through, but then I ran into another. And another. And while I know my fair share of JS, and have no problem with async programming, node.js still felt awkward after a month. So long as I was in my own code, I was fine, but reasoning about code I hadn't written was painful not because of the language, but because of the flow it took.",1347179122
4495312,comment,4494384,4495278,1,0,marshray,,,"<i>Whatever scheme it was encrypted with will then have to stand up to decades of advances in algorithms and computing technology.</i><p>So will the block or stream cipher you encrypted the data with.<p><i>Quantum computers will probably break most currently used factoring-based schemes (including elliptic) eventually</i><p>That seems extremely optimistic to me. Given the current state of the technology, it's a little like an astronomer discovering a distant new star and then promising to open suntan parlors from its concentrated rays.<p>Try this thought experiment: For a given set of security and speed requirements, take the money you would spend on a pair of quantum key exchange devices and spend it instead on accelerator hardware for non-quantum ECDH operations. How much longer (and more secure and reliable) can we make the key exchange parameters with this conventional hardware within the same time limits?",1347179004
4495311,comment,4495101,4495264,7,0,msy,,,"I understand node is quite good at those scenarios but is there any real advantage over say Ruby/EventMachine or Python/Twisted or if you're serious about it scaling, Erlang/OTP? Evented systems are great for those scenarios but I can't work out if there's some secret sauce in Node I'm missing or whether there's a lot of excitement from people that don't realise there are mature solutions to those scenarios in other languages.",1347179000
4495310,comment,4495013,4495013,8,0,forgottenpaswrd,,,"Those are the problems of giving free money, they will give money to people that can't pay it back and will inflationate the cost of services for all, because demand has been artificially expanded.<p>The law of unintended consequences. You make something to ""help"" and you destroy society in the process.<p>I can't understand that someone who is $55.000 in debt has a SUV, like the woman in the article. I prefer to live poor but free, in fact I had to in the past.<p>In Spain something similar happened with real state. In the bubble I saw banks giving 300.000 euros to a 18year old with a yet to pay Mercedes at the door. Those people will pay refinancing their debt. This made houses prices to skyrocket. Now this banks needs to be ""saved"".",1347178841
4495309,comment,4494739,4494739,2,0,lignuist,,,"I recently heard in a documentary, that John Lennon detuned his Guitar a bit all the time.",1347178830
4495308,comment,4495013,4495230,2,0,clobber,,,"Sounds like an answer from an affluent, white male college student to me!",1347178777
4495307,comment,4494384,4494707,1,0,javert,,,"No, because the differentia of the definition of cloning does not reference maturity (age).",1347178747
4495306,comment,4495101,4495101,1,0,dgudkov,,,"Offtop: Why clicking your link leads to downloading an application on Nexus7?",1347178698
4495305,comment,4495101,4495101,41,0,luriel,,,"Node.js is one of the worst things to happen to the software industry in recent times, a whole generation of programmers are being taught the worst of all ways of doing concurrency, in a system that doesn't scale either in performance or project size and with one of the languages most plagued by pitfalls ever created.<p>JavaScript was already painful enough in the browser, why on earth anyone ever thought it was a good idea to use it on the server boggles the mind.<p>We will be paying the price of this misguided hyped fad for decades to come.<p>Of all the ways of doing concurrency, callbacks are by far the worst, Twisted was plagued by them and is the main reason why it failed, and that was with a much more sane and reasonable language like Python (stackless Python was a much better alternative and used a model similar to Go's CSP).<p>And the sad thing is that there are much better alternatives around with much more sound models and environments, Erlang and Go are the two obvious examples, and that is for the highly specialized situations where you have great concurrency needs, for any other problem anything else will be much better than Node.js, even PHP.",1347178682
4495304,comment,4494644,4494870,2,0,heyitsnick,,,"So you've never bought a newspaper or magazine? Bought a ticket for a sports competition? Pay for a TV subscription? Watched a film with product placement in it? Ever seen product advertising in an aeroplane?<p>Ever bought a paperback book? They all come with adverts for other book at the back, loose-leaf inserts etc.<p>The concept of partly subsidizing the cost with additional advertising is hardly a new business idea. It would seem almost impossible to <i>never pay for a product with ads</i> as you claim.",1347178668
4495303,comment,4493959,4493959,2,0,buro9,,,"There seems to be confusion between the filesystem and the metadata.<p>The filesystem is for storage... it's only important to be able to group tracks together in small batches (releases - albums/singles/EPs) to be able to manage the files<p>The metadata is for searching, grouping and locating in your music player.<p>With that in mind, a lot of the problems he's cited vanish.<p>I have ~84,000 tracks from over 6,000 albums. The result of a 5 year ripping spree after a decade worked in the music industry.<p>Every track, with no exception, has been scanned by MusicBrainz Picard, had it's PUID generated and meta data normalised.<p>I've allowed my definition of genre be influenced by general opinion... I simply learned how the mass tag things.<p>The result is that I can find everything in my interface (Squeezebox) within seconds.<p>The file storage I only need to care about for management of the files, and copying to my portable player or deleting old releases (which I do rarely, but it does happen).<p>The file storage starts with file type:<p>MP3|FLAC|FLAC_9624<p>Below those are folders for high level type of content:<p>Artists|Classical|Spoken Word|Compilations|Soundtracks<p>Within Artists I used<p>Artist/Release Name[ - Catalogue Number]/[Volume/][Media/]Track Number - Track Name<p>I only fill in catalogue number if I have two versions of the same titled release... i.e. Quadrophenia by The Who I have a couple of versions of.<p>I only fill out Volume if this is a multi-volume release.<p>I only fill out Media if this is a release that spans multiple CDs or DVDs.<p>So the short version of that might be:<p>FLAC/Artists/The Who/A Quick One/02 - Boris the Spider.flac<p>And a long version might look like:<p>FLAC/Artists/The Who/Quadrophenia - Polydor 2777840/CD2/01 - 5.15.flac<p>I have no problem at all storing and finding tracks, and I've no problem at all searching for tracks.<p>One of the good things about Squeezebox is that when you search it searches all metadata and the full file path. So a search for ""quadro poly"" would turn up the Polydor version of Quadrophenia.",1347178555
4495302,comment,4495101,4495218,3,0,tfb,,,"Just today I devised a pretty solid method to build a fairly complex node.js app while keeping it simple, maintainable and scalable.<p>I like the way node kind of enforces modularity, but for something as complex as the backend (super-flexible api for a frontend dbms) required for my project, it would save a lot of time/effort/ugliness-of-code to have a few objects on the global scope while allowing individual parts to be split up into their own files; e.g., a few utility functions, String/Array.prototype functions, a socket.io instance, and a redis client instance, among other things.<p>And to make things manageable and more extensible all while minimizing duplicate code, I ended up using John Resig's ""Simple Javascript Inheritance"": <a href=""http://ejohn.org/blog/simple-javascript-inheritance/"" rel=""nofollow"">http://ejohn.org/blog/simple-javascript-inheritance/</a>.  I like being able to simply call Class.extend({}) to create/extend any class with access to its ""super"" functions.  Each class is contained within its own file, of course.<p>The method is pretty simple:\n1) Organize and order the files like you would on a client (web browser) where ""global"" variables are allowed.\n2) Use some program to concatenate the files in the correct order into a single node app.js file for testing or production.<p>I'm currently using a batch script (yes, I use Windows :P) that looks something like this:<p><pre><code>  del app.js\n  type global.js >> app.js\n  type appBegin.js >> app.js\n  type loggur.js >> app.js\n  type classes\Class.js >> app.js\n  type classes\Client.js >> app.js\n  type get.js >> app.js\n  type post.js >> app.js\n  type set.js >> app.js\n  type socketsOn.js >> app.js\n  type appEnd.js >> app.js\n\n</code></pre>\nDon't get me wrong, node's module system <i>is</i> used when it makes the most sense.  But for what I need to do, this works perfectly.  It doesn't promote spaghetti code the least bit; everything is easy to read and follow (could even call the code pretty!); it's 100% clear which objects are shared (especially since most files contain a single object or class); and as long as the method is used consistently, you get all the benefits of node/socket.io while maintaining cleanliness and scalability.",1347178467
4495301,comment,4495002,4495002,2,0,kennyma,,,"Cannot agree more with Tom Friedman and Van Ton-Quinlivan on this subject. Job skills are changing so fast that the only way to stay relevant is to be a continuous learner. I want to add that people need help figuring what to learn. This is why LearnUp.me (I work there) is working with California Community Colleges to help those that are ""ready soon"" and ""far from ready"" figure out what they need to learn for open jobs.",1347178411
4495300,story,,,1,0,yosfahly,"    2  75",http://3rabawii.blogspot.com/2012/09/2-75.html,"    2  75<p>      2  75<p>      75 <p>     75 -  ",1347178378
4495299,comment,4493719,4495240,2,0,jakebellacera,,,"Well it looks like they have an approval process so I feel that they can easily ban users that abuse their service. With that said, I'm sure that's an issue they will have to eventually face, but that is the liability that all hosting companies have.",1347178345
4495298,comment,4495101,4495101,17,0,chc,,,"Japanese is a terrible language. I tried speaking it for a while, but I can just get my ideas across so much more easily in English. It's just easier. This must be because Japanese is terrible.<p>That seems to be the basic reasoning at work here.",1347178331
4495297,comment,4494644,4494795,2,0,heyitsnick,,,"One perspective is you pay to have the adverts removed; the other is Amazon sells an optional lower-price kindle at cost and subsidizes it with advertising.",1347178306
4495296,comment,4495128,4495128,4,0,enos_feedler,,,"My wife and I were just talking about this today but in a different context. She is a recent PhD grad and the new PhD students entering her research group email her quite often asking things like ""I am TAing course X and I heard you did as well, what should I be doing?""  They ask one sentence questions and expect some rich essay of an answer that is going to solve all of their problems.  Just lazy if you ask me. So this pattern seems to extend beyond just software (as pointed out in the original post).",1347178269
4495295,comment,4491766,4494818,1,0,nessus42,,,"<i>> None of the film emulsions (prior to NC portra) really give you a contemporary look. To get that, you have to bring the image into digital.</i><p>I went back and had a look at the photos, and you do have a point. The ones that are most striking to me, though, have--to my eyes, at least--an HD video look to them, not a Photoshop look. And that's one thing that's striking about them to me: They look so immediate and real, like they were shot yesterday. This property is something we've been trained to associate with video.<p>On the other hand, I think that these photos would have been nearly as striking if they had been rendered in Kodachrome style or classic Technicolor style. To our modern minds, there is no age-appropriate color style for photographs that are 100 years old, since we never see such a thing.<p>In fact, whenever I see well-preserved color movies from the any time before the sixties I get the ""uncanny valley"" feeling, since most everything filmed before then was done so in black and white, or on crappy non-Technicolor film where the color barely survived. It's definitely still a little bit of shock whenever I've seen The Wizard of Oz, just because classic Technicolor weathered so well, and you just don't expect to see something from 1939 with beautiful, saturated, unfaded color.",1347178268
4495294,comment,4495089,4495089,3,0,ChuckMcM,,,"While I find this all sad and disheartening, I really wish we'd get better insights into what Samsung's lawyers are doing about it rather than all the complaining about how badly the jury did their assignment.<p>Surely if there is a way to use this in either a motion for a mistrial or to force a judicial review they not doubt would be filing it.",1347178202
4495293,comment,4493344,4494147,5,0,jrmg,,,"On the other hand though, CFLs, with a current energy production mix of sources, cause, even if broken, less mercury to be emitted into the atmosphere than the extra power required to light an equivalent incandescent would cause to be emitted during generation (coal is mostly to blame for this).  They also cause far fewer greenhouse gasses to be emitted.<p>Also consider that in today's litigious world, no one wants to say ""don't worry if you break a bulb, there's not really enough mercury to be dangerous in one"" lest someone starts breaking bulbs with wild abandon and then suing the authority that told them they 'weren't dangerous'.<p>There's some interesting discussion on this topic here: <a href=""http://skeptics.stackexchange.com/questions/297/how-dangerous-is-a-broken-compact-fluorescent-lamp-cfl"" rel=""nofollow"">http://skeptics.stackexchange.com/questions/297/how-dangerou...</a>",1347178191
4495292,comment,4495101,4495101,4,0,jseban,,,"Isn't client side Javascript programming also async event-driven in the exact same way as node?<p>Why isn't anybody whining about how terrible this is when writing client side Javascript?",1347178178
4495291,comment,4495101,4495101,11,0,ak217,,,"Node.js actually has two problems that I think will be very major issues for it in the long run:<p>- it's based on JavaScript, which is a crappy language (despite how nice V8 is)<p>- (OP's point) the async style is horrible for readability, which puts a tremendous toll on productivity (though many will deny it).<p>There are libraries like async (<a href=""https://github.com/caolan/async"" rel=""nofollow"">https://github.com/caolan/async</a>) and streamline (<a href=""https://github.com/Sage/streamlinejs"" rel=""nofollow"">https://github.com/Sage/streamlinejs</a>) which try to eliminate #2. They are band-aids: the language itself must support asynchronous execution without callbacks.<p>Node has many advantages that make it really nice - V8 is awesome because of an interesting case of technological path dependence; the standard library has a lot of modules that take great advantage of asynchronous I/O; the standard library is very high quality; the community is great - but I think the two issues above really leave room for another project to take the good parts and not the bad ones, and steal Node's thunder. It could be Go or Python (with some badly needed extra work on coroutines, concurrency, performance/adoption of pypy, etc), or something new.",1347178158
4495290,story,,,1,0,golovatuy,"The MicroKY Duostar Home Karaoke Singing System ",http://techandscience.com/techblog/ShowArticle.aspx?ID=251,,1347178077
4495289,story,,,1,0,nathancahill,"Make Requests-Cache play nicely with Heroku",http://nathancahill.github.com/make-requests-cache-play-nicely-with-heroku/,,1347178026
4495288,comment,4492914,4493340,1,0,arrrg,,,"How perfect a product is might have an impact on brand perception.<p>Example: I recently bought a MacBook Pro Retina. From time to time (rarely) it makes creaking sounds. The bottom plate doesnt sit quite perfectly on the chassis. Do I send it back because of that? No. Does that impact my perception of Apple as a brand negatively? Absolutely.",1347178022
4495287,comment,4492914,4495281,1,0,anovikov,,,">When there's a much smaller number of electric cars you can get away with a much smaller number of recharging/swapping stations and ""pumps"".<p>No they don't, and this is a big catch for them. This is a chicken and egg problem. People will be reluctant to buy electric cars until there are fast recharge stations everywhere around, because home charging takes a lot of time, and needing to travel far away you're essentially stuck. These charging stations are not quickly appearing because there are too few people with electric cars to use them. This will fix, but much, much slower than technically/economically possible.",1347177997
4495286,comment,4493344,4494145,5,0,lusr,,,"1.  Cancer:  does it matter whether it's cancer or something else?  Surely the criteria here is ""harm"" not ""cancer"".<p>2.  ""Flame retardant"" vs. ""specific chemical"":  the article specifically cited recent research regarding PBDEs, why did you not consider this valid evidence?<p>""Researchers from the Center for Childrens Environmental Health, at Columbia University, measured a class of flame retardants known as polybrominated diphenyl ethers, or PBDEs, in the umbilical-cord blood of 210 New York women and then followed their childrens neurological development over time. They found that those with the highest levels of prenatal exposure to flame retardants scored an average of five points lower on I.Q. tests than the children with lower exposures, an impact similar to the effect of lead exposure in early life.""<p>Furthermore, the article made it clear that the ingredients of some flame retardants, such as Chemturas Firemaster 550 (apparently one of the most common flame retardants), are trade secrets.  The study in (2) makes it clear it can take <i>years</i> to demonstrate an effect.  So Chemtura can't even know if their product is safe but they're quite happy to sell it to you!  Surely the logical conclusion is:  beware.<p>3.  Risk vs. Benefit.<p>Unfortunately, and this is the crux of the problem, it seems that unless one can afford to commission a couch and pay for laboratory analysis of the foam supplier's product, avoiding these substances is very difficult given the present legal situation.  And that definitely seems a point worth fighting given the potential harm identified.  If you want to risk poisoning your children for little apparent benefit, that's your choice, but it's unethical to make that choice for me.",1347177932
4495285,story,,,1,0,krigath,"Firefox OS",http://en.wikipedia.org/wiki/Firefox_OS,,1347177872
4495283,comment,4493984,4494448,6,0,jwr,,,"For the moment all this means that a high-profile person got his funds unblocked and has a direct communication channel to the CEO. Meaning he's pretty much back to where he was before PayPal set him back.<p>For my personal blocked account, it means exactly nothing.",1347177750
4495282,comment,4494995,4495271,1,0,milkbikis,,,"Yeah, I also have one that fixes the prompt to the top so you only see a small '$' at the current line, but it messes up the terminal history.",1347177699
4495281,comment,4492914,4493833,1,0,mkramlich,,,"When there's a much smaller number of electric cars you can get away with a much smaller number of recharging/swapping stations and ""pumps"". They can incrementally add more stations as more electric cars are operating. Swapping stations would probably take a greater real estate footprint and require more human staffing than a charging station, which can be fairly small and automated (picture a coin-operated tire air machine). I would not be surprised if somebody at Tesla has already put R&D time into the idea of not only setting up a swapping station, but also automating it and designing a car model that works well with it. But it takes time, and devil in the details. As Elon (or any good engineer would say), there are a lot of constraints and trade-offs involved. For now, for launch, they're confident a network of roadside charging stations will suffice for the number of vehicles they expect, at least the first few years, and for the <i>kind</i> of buyer who will be buying early -- folks that have the most wealth and/or most want the shiny and/or most are about having an electric car rather than having everything work exactly like a gas car. As Elon has said too, I think, they'll have to deliver different features and tradeoffs in long run to be able to sell to a broader mix of customer types. But never let the perfect be the enemy of the better than what you have today. Sell to a certain customer segment. Ship product. Then later expand to other segments with different products. They could launch with what they have now, then later create new models or variants designed to allow battery swapping. That is not mutually exclusive with the charging approach, strategy-wise.<p>Also since they're following a ""we only build what people have actually ordered"" approach, they also have the opportunity to forecast, much more accurately, where there's going to be increased demand for charging/swapping stations. But regardless, they can do the cow pathing technique. (Or MIT sidewalk laying technique.) Watch where the cows/students go. Add sidewalks there. More students/cows? Widen paths or add more paths. Put one station in each major city. Add more stations and more nodes to match demand. Add stations along journey mid-points (bisections). Rinse, repeat, scale up.",1347177699
4495280,comment,4495101,4495101,12,0,jeswin,,,"<i>You lose expressiveness, you lose maintainability, you lose peace of mind, and you get speed.</i><p>- I don't think my JS/CoffeeScript code is (significantly) less or more expressive and maintainable than the Python code I would have written. Use coffee if you want a whole bunch of language features, including some missing in Python. Oh, and a much cleaner way to write lambdas.<p>- Yes you need to understand async. It is of course, increasingly relevant with services and devices talking to each other. For example, in Microsoft's WinRT anything taking more than 50ms has to be async by design. After a while you might even wonder why async isn't the default way of doing most I/O.<p>- Flow control is hard in async, especially when you are getting started. But there are libraries which help, such as \n<a href=""https://github.com/caolan/async"" rel=""nofollow"">https://github.com/caolan/async</a>.<p>- The library approach works for me and is a safer bet, but isn't the cleanest. If you are adventurous you could try iced-coffeescript, which introduces keywords to give you simpler code.<p>- Finally, you need to have a really good grip on JS.",1347177682
4495279,comment,4495101,4495246,1,0,marshray,,,"I agree that FP, Lisp, and CPS are rewarding. I find async IO very appealing because so very often I've had to implement imperfect workarounds when it wasn't available.<p>But I still feel <i>really</i> conflicted about Javascript.",1347177650
4495278,comment,4494384,4494814,2,0,beloch,,,"The big difference is that encryption based on computationally difficult (but not impossible) problems (i.e. factoring) should not be used to encrypt information that must remain secure long-term.<p>e.g.  Say you have a highly sensitive secret that must remain secret not for just a few years, but decades or centuries.  If you encrypt it using a factoring based scheme and then transmit it classically, an eavesdropper could take a copy of the encoded message without your knowledge.  Whatever scheme it was encrypted with will then have to stand up to decades of advances in algorithms and computing technology.  Quantum computers will probably break most currently used factoring-based schemes (including elliptic) eventually, and there's no guarantee that there exists no classical algorithms that could break such encryption with practical amounts of classical computation either.  You should view anything encrypted and transmitted using factoring-based methods as having been broadcast publicly with an unspecified delay.<p>Quantum cryptography is unbreakable in theory, but is not without flaws in practical systems.  However, the nature of communicating with quantum states (google the no cloning theorem) means that attacks must be known and used at the time your message is transmitted.  An eavesdropper trying to listen in on quantum encrypted communications cannot archive coded messages to attack at his or her leisure.  Attacks must be immediately successful or the message will remain secure for all time.<p>So, your credit-card info is probably safe to transmit using factoring based cryptography, since it changes every few years.  Your medical records, or where you buried that body, are a different matter entirely!",1347177604
