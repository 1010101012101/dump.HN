ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
73679,comment,73626,73626,0,0,Shooter,,,"I think that in 99.5% of cases you should start trying to monetize from the very beginning, for three primary reasons:<p>1. You're more likely to piss of customers if you introduce advertisements/donation requests/subscriptions later than if it is there at the beginning.  People like to know what they can expect from a site when they first start using it, and they tend to get very comfortable with a given dynamic.  I've been very surprised how offended/alienated people can become if you introduce monetization later...people don't seem to understand about hosting costs or time investments.  <p>2. You get the chance to see what is actually going to work for you before you go through too many iterations of your idea.  Maybe your initial focus is not able to sustain itself...being able to adjust on the fly and experiment is a key component of internet sites and your monetization strategy is definitely something you can/should experiment with.<p>3. People with something invested in your site beyond their content contributions (such as donations/subscriptions) are more likely to give you honest feedback about your site.  You also tend to get more partner inquiries if there is a visible monetization method (versus 'labors of love'.)",1193641039
73678,comment,73674,73674,0,0,rms,,,"Those guys are going to fail miserably.",1193640765
73677,comment,73634,73634,0,0,corentin,,,"Yes, everything in life is as easy as in movies!<p>To write web applications, popular programming languages include PHP (the most popular one, used by many companies and open source projects), Java (mostly used for ""enterprise"" applications), Ruby and Python. Java is a simple language but the frameworks (the libraries) tend to be complicated (enterprises seem to confuse complexity and value). PHP is used by many hobbyists; it's powerful but, unfortunately, a lot of the code you'll find will be crappy and wouldn't be a good way to learn good programming practices. Ruby certainly is a fine language but its community of users is annoying so you'll find a lot of bullshit flying around which isn't a good way to start, either. Python seems to be the way to go. Of course, nothing prevents you to look at the other ones. Quite the contrary: if you try different things you'll be able to know what is better for you.<p>You'll also need to learn web design (HTML, CSS), client-side programming (Javascript), database systems, etc.<p>The best way to learn is to learn a little bit of everything at the same time (not Python first, then Javascript, then databases...) so a good way to start would be to install a Linux distribution on some machine and start playing with web servers, languages, databases, etc. Don't try to start by creating some useful thing; it's frustrating. Just fool around until you understand how everything fits together.<p>Hope this helps (please note that I'm not a web developer myself; I just happen to waste my time on programming.reddit.com too much!)\n",1193640736
73676,comment,73674,73674,0,0,gnaritas,,,"Um... no pay for working with 2 guys with an idea... full 33%.  You have talent, they have nothing but an idea (everyone has ideas, they're mostly worthless), you should be treated as an equal.",1193640706
73674,story,,,32,70,myoung8,"Ask YC: What's a reasonable share of equity to get as the first developer?",,"So there are 2 guys that have an idea for a company. Granted it's a great idea, if executed properly. They are offering the first developer (also the first employee) a 2% equity stake and no compensation at this point. Being that it's a web company, said developer will probably be doing just as much work as the founders.<p>Is 2% reasonable? I don't think so...I would expect an ""unofficial"" co-founder to get at least 10-30%.<p>What do you guys think? Do you have any experience in this kind of situation?",1193640506
73672,comment,73284,73284,0,0,simianstyle,,,"1 Book has it all:<p>""CSS Mastery"" by Andy Budd<p>You will be a ninja thereafter.\n",1193640411
73671,comment,73609,73652,0,0,timr,,,"Where do you live?  Here in Seattle, prices on basic food items (dairy products, especially) have gone up by at least 30% in the past two years.<p>I don't know if my overall grocery bills are lower or higher since 2003 (on a quality-adjusted basis), but I know that my overall cost of living has increased significantly.<p>Also:  mortgage rates have (unfortunately) little to do with the current inflation rate.  It's not really fair to say that a current inflation statistic is wrong because the lenders have lost their minds....",1193640125
73670,story,,,1,0,nside,"3D Hits Globe badge",http://3dbadge.com/hitsglobe.html,"See your traffic in real time on a 3D web globe.",1193639777
73669,comment,73609,73662,0,0,timr,,,"The CPI is influenced by the political winds (e.g. right now, it rather heavily weights technology items, and down-weights fuel and food costs, which are experiencing much greater price inflation).  The commodity price index might just be a better indication of actual inflationary pressures for real people.",1193639657
73668,comment,73544,73603,0,0,yters,,,"Yeah, I don't get why this stuff is considered so revolutionary.  It's like no one involved ever studied tcp/ip.",1193639362
73667,comment,72974,73131,0,0,kingnothing,,,"Something I'm concerned about with nginx is that the main process has to run as root. Is there a way around it? That seems like a huge security hole to me.",1193639296
73666,comment,73498,73498,0,0,kajecounterhack,,,"actually I found a PHP script for this today at <a href=""http://scripts.suramya.com/"" rel=""nofollow"">http://scripts.suramya.com/</a> while looking for a gimpshop debian installer. I'm not sure if it works but it looks good. its PHP...",1193639288
73665,comment,73634,73634,0,0,mechanical_fish,,,"First of all, keep working on the C. It's a very important programming language that underlies almost everything. If you learn to program C really well, you'll be able to understand what's happening even when you're using languages that are much higher-level than C.<p>As for a programming language to learn after C: try Ruby or Python. Both are considered great languages. I'd not only recommend starting with Ruby, but if I were you I would check out Hackety Hack at <a href=""http://hacketyhack.net"" rel=""nofollow"">http://hacketyhack.net</a> . It's a site built by a certified (and, perhaps, certifiable) programming genius, who is trying to make learning Ruby programming into something that 13-year-olds will do for fun. If you can figure out the stuff on that site, you will be well on your way to writing a cool web app.<p>Creating your own website -- perhaps even a cool web site -- doesn't necessarily require much programming. You should try setting one up right away. Tomorrow would be fine. :) You need a web server program (like Apache), and a database (like MySQL or Postgres), and you need a computer that's connected to the network all the time. The simplest thing you could do is pay ten bucks for a month of service from a web host like Dreamhost, install Wordpress or Drupal (perhaps just by pressing one button), and have a website tomorrow. If you already know how to do that, and need a bigger challenge -- or if you don't want to spend ten bucks a month -- then try downloading Apache and MySQL, install them on your own computer, and get Wordpress and/or Drupal running. (Hint: if you've got a Mac, the word to google for is ""MAMP"".) Use Google and Wikipedia to find the docs and books that you need to read to get that done.<p>It doesn't matter if anyone else can see the website, at first. Play with it yourself. Figure out how to add and delete users. Add some blog posts. Change the colors. Learn how to back up your database and restore it again. Learn about XHTML, and CSS, and SQL, and DNS, and SSH, and SSL, and SMTP. None of this is programming, exactly, but if you want to build a website for a startup you will have to know at least a little bit about all of these things.<p>If you've got a Mac, learn about how Unix works. If you've got a Windows box, install Linux on it. Search for Ubuntu Linux and find some docs that explain how to install it without screwing up your Windows installation.<p>Be aware: it's not that easy. It's certainly nothing like the movies. There's a lot of different moving parts that you must know about before you can build a site like Twitter, or Facebook, or even Hacker News. But many people have done it.",1193639269
73664,comment,73284,73295,0,0,ed,,,"Along the same lines, ""Don't make me think"" by Steve Krug provides an awesome Usability foundation. (Better than Nielson, IMO.)<p><a href=""http://www.amazon.com/Dont-Make-Me-Think-Usability/dp/0789723107"" rel=""nofollow"">http://www.amazon.com/Dont-Make-Me-Think-Usability/dp/078972...</a>",1193639200
73662,comment,73609,73661,0,0,ed,,,"No, you actually want the _other_ CPI (consumer price index).<p>Historical TTM: <a href=""http://inflationdata.com/inflation/Inflation_Rate/HistoricalInflation.aspx"" rel=""nofollow"">http://inflationdata.com/inflation/Inflation_Rate/Historical...</a>",1193638515
73661,comment,73609,73660,0,0,rms,,,"OK, I misinterpreted their commodity-price index. However, it is a leading indicator of inflation and as that, it seems more reasonable.",1193638070
73660,comment,73609,73629,0,0,ed,,,"Clearly those numbers are wrong -- otherwise a $5 loaf of bread today would've cost us about $.95 in 2002 (and about $.18 in 1997).<p>I believe the historic average rate of inflation in the US is closer to 2.5%.",1193637780
73659,story,,,1,0,bluishgreen,"Nothing is Random: Book Excerpt (Winters tale)",,"Nothing is Random  <p>Nothing is random, nor will anything ever be, whether a long string of perfectly blue days that begin and end in golden dimness, the most seemingly chaotic political acts, the rise of a great city, the crystalline structure of a gem that has never seen the light, the distributions of fortune, what time the milkman gets up, the position of the electron, or the occurrence of one astonishingly frigid winter after another.<p>Even electrons, supposedly the paragons of unpredictability, are tame and obsequious little creatures that rush around at the speed of light, going precisely where they are supposed to go. They make faint whistling sounds that when apprehended in varying combinations are as pleasant as the wind flying through a forest, and they do exactly as they are told. Of this, one can be certain.<p>And yet there is a wonderful anarchy, in that the milkman chooses when to arise, the rat picks the tunnel into which he will dive when the subway comes rushing down the track from Borough Hall, and the snowflake will fall as it will. How can this be? If nothing is random, and everything is predetermined, how can there be free will? The answer to that is simple.\n <p>Nothing is predetermined; it is determined, or was determined, or will be determined. No matter, it all happened at once, in less than an instant, and time was invented because we cannot comprehend in one glance the enormous and detailed canvas that we have been given - so we track it, in linear fashion, piece by piece. Time, however, can be easily overcome; not by chasing light, but by standing back far enough to see it all at once.<p>The universe is still and complete. Everything that ever was, is; everything that ever will be, is - and so on, in all possible combinations. Though in perceiving it we imagine that it is in motion, and unfinished, it is quite finished and quite astonishingly beautiful.\n <p>In the end, or rather, as things really are, any event, no matter how small, is intimately and sensibly tied to all others. All rivers run full to the sea; those who are apart are brought together; the lost ones are redeemed; the dead come back to life; the perfectly blue days that have begun and ended in golden dimness continue, immobile and accessible; and, when all is perceived in such a way as to obviate time.\n",1193637684
