ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
8679948,comment,8677556,8678338,0,0,Roboprog,,,"Lambda expression for comparator can be further shortened (for numeric types, <i>descending</i>):<p>( o1, o2) -> o2 - o1<p>No ternaries or else-ifs required.  Swap o1 and o2 if you want <i>ascending</i>.",1417420756
8679947,comment,8679245,8679935,0,0,pluma,,,"When it doesn&#x27;t work, that usually means you have to learn implementation details like the digest cycle, which flies completely in the face of having these abstractions in the first place.",1417420752
8679946,story,,,1,0,regisb,"Download Spotify playlists (from YouTube)",https://github.com/regisb/spotify-onthego,,1417420740
8679945,comment,8675433,8677263,0,0,toomuchtodo,,,"Battery technology will continue to improve, and can already quick charge a vehicle in ~30 minutes. There are very few applications that require charging faster than that, or where you can&#x27;t charge your vehicle at night.",1417420645
8679944,comment,8679245,8679517,0,0,pluma,,,"Factors in Angular&#x27;s success:<p>* backed by Google
* MEAN
* plenty of media/blog coverage
* seductive examples (that don&#x27;t reflect best practices)<p>My personal gripe is with the last point. A lot of the appeal is in the two-way binding -- which is often the first thing to go out of the window once scaling becomes a problem.<p>Also, I have no idea why the author thinks Browserify and Angular go well together. They don&#x27;t. At all. Browserify is great on its own, but there&#x27;s not really any &quot;blessed&quot; way of using a module system with Angular (and like jQuery Angular 1.x is tightly coupled with the global scope).",1417420618
8679943,story,,,4,0,napolux,"24 ways is back",http://24ways.org/,,1417420593
8679942,comment,8679466,8679916,0,0,rjaco31,,,"No, God, please no!",1417420592
8679941,comment,8678170,8678170,0,0,tomaszpl,,,"This looks interesting. Any plans for spreadsheet support?",1417420582
8679940,comment,8679060,8679869,0,0,ekianjo,,,"Thanks for the very complete answer. I had no idea there was such a procedure. Now I wonder how it works in Japan where I live, since such minorities are far from being commonly accepted here and they may have more hurdles to get to the same point.",1417420519
8679939,comment,8677556,8677556,0,0,austinz,,,"First of all, I want to say that if you like Java, and know it well, and believe it to be the right tool for your particular application, that you should absolutely use it.<p>> That Java is the right language for <i>all</i> jobs. <i>(Emphasis his.)</i><p>> The advantages of C and C++ [...] don’t apply to my work.<p>So, choose the right tool for the right job.<p>As for the examples given:<p>> At one company I wrote a simulator that allowed me to run my Java services without a fully-functional site. <i>(The unit under test is Java, so it makes sense to write the simulator in Java, rather than Javascript)</i><p>> My partner Dan Collens suggested Java [for a log parser], since it’s right there and we know it and it’s fast. <i>(The log parser is used so often that the amortized opportunity cost of developing in Java is more than paid off by faster processing, therefore Java is the right tool for the job)</i><p>> And finally, I went to write a simple program that put up a web interface. <i>(This is something the author has done many times before and knows how to do well in Java, and his primary goal is getting it running ASAP, therefore Java is the right tool for the job)</i><p>I still think you should choose the right tool for the right job. It just happens that the author&#x27;s work is constrained in such a way that Java turns out to be the right tool in most, if not all cases.<p>Honestly, though, I would rather choose the same tool for a job each time by deciding that it&#x27;s, by merit and virtue, the best tool for the job, rather than relying upon the author&#x27;s silly heuristic.",1417420499
8679938,comment,8679109,8679109,0,0,gregfjohnson,,,"It can be difficult to develop good intuition for the ideas behind the insert and delete algorithms for even standard red black trees.  Here is an interactive web site that presents the essence of these algorithms in what I hope is &quot;as simple as possible but no simpler&quot; pseudo-code, and supports interactive play.  (Insert, delete, single-step forward and backward through the algorithms, etc.)  I would be delighted to hear if people find that this site makes the algorithms more intuitive, and any thoughts or suggestions for improvment.<p><a href=""http://www.gregfjohnson.com/redblackbuilder.html"" rel=""nofollow"">http://www.gregfjohnson.com/redblackbuilder.html</a>",1417420485
8679936,story,,,2,0,theoutlander,"DIY Exoplanet Detector Using a DSLR",http://lensvid.com/gear/diy-exoplanet-detector-using-dslr/,,1417420481
8679935,comment,8679245,8679517,0,0,venomsnake,,,"My brief encounter with angular - you write something, throw it into a black box, magic happens, and you receive output.<p>When it works - works fine. When it does not work you are completely helpless.",1417420445
8679933,comment,8676476,8678802,0,0,mcpherrinm,,,"Whether or not you&#x27;re trying, you have succeeded.",1417420403
8679932,comment,8678336,8679907,0,0,legulere,,,"Actually JSON is such a simple format, that everybody with a bachelor in computer science should be able to write a parser as correct as standard implementations (they often ignore that the root element needs to be an object and multiple entries with the same identifier)",1417420386
8679931,comment,8677788,8679859,0,0,yummyfajitas,,,"<i>Distribute salary extremely unevenly...</i><p>No matter how it&#x27;s distributed, the US is producing a lot more <i>goods and services per person</i> than Germany is.<p>The fact that the consumption distribution might be different than you like is a separate discussion.",1417420367
8679930,comment,8679466,8679838,0,0,zbowling,,,"Nope. Doesn&#x27;t work. Everyone&#x27;s advice fails to work for me. I tend to think this is just a mass conspiracy or giant elaborate joke. I&#x27;m going to use this JS script to generate tests to see if I can get people who can do this to tell what the number is behind this &quot;magic eye&quot;. Call everyone on their bullshit.",1417420361
8679929,comment,8677556,8677556,0,0,BuckRogers,,,"The problem with &#x27;use the best tool for the job&#x27; is that everyone&#x27;s &#x27;best tool&#x27; is selected from a relatively small pool. The choices for some use-cases have a multitude of similarly worthy choices. Thus, not likely really the best available. Just another subjective choice.<p>That said, I don&#x27;t understand the obsession with 1 language to rule them all that the Java and Javascript crowd seem to share. I do understand having 1 go-to that you reach for to build projects. Something broadly applicable like Java, C# or Python.<p>But shell scripting in Java? Seems a bit extreme, I&#x27;d never bother. You can pull out a Python/Powershell script that does whatever you&#x27;re trying to do and do it much easier and faster. There&#x27;s a reason Windows has C#/Powershell, and Linux has (as an example) Java/Python.",1417420287
8679928,comment,8679245,8679646,0,0,bronson,,,"True, v2->v3 was hard due to escaping-by-default, but that was a long time ago.  v3 to v4 was trivial and v4 to v5 looks to be similarly easy.<p>Also, I find business logic sql libs written by typical devs tend to be unreadable and much buggier than AR code.  They start clean, but once some other devs make some edits, they end up a jumble of sql concatenation nightmares (even if you use prepared statements, and especially if you&#x27;ve ever switched sql dialects).  Given the choice, I think I&#x27;d rather see them written as stored procedures.  At least that enforces decoupling.<p>I agree with your other points -- less code is more better.",1417420281
8679927,comment,8677717,8677717,0,0,Animats,,,"Software engineering was taken more seriously 20 years ago than it is now.  There have been some notable successes of rigorous development, but they&#x27;re not well known.  Here are two in wide use.<p>The first is the operating system kernel in the air link processor of mobile phones. In most current phones, that&#x27;s an L4 kernel with a full proof of correctness.  Since any mobile phone can potentially knock out all phones for some distance around if it doesn&#x27;t follow the sharing rules for the air link, this is important to carriers. They got it right. Nobody talks about this much, but if that layer had problems, there would be regular cellular blackouts.<p>The second is the Windows Static Driver Verifier. This has been used since Windows 7. It verifies that kernel drivers don&#x27;t crash, clobber memory or call the driver APIs incorrectly. Before the Static Driver Verifier, drivers accounted for more than half of Windows crashes.  Now, crashes from signed drivers are very rare, and usually involve getting the driven device itself to do bad DMA operations.  (IOMMUs are coming along to stop that.)<p>This shows the right direction for software engineering. Some software really matters, and has to be engineered properly. Most software doesn&#x27;t matter all that much.  Engineered systems should separate the two, develop them in different ways, assume the low-grade stuff will crash, and architect systems so the low-grade stuff can only do limited damage.  We&#x27;re seeing architectures like that in the mobile world and in server-side systems.  In the mobile world, &quot;apps&quot; run in relatively contained environments.  In the server world, things seem to be moving towards containerized &quot;apps&quot; in systems like Docker, running on some minimal glue layer inside a container  running on a secure microkernel such as Xen and talking via message passing.<p>That&#x27;s software engineering.",1417420262
8679926,comment,8679471,8679687,0,0,AnthonyMouse,,,"Moore&#x27;s law eats the difference between first world prices and third world prices for breakfast. Changing how the hardware is manufactured wouldn&#x27;t materially affect the choices programmers make even if it doubled the hardware cost, and it probably wouldn&#x27;t even do that.",1417420258
8679925,comment,8679797,8679814,0,0,cpayne,,,"You&#x27;ll get different responses on the value of the MBA.  From what I understand, no one cares that you &quot;have&quot; an MBA, but the knowledge you learn by finishing it is invaluable.  So that&#x27;s a good start.<p>I&#x27;d be thinking of your next step.  Is it Software Architect, Team Leader or Project Manager?<p>Very different skillset.  I would say you don&#x27;t &quot;have&quot; to master all of them, but you should have a good understanding of what all 3 do and how they add value to a project.<p>And last, something that will come out of your MBA is the importance of sales and the ability to sell (Sales cycle, sales funnel etc.)  Whether you are selling a product, selling your ability or selling the benefits of a project.  Sales knowledge is something I rarely see in developers.<p>If there&#x27;s anything else I can help with, hit me up privately.  My details are on my HN profile.<p>Good luck!",1417420228
8679924,comment,8679847,8679847,0,0,butwhy,,,"Charging GST is ridiculous. They&#x27;ve made the right decision.",1417420193
8679923,comment,8677556,8677556,0,0,smegel,,,"I maintain and develop a large code base written in (mainly) Python with some C thrown in here and there. It was maintained and developed by a number of people before me over several years, who have come and gone. And yes while there is rust and cobwebs, I don&#x27;t attribute any maintenance issues to the fact it is Python or a dynamic language, but rather higher level design decisions about interfaces and boundaries and responsibilities. Often some module that wasn&#x27;t supposed to know something all of a sudden needs to know due to some new/changed requirement, and redrawing data flows and structures to ensure the right information is where it needs to be can be challenging. But this situation can be applicable to a system developed in any language - if anything Python&#x27;s flexible data structures makes it easy to accomplish such re-engineering.<p>The last time I tried to do anything in Java, I was instructed to &quot;just run the maven build script&quot;. After watching that flaming train wreck I walked away and haven&#x27;t looked back since.",1417420189
8679922,comment,8679471,8679751,0,0,alexmat,,,"&quot;Improved&quot; is a relative term and says nothing of the associated costs. Could we maybe reduce costs and still &quot;improve&quot; at a slower, more sustainable pace? It&#x27;s worth exploring the notion without turning to the dogma of efficiency at any cost.",1417420177
8679921,comment,8678336,8679907,0,0,cbsmith,,,"> Definitely not protocol buffers.<p>I fail to see why protocol buffers couldn&#x27;t have worked for SVG. They are expressly defined so that you can have extensible types without breaking parsers...<p>> I wouldn&#x27;t use an ad-hoc parser for JSON either.  The problem here isn&#x27;t XML<p>...but you can find plenty of &quot;parsers&quot; for both that don&#x27;t actually parse either fully, correctly, or securely.<p>> Try escaping a character from the astral plane in JSON, you have to encode it in UTF-16 and then encode each item in the surrogate pair as a separate escape sequence.<p>One of many reasons to be annoyed by those who think JSON is a perfectly good data format.<p>> Escape sequences are a natural part of any text format, other than plain text.<p>Another reason to loathe them. ;-)<p>That said, you can avoid escape sequences in text formats, so long as your parse rules are length delimited, rather than based on reserved characters.<p>> Most of the modern XML stack is a mistake, a symptom of the years when people thought XML was the coolest thing ever.  XSLT is the worst mistake of all.  That doesn&#x27;t mean that you have to use it.  Most people don&#x27;t.<p>Agreed, but generally if you aren&#x27;t supporting it, you aren&#x27;t using XML.<p>> Let&#x27;s not fall into the trap of thinking that we should use JSON for everything, just like so many fell into the trap of thinking that they should use XML for everything.  Both have their use cases.<p>Yes, though I&#x27;d argue they are primarily for causing problems.",1417420168
8679920,comment,8677717,8678957,0,0,minthd,,,"If you look at surveys ,c++ ,as shitty as it may be, is used a lot around the industry.And the fact that ARM have chosen it for the mbed on which they plan to build an operating system around for IOT chips, shows it&#x27;s  value for mcu&#x27;s, at least in some segments.<p>The other data point regarding rust is the huge excitement in the embedded community.",1417420164
8679918,comment,8679466,8679916,0,0,zbowling,,,"they don&#x27;t work on a significant portion of the population.<p>edit: like myself.",1417420118
8679917,comment,8677556,8678701,0,0,cdman,,,"No, you can&#x27;t. In particular -1 * Integer.MIN_VALUE == Integer.MIN_VALUE.",1417419992
8679916,comment,8679466,8679466,0,0,ivanceras,,,"I wonder if we could use Magic eye as a replacement for captcha.",1417419974
8679915,comment,8676882,8679280,0,0,dalke,,,"&quot;mine is one of them.&quot;<p>No, it isn&#x27;t. Prove me otherwise. According to your definition, anyone who has sex other than in a long-term monogamous relationship is promiscuous. Quote where the WP page says something similar.<p>&quot;What moralistic is that?&quot;<p>According to the same Wikipedia page you mentioned &quot;The term can carry a moral judgement if viewed in the context of a mainstream social ideal for sexual activity to occur only within exclusive committed relationships.&quot; That&#x27;s exactly the way you used it.<p>You presume that everyone has specific end goals with sex. Not everyone who has sex with multiple partners is &quot;experimenting&quot;. Not everyone wants to &quot;settle down&quot;.<p>&quot;is just an opinion&quot;<p>There&#x27;s no contradiction. Expressing opinions is one of the ways that morality reveals itself. The way you have expressed your opinions is judgmental and moralistic.<p>&quot;promiscuous people have more risc in contracting a SDT ...&quot;<p>The majority of <i>people</i> have an STD, even those who never have sex. Some STDs can be passed by kissing or sharing a toothbrush. Others require genital contact. I therefore observe that going within 100 meters of other people, or where other people have been, gives more risk in contracting an STD.<p>My observation is much more valid than yours, for reasons I highlighted earlier. Yours is mostly pointless, because having sex with multiple partners is only one risk factor, and not even the most significant risk factor. You can be completely monogamous and have only had sex with a single partner, and still get an STD from that partner; all the more so if that partner has frequent unsafe sex with a large number of partners.<p>&quot;I&#x27;m not talking about abstinence&quot;<p>Never said you were. I&#x27;m saying that sex positive safe sex education is more effective at improving social outcomes (reducing virus spread, reducing unplanned pregnancy, etc.) than anything which tries to reduce promiscuity. Therefore your observation is not only full of counter-cases but experience shows it can&#x27;t be used for effective decision making - except by those wishing to enforce a certain morality.<p>&quot;some how, you feel judged, I wonder why&quot;<p>That&#x27;s the second time you&#x27;ve tried to use that derailment tactic. It&#x27;s an irrelevant ad hominem detail, and you should learn to not use it.",1417419967
8679914,comment,8679471,8679902,0,0,mattdw,,,"I&#x27;m not saying that I wish that it were true, or that I think it&#x27;s a good thing. I agree that it&#x27;s daft. But over the short term, pillaging societies appear to beat conserving ones. And it&#x27;s a fact that we do seem to be (as a species) adopting a short-term-profitable long-term-suicidal approach.<p>(An interesting model is Norway&#x27;s oil – they&#x27;re maximising in the sense of getting all the oil out from under the sea, but they&#x27;re stashing most of the profits away as a rainy-day fund, which puts the country on very secure footing for about the next hundred years or so. You might call that &#x27;maximising without consuming&#x27;, or &#x27;camping&#x27;.)<p>I think the future of the human race depends on finding a better answer to this whole question, but I think accepting that pillagers beat conservers in a lot of cases is a necessary step to finding something better.<p>(I don&#x27;t think we actually disagree; we seem to be arguing different points.)",1417419872
8679913,comment,8677556,8677556,0,0,frozenport,,,"Not until they support more than 2^31 elements in my array!",1417419813
8679912,story,,,102,38,KhalilK,"The Science of Politely Ending a Conversation",http://www.fastcodesign.com/3038950/evidence/the-science-of-politely-ending-a-conversation,,1417419632
8679911,comment,8678336,8678545,0,0,cbsmith,,,"> Fortunately we have JSON now.<p>Even JSON is really a sin. Using simple binary data formats like protocol buffers makes so much more sense.",1417419627
8679910,comment,8663101,8663495,0,0,knite,,,"Do you have any recommendations on articles or books about getting started with microservices? I&#x27;m an experienced Django dev - I began using Docker a few months ago and microservices seem like the natural next step. But most of the blog posts out there about the big picture reasons to switch to microservices, I haven&#x27;t found much about implementation details.",1417419589
8679909,story,,,5,0,kostyk,"120 Nights Later: Confessions of an Airbnb Host",https://medium.com/life-learning/120-nights-later-confessions-of-an-airbnb-host-a3916a9861ab,,1417419558
8679908,comment,8677556,8679844,0,0,fsloth,,,"This behaviour - downvoting without explanation irritates me too when there is very lucid and concisely structured argument you can oppose.<p>As such, I do not find your argument for verbosity normalizing convincing :)<p>I fail to see how normalizing some risk metric against a verbosity of language will provide any valid data in the general context. For numerical algorithms, where a multiplication is just as verbose in any language then there is no difference.<p>But when manipulating collections, for example in C I need to write
int i;
for(i = 0; i < someSize; i++){...}<p>This has several places where the verbosity of language  can make it easier to write bugs that slow down the progress a bit. If we add these tiny slowdowns throughout the lifecycle of the entire application the cost is not neglible if compared to a situation where these bugs would not appear at all. Some other language:<p>for i in collection do:...<p>Which does really have no place to shoot oneself in the foot unless the iteration logic itself does something funny.",1417419548
8679907,comment,8678336,8679824,0,0,dietrichepp,,,"> It could just as easily have used JSON or Protocol Buffers and it would still be SVG.<p>Definitely <i>not</i> protocol buffers.  XML gives us some really nice bits of SVG, like the ability to put attributes and tags in namespaces, so you can use Inkscape to edit your SVG file, store a bunch of Inkscape-specific data in the SVG file, and not have other editors puke.  SVG isn&#x27;t just data interchange, it&#x27;s a document edited by humans.  JSON doesn&#x27;t accommodate that very well.<p>> More like it seems easy to parse. Plenty of people think they are parsing XML but their ad hoc &quot;parsers&quot; know nothing about CDATA, DTDs, external entities, processing instructions, or comments.<p>I wouldn&#x27;t use an ad-hoc parser for JSON either.  The problem here isn&#x27;t XML, the problem is thinking that you can solve your problem with regular expressions.  Ignoring or throwing errors for DTDs, external entities, and PIs is reasonable behavior most of the time, and most parsers can be set to strip comments and erase the differences between entities/CDATA/text.  This behavior is good enough for 99% of the use cases.<p>> ...except for gotchas like the fact that you need to entity-escape any ampersands in attributes (like &quot;href&quot;).<p>Escape sequences in XML are better than JSON, at least.  Try escaping a character from the astral plane in JSON, you have to encode it in UTF-16 and then encode each item in the surrogate pair as a separate escape sequence.  This is insane.  (Yes, sometimes you want to transmit JSON or XML in 7-bit).<p>Escape sequences are a natural part of any text format, other than plain text.<p>> Sure, but combined with the other specs which are assumed to be part of a modern XML stack<p>Most of the modern XML stack is a mistake, a symptom of the years when people thought XML was the coolest thing ever.  XSLT is the worst mistake of all.  That doesn&#x27;t mean that you have to use it.  Most people don&#x27;t.<p>Let&#x27;s not fall into the trap of thinking that we should use JSON for everything, just like so many fell into the trap of thinking that they should use XML for everything.  Both have their use cases.",1417419544
8679906,comment,8677536,8677882,0,0,Aloha,,,"IRC is probably the best example of worse-is-better design, its not great, has some obvious problems, but its good enough that nothing to come after it has been able to fully unseat it.",1417419539
8679904,comment,8679672,8679672,0,0,jerryhuang100,,,"The funny part of the 1979 paper is that its Fig 3 of NA codes just looks like QR code of 2014:<p><a href=""http://i.imgur.com/AR0OhAF.png"" rel=""nofollow"">http://i.imgur.com/AR0OhAF.png</a>",1417419430
8679903,comment,8678936,8679873,0,0,ori_b,,,"If you replace glibc, coreutils, bash, Xorg, and just about any other part that you as either a developer or user interact with, then no, it&#x27;s not recognizably linux, any more than the BSDs are Linux. In fact, as far as I know, the BSDs will be easier to port to, because Bionic libc is really a stub, with lots of Posix bits left out.",1417419416
8679902,comment,8679471,8679680,0,0,deciplex,,,"This doesn&#x27;t take resource exhaustion into account. Which is to say, that by maximizing first and then optimizing, you may be only ensuring the extinction of our species, and the fact that your civilization will still be around when the lights go out will be cold comfort.<p>I mean, this discussion is absurd, of course, since we seem to be operating under the assumption that the problem of how to do civilization can be solved with a half-dozen variables or so. But, even within that simplistic framework, the approach being laid out by you two is pretty daft IMO.<p>How about, an economy that achieves hegemony, and then continuously optimizes, increases resource consumption as appropriate and only to the extent that such consumption is sustainable (over some reasonable planning horizon anyway), and seeks out and destroys rival upstart economies that are a threat to it (especially when they have an unsustainable model of resource consumption), will tend to be successful and stay successful.",1417419358
8679901,comment,8666932,8668150,0,0,DannyBee,,,"If you want to base this on &quot;good for society&quot; or &quot;ethical&quot;, i don&#x27;t suspect you&#x27;ll actually get anywhere in terms of coming to a conclusion.  There are reasonable arguments on both sides.<p>My opinion on things related to competition/antitrust are based mainly on evolution of law and economic viewpoints.<p>Basically, over the past <i>hundred</i> years, courts have moved away from (and economists have strongly supported) declaring these kinds of things as &quot;per-se&quot; illegal precisely because evidence has not shown that you can simply point at them and say &quot;yeah, this hurts competition&quot; or &quot;yeah, this hurts consumers&quot;, despite what one may think.<p>In some cases, this evolution of law/economy has pretty clearly turned out bad for consumers price-wise (with the return of folks requiring retailers to sell at certain minimum prices).<p>In some cases it hasn&#x27;t.<p>This particular thing, hard to say.",1417419217
8679900,comment,8679245,8679245,0,0,michaelmcmillan,,,"Great post! I agree with your argument regarding libraries over frameworks, but I think the real problem is how we couple our software to third-party libraries. Frameworks tie you down more than a library, like you said. But if you&#x27;re not careful a library can do just the same. Which is why I believe developers have to be more clever when architecting software.<p>Reading your post reminded me of Robert C. Martin (Uncle Bob) opinions on how coupling your code with anything that can screw you over obviously is a bad idea.<p>&quot;Apparently the notion that it’s a good idea to hide the framework, UI, or database from the application code is not universally accepted.&quot;<p>&quot;What happened to us? How did we forget these rules? When did the old rules of coupling and cohesion evaporate from our awareness? Are we really so naive as to think that the best way to write a complex system is to throw a bunch of components into a bag and shake it until it works?&quot;<p><a href=""http://blog.8thlight.com/uncle-bob/2011/11/22/Clean-Architecture.html"" rel=""nofollow"">http://blog.8thlight.com/uncle-bob/2011/11/22/Clean-Architec...</a>",1417419122
8679899,comment,8679245,8679860,0,0,BuckRogers,,,"Win10 and it&#x27;s (likely) XP/7 popularity level is a dark horse for native apps, and looming blow for the webapp movement. Which I believe has gotten a <i>very</i> long free-pass thanks to the most popular platform not having a cohesive appstore ready (on a popular OS).<p>Win8 IMO is almost irrelevant, the marketshare isn&#x27;t there to add a MS Store option for me or many others. The corporations haven&#x27;t and won&#x27;t hop on. Everyone is (IMO rightly) focused on iOS/Android/web at the moment. Agreed on MSIs, but I&#x27;d add the customizable corporate frontend stores should be more powerful and slick than the current method (same appstore for MS desktop and mobile). It&#x27;s possible once enterprise moves to the MS Store that MS mobile devices make major inroads.
For consumers, I think they&#x27;ll rejoice at Win10, upgrade to it and by default go to the MS Store for security reasons alone. Not to mention auto-updates, same apps as on MS mobile etc.<p>I&#x27;m not pro-MS, I&#x27;m actually anti-all-for-profits and a Mozilla fanboy. I just disagree with Eich on a bytecode for the web, he blew it as far as the web being the prime delivery mechanism for apps is concerned. The webstack sucks, it had to go. Too late now.<p>I understand my view isn&#x27;t popular at the moment. Especially among webdevs who are most likely to be reading this HN post. Those people have invested heavily in the webapp dream with their time, skills and careers. Anything to the contrary that it was a great idea is going to get downvoted. Regardless, I think this is an accurate reading of the foreseeable future.",1417419120
8679898,comment,8677556,8678416,0,0,abalone,,,"<i>> they can&#x27;t make the code as easy to comprehend as it would be in a more expressive language.</i><p>It&#x27;s a little hard to make a general statement using an vague term like &quot;expressiveness&quot;.<p>Static typing can actually make things <i>clearer</i>. That&#x27;s a kind of expressiveness. You can know with complete certainty what type of data the code works with, just by looking at it. No need to rely on a certain set of unit tests living somewhere else to confirm your assumptions. And if you say &quot;well just read the function docs&quot;, how is that any less verbose in the end? It&#x27;s the same verbosity, minus the compiler guarantees.<p>On the other hand, there are situations where DSLs can greatly cut down on route programming. Like Apache Pig vs. calling Java APIs. But that&#x27;s a more extreme example, an actual speciality &quot;domain&quot; to make a specific language for.<p>I might help to use a more precise term like <i>verbosity</i>. Then we can ask, is this verbosity really helpful (like explicitly declaring types), or can we compact it without losing significant information. Fortunately Java 8 has made some progress with adopting features that cut down on unnecessary verbosity.",1417419063
8679897,comment,8679245,8679245,0,0,Mc_Big_G,,,"Ember had a lot of growing pains, but it&#x27;s starting to come out of it&#x27;s cocoon and spread it&#x27;s wings.  When you combine it with the massive productivity boost of ember-cli, tooling that does all the tedious and hard shit that no one wants to deal with, it&#x27;s a big win.<p>I recently made a simple app and decided to just write it in jquery and constantly found myself missing doing things &quot;The Ember Way&quot;™ Building an &quot;ambitious&quot; application in jquery alone would be complete madness and half-hearted frameworks don&#x27;t really give you much benefit for all the wrestling you have to do.<p>I really like that the Ember team strives to find the right way and deprecates parts of the api that they find people using in bad ways.  I&#x27;ve also seen a lot a pragmatism around preventing bloat like removing string inflections etc...<p>The best advice I have if you really want to try Ember is to read the guides, completely, word for word.  Then try to write a simple app, using the guides/recipes/API for reference and then read the guides again, completely.  Then do all that again.  It won&#x27;t take as long as you think and you&#x27;ll be far ahead of where you would be reading some introductory blog posts.<p>Admittedly, I have been frustrated at points, but that&#x27;s par for the course with any js framework at the moment and if I had chosen Angular 1.x for any of my previous clients, I would be VERY embarrassed right now.",1417418968
8679896,comment,8679050,8679547,0,0,mattxxx,,,"Yes, I meant border-bottom in conjunction with line-height. It feels more connected to the idea of &quot;underline&quot; than adding a line-gradient.",1417418958
8679895,comment,8679466,8679880,0,0,peeinears,,,Sick!,1417418955
8679894,comment,8678718,8678718,0,0,YAYERKA,,,"Previously discussed here<p>`<a href=""https://news.ycombinator.com/item?id=5872043&#x27;"" rel=""nofollow"">https://news.ycombinator.com/item?id=5872043&#x27;</a>.<p>And links to the `greatest of the great&#x27; papers;<p>`<a href=""https://news.ycombinator.com/item?id=5872310&#x27;"" rel=""nofollow"">https://news.ycombinator.com/item?id=5872310&#x27;</a>.",1417418954
8679893,comment,8679471,8679471,0,0,zobzu,,,"tldr: civilization needs some goddamn refactoring.",1417418852
8679891,comment,8677717,8677717,0,0,robert_tweed,,,"There are many hard problems in computer science and software engineering. As it turns out, the solution to these problems is spider charts.<p>Finally, we&#x27;ll be able to write distributed low-latency software that interacts with both legacy systems and browsers with complete end-to-end type safety, provable correctness and fault tolerance! In half the time, at half the cost!<p>With spider charts.",1417418760
8679890,comment,8673589,8675634,0,0,not_kurt_godel,,,"The cost to manufacture is still quite interesting.",1417418693
8679889,comment,8679816,8679816,0,0,iokevins,,,"This piqued my curiosity. Minor glitch--I attempted to subscribe to the RSS feed, <a href=""http://contentmine.org/blog/feed"" rel=""nofollow"">http://contentmine.org/blog/feed</a>, but it seems to not list any of the blog posts (?)",1417418538
8679888,comment,8677491,8679130,0,0,arthurtw,,,"OP Here. Yes, now I agree with you that doing a “Replace All” on <i>lifetime</i> with another term does not really solve the problem. (I have replied you on the RFC discussion.) We need to distinguish some existing lifetime-related terms (concepts) clearly, including the two you just mentioned.<p>The issue is <i>&&#x27;a</i> is so common in Rust code. We simply call it <i>lifetime &#x27;a</i>, which is misleading. It is not any object’s or pointer’s lifetime, but a set of lifetime requirements (or lifetime bound in your term) that every borrower imposes on the borrowed resources. It is the <i>B</i> I mentioned in the last section of my blog post:<p>  When we talk about borrow, there are three different kinds of “lifetime” involved:<p>  A: the lifetime of the resource owner (or the owned/borrowed resource)<p>  B: the “lifetime” of the whole borrow, i.e. from the first borrow to the last return<p>  C: the lifetime of an individual borrower or borrowed pointer<p>The required condition is A >= B, where B = C1 U C2 U ... U Cn.",1417418531
8679886,comment,8678847,8679481,0,0,bad_user,,,"Google&#x27;s lock in is more about Google Play than about what is coming in Android. Basically as a manufacturer, if you don&#x27;t play nice, then you don&#x27;t get Google Play (or YouTube, or Gmail, or GMaps), which then means that your smartphone is just an expensive brick with no apps on it. iOS is special because it is popular and was here first. But do you see Google giving a shit about Amazon&#x27;s stuff or about the Windows phone?<p>You know, i&#x27;m an Android user because of its openness, because of its ability to be forked, but Google practices a kind of lock-in that is very hard to escape. Basically everything they do is technically excellent, plus they end up dominating the underlying platforms.",1417418505
8679885,comment,8678336,8678545,0,0,ScottBurson,,,"> Fortunately we have JSON now.<p>Of course, we had s-expressions long ago.<p>But I agree about XML.",1417418486
8679884,comment,8677399,8677399,0,0,thomasfl,,,"While we&#x27;re at it. Here&#x27;s the emacs config used in the notorious &quot;Emacs Rocks&quot; screencasts on <a href=""http://emacsrocks.com/"" rel=""nofollow"">http://emacsrocks.com/</a>:<p><a href=""https://github.com/magnars/.emacs.d"" rel=""nofollow"">https://github.com/magnars/.emacs.d</a><p>I haven&#x27;t messed with my emacs setup once since I installed this collection of emacs plugins a couple of years ago.",1417418472
8679883,comment,8678642,8679377,0,0,DannyBee,,,"Contrary to the author&#x27;s claim, ART is not really based on the LLVM toolchain.<p>It has an LLVM based backend implemented, but it is not the production one and is not used on any device.<p>I don&#x27;t remember offhand if they have future plans for it, but at the time, it turned out to not be the best engineering option, and hasn&#x27;t been touched in a while.  The main compilers used are the quick one and the optimizing one.<p>You can see this yourself, since ART uses AOSP as it&#x27;s master.",1417418396
8679882,comment,8677048,8679815,0,0,jrockway,,,"These look pretty nice.  I wish these were included with the main source tree.",1417418362
8679881,story,,,8,0,edward,"Working the Land and the Data",http://www.nytimes.com/2014/12/01/business/working-the-land-and-the-data.html,,1417418358
8679880,comment,8679466,8679727,0,0,phst,,,"I did an animated 3d plasma for js1k some time ago. It&#x27;s not fast but it&#x27;s animated: <a href=""http://js1k.com/2013-spring/demo/1412"" rel=""nofollow"">http://js1k.com/2013-spring/demo/1412</a><p>h key toggles the height map.<p>It uses a simplified version of the MagicEye.js algorithm which generates horizontally repeating patterns for hard height changes in the source image. That&#x27;s why I went with a plasma in the end.<p>Source is available here: <a href=""https://github.com/philippstucki/sird-plasma/blob/master/3dplasma.js"" rel=""nofollow"">https://github.com/philippstucki/sird-plasma/blob/master/3dp...</a>",1417418335
8679879,story,,,2,0,zhoutong,"Australia's CoinJar Moves HQ to UK for 'progressive' Bitcoin Scene",http://www.zdnet.com/australias-coinjar-moves-hq-to-uk-for-progressive-bitcoin-scene-7000036262/,,1417418300
8679878,comment,8679471,8679695,0,0,crpatino,,,"I think you are partially right, but the situation (I&#x27;d rather not label it as a problem just yet) goes on many levels.<p>By example, Moore Law has allowed us to pack incredibly large amounts to transistors in reasonably affordable machines, and what we do is... virtualization, a.k.a. write software that (presumably) simulates being a (much slower and limited) hardware system so a third party can run other programs on top of it, for a fee.<p>That kind of makes economic sense (because customers have a big appetite for computing power... just as long as they do not have to keep those pesky sysadmins on the payroll), but from a purely technological point of view is craziness. Every component you add into your stack is a potential source of error, and you do not gain any extra features because you are simulating real hardware... so, why to do it in the first place?<p>I think the answer is: because nobody would buy all those transistors if we didn&#x27;t do so.",1417418284
8679877,comment,8677556,8677556,0,0,abalone,,,"iOS got this far on Objective-C. Seems like nobody <i>really</i> complains about that one the way they complain about Java.<p>I think he goes a bit too far with &quot;unit tests are a waste of time&quot; (maybe he just means for type checking). But other than that this perfect captures my very pragmatic view towards Java. There&#x27;s a lot to be said for consolidating on one server language, and if you&#x27;re going to pick one language, that&#x27;s the one.",1417418279
8679876,story,,,2,0,TomasJansson,"Your application should be a pure function",http://blog.tomasjansson.com/your-application-should-be-a-pure-function/,,1417418253
8679875,comment,8677717,8677717,0,0,wmt,,,"Automated tests are the closest thing to actual engineering in software. While communication methods like agile methods are important, to me they still are outside the scope of actually engineering software. I&#x27;ve found that one of most significant factors of the software quality I&#x27;ve produced is the test coverage of the code, and not just lines of code but the different branches of a function, which honestly feels quite impossible especially if you have exceptions or threads involved.<p>Some celebrate TDD, but to me it just has appears to help people not dropping out the tests.<p>Automatic static analysis with compiler warnings or pure static analyzers is a really good and quick solution for it, but what I&#x27;m really hoping is a fully automated dynamic analysis solution. What&#x27;s really exciting is that there already are some dabbles with that approach, like the american fuzzy lop (<a href=""http://lcamtuf.coredump.cx/afl/"" rel=""nofollow"">http://lcamtuf.coredump.cx/afl/</a>) which actively tries to find new branches from the application being tested.",1417418232
8679874,comment,8679050,8679856,0,0,harlanlewis,,,"Thank you for details!<p>I&#x27;m not the article author or site creator, I&#x27;m just OCD about the myriad ways a seemingly simple page can fail to render.",1417418065
8679873,comment,8678936,8679863,0,0,frozenport,,,"Seriously? If I build my Gentoo differently it won&#x27;t be Linux, because I used a different userland? Take a look at the link, there is the store running native.",1417417983
8679872,comment,8679466,8679466,0,0,mkoryak,,,"It would have been better if the demo image was not a random generated shape thing. I spent a few minutes trying to figure out what the hell I was looking at in there.<p>Is it a wave? A recursive wave? wtf, X",1417417965
8679871,comment,8648294,8649287,0,0,thomasfoster96,,,"At the moment in Australia we have 10% GST on things or no GST on things. Changing that to 15% (for most unhealthy items) and -5% is the sort of thing I&#x27;d like to see.",1417417892
8679870,comment,8679466,8679813,0,0,jdpage,,,"This is how I do it. The problem is that this inverts the depth map, because your right eye sees the left eye image and vice-versa.<p>To properly view them, you need to go wall-eyed, by focusing on something behind the screen. This is something that I have not been able to do yet.",1417417883
8679869,comment,8679060,8679732,0,0,AlyssaRowan,,,"There are usually procedures for that; varies a lot from place to place.<p>Here in the UK, you can go before a sort of judicial committee to do it, the Gender Recognition Panel; costs like £140ish. It&#x27;s kind of a pain; you need to be <i>at least</i> 2 years in full-time, it does help if you&#x27;ve had SRS or at the very least are going to (and they&#x27;re going to want medical reports), and you&#x27;ll need two medical practitioners (one of which must be recognised in a list as a psychiatrist or psychologist specialising in gender dysphoria) to testify that yes, you <i>are</i> trans, yes, <i>really</i> you&#x27;re not going to change your mind, and this is what you&#x27;ve done/are going to do about it. If you pass (and it&#x27;s a little bizarre and intimidating that they&#x27;re judging this), you get a new short birth certificate (and can apply for a long one, and thereafter a passport under your new official identity); you then have two proper birth certificates, the historical document you were born with, and a brand new one listing only your target gender (and name). The fact that you have done all this is confidential (unless you tell someone, obviously).<p>Your mileage <i>will</i> vary, naturally.",1417417878
8679868,comment,8677717,8677717,0,0,peterwwillis,,,"So the author is basically saying &#x27;we need to improve software development&#x27;, and trying to use history as an example of &#x27;what we need&#x27; in order to improve it.<p>Back in the day, craftsmen were just people who were so specialized in a trade that they could build amazingly complex and difficult things through example and practice. But it took a long time to learn this craft from another craftsperson, and knowing this one trade so well left them at a loss for other aspects of the thing they built (resulting in things like building collapses).<p>Modern software developers are the same. Indeed, we&#x27;re even going through the cultural shift that happens when different civilizations revisit the same things without really looking at how their forebears did it. We&#x27;re still reinventing the wheel instead of creating a better one, and we&#x27;re far from creating any new transportation mechanisms.<p>In order to achieve the kind of evolution from &#x27;craftsman&#x27; to &#x27;engineer&#x27; that existed for physical architecture, software developers need to learn about things other than software. It&#x27;s not enough to simply learn how the kernel works, or the hardware works. You have to learn how all those pieces work with other pieces, and the resulting interactions between different natural and non-natural processes with computer systems.<p>The author gets to those points with his &#x27;essence&#x27; of new software engineering. But it gets a bit bogged down by not being generic enough, and not being specific enough. It&#x27;s simple to see the difference between a craftman&#x27;s output and an engineer&#x27;s: the application of scientific principles to achieve an output we can be much more confident in. And that&#x27;s what &#x27;new software engineering&#x27;s goal should really be: producing a more reliable, reproducible, safer product.<p>Are the proposed methodologies going to get us there? I don&#x27;t think so. I think we need less process, and more science, and to create software which has science as an inherent requirement of its design and implementation, and not merely an afterthought for performance reasons.",1417417876
8679867,comment,8678336,8678650,0,0,raverbashing,,,"Don&#x27;t give them ideas...",1417417843
8679866,comment,8677980,8678489,0,0,tmikaeld,,,"My guess is that Intel will actually reach usability first by going the traditional route and have it &quot;compatible&quot; with current operating systems.<p>This way they will be first to market with a directly usable platform, while in the meantime work on a new OS or fork one of their existing platforms (Like Tizen) and adapt it for this new tech.<p>Though this will depend on a compatible Linux kernel and i see this as the part taking the longest time!",1417417767
8679865,comment,8676379,8678421,0,0,lgas,,,"I tried to hack something together here:<p><a href=""http://jsfiddle.net/eh64edgk/"" rel=""nofollow"">http://jsfiddle.net/eh64edgk/</a><p>I got a bit of a sense of the effect.  Maybe someone can improve upon it.",1417417751
8679864,comment,8679245,8679245,0,0,ChicagoDave,,,"I&#x27;ve been a developer for over 30 years and there&#x27;s _always_ churn. You will _always_ have to learn new things. That&#x27;s just the way it is. Some things are truly better (C#) and some things are not (Flash). It often takes time to weed out the truly bad things, especially if the bad thing is the only thing that solves a noteworthy problem (how to provide high-end interactive animated content through a browser aka Flash). We&#x27;ve managed to move most of the basic concepts of Flash to the browser via HTML5 and that is very clearly a better solution.<p>The Angular 2 issue is somewhat curious. My biggest question isn&#x27;t about the new teaser specification. It&#x27;s what happens to the current version. It&#x27;s open source, right? I suspect a number of corporate babysitters will provide the support required to make sure 1.x lasts for a decade or more. If you choose to adopt 2.0 for _new_ projects, so be it. Although why on earth the A2 architects chose to break XHTML standards baffles me. An attribute in parens? Seriously?<p>I personally see the new JS world as a step forward. It&#x27;s absolutely a molten spew of new and unproven code, but it&#x27;s also easier to build things than ever before. There are a ton of problems solved with a front-end MVC connecting to a service layer. A TON.<p>The hard part is that we need better tools all around for JS that we&#x27;ve been spoiled with in C#, C++, Java, and even Assembler.<p>But one more thing that&#x27;s hinted at, but I&#x27;m suddenly asking myself. What if Anders Hejlsberg (C#/TypeScript) were to publish a monolithic front-end MVC/MVVM framework and its use was built into Visual Studio 2015, which is going to be free at the Pro level? That would throw even more F bombs into the JS world.<p>In any case, if you&#x27;re a senior developer or architect and making decisions about technology, you better know what you&#x27;re doing. You can pick 2% usage code, but you better own it.",1417417738
8679863,comment,8678936,8679746,0,0,izacus,,,"There is a huge difference between your run of the mill desktop distribution and Android - all they have in common is a Linux kernel and that&#x27;s about it, Android replaces pretty much all user space.<p>(Also kernel is patched and GPU drivers don&#x27;t use X compatible interface for acceleration.)",1417417716
8679862,comment,8677717,8679320,0,0,thibauts,,,"I should have worded it <i>&quot;This precludes precise estimates and sometimes estimates at all&quot;</i>, as of course depending on your knowledge of the problem domain and your field experience you can get some degree of confidence.",1417417683
8679861,story,,,2,0,e0m,"Detailed explanation of WWII era mechanical fire control computer",https://www.youtube.com/watch?v=s1i-dnAH9Y4,,1417417675
8679860,comment,8679245,8679699,0,0,mappu,,,"I don&#x27;t see (comparatively) a lot of people targeting the Windows 8 app store that&#x27;s been available for 2 years already. Most Windows deployment is either ad-hoc exe&#x27;s or centrally administered msi&#x27;s. What&#x27;s changing with Windows 10?",1417417669
8679859,comment,8677788,8679361,0,0,vidarh,,,"Purchasing Power Parity does not tell you that.<p>Here&#x27;s another way of boosting the PPP numbers: Distribute salary extremely unevenly, and push large portions of your population into near poverty, and thus drive down the costs of providing essential products and services.<p>I don&#x27;t know how the US does in pure productivity, but you can&#x27;t get productivity rankings from GDP adjusted for purchasing power parity alone.",1417417636
8679858,comment,8677788,8679728,0,0,jiggy2011,,,"The problem with that is that the best jobs (such as google) are competitive. Even if two people competing for the same job only want to work 30 hours per week, they both know that they can make themselves more attractive to the employer by offering to work more hours than the other person. This is especially true for immigrant groups competing with domestic labour.<p>The state could regulate the working week to 30 hours, but this will impact GDP and thus the state&#x27;s ability to provide public services via taxation and also the ability of poor people to get out of poverty by outworking the more wealthy.",1417417623
8679857,comment,8674265,8674265,0,0,Warewolf-ESB,,,"Hi Alex
We need your help! Check out Warewolf Easy Service Bus - Primarily written in C# - <a href=""https://github.com/Warewolf-ESB/Warewolf-ESB"" rel=""nofollow"">https://github.com/Warewolf-ESB/Warewolf-ESB</a><p>We got tired of complex and intricate ESBs, so we&#x27;re building one that is easy to learn and simple to use. It&#x27;s a big breakthrough.<p>Would love to hear any of your feedback - good and bad!<p>Please be in touch directly or via <a href=""http://community.warewolf.io"" rel=""nofollow"">http://community.warewolf.io</a>",1417417529
8679856,comment,8679050,8679832,0,0,username223,,,"> If your intention was to be helpful in any way (always a safe assumption with username223), you could have at least said what browser you use.<p>In a half-hearted attempt to atone for my sins...<p>My browser is Safari blocking some JavaScript and most ads.  Your floating header-menu-thingy is completely transparent, but won&#x27;t disappear.  Floating headers generally break page-down, so they&#x27;re a terrible idea.  But if you use them, at least make them opaque so people can figure out the breakage.",1417417511
8679855,story,,,120,51,siralonso,"SpaceX is hiring a Farmer in Texas",http://www.spacex.com/careers/position/5749,,1417417465
8679854,comment,8679659,8679659,0,0,bthomas,,,"The article refers to Google sequencing healthy genomes, and I think I recently read something about Google running a longitudinal health study on employees (a la the Framingham Heart Study) - anyone here familiar with what they are doing?",1417417374
8679853,comment,8679050,8679050,0,0,zobzu,,,"I find the &quot;regular&quot; underline a LOT more readable and ensure im seeing an hyperlink... IMO readability should always trump &quot;being pretty&quot;.",1417417305
8679852,comment,8679109,8679531,0,0,userbinator,,,"<i>Plenty of theoretical conjecture predicts RB trees are faster. Actual benchmarks show that AVL trees perform better, or at worst, about the same.</i><p>That&#x27;s really odd  - there&#x27;s probably some assumption that isn&#x27;t true. It reminds me of the saying, &quot;In theory, there&#x27;s no difference between theory and practice. In practice, there is.&quot;",1417417290
8679851,comment,8679466,8679466,0,0,thomasfl,,,"It&#x27;s actually quite hard to see the 3D images. I remember giving my mom a book full of this 3D stereoscopic images as a present some years ago. She still hasn&#x27;t been able to see any of the 3D images, even after hours of viewing.",1417417253
