ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
153999,story,,,54,11,utnick,"Scalr: The Auto-Scaling Open-Source Amazon EC2 Effort",http://www.techcrunch.com/2008/04/03/scalr-the-auto-scaling-open-source-amazon-ec2-effort/,,1207241974
153998,comment,153812,153831,0,0,boucher,,,"That seems like a good list of reasons.  I would add perhaps the sheer volume of code on the net in other more popular languages, compared to Lisp.<p>I disagree with your conclusion that Lisp is somehow going to take off though.  After being around for what seems like forever, its still a (and I will say it) categorically unpopular language.  If I were a betting man, I'd bet on JavaScript.",1207241969
153996,comment,153812,153989,0,0,gordianknot,,,"I mean failure like the tyrannosaurus rex. That is, from an an evolutionary perspective. Not at the arbitrary present. And I'd wager that Perl is still actually more used than Python or Ruby, it just doesn't get the love on social news sites and elite blogs.",1207241918
153995,comment,153904,153904,0,0,mhb,,,"<a href=""http://www.slowforeveryoneorjustme.com/"" rel=""nofollow"">http://www.slowforeveryoneorjustme.com/</a>",1207241899
153994,comment,153899,153899,0,0,spydez,,,"I thought Joost's strongest point was it's interface. I loved the interface. Not being browser-based was a plus for me. Having control of the video's size (beyond YouTube-esque postage stamp or full-screen), video that looked decent full-screen, good (and simple) controls... they got a lot right.<p>The reason I quit using Joost was that they had absolutely nothing I wanted to watch. The only TV shows they were able to get were the ones no one wanted to put on TV or DVD or anything else.<p>I try to hop on their website every few months in hopes of them getting a deal similar to the Hulu guys, because I really want them to succeed, but so far nothing.",1207241876
153993,story,,,1,0,aaco,"Craigslist Launches Official Blog",http://www.techcrunch.com/2008/04/03/craigslist-launches-official-blog/,,1207241837
153992,comment,153812,153812,0,0,bayareaguy,,,"There are too many disparities between a problem domain (microwave engineering) and a programming technique (Lisp) to compare the two this way.<p>I think it more reasonable to compare the popularity of problem domains (e.g microwave engineering vs robotics) or techniques (e.g. S-Parameter Simulation and Lisp).",1207241820
153991,story,,,1,0,markpeterdavis,"Implications Of How A VC Is Funded: Government",http://www.markpeterdavis.com/getventure/2008/03/implications--3.html,"In my post, How A VC Is Funded, I listed four way in which VCs obtain capital to invest in startups. Each of these four sources of capital has slightly different implications for entrepreneurs. In this post, I will discuss the implications of a government funded VC.<p>Both the federal and local governments have created venture funds that seek to harness the free markets to achieve a social objective. The federal government has one fund that seeks to identify and incorporate new technologies into the military. Many state and city governments use these entities to stimulate local economies.<p>Capital Constraints\nSimilar to both the family office and public funded funds these funds recycle capital from one investment to the next. As a result, capital constraints can be an issue if they don’t have robust capital reserves are timely exits from other portfolio companies.<p>Furthermore, these funds are subject to the whims of legislators. It’s possible that your capital reserves could be re-appropriated to another state agency with a change of administration or policy.<p>Double Bottom Line\nAs aforementioned, these funds typically invest both to increase the size of their capital pool and achieve a social objective (e.g., supporting new technologies, creating tax revenue or decreasing unemployment). As a result, you should be thoughtful about the motivations of these VCs. A pre-requisite for their investment may require moving the company to a new location or taking the time to license the product to the government.",1207241788
153990,story,,,3,0,mhb,"You will be tracked using your government-mandated RFID cards",http://seattletimes.nwsource.com/html/businesstechnology/2004316708_rfid31.html,,1207241751
153989,comment,153812,153978,0,0,boucher,,,"Like it or not, I don't think you can call any of those languages failures.  Certainly not PHP, Python, or Ruby.  I would venture to guess that all three are more commonly used than Lisp.",1207241735
153988,comment,153856,153856,0,0,culley,,,"So far so good.\nNice Concept and implementation.\nCheck out RadioFreeTexas.org for a direct competitor with other interesting point based ideas.",1207241713
153987,comment,153812,153961,0,0,wanorris,,,"Yes, I believe the claim is that when huge government projects like this were completed, all the Lisp programmers left, and had to retrain to find non-Lisp jobs. This sounds similar to the ""AI collapsed and took Lisp with it"" argument.",1207241642
153985,comment,153815,153969,0,0,andr,,,Yes.,1207241566
153984,comment,153812,153948,0,0,jrockway,,,"Metaprogramming capabilities.  Most people seem to prefer keyboard macros or cut-n-paste to actually writing language-level macros.<p>Anyway, Lisp (and many other languages) gives you a lot of tools to make programming more thinking-intensive and less typing-intensive.  Since typing is easy and thinking is hard, it follows that many people will prefer the language that makes you type.<p>JMHO.",1207241556
153983,story,,,1,0,gongfudoi,"How To Build Damn Good Software",http://www.manageability.org/blog/stuff/how-to-build-damn-good-sw,,1207241493
153982,comment,153955,153955,0,0,jrockway,,,"What linux were you using?  On my Debian system, apt-get install clisp installs clisp, and apt-get install slime installs slime (and cl-swank).<p>I haven't tried slime with clisp, however, only SBCL.  Any reason why you're using clisp and not SBCL?",1207241422
153981,story,,,1,0,gongfudoi,"Ubuntu Linux to Be Certified by Sun",http://www.eweek.com/c/a/Linux-and-Open-Source/Ubuntu-Linux-to-be-certified-by-Sun/,,1207241412
153980,comment,153928,153928,0,0,symbiotic,,,"I'm working on a project to help schools do this, although its a bit more specific. If you want me to set up a prototype board at your school or want some more information shoot me an email (aero4x@gmail.com). I'd be happy to set it up for you, especially because I'm looking to expand my idea.<p>But... if you want to do this as a project for your self then I would suggest trying to set up a phpBB forum (<a href=""http://www.phpbb.com/"" rel=""nofollow"">http://www.phpbb.com/</a>). It's open source, but sometimes a bit tricky to set up if you don't have any prior experience.",1207241377
153979,comment,153558,153889,0,0,Tichy,,,"Ah OK - I thought it was a device for shredding old tires... So I guess it is meant to keep the employees from driving away.",1207241365
153978,comment,153812,153877,0,0,gordianknot,,,"Perl, PHP, Python, and Ruby are all interesting failures. They are important for their effect on languages that will last longer (Lisp, ECMAScript) though.<p>Edit: I don't mean these are ""failures"" now, just that they're doomed in the long run. Does anyone think they'll be able to stand any of these languages in 2018? I don't they'll have evolved much by that point either. The older a language gets, the harder it is for it to evolve. And if it tries to make too big a leap, people simply don't go for it (PHP5, Perl 6).",1207241212
153977,comment,153812,153932,0,0,edu,,,"Oh, I'm sorry. I didn't want to mean that Perl is a bad language at all. I was trying to explain my experience with my fellow coworkers, who happened to love perl.<p>Actually, for the last 3 years I've been using it at work, including first-class functions (and Catalyst ;)), and I've it enjoyed quite a lot. I've some minor issues with it's syntax (for my taste too much sigils, but I understand why they are there).<p>What I meant to be masochistic is trying to use eval with strings to emulate macros, and even trying to defend it.<p>On the other side, the CPAN is amazing and I find difficult to live without it!<p>BTW, I hope you'll publish here the Lisp to Perl compiler! Lisp + CPAN sound really awesome and productive!",1207241196
153976,comment,153487,153526,0,0,aneel99,,,"Thank you very much every one and Nostrademons in particular. I really appreciate your insights. Very helpful. What web-host (cheap and reliable:-)you guys use to deploy python-based apps?",1207241162
153975,story,,,2,0,randomhack,"Opinion : Silverthorne fails but PowerVR impresses",http://beyond3d.com/content/news/615,,1207241152
153974,comment,153812,153887,0,0,brlewis,,,"The issue here is human decisions, not a taxonomy of programming tools.  Or do you suggest that Lisp dialects diverge further?  If you called them separate languages, would there be a better chance of them growing popular?",1207241066
153973,comment,153548,153957,0,0,redline6561,,,"Apologies for the site being down at the moment. I'd reset the server but I'm in Chicago. I know that PLT Scheme recently had a system for optional types implemented and there was a paper posted on Lambda-the-ultimate.org. I think it's in SVN. <a href=""http://lambda-the-ultimate.org/node/2622"" rel=""nofollow"">http://lambda-the-ultimate.org/node/2622</a><p>Apparently, Bigloo has supported this for a while:\n<a href=""http://www-sop.inria.fr/mimosa/fp/Bigloo/doc/bigloo-22.html"" rel=""nofollow"">http://www-sop.inria.fr/mimosa/fp/Bigloo/doc/bigloo-22.html</a><p>One should also consider that there are implementations like Gambit-C and Chicken that compile to type-annotated languages, not that it's necessarily what you had in mind. Just food for thought.",1207241024
153972,comment,153558,153632,0,0,gms,,,"Are they sheep? These ""hackers"" are free to work wherever they want, you know. No one is forcing them to make this choice.",1207241022
153971,comment,151390,153016,0,0,mattrepl,,,"Category theory shares a lot with set theory, but they are different - they make different assumptions and each is better suited at describing certain types of systems.  Graph theory is also its own topic in math, though sets can be used to talk about them<p>As for the Catsters' videos, I'm unsure about the best order.  The recommendation to start with the natural transformations playlist came from someone in #haskell (Cale, maybe?).  I'd suggest diving in to whatever sounds interesting and backing up to review other videos that contain any new terms.",1207241014
153970,comment,153881,153950,0,0,zach,,,"Thank goodness they didn't try to use GRASS.  I cannot believe how long I wasted with that system when I started doing web GIS.",1207240991
153969,comment,153815,153833,0,0,dangrover,,,"Was it WebInno?",1207240971
153968,comment,153812,153920,0,0,tfinniga,,,"Well if you ignore the human visual processing system, that's a valid argument.  One ascii character is just the same as the next.<p>Unfortunately for lisp, that's not the case.  Whitespace is different than lines.  There's a reason most people can't look past the parens - they're hard to look past.",1207240932
153967,comment,153778,153778,0,0,wumi,,,"pg or any of the YC founders want to comment?",1207240724
153966,comment,153812,153821,0,0,stevecooperorg,,,"I really don't find that lisp, at least common lisp, is particularly concise. Consider lambda functions, one of those things that lisp is particularly praised for;<p><pre><code>   common lisp: (lambda (x) (+ x 1))\n   C#3        : x=> x + 1\n   ruby       : { |x| x + 1 }\n   python     : lambda x: x + 1\n   Haskell    : \x -> x + 1\n   </code></pre>\nJust in terms of character count, CL is the longest of the lot.<p>No, the problem with trying to get a lisp under your belt has alredy been mentioned. Compared to the alternatives;<p>- choosing an implementation is a research project (clisp? sbcl? allegro?)\n- documentation is weaker\n- libraries are harder to find and install (ASDF vs Rubygems, Python eggs, etc.)\n- emacs/slime is an investment to learn\n- examples are few and far between\n- the language itself (the words, not the punctuation) is inelegant (mapcar, setq, cdadr)<p>I've tried really hard to learn lisp, and it turns out that actually, while there may be some platonic lisp that IS great, <i>actually programming common lisp</i>, now, is a massive effort in struggling in the dark.",1207240678
153964,comment,153298,153298,0,0,ilamont,,,"Moral of the story: If it sounds too good to be true, it probably is.",1207240648
153963,comment,153885,153885,0,0,marcus,,,"Bug was found a couple of months ago, a patch is available<p><a href=""https://bugs.launchpad.net/ubuntu/+source/python-crypto/+bug/191683"" rel=""nofollow"">https://bugs.launchpad.net/ubuntu/+source/python-crypto/+bug...</a>",1207240643
153962,comment,153812,153872,0,0,tfinniga,,,"I think lisp's problems started when it wasn't designed for actual use.  It is elegant, functional, and amazingly regular.  Usability wasn't a design goal.<p>If you look at languages in wide use, they're all procedural - everything from ASM and basic to ruby and python.  Similarly, all the pseudocode I've seen has been procedural.  If you ask a lay person to come up with a way of making 20 pb&j sandwiches, you're going to get a list of steps for each sandwich.<p>I'd argue that functional thinking is not natural, it's learned.  Prefix notation is not as natural as infix notation.  It's not just Algol, it's likely a reflection of natural language, and the forces that shaped natural language.<p>My prediction is that lisp is going to become more popular in one of two scenarios.  The first is that parallel processing becomes more necessary, and because functional programming is easier to parallelize, people will learn it.<p>The second is that lisp is redesigned with usability in mind.  The fact that it's not bad as long as you use emacs+SLIME is not a ringing endorsement.  One of the advantages of, say, ruby is that you don't need an advanced editor to be productive.  The design goal was to make a language that's nice to use, so it is nice to use.<p>If lisp were redesigned with usability in mind, I could see it being more popular.  However, the people who like and use lisp enough to try to redesign it likely aren't bothered too much by the syntax, so it's not something they try to fix.",1207240589
153961,comment,153812,153812,0,0,pg,,,"I don't understand.  Is the claim that Lisp is less popular now because years ago large numbers of programmers working on government-sponsored projects had to use it, but now proportionately fewer programmers work on government-sponsored projects?",1207240579
153960,comment,152936,153278,0,0,misterbwong,,,"Thanks for the reply.  Definitely something to keep in mind.",1207240575
153958,comment,153915,153951,0,0,dpapathanasiou,,,"Don't knock until you've tried it (i.e., been on the receiving end).<p>I worked on a trading floor of a major i-bank, and the head equity trader would do this.<p>The guys getting the bills (other traders) are making six figures in salaries, more in bonuses, yet they always loved those unexpected c-notes.",1207240496
153957,comment,153548,153593,0,0,jcl,,,"I was curious about that comment as well...  I really like the cleanliness of Scheme, but I also find myself attracted to Lisp's ability to selectively optimize a program, for example by declaring the type of variables. To my knowledge this ability is not included in any Scheme implementation.  Does such a Scheme actually exist?",1207240480
153956,comment,153692,153818,0,0,SwellJoe,,,"""merely coincidence"" wins again!",1207240433
153955,story,,,13,28,daniel-cussen,"The nightmare of installing Lisp:  a noob's perspective",,"Somehow, installing Clisp on these three systems took somewhat different amounts of time.<p>Mac OS: Five weeks.  Installing macports was the worse part.  Still can't get emacs and slime together.<p>Linux:  two weeks, gave up when I got Clisp to run in the command line interface.<p>Windows: Five minutes.<p>I have no idea why this is, but for a noob, it takes five minutes to get Clisp on slime up and running on windows XP.<p>I am aware that it takes someone experienced very little time.  But this is what it takes a noob who has to find out firsthand how to deal with glitches in macports and such.<p>I'm also aware there's probably a download site that is much more user-friendly than the others.  But this does not take away the fact there are many user-unfriendly download sites, and it's hard to tell them apart if you're a noob.  So, just putting this out there; for some odd reason, you can install clisp on windows xp if you go to<p>http://www.gigamonkeys.com/book/lispbox/download.html<p>and you'll be done in five minutes.",1207240406
153954,story,,,1,0,davidw,"The Next Web: 2nd group of startups",http://thenextweb.org/2008/04/03/second-round-of-start-ups-that-are-shaping-the-next-web/,,1207240385
153953,comment,153812,153812,0,0,gordianknot,,,"The power of a programming language is proportional to its capability for innate abstraction. If that's true, it follows list-oriented languages are inherently inferior to their hashtable-oriented brethren. (These orientations are often misguidedly referred to as ""functional"" and ""object-oriented"" paradigms, which I find to be useless, over-overloaded terms.) Basically, with list-oriented langs the primary abstraction is a tree, whereas with hashtable-orientation, it's a graph. I'm talking about the -primary abstraction- (i.e. what you ""think in"" when hacking); obviously you can implement any structure in any powerful enough language. If others don't see it this way please, illuminate me.<p>Lists confine one to rigid hierarchies, which have to be compensated for with dirty (but sexy) hacks like in-language macros. Meanwhile the index of hashtables is arbitrary, which allows you to do naturally the things you have to patch in Lisp.<p>Though hashtables are more powerful and easier to grok, for one reason or another nearly all (popular) hashtable-oriented languages are total crap (C++, Java, C#), but in some regard a step up from deformed languages like C (in all seriousness, how does anybody get by without first-class functions and hashtables?). My tentacles have only found two decent hashtable-oriented languages: JavaScript >~1.5 and Io.<p>Anyway, why is Lisp unpopular? Because it's harder for most programmers to think in lists than hashtables. Then, why does the lang have a cult following? Because it's well crafted and consistent, which seems to cause some people to overlook its shortcomings, even to the extent of seeing design flaws as features.<p>But as far as I'm concerned the Language War is over anyway. JavaScript won.",1207240374
153952,comment,153805,153805,0,0,wanorris,,,"I personally build workflow software. My current employer sells vertical systems to small government and nonprofits, and we built a dynamic workflow engine (along with a dynamic ORM layer and a dynamic presentation layer). This allows us to only hire programmers to build the underlying engine, and hire only moderately technical people as project managers and deployment specialists to actually customize the system for existing clients.<p>The programmers get to focus on building a pretty interesting code base, and the project teams get to focus squarely on the customer. This turns out to be a very effective division of labor. We're also in the process of rolling out our tools to VARs and clients.<p>Summary of lessons learned so far: a workflow engine can be a big win, but you really need to understand what you're going to use it for and how it's going to integrate with the rest of your tools to define requirements for one. For us, it slots right in at the business logic layer, and we just build UI on top of it as needed. A standalone workflow engine may or may not do what you want.",1207240269
153951,comment,153915,153915,0,0,cglee,,,"Walk around handing out $100 bills?<p>That is not how I would want to be appreciated, as an employee. It would make me feel even more of a mental prostitute. If I loved my job and was being compensated fairly, how would a few hundred bucks help me.<p>I'm nitpicking though, since I do agree with the point of making it fun for employees. Just don't disrespect them in the process.",1207240229
153950,comment,153881,153881,0,0,apathy,,,"This is amazing.  I looked at the underpinnings they used and it's the exact stack of tools I had given up on when Google Maps was released and began expanding in 2005 or so.<p>These guys followed through and the result is amazing.  Their reasons for using the tools that they chose are exactly why it was so goddamned hard for me to do what I wanted to do with gmaps, but at the same time, I didn't have the spare cycles to do it with Ka-Map! or similar.<p>Brilliant execution.",1207240204
153949,story,,,1,0,twampss,"Dell CEO Says to Expect More Job Cuts",http://www.nytimes.com/aponline/technology/AP-Dell-CEO.html,,1207240173
153948,comment,153812,153936,0,0,gordianknot,,,"What makes Lisp a ""smart"" language?",1207240029
153947,comment,153812,153812,0,0,ngvrnd,,,"Another problem that LISP had was the era of it's widest use -- an era when compilers and most programming tools were proprietary, very expensive, entirely closed and usually dependent on one or another variant hardware platform.  This was also the pre-cambrian era of computer architecture where the hardware varied so much that porting was a serious issue.  Nowadays, languages which have popped into existance and gained wide acceptance (perl, ruby, python, for example) were developed in an open-source world.  And now, finally, lisp is catching up in that regard.",1207239945
153946,comment,153928,153928,0,0,utnick,,,"facebook and twitter<p>one thing you could do is recreate the twitterati section at alltop but with twitterers from your school and then put up flyers about it in the cs building",1207239934
153945,comment,153812,153854,0,0,gordianknot,,,"Noise != usage. Don't confuse attention with popularity. I think about the language and post comments about it on forums and read great Lisp code (e.g. Arc), but I'd never actually use it for anything non-trivial. Why? Because I write web apps and existing Lisps don't make that easier or more fun.<p>The only (!) thing Lisp has to do is efficiently and absolutely abstract away XML, CSS, and JavaScript. No Lisp is going to get any uptake otherwise. We could do this with Arc.",1207239803
153943,comment,153815,153815,0,0,nostrademons,,,"You should put your general idea out in public as soon as you have it - you'll get feedback, reality checks, and hopefully encouragement.  Oftentimes, suggestions won't be directly relevant, but will point you to additional areas you should study to gain a better perspective on what you're doing.  And if <i>nobody</i> cares or understands what you're doing, it's probably a sign that you should pick a new idea.<p>You should keep the specifics secret until you have something to show.  This is more to ward off the ""Chandler phenomenon"" (where you raise unrealistic expectations which suck all the fun out of development) than to ward off the ""Facebook phenomenon"" (where somebody steals your idea and runs with it).  In my experience, the Chandler phenomenon kills many more startups.  You don't really want to be in a position where you've told people your startup will do X, Y, and Z, and then find that X is useless, Y is unusable, and Z is technologically impossible.",1207239714
153942,comment,153867,153867,0,0,dustineichler,,,"Why, b/c they big companies don't innovate ...they litigate. Makes me cringe.",1207239651
153941,comment,153899,153899,0,0,asillyusername,,,"My understanding is that Joost will fail because the developers can't get along with anybody including one another, geniuses though they may be.",1207239623
153940,comment,153812,153845,0,0,dmh2000,,,">You're looking at a picture of a single circuit the size of a large office building, built to a precision of 100 microns. I agree that this is impressive, but remember that you get to cheat: You build the thing, measure how far off you are, and stick delay lines in the short branches until everything lines up.<p>they call that Agile Microwave Engineering<p>oh, and you must have two microwave engineers working on each delay line.",1207239530
153939,comment,153812,153812,0,0,mattjones,,,"""Unpopular"" needs to be further qualified.  Rather than ask, ""Why is Lisp unpopular?"", ask, ""Why is Lisp unpopular for X?"".  Lisp is actually reasonably popular for some things, and it's those things to which existing dialects are best adapted.  Being well adapted to Y often means not being especially well adapted to X, even if it's for subtle reasons.<p>It's like asking, ""Why are Arctic foxes (<i>Alopex lagopus</i>) not very popular on the African savanna?""  Because they didn't evolve in response to the demands of that environment.  The bat-eared fox, <i>Otocyon megalotis</i>, did.<p>The differences between <i>Alopex</i> and <i>Otocyon</i> aren't so massive that they seem like totally different kinds of animals.  But it would be tricky to predict exactly what they should be, and develop the right kind of fox in a lab.  Some adaptations are obvious (thick fur), other less so (specialized circulatory system).  I suspect the same is true for programming languages.  It's tricky to determine exactly what makes Scheme better suited to the classroom than to developing general applications.  Perhaps the best way to solve the problem is the way PG is doing it with Arc, which is to take a very young, malleable dialect of Lisp and plunk it down in the environment to which you want it to become well adapted, and then continue development in response to the demands you encounter.",1207239482
153938,story,,,1,0,damien,"Recession Can Be Breeding Ground for Next Big Idea",http://64.233.167.104/search?q=cache:pou82vXz0KsJ:adage.com/article%3Farticle_id%3D125850,,1207239468
153937,comment,153812,153880,0,0,gordianknot,,,"What's the misunderstanding exactly?",1207239415
153936,comment,153812,153854,0,0,jrockway,,,"I think the problem Lisp has is that very few people are forced to use it.  If you look at the average programmer, he doesn't want to think about programming, he just wants to press keys an go home.  So a language that requires you to think instead of type is not something that he is going to flock to.<p>I think the sad reality is that most programmers aren't very smart, so smart languages will never become popular.<p>I'm not sure why it matters though, there are plenty of CL libraries (and jobs), so if you like lisp you can get by just fine.",1207239413
153935,story,,,1,0,gongfudoi,"Subliminal Creativity, Courtesy of Apple",http://www.evolvingexcellence.com/blog/2008/04/subliminal-crea.html,,1207239407
153934,comment,153812,153923,0,0,gordianknot,,,"It's not ""syntax,"" it's human parseability. Lisp is hard to parse because humans don't think in lists. Some people are smart enough or naturally able to overcome that obstacle, but most aren't.",1207239384
153933,comment,153815,153861,0,0,jamesbritt,,,"I suspect the events in ""Dreaming in Code"" describe many start-ups.",1207239252
153932,comment,153812,153872,0,0,jrockway,,,"I think your hatred for Perl is unfair.  Yes, eval and strings is a terrible substitute for macros.  Only an idiot would pretend otherwise.  But 90% of the time, the other tools we do have available (first-class functions, everything internal being dynamic) lets us get by.<p>For example, a few months ago I was working on a blog post about how nice it would be if Perl had macros.  I had a perfect example picked out, but I decieded to try an implement it without macros.  It ended up working perfectly.<p>The docs explain the original problem, and my solution:\n <a href=""http://search.cpan.org/~jrockway/Context-Preserve-0.01/lib/Context/Preserve.pm"" rel=""nofollow"">http://search.cpan.org/~jrockway/Context-Preserve-0.01/lib/C...</a><p>Also, if you read your friendly local CLOS implementation, you will notice a lot of macros.  Moose is a CLOS-alike for Perl, and it obviously didn't need macros.  (Actually, I would like to port Moose to Lisp, 'cause it's much more sugary than CLOS, and it has traits.  Mixins FTL.)<p>Anyway, Perl is nearly as good as lisp, so be careful when choosing your examples.  (Incidentally, I am currently working on a lisp variant that compiles to Perl, because I like lisp syntax better than Perl syntax, but I like Perl's CPAN and regex engine.)",1207239195
153931,comment,153676,153676,0,0,attack,,,"Where am I going to sell my startup now?!",1207239189
153930,comment,153760,153847,0,0,mechanical_fish,,,"Your first hire will have to be a veteran Microsoft sales rep.<p>""In order to further enhance the exciting new features of PIrated MSOffice 2020, we've had to push the shipment date back by 2e15 age-of-the-universe units. But, rest assured, it will be worth the wait.""",1207239145
153929,comment,153815,153815,0,0,dpapathanasiou,,,"Just to contradict most of the comments in this thread, a longer stealth period lessens the chances of this happening:<p>""<i>The Marimba Phenomenon ... everybody checks out your code, and it's not good yet. These people will be permanently convinced that your code is simple and inadequate, even if you improve it drastically later.</i>""<p>(<a href=""http://www.joelonsoftware.com/items/2005/11/02.html"" rel=""nofollow"">http://www.joelonsoftware.com/items/2005/11/02.html</a>)",1207238988
153928,story,,,4,5,forsaken,"Ask YC: How to build a community online at a college?",,"I am currently attending a University that has no real online community, and I think this is a ""bad thing."" Universities are supposed to be about sharing of ideas, and collaborating and expanding your ideas with the help of others. I am curious how you all would go about trying to build a community online for my school. Presumably something close to a wiki/forum, but with a focus on education? Or should it be more of a free-form discussion, and try and get people to come out of pure chance. This is very similar to a startup, and building a community around one, but presumably the community is already there in some form, it just needs to be brought online. Anyone have any advice on how to go about achieving this?",1207238854
153927,comment,152478,153133,0,0,Novash,,,"pg would have said, ""Don't worry about how you will make money out of this. Worry about making something that people want first."" Shame, shame, shame.",1207238854
153926,story,,,1,1,aschobel,"IPhone PwnageTool for Mac goes live. Handy if you haven't yet been accept in the iPhone Dev program.",http://legacy.macnn.com/articles/08/04/03/pwnagetool.released/,,1207238735
153925,story,,,2,0,joshstaiger,"Transparent PNGs Can Deadlock IE6",http://blogs.cozi.com/tech/2008/03/transparent-png.html,,1207238679
153924,comment,153760,153783,0,0,cthulha,,,"""In other news today, the value of pi was rounded up to 4 in new copyright legislation sponsored by the RIAA. This will also prevent terrorist groups communicating via mathematical functions.""",1207238679
153923,comment,153812,153860,0,0,dpapathanasiou,,,"I don't understand the syntax complaint: it is simple to learn, and with few exceptions, applies in all cases.<p>Other language syntax (C or Erlang, e.g.) is arbitrary and tedious by comparison.",1207238593
153922,comment,153815,153815,0,0,andrewparker,,,"While you're in ""stealth mode"" you're losing valuable opportunities to get feedback on the execution of your idea.  Since execution is so much more important than an idea alone, I don't see value in being stealthy at any stage.",1207238557
