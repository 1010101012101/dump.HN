ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
1224181,comment,1223751,1223751,0,0,jorgecastillo,,,"Not something I will miss. I don't even see why companies make this half baked attempts at open sourcing code. If they are going to open source something they should put real effort in their endeavor. We don't even need hardware companies to open source anything. What we need is good enough documentation so that interested developers can make open source drivers with out having to reverse engineer the hell out of the hardware.",1269748769
1224180,comment,1224071,1224071,0,0,drp,,,"Fowler's book is about simplifying mainentance and testability, not (necessarily) simplifying the actual code.  He doesn't even claim his techniques are the best way to start programs, hence the ""Refactoring to"" portion of the title.  
Also, it's specifically about object oriented design patterns so the examples aren't intended to apply to other paradigms.",1269748735
1224179,comment,1223404,1223770,0,0,heresy,,,"Nice. But I have a difficult time seeing how storing ""malleable"" data like that, opaque to the storage engine, is going to be performant for querying.<p>Must be nice to have requirements that never change once you've decided on a data representation...",1269748701
1224178,comment,1223951,1223951,0,0,paraschopra,,,"Hey, how do you estimate the acquisition price?",1269748630
1224177,comment,1223404,1223811,0,0,newhouseb,,,"> In contrast restarting a service is no big deal.<p>Yikes, restarting a service that's so essential to everything else in web infrastructure is certainly a big deal.  Where I work (large 30+ million users/month site), we have batches that do all sorts of processing and DB crashes (basically equivalent to a restart) can be a major pain because it can be difficult to figure out exactly what failed and when and how to best recover.  You might say, ""oh just re-schedule all the batches to allow downtime"", but once you have 30 developers with a hundred or so batches, that can be damn near impossible to orchestrate.<p>A simple stateless web-app can probably tolerate a DB restart, but Cassandra was built to scale - not to host a to-do app.<p>ALTER takes ages to do because of the ACID constraints of MySQL.  If you want, you can sacrifice the ACID constraints by just cloning the table with the proper modifications and then dropping the table, but I'm venturing into DBA-land for which I am in no way qualified to profess knowledge.",1269748624
1224176,comment,1223620,1223895,0,0,raptrex,,,"my school has a 24 hour computer lab, but due to the budget cuts in CA, the library is closed twice a month, so the computer lab is always packed. I know (hope) that this wont last long, but it has been a problem this whole school year for me.",1269748437
1224175,comment,1222915,1223996,0,0,mburns,,,"According to the article, yes.",1269748413
1224174,comment,1223404,1224123,0,0,derefr,,,"I'd love to see a comparison between using these XML engines for queries and NoSQL, then. I'm betting they'd be competitive at least to the point that, if you already had one of the supporting DBMSes set up, there would be little point in training your DBA on NoSQL as well.",1269748337
1224173,comment,1223523,1223833,0,0,chanux,,,"Yeah I never really felt comfortable with this base 10 thing. Maybe because I believe base 2 representation is the way to express what it actually is.<p>On the other hand base 2 should've been confusing average Joe for a long time now and the operating systems that want themselves to be average Joe understandable.",1269748279
1224172,comment,1223523,1223889,0,0,plesn,,,"Yes, but until now it was more things under the hood. It was mainly a breeze to install and to maintain.",1269748278
1224170,comment,1223404,1224086,0,0,strlen,,,"(Edit: this is a longer reply than I intended, no longer really intended as a direct reply to the parent; this is more a reflection on systems architecture of data-intensive applications).<p>That's a good point, but a pure in memory data structure is:<p>a) Not persistent to disk <i>at all</i>. Judging from my own experience with similar low-latency systems used in ad serving (where we called these ""data servers"") and other similar systems, the data is likely to be persisted to local disk and the deltas replayed to it from a MySQL db to avoid long restart times.<p>b) Lives within the ad server process. This is likely not true, as the ad server process will need to compose a ""working set"" for particular ad auctions from multiple data sources (bid price for each ad, keywords, budget/delivery/campaign specifications for each ad, keyword relevance of ad/ad campaign). Each of these data sources is likely represented by a different data structure (red-black tree for one, hash table for another, trie for yet another, graphs, B-Trees, etc...), has very different characteristics in terms of cache-locality, rate of change, size, density and comes from multiple places (some from RDBMS, others from Map/Reduce)<p>(Interesting side note: earlier I also wanted to say that neither the data structures are usually not partitioned in how they're store, now is computation done on them partitioned. However, with the age of parallel computing this is simply not true: there are now parallel data structures and algorithms).<p>One compromise is perhaps we can call these systems ""data servers"" or ""data structure servers"" (afaik Redis does the latter). MySQL (or any other RDBMS) merely <i>feeds</i> these systems through some form of message oriented middleware. In this case RDBMS (and this is an over simplification which doesn't cover all the corner cases) is merely acting as tape: changes are played forward and not randomly accessed. RDBMS that is the source of truth for ad-serving is <i>never</i> queried real time and can easily be taken down for maintenance while ad serving continues. It doesn't even need to be highly available (if advertisers can't submit ads it would certainly be a <i>huge</i> and costly outage, but much less costly than if users see ads!).<p>Note, such a system is also necessarily eventually consistent (in the truest meaning of the word: customer receives an SLA which corresponds with a point where the serving component is consistent with the DBMS).<p>There still needs to be an efficient OLAP component to back the CRM/ERP functionality of this system, for which an RDBMS is still a good bet (combined with an off-line system e.g., Map/Reduce for more complex reporting and optimization). However, had an end-to-end ad-serving system been written from scratch <i>now</i>, would the RDBMS component serve as primary source of truth (rather than <i>just</i> as the backend for the publisher/advertiser/support UI component).<p>In addition, this (""write to RDBMS, serve from elsewhere"") design is also very specific: writes to the ""ad submission database"" are rare and don't always require high availability. Consistency (between the RDBMS and serving component) can be <i>much more</i> eventual than would be in a Dynamo based system (where the weak ""can't read my writes"" eventual consistency is only a failure condition).<p>Now suppose you <i>also</i> want highly available, low-latency writes (even if not at the same frequency as reads) and you'd want to be able to read-your-writes in normal situations. This makes the ""write to RDBMS, serve from something else"" (effectively what popular memcache+MySQL deployments are) scenario more brittle. You now have much harder questions to answer (do I want a system that's always in a consistent state e.g., to avoid having to do quorum reads/writes? am I okay with eventual consistency as a failure scenario? etc...) but with many workloads this becomes a necessity.<p>Despite speaking at NoSQL events, I am not a big fan of the NoSQL name. Not only do these systems <i>not</i> intend to completely displace SQL based RDBMS systems (and as with ad server example can exist side-by-side with them), additionally these systems provide functionality that <i>can't</i> be provided by RDBMS systems (and <i>not</i> just due to scalability concerns).",1269748110
1224169,comment,1223879,1224048,0,0,invisible,,,"The second (in order) sentence is referring to finding flaws, not flaws existing (which the first sentence was referring to).  The sword exists - being able to wield it and manipulate it freely is the treasure.<p>Also, the article does not explain the severity of the flaws - all 11 could have been simple bug fixes for all we know without research.",1269748065
1224168,comment,1223404,1224090,0,0,megaman821,,,"I thought most of this already exists, just not on the free databases.<p>Having XML or JSON columns that can their interior fields indexed, would replicate what document databases do.<p>Also what having a master-master relational database with a bunch of materialized views replicate what people are using Cassandra for. Is it just because the free databases don't have materialized view support?",1269747987
1224167,comment,1223751,1223932,0,0,duskwuff,,,"You mean ATI, surely?",1269747660
1224166,comment,1224071,1224071,0,0,digitallogic,,,"From the first chapter of 'Refactoring':
""Was it worth it?  The gain is that if I change of the price's behavior, add new pricess, or add extra price dependent behavior, the will be much easier to make.""<p>Massive functions start out as small and then large ones.  If a business logic function has to grow every time there's a new rule that could live behind an abstraction, it's on the path to becoming massive.",1269747575
1224165,comment,1224138,1224138,0,0,rm-rf,,,"Dang - Mom was right.<p>I better call her and let her know.",1269747572
1224164,comment,1224071,1224071,0,0,barrkel,,,"There's a spectrum with respect to abstraction. Too little, and you end up with a brittle blob of code where the multiplication of each axis of change and parameterization causes an explosion in state changes and maintenance costs. Too much, and you end up with too many indirections, lost performance, and an additive cost of change and parameterization in each axis that dwarfs the complexity of the underlying operation.<p>The happy middle is ""just right"", but it's hard to recognize or achieve without some experience of either extreme. And even then, the chosen point might be biased towards less abstraction for performance reasons or more abstraction for composability and reuse reasons. But really good use of abstractions (ideally including at the language level) ought to reduce the amount of compromise needed.",1269747513
1224163,comment,1223649,1223649,0,0,spudlyo,,,"I want an iPad for browsing leisurely from my couch or bedroom.  I don't want to see web advertisements though, and I won't be able to install Firefox + adblock or some kind of ad filtering proxy on the machine.  I suppose I could configure a transparent proxy on my network, but that sounds like a pain.  For me the closed nature of the device might be a deal breaker.",1269747481
1224162,comment,1224071,1224132,0,0,skybrian,,,"For Java I agree, more and shorter methods are better. But then I see Haskell programs with zillions of one-line functions and higher math to do trivial things, and then I can understand where he's coming from.",1269747435
1224161,comment,1220777,1221291,0,0,thaumaturgy,,,"I wholeheartedly agree with being exposed to people of different age groups and backgrounds, as often and as early as possible.<p>When I was in the 3rd grade, I got to join an experimental ""multi-graded"" program which had students from the 1st through 5th grades in a single classroom. It's not that uncommon really, just sadly uncommon in U.S. public schools at the time. Anyway, it gave the older kids an opportunity to take leadership roles in group projects, and it gave the younger kids the opportunity to quickly learn behavior and skills from the older kids. It was a great, successful program, by most metrics.",1269747226
1224158,comment,1223620,1223987,0,0,sown,,,"I guess. Sort of like...a network-computer <i>appliance</i>. \<i>shrug\</i>",1269747143
1224157,comment,1222905,1223420,0,0,prog,,,"What was the version of bzr and git? Was this windows or unix? I suspect its unix only. It would be good to see the numbers on both platforms. Is this a limited rev history or the entire history? You also don't mentioned the exact commands you run. Do you use n=0 or n=1 with bzr? I would normally use n=1 as n=1 is not of much interest. Such limited microbenchmarks merely spread FUD.<p>Also, while choosing a DVCS, the common operations have to be fast not all operations. So the interesting benchmark would provide numbers for all the common operation. Just running one operation can be misleading. I do much more with my DVCS than just run the log operation :-)<p>Also, I don't see myself doing a log of a full 20+ year history multiple times during the day (In fact I have never done that). The commands I use normally, are fast enough large repos with bzr (emacs included).",1269747020
1224156,comment,1223751,1223751,0,0,dfghjkg,,,"So what ?<p>I'm perfectly happy to have a driver that works, I don't really see the community advantage of an opensource driver as compared to an opensource framework or application.<p>People are happy to use Intel cpus rather than opensparc!",1269746952
1224155,comment,1224071,1224139,0,0,DougBTX,,,"<i>The question becomes: when does hiding complexity improve your ability to reason about the code?</i><p>When you trust the abstraction. For example, on the whole we trust the filesystem abstraction, we rarley try to inspect the phisical location of the bits on the disk - the filename is sufficient, we can treat the fielsystem as a black box.<p>On the other hand, if you don't trust the code, you're going to want to read every line, and that's easier to do if all the code is in one method. An abstraction is a liability if you can't trust it.<p>Re testing: it's easier to trust a well tested function, so splitting up code to make it easier to test, and then testing it, will allow you to ignore it's implementation. Suddenly it isn't logic spread across six classes, but one class using some utility methods.",1269746935
1224154,comment,1224071,1224071,0,0,sgoranson,,,"Personally my brain has an easier time grasping {TaskA(); TaskB(); TaskC();} rather than a 750loc block of code. Yes, multiple source files are annoying, but there's plenty of tools out there to help (ctags and vim is enough for me).<p>But the more important reasons to strive for high cohesion/low coupling are: Future changes are generally easier when you have well defined blocks instead of a birds nest of code, unit testing practically writes itself, and you have a better chance at isolating a problem to a module if it's responsibilities are few and well defined.",1269746935
1224153,comment,1223951,1223951,0,0,ivankirigin,,,"There are so many on the list that I know will continue as apps but essentially aren't companies anymore. Those kinds of transitions don't come with a press release. So don't trust any math about those that have not exited.<p>Further, the really important stat for YC is the number of big wins. They still have not idea how many there will be.",1269746886
1224152,comment,1223440,1223440,0,0,Whitespace,,,German,1269746873
1224151,comment,1223620,1223620,0,0,chanux,,,"So iPhone and iPad should come in double packs to actually be useful?",1269746681
1224150,comment,1224032,1224032,0,0,ck2,,,"The only way to combat automated DMCA of content is to counter-notice ASAP. 
There's no penalty for corporations to ""go nuts"" and block everything by default, so guess what they will always do.<p><a href=""http://www.chillingeffects.org/dmca/counter512.pdf"" rel=""nofollow"">http://www.chillingeffects.org/dmca/counter512.pdf</a>",1269746678
1224149,comment,1223785,1223785,0,0,xtacy,,,"It's good, but quite often, I've faced the problem of an information overload, where there are just too many things to read. How have you all tackled it?",1269746670
1224148,comment,1223404,1224104,0,0,jimbokun,,,"Walmart also has a few products they need to track.",1269746648
1224147,comment,1223404,1224104,0,0,rm-rf,,,"I'm pretty sure that Walmart's databases track way more interesting things than tweets.<p>I'd assume that they know where every pallet of product is located anywhere in the world and what's in it, where every truck is and what's in it, the referrer for every click on their web site, details on every purchase at every store, location of every incoming product from every supplier.....<p>And then I'd assume that they take all <i>that</i> data and de-normalize it, move it to a whole different series of databases, poke it into star schemas and warehouse it for further analysis - 'cause y'know - red wieners might be more popular than blue wieners next xmas, and they'd better  anticipate that by at least 6 months, 'cause the wiener factories have to re-tool.<p>Real business have real data, not tweets.",1269746304
1224146,comment,1223780,1224056,0,0,jws,,,"Accelerometer. Flip over about the horizontal axis? You'd have to be fast to ensure no peeking.",1269746300
1224145,story,,,16,3,petewarden,"Inside a global cybercrime ring",http://news.yahoo.com/s/nm/20100324/wr_nm/us_technology_scareware,,1269746220
1224144,comment,1223951,1224059,0,0,jackowayed,,,"Some places you can improve your numbers:<p>* They start with ~7%, but almost all funding deals mean they get diluted. The bigger the acquisition, the more funding the company has taken (in general), so the less equity YC has (which means figuring out the average, even if you could, wouldn't help you much because the bigger funding deals would get overrepresented when you multiplied average equity * big exit where they actually were down to <1%).<p>* The average investment is more like $20k. It's $11k+$3k/founder, so $17k for a 2-person company and $20k for a 3-person. I think that changed fairly recently though. I remember it being all 5's and 10's when I first heard about YC. Maybe $10k+$5k/founder? So that'd be $20k for 2 founders, $25k for 3.<p>There's also probably a decent amount of money spent to fly people out to the interviews. $600/startup, if you assume they interview  2-3x as many as they fund, that's ~$1200 more per funded startup, or an additional 5% or so.<p>Plus there's the cost of the office and utilties and dinners and such. (Just wondering, how nice/expensive is the food at the dinners?)<p>But I think they're operating with a trend that shows that they will be highly profitable when you consider all the startups that they've already funded that will exit.",1269746208
1224143,comment,1223025,1223176,0,0,webwright,,,"Ack, yeah-- mispoke.  You can afford to pay $50/customer.  Conversion rate is obviously a big part of that.  /facepalm Sorry for not paying better attention to what I was writing.",1269746197
1224142,comment,1223927,1224133,0,0,hristov,,,"The problem with putting jokes on HN is that you always have to explain the damn joke afterwards.<p>So yes I think good analogies can be helpful, but this particular analogy made no sense whatsoever. I mean what does it mean that one has to put two chairs on top of each other? And why does that make the theory invalid. Theories do not have to look nice or symmetrical to be valid. In any event the analogy is completely baffling.<p>If you cannot come up with an analogy that actually makes sense you may as well resort to authority and just say this was published in a peer reviewed journal so until someone refutes it, it is probably right.",1269746164
1224141,comment,1223523,1223833,0,0,chadaustin,,,"Maybe it's my physics background, but I never understood the ""base 2 is more logical"" argument.  The only time I care about file sizes is ""how many files can I fit on this {DVD,external drive,iPhone}?""<p>It's so much easier to translate GB to MB by multiplying by 1000 and vice versa.",1269746081
1224140,comment,1223523,1224015,0,0,Raphael,,,"Shouldn't be a problem, as the internal representation of size is still bytes.",1269745914
1224139,comment,1224071,1224071,0,0,aaronblohowiak,,,"this entire blog post reduces thusly: ""hiding complexity with abstraction and encapsulation is not simplification, but further increases cognitive load as the abstractions must be undone to fully comprehend the function of the code."" It is an interesting point, sure.  I think the example as given makes his point fairly well.<p>The question becomes: when does hiding complexity improve your ability to reason about the code?<p>I agree with the author that this is ultimately a personal preference.  One guideline that I appreciate is that your code should operate at a consistent level of abstraction.  For instance, in the routine that defines the business logic, the details of the protocol used for persistence should be ""somewhere else."" This complicates tracing the execution of the program, but it makes understanding the intent of the business logic easier as there are less ""implementation details"" to ignore.",1269745881
1224137,comment,1224071,1224128,0,0,olliesaunders,,,"Yes.<p>And with testability comes flexibility and maintainability. I think the author is focusing too much the simplicity of familiarization and conceptual weight where, very often, the real challenge with imperative code lies in maintenance.",1269745552
1224136,comment,1224032,1224032,0,0,christefano,,,"For putting <i>her videos</i> on YouTube or for putting videos <i>of her</i> on YouTube?<p>This looks like another marketing flub by Sony, but in all likelihood it is their copyrighted work and not Beyoncé's.",1269745407
1224135,comment,1223620,1223718,0,0,Locke1689,,,"<i>Are we seriously at the stage where people want ""an Apple product""?</i><p>... when was the last time you talked to a college girl?",1269745340
1224134,comment,1223543,1223543,0,0,BoppreH,,,"<i>Opens the page.</i>
<i>Small flash interface appears.</i>
<i>""Oh noes, a flash pdf! I hate those...""</i>
<i>UNEXPECTED TWIST</i><p>I simply loved the way the story was told. Even more than the story itself, but that's a compliment, not a critic. And because it was about creativity, even more points to you.<p>The rest of the blog is really good too, following the same lighthearted style: <a href=""http://betsystreeter.blogspot.com/"" rel=""nofollow"">http://betsystreeter.blogspot.com/</a>",1269745238
1224133,comment,1223927,1224098,0,0,queensnake,,,"As opposed to giving you a graduate education in math & physics and many years of research besides?",1269745237
