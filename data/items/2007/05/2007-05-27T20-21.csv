ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
24968,comment,24817,24817,0,0,jamiequint,,,"This looks like a good idea poorly implemented. Done right, I really think something like this could take off.",1180299534
24967,comment,24938,24938,0,0,spez,,,"As I've mentioned on reddit, almost everything this fellow wrote is false.<p>news.YC isn't based on reddit<p>Any text that comes from users and gets redisplayed is checked.<p>The actual bug was that we allowed javascript: links to be generated by markdown, which we use in the comments to allow formatting. This allowed users to make links in the comment section that could run javascript when clicked.",1180299063
24966,comment,24938,24961,0,0,tuukkah,,,"You provide a good list of features to remember to implement, I didn't know of HMACs for example. I was thinking more about the process though: Are startups able to review all their code for bugs before pushing it online? When you code long hours, do you still write down all your assumptions to allow for audits later? What if none of the founders have experience in network security? When you don't have formal and clear processes in place, how easy is social engineering among customers?
",1180298284
24965,story,,,1,0,gibsonf1,"Will Facebook Platform Be The New Arbiter Of Web 2.0?",http://publishing2.com/2007/05/27/will-facebook-platform-be-the-new-arbiter-of-web-20/,,1180296750
24964,story,,,1,0,gibsonf1,"Online visits a boon for far-off patients / In growing trend, doctors consult through Internet",http://www.sfgate.com/cgi-bin/article.cgi?file=/c/a/2007/05/27/BAGOKQ2IEQ1.DTL&type=tech,,1180296672
24963,story,,,1,0,gibsonf1,"DIALED IN / Let your voicemail do your dirty work",http://www.sfgate.com/cgi-bin/article.cgi?file=/c/a/2007/05/27/LVGTMQ12T01.DTL&type=tech,,1180296622
24962,story,,,7,0,gibsonf1,"I'm 8, I'm late for an online date with a cuddly penguin",http://www.sfgate.com/cgi-bin/article.cgi?file=/c/a/2007/05/27/MNGB6Q1QLQ1.DTL&type=tech,,1180296551
24961,comment,24938,24957,0,0,antirez,,,"Well.. it's not so hard to avoid this kind of bugs. In web applications the basic rules are the following:<p>- Use something able to auto-escape SQL queries, unlike things done at hand like with PHP mysql_escape_string()<p>- Check user input _a lot_ for sanity. Write utility functions to access get/post vars able to make sure data type and range are ok, like, getintparam(""foo"") or if you aspect a value between 1 and 10 getintparam(""foo"",1,10). Similar functions with strings where you can specify the valid set of chars are also helpful.<p>- Remember to output html entities not only when you are outputting              text, but also in html tag attributes like foo=""bar"". ""bar"" requires to be converted in HTML entities of course.<p>- Create a solid authentication scheme, for example write in the user table a 256bit authentication random number got from /dev/urandom, and set it as user cookie.<p>- When there are load problems use HMACs to ""sign"" important data and store it in user's cookies. It's possible to check for integrity of the data without to access the DB at all. Fast & Safe.<p>- Remember that if a user is logged in, an external site can have code like img src=""<a href=""http://yoursite/op.cgi?delete=all"""" rel=""nofollow"">http://yoursite/op.cgi?delete=all""</a>
To avoid this attack make sure to:<p>1) use HMAC-ed IDs for importante objects. ""ff83729A2"" instead of ""41"". Require that IDs of objects target of operations or other auth tokes the external site can't guess are required in order to perform operations.<p>2) for very important operations the system may require the user to type the password.<p>- Make sure you are not using algorithms with some worst case time complexity that can be triggered from outside. It will be very easy to turn this into a DOS.<p>And... of course: wirte simple code that's simple to check for corner cases. Computers aren't currently able to audit code, so you need to optimize for humans even for security.",1180296484
