ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
53196,comment,52932,53163,0,0,bootload,,,"""<i>... I didn't get what you mean by that. ...""</i><p>can I run feedity over news.yc? or turn the news.yc site to rss. I gave it a go but couldn't get a result. It would be useful to try because it's a pain scraping lots of different nyc pages.<p>
... try again. Ahh now I got it. The first time I didn't select a category. Is it possible to get an rss result back without selecting a category? (like select your own?) as the categories restrict (reduce the returns). I want everything back.<p>... now I understand. I've tried to do something that's only found in the <i>""Advanced Refine""</i> menu. Would it be a good idea to add an ""Advanced"" link at the front page?<p>... aggh the <i>Advanced Refine</i> cr@ps out on my blocks. I'm trying this bit because I've been hacking with BeautifulSoup pretty much doing exactly what the refine is doing. Its an absolute pain. One idea to make selection of the blocks easier is to parse the html doc, then render the structure as an outline visually (like HTML Validator or below) ....
  
    table tag         <p><pre><code>            + td child tag 1

            + td child tag 2                            

                   + tr child 2,1
</code></pre>
When I was trying to parse pages the ability to see the page + markup overlayed with the structure HTML Validator ( <a href=""https://addons.mozilla.org/firefox/addon/249"" rel=""nofollow"">https://addons.mozilla.org/firefox/addon/249</a> ) made it 10 times easier for me to select exactly <i>""what""</i> I wanted to parse. ",1189490345
53195,story,,,2,0,altay,"Mark Cuban has officially jumped the shark.",http://www.blogmaverick.com/2007/09/07/dancing-with-the-stars-and-the-meaning-of-life/,,1189490307
53194,comment,53190,53190,0,0,pc,,,"Well, if you really want to use Lisp code and Python libraries, and are prepared to write a compiler, why not do the translation in the reverse direction? Write a compiler from Python to Lisp, and bring Python libraries to Lisp.<p>[edit: irrelevant stuff removed since parent was deleted]",1189489815
53193,comment,53018,53018,0,0,Tichy,,,Sage,1189489454
53192,comment,52932,53028,0,0,greendestiny,,,"It sounds like you're the kind of guy with the contacts and skills necessary to make deals, Why not skip YC and go straight for a large angel or VC investment? A large part of what YC brings is business knowledge and contacts for hackers, you probably have that covered. <p>And while I'm dishing out arbitrary advice, it sounds like #1 is not trying to hire people as good or better than he is. Specific Ruby experience probably isn't as important as the brains and attitude of the hacker. You're going to have to bring anyone up to speed, just make sure they are worth the effort.",1189489192
53191,comment,53032,53184,0,0,AF,,,"I thought I made it clear. The point of doing that is because you'd have simple access to Python's massive collection of quality libraries.",1189489167
53189,comment,53115,53115,0,0,joseakle,,,"interesting but, what if an attacker knows your email password, then he can control your whole life right? because there is just one password (your email's) for which all your access to websites depend on.<p>or, should i read this as a joke?",1189489028
53188,comment,53066,53174,0,0,reitzensteinm,,,"I'm not saying it's a bad idea because it's too much attention to detail. I'm saying it's a bad idea because it's misplaced. They're talking about taking considerable effort to reskin a standard OS GUI component here - they are standard for a _reason_. I would consider this not just wasted effort, but a negative, if I found it in any of the applications I use day to day.<p>I'm 100% for maniacal devotion to attention to detail. I live it and breathe it in the games I make. I don't tolerate a single frame of object behaviour being out of place. But you've got to focus it in the right place, and that's what I'm saying is the problem with doing something like this - there are just too many improvements that you could be working on that your users will find much more helpful. I've definitely been too fanatical about what I wanted versus what my users have wanted in the past.<p>That said, the app in question won a user experience award at the Apple Design Awards, so maybe they're right and I'm wrong. They can certainly make amazing software. But even with that in mind, I stand by what I'm saying.",1189488828
53187,comment,53032,53178,0,0,pc,,,"<i> ""I know it is a much better VM."" </i><p>SBCL isn't a VM. It's a Lisp implementation with a compiler that generates native code.<p>Admittedly, many dynamic languages folks seem to find this concept odd. The idea that {dynamic typing, garbage collection, your favourite feature from ruby/python/perl/php} requires a VM unfortunately seems strongly ingrained.",1189488768
53186,comment,53018,53018,0,0,inklesspen,,,"I use Vienna. I tried using Google Reader, but it's crap. It can't handle HTTP-authenticated feeds, and you can't delete feeds en masse.",1189488268
53185,comment,52981,52981,0,0,jey,,,"I wonder how nasty it would be to do a new implementation of Python in C/C++. Maybe one that doesn't have the GIL, has a proper exact GC, and emits LLVM or something. PyPy seems to be addressing some of these issues.<p>I wonder what the GIL is actually being used for... I don't see why the interpreter needs so much damn locking.",1189488045
53184,comment,53032,53178,0,0,jey,,,"> <i>And I'm just wondering...even with SBCL, why would it be an 'incredibly bad idea' to undertake such a project to convert a Lisp dialect to Python?</i><p>Well...what's the point of compiling Lisp into a language with a slower runtime? If you mean that you want it to compiel to something ""pretty"", well, the output of a compiler is generally not pretty. It's just meant to be used as opaque object code, not something for human consumption.",1189487902
53183,comment,52916,52916,0,0,PStamatiou,,,"now if this was done with plesk..",1189487851
53182,comment,52936,52936,0,0,webwright,,,"There's always Seattle, my friend.  Mild and sunny summers, nearby skiing in the winters, ocean, mountains, etc....  AND a lively startup community.",1189487740
53181,comment,53137,53160,0,0,jey,,,"> <i>I have a strong feeling that the higher orbitals require more than 3 spatial dimensions to actually be represented.</i><p>Why's that?",1189487674
53180,story,,,3,0,Alex3917,"Kuro5hin Adopts Pay-For-Comment Model",http://www.kuro5hin.org/story/2007/9/10/13920/3664,"""I have created here on K5 what might be the internet's first 'Walled Ghetto.' An exclusive preserve of dysfunctional social interaction and semi-undesirable content."" -- Rusty Foster",1189487550
53179,story,,,2,1,henning,"My favorite Scott Aaronson poem: ""H(p) = -plogp - (1-p)log(1-p)""",http://www.scottaaronson.com/writings/plogp.html,"I wish I had found this in high school.",1189487400
53178,comment,53032,53176,0,0,AF,,,"As I mentioned in another post, I'm aware of the qualities of SBCL. I know it is a much better VM. That's not what I am concerned about...what I like about Python is its quantity and consistency of libraries and its overall consistency period. Common Lisp just doesn't have that, and SBCL isn't perfect - its full functionality doesn't work across all platforms.<p>> That would be an incredibly bad idea.<p>And I'm just wondering...even with SBCL, why would it be an 'incredibly bad idea' to undertake such a project to convert a Lisp dialect to Python?",1189487364
53177,story,,,4,0,Readmore,"Wired's take on the 700 Mhz Spectrum Auction",http://www.wired.com/techbiz/it/news/2007/09/auction_faq,,1189487044
53176,comment,53032,53128,0,0,pc,,,"<i> ""I was thinking myself that it would be pretty neat to write a Lisp dialect that compiled down to Python"" </i><p>That would be an incredibly bad idea. The implementation of SBCL (and CMUCL, upon which SBCL is based) is second to none--it has an optimizing compiler (available at runtime) with code-generation backends for architectures from x86 to MIPS; fantastic support for type inference, inline expansion, modular arithmetic, unreachable code deletion, constant folding, control optimization, generational garbage collection (doesn't python still use <i>reference counts</i>?)... amongst a bunch of other stuff.<p><a href=""http://shootout.alioth.debian.org/gp4/benchmark.php?test=all&lang=all&calc=Calculate&xfullcpu=1&xmem=0&xloc=0&binarytrees=1&chameneos=0&message=0&fannkuch=1&fasta=1&knucleotide=1&mandelbrot=1&meteor=0&nbody=1&nsieve=1&nsievebits=1&partialsums=1&pidigits=1&recursive=1&regexdna=1&revcomp=1&spectralnorm=1&hello=0&sumcol=1"" rel=""nofollow"">http://shootout.alioth.debian.org/gp4/benchmark.php?test=all...</a><p>Benchmarks are of course arbitrary, but no matter what way you dice things, SBCL is vastly superior to Python's crappy VM. In the case of the link above, over 10 times faster.",1189486926
