ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
1567200,comment,1566422,1566422,0,0,dan00,,,"In a way it's funny if people over-analyse a movie. If they put more
meaning into the movie than the director has intended.<p>Why just can't the reality shown in Inception be the reality, and the spinning
top at the end just a gag, in the way that the director doesn't show us long
enough the spinning top to see, if it falls or not?<p>So the spinning top at the end could be seen as an encouragement to think
about your own reality.",1280739580
1567199,comment,1566960,1566960,0,0,madhouse,,,"What I did a while ago - which isn't the best way, it's quite crude, but works - is to have the webapp touch a file on the filesystem, which is watched with inotify (or whatever similar feature your OS has), and whenever the file is touched, the backend processor wakes up and starts crunching the new entries in the queue.<p>Perhaps it might even be possible to construct such a trigger in your database that would wake up an external application - I haven't looked into that possibility yet.",1280739514
1567198,comment,1566278,1567184,0,0,tkahn6,,,"The main thing to take away is that:<p>When a function uses global state to compute a value, it's like the global state is an argument to the function.<p>When a function modifies global state, it's like it returns both the value it computes <i>and</i> the modified global state.<p>If you're interested more you can read <a href=""http://research.microsoft.com/en-us/um/people/simonpj/papers/state-lasc.ps.gz"" rel=""nofollow"">http://research.microsoft.com/en-us/um/people/simonpj/papers...</a> which I believe is the original paper introducing monads into Haskell. The first 11 pages are very approachable and give you the rational for why monads are necessary in Haskell and what they're for.",1280739513
1567197,comment,1566850,1567193,0,0,rdl,,,"In Iraq.",1280739502
1567196,comment,1566476,1567092,0,0,KoZeN,,,"Any chance of come context to support your accusation and it's relevance to this situation?",1280739302
1567195,comment,1566278,1567154,0,0,naradaellis,,,"Love the syntax myself. Even before I knew anything about it, the resemblance to maths was very appealing.<p>Its even better when you understand it more. The syntax brilliantly expresses the fact that you're essentially working with a computerized lambda calculus.",1280739207
1567194,comment,1566278,1567166,0,0,Flow,,,"You mean max = last . sort ?",1280739183
1567193,comment,1566850,1567074,0,0,roel_v,,,"Did you run a startup in Iraq or did it have some special connection to there? What was that like? I often think there are probably huge opportunities in (relative) chaos but it takes a special person to see them (and to be gutsy enough to go after them).",1280739115
1567192,comment,1566278,1567184,0,0,jrockway,,,"A Kleisli arrow is just an arrow that works like a monad:<p><pre><code>    -- | Kleisli arrows of a monad.

    newtype Kleisli m a b = Kleisli { runKleisli :: a -> m b }

    instance Monad m => Category (Kleisli m) where
           id = Kleisli return
           (Kleisli f) . (Kleisli g) = Kleisli (\b -> g b >>= f)
</code></pre>
I only brought it up to show that we can use the same operator, Control.Category.., to compose functions, monads, and arrows and that they are not all that different from each other.<p>(It's also worth noting that every language has their own language-specific terminology.  If I Google for ""std::string"", I am only going to find C++ results, despite the fact that strings are a generic concept.  If I search for ""IEnumerable"", I am only going to get C# results, despite the fact that enumerations are a generic concept.<p>Similarly, not many languages think of programming in terms of arrows and objects and categories, so you don't see many results for ""Kleisli arrow"" outside of the Haskell community.<p>But <a href=""http://en.wikipedia.org/wiki/Kleisli_category"" rel=""nofollow"">http://en.wikipedia.org/wiki/Kleisli_category</a> is to category theoretical monads as Kleisli arrow is to Monad in Haskell.)",1280739072
1567191,comment,1560721,1562946,0,0,nailer,,,"Cheers. If it's not obvious, it's me who's bugging you about task-based stuff on Twitter. I spent a few years writing professionally and have a somewhat thick skin of my own when it comes to the editing pen, so pardon if I'm a little insensitive in the suggestions.<p>* You are, genuinely, missing a few 'open your browser, hit this port and try it' bits per Twitter. yes we're looking at the same doc, but I think you're presuming people will actually open their browsers and look at the <a href=""http://localhost:6767/tests"" rel=""nofollow"">http://localhost:6767/tests</a> or whatever, rather than being told to do so. You also don't show or mention what people can expect to see when they visit this. Throw a screenshot in.<p>* The sections about Steve and Knuth, sysadmins who can't code, and alternative inits you've tried but not liked, can be removed. They distract from the topic at hand. I read the bit about 'insulting to keep you interested' but it doesn't lend the doc character: it comes off like you're bitter, and doesn't help the end user actually set up Mongrel.<p>* For config, first show people how to configure mongrel using the default Python config file. Once you've done that <i>then</i> point out that they can create their own config formats if they don't like Python or want to automate stuff. Mention MVC if you want, restrict it to one sentence at the end. The aim is to making a working web server - anything asides from that gets in the way. See Kathy Sierra's stuff about 'helping users be awesome' for some good info on this.<p>* Be specific. 'Hacking' could be 'making web apps with Mongrel 2'. Per Twitter 'hacking' is ambiguous - think of the HACKING file in every GNU app which discusses modifying the program itself, rather than using it.<p>With a bit of editing, the current daunting manual could be about 50% the size.",1280739059
1567190,comment,1566278,1567102,0,0,tkahn6,,,"Since Haskell is statically typed, I think it's a feature, not a bug, that type parametricity is implemented at compile time.<p>Also, I think what you're describing is the difference between parametric polymorphism and ad-hoc polymorphism.",1280738929
1567189,story,,,3,1,xtacy,"Raven paradox",http://en.wikipedia.org/wiki/Raven_paradox,,1280738927
1567188,comment,1566722,1566722,0,0,apsurd,,,"<i>""If you can see these job descriptions it means that they have not yet been filled!""</i><p>Companies that post jobs, please understand how truly great this line is and incorporate it into your own job postings. Thanks!",1280738864
1567187,story,,,1,0,mac-mac,"Is Tumblrâ€™s Growth off the Back of Porn? ",http://web.appstorm.net/general/app-news/is-tumblrs-growth-off-the-back-of-porn/,,1280738821
1567186,comment,1567064,1567064,0,0,senki,,,"""The formula itself is a general purpose method of decoding a bitmap stored in the constant n, so it could actually be used to draw any other image, and does not in fact contain any reference to itself.""<p><a href=""http://en.wikipedia.org/wiki/Tuppers_self-referential_formula"" rel=""nofollow"">http://en.wikipedia.org/wiki/Tuppers_self-referential_formul...</a>",1280738752
1567184,comment,1566278,1567168,0,0,bguthrie,,,"I have no idea what a Kleisli arrow is, and a simple Google search points me right back in the direction of the HaskellWiki. They may be a perfectly simple concept, but if they are, then the term is not in widespread use. One of the major problems with explaining monads is that programmers who understand them frequently attempt to explain them by using terms even less well-understood than ""monad"". You get points for precision, but none for evangelism.<p>It is of no help or use to those who do not understand monads that they could also be an applicative functor, or comonad, or whatever. You may be perfectly correct, but for someone who is not already part of your community, and conversant in its terms, it does not particularly help.",1280738605
1567183,comment,1566857,1567003,0,0,rooshdi,,,"Yes, freeing ideas frees ourselves and our users in the process. I think that's a much more motivating justification for launching projects than any amount of wealth potentially being created. I can't wait to see what you're creating this time and wish you all the best.",1280738568
1567181,comment,1566278,1567154,0,0,dan00,,,"""True, the beauty is in the eye of the beholder, however even if I believe
there are beautiful thing which may need considerable effort and understanding
to appreciate the true elegance of it I cannot imagine such thing being ugly
at the first sight.""<p>It's always the same reason why people dislike new languages. People don't
realize, that they can't look open-minded at a new language, if they already
know a language. Because they will always compare the new to the already known
language.<p>Most people are only open-minded if they learn their first language, after
that, everything else is just ugly compared to the first one.<p>You just can't decide if something is ugly, until you have learned it,
understood the meaning of the syntax, how all the single parts of a language
fit together.<p>Haskell is nothing like Perl. It's one of the most beautiful and
well-thought-out language I saw until now. Absolutely nothing compared to the
auto magic of Perl.",1280738513
1567179,comment,1566278,1566938,0,0,jrockway,,,"Interestingly, I came to the exact opposite conclusion.  Haskell is easier than C++ (less code and more safety), and it is equally fast.<p>Haskell may not be the perfect language for your generic FFT library to be distributed with your OS, but it's a great choice for building applications that would otherwise be C++ or Java.  Java and C++ had no trouble catching on, despite being slower than C, and Haskell isn't even that much slower than C.",1280738385
1567178,comment,1566975,1566975,0,0,heresy,,,"They really have the UX nailed (or they know how to make themselves look good).<p>Signed up, to see if they can back the appearance up with usability.<p>Basecamp may need to watch its back..",1280738316
1567177,comment,1565764,1565816,0,0,Create,,,"...only if it is repeated enough times.",1280738299
1567176,comment,1566960,1566960,0,0,mrphoebs,,,"You could implement an AMQP, based messaging system, with call backs, instead of polling.",1280738203
1567175,comment,1566568,1566568,0,0,dementievda,,,"grails: java, groovy, ajax, lucene, sitemesh, gorm, etc.",1280738188
1567174,story,,,4,0,strawberryshake,"Win tickets to Intel developerâ€™s forum in San Francisco",http://www.computerworlduk.com/management/it-business/it-organisation/news/index.cfm?newsid=21397&utm_source=ycombinator&utm_medium=sb&utm_content=anguyen&utm_campaign=sb,,1280738109
1567172,story,,,2,1,all,"Chernobyl zone shows decline in biodiversity",http://www.bbc.co.uk/news/science-environment-10819027,,1280738038
1567171,comment,1565764,1566050,0,0,Create,,,"This is just PR, literally. In a magazine. Just as TimBL, and the other claimants of hypertext/network/technology pieces in the comments below.<p>The story is not unlike the one about going to the Moon. Verne wrote about it. Physicists judged it too, to be easy (just fill in F=ma so that you escape Earth with enough thrust -- only need to build a rocket large enough). Engineering/Engineers are the last thing being given credit to. Who actually fulfilled the dream.<p>But my personal favourite is the Belgian.<p>For ADD-ers: <a href=""http://www.youtube.com/watch?v=qwRN5m64I7Y"" rel=""nofollow"">http://www.youtube.com/watch?v=qwRN5m64I7Y</a><p>A nice story: <a href=""http://www.archive.org/details/paulotlet"" rel=""nofollow"">http://www.archive.org/details/paulotlet</a><p>in text: <a href=""http://www.boxesandarrows.com/view/forgotten_forefather_paul_otlet"" rel=""nofollow"">http://www.boxesandarrows.com/view/forgotten_forefather_paul...</a>",1280738015
1567170,comment,1565105,1565984,0,0,flipper,,,"I see you are an undergraduate so I presume you're young. I'm neither old nor young, so let me tell you something (I'm not being condescending, I want you to take this to heart) - you won't believe how fast it all goes past. Until you start to see it happening, you don't quite believe it. One day you're 25 and it's all in front of you. Suddenly you're 40 and you hope that you've got long enough left to do everything you wanted to before the credits roll.",1280737964
1567169,comment,1566278,1566278,0,0,lelele,,,"Haskell is not popular because to be popular you must cater to the average Joe. And to cater to average Joe your foremost goal must be not making him uncomfortable about himself. Never forget this.<p>And since most average Joes just work to pay their bills, they don't give a damn about technical superiority, you know.",1280737655
1567168,comment,1566278,1567068,0,0,jrockway,,,"<i>Take monads. The only way to ""get"" monads is to realize that they are just sections of the program that are imperative.</i><p>Not really.  Monadic function composition is just like regular composition, except that the programmer is given the ability to make ""f of g of x"" do something more than just pipe the result of g(x) into f.  This can look like imperative programming, but it's still purely functional.<p>If you're willing to call monads Kleisli arrows instead, then you can even the same syntax to chain monadic computations as ""regular"" computations.<p>For example, write a function to add one to a number, then multiply by 4:<p><pre><code>   f :: Num a => a -> a
   f = (*4) . (+1)
</code></pre>
That's a normal function, with the normal function composition operator.<p>Now write a function to increment the state, in a stateful computation, by a number:<p><pre><code>   inc :: Int -> State Int ()
   inc x = put . (arr (+x)) . get
</code></pre>
Even though State is a monad or Kleisli arrow, you can treat the stateful computation as regular function composition, because it is just composition.  There is no imperative programming anywhere to be seen.  Although operating on some hidden state feels imperative, it's not.  (Under the covers, it is a bit different than what you might be used to.  Each stateful function is really a function from its arguments to another function from the current state to the result.  We compose the ""result"" functions into one big function from state to result.  This involves a bit of plumbing, but the actual implementation is only two lines of code.  And it makes for a very useful abstraction in many cases.  But I digress...)<p>Monads are just a way to make similar things, chaining computations with an arbitrary combinator, look similar in your code.  We did it with State above, and there are lots of other things that work similarly.  Computations that can return zero or more results, computations that can fail, computations that operate on transactional memory, etc.  We use ""Monad"" (or ""Arrow"") to provide the programmer with a common syntax for interacting with each.  That's all a monad is.<p>(IO is weird, and it is a monad, but it could also be an applicative functor, or comonad, or arrow, or a lazy list, or.  Don't extrapolate your knowledge or fear of the IO monad onto monads in general.)",1280737486
1567167,comment,1566278,1566746,0,0,roel_v,,,"Yeah, let's take a position in a discussion, defend it by examples (a questionable tactic, but let's roll with it for now), and then when someone picks apart the examples say 'let's not fixate on the examples, folks'?<p>(not attacking the OP, I'm not convinced yet one way or the other on the topic, just saying that when someone is called on his arguments and methodology the refutation in an intellectually honest discussion shouldn't be vigorous hand waiving).",1280737472
1567166,comment,1566278,1567154,0,0,loewenskind,,,"Really?  How beautiful it is is exactly what keeps drawing me to Haskell even though I have more invested in the dynamic language camp.<p>>max = head . sort<p>Due to the laziness, the above will find the max entry in O(n) time, just like your hand written loop would.  How can you <i>not</i> find that beautiful?<p>Now I do agree that they often seem to use too many symbols that look like other symbols but the few times I've investigated it actually ended up making sense (e.g. Arrows).",1280737446
1567165,story,,,22,3,VeXocide,"Shiny Old VxWorks Vulnerabilities",http://blog.metasploit.com/2010/08/vxworks-vulnerabilities.html,,1280737376
1567164,comment,1566278,1566996,0,0,loup-vaillant,,,"Just to be sure: do (or would) your company use Clojure?",1280737334
1567162,comment,1564872,1565365,0,0,nopassrecover,,,"Not to distract from the point but if crack users are 100 times more likely to commit other crimes (theft/assault) as a result of their crack use then this is a ""fair"" sentence.",1280737101
1567161,comment,1564200,1564247,0,0,cglee,,,"I just emailed the pdf to my Kindle DX. The images are perfect, but the text is very small in portrait mode. As far as I can tell, I can't zoom or enlarge the text. The text becomes much more readable in landscape mode, but the reading columns are split between pages, so I have to go back and forth to read one complete page.",1280737066
1567160,comment,1566546,1566860,0,0,loewenskind,,,"""If you're a CS major or if all sort of for the purity of coding; PHP is not for you. But then you're not probably not interested in building things for end users.""<p>So if I'm not willing to use a tool that will create a mess that is expensive to maintain then I probably don't care about end users?  Fallacy detected.",1280737043
1567157,story,,,2,0,jsharpe,"Mathematical exploration of the game SET [pdf]",http://www.math.rutgers.edu/~maclagan/papers/set.pdf,,1280736798
1567156,comment,1566199,1566276,0,0,danudey,,,"Well they're spending $1bn on building a massive 500,000 square foot data centre, so I'm willing to bet they're working on it.",1280736778
1567155,comment,1564651,1564775,0,0,Lorin,,,"Lost it at the equalizer segment.",1280736764
1567154,comment,1566278,1566278,0,0,rimantas,,,"Not to answer the question, but I can provide some reasons why I am not going to learn Haskell. I must say up front that I know next to nothing about the language, and my reason my sound very irrational, superficial and plain silly, however:
it just looks ugly. That's it. I cannot imagine myself sitting all day and staring (or writing) something that looks like explosion on a regexp factory with ruins of Perl fallen through.
True, the beauty is in the eye of the beholder, however even if I believe there are beautiful thing which may need considerable effort and understanding to appreciate the true elegance of it I cannot imagine such thing being ugly at the first sight.
For me it just looks like a lot of effort went just to make it look different. <i>Maybe</i> it makes perfect sense once you learn it, but it just does not look elegant and thus kills all the motivation to try. 
This all of course is IMVHO.",1280736739
1567152,story,,,1,0,muon,"Lists: To-dos, Illustrated Inventories and Collected Thoughts",http://observatory.designobserver.com/entry.html?entry=14628,,1280736670
1567151,comment,1566916,1567128,0,0,barrkel,,,"I'd distinguish between OpenSolaris the distribution and Solaris the kernel; and my interest in this lies in the server side of things, not UI. I'm currently using Nexenta, which uses the Solaris kernel with a server-oriented Debian userland. The things Solaris brings along, ZFS, dtrace, SMF etc. are not hugely relevant to the desktop.",1280736472
1567149,comment,1566916,1567128,0,0,mapleoin,,,"It's approximately where RHEL5 (and maybe other enterprisey distros) is right now, which is an old version of gnome. I don't think that's a big problem to solve, provided they actually get more man-power.",1280736275
1567148,comment,1566546,1567133,0,0,ck2,,,"For some reason I didn't consider HipHop as a native compiler since it's really converting into another language to get outside of PHP entirely.<p>Also, it's supposedly REALLY difficult to build.<p>I was thinking more like PHC but more evolved.",1280736122
1567147,comment,1566027,1567034,0,0,strlen,,,">  Writing queries and getting performance out of the DB, that can be rocket science.<p>I tend to ask questions more about database internals, but it's a crucial job for an engineer to understand how to get performance and integrity for their queries.<p>Sometimes times you <i>may</i> get world-class DBA/DBE (my current employer is one of those places) who can do an engineer's job (in terms of tuning the queries, etc...) but that is <i>really</i> an engineer's job.",1280736072
