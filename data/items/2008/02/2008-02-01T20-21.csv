ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
108025,comment,107991,108020,0,0,corentin,,,"If it requires more and more heroic efforts to just keep it working, it probably means that your organization can't manage a software project; either because your developers are not experienced or, more likely, because management doesn't understand software development (you're not alone; few companies truly master software development). Hence, it's probably not a language problem and switching to Ruby on Rails won't solve it in the long run.",1201899350
108024,story,,,3,0,mixmax,"Microsoft and Yahoo - A $45 billion bet",http://www.economist.com/daily/news/displaystory.cfm?story_id=10632491&top_story=1,,1201899265
108023,story,,,1,0,pius,"Zed Shaw: love him or hate him, he exists",http://hideoustriumph.tumblr.com/post/25268089,,1201899202
108022,comment,107771,107942,0,0,bkrausz,,,"A little harsh, no?<p>You forget that Yahoo has over 120 properties, what about things like Yahoo Autos, Real Estate, Shopping, Finance, etc?  There's significant overlap with what MS offers, yet Yahoo is clearly kicking their asses in many of these.  I highly doubt MS would kill off the more-popular site/name for their own, especially if it could give competition a chance to jump in as the new #1.<p>Also, things like Flickr and Delicious could do very good things to MS's perceived image in future generations, so there's more here than just cash.",1201899182
108021,comment,106398,106596,0,0,pg,,,"It is for me.  I literally wrote it so I wouldn't have to use CL anymore.",1201898703
108020,comment,107991,108014,0,0,inklesspen,,,"By my understanding, the Windows app is written in an obsolete language and is requiring more and more heroic efforts to just keep it working -- sort of a Red Queen effect. We could certainly scrap it and rewrite in .NET, but our past experiences with .NET have been less than positive. In addition, we're pretty far from a startup hub; even though we're not a startup, this is a problem, because we want to find expert hackers, not just average .NET programmers. So in that respect, Ruby on Rails is good for us because the few Rails programmers we do find are better than nearly all the .NET programmers we would find, and there's fewer resumes and interviews to go through.",1201898634
108019,comment,107683,107962,0,0,curi,,,"I said you can make a mechanism to define new infix operators, but it's not very good. Then you quoted so as to imply I didn't know that, and said that actually some languages have it.",1201898606
108018,comment,107623,108006,0,0,lisper,,,"That's kinda the right idea.  There are two problems with your specific proposal: 1) it places a considerable burden on the programmer to annotate every invocation of a top-level function.  For complex macros that can become quite annoying.  2) Baking the concept of a single top-level into the macro system makes it hard to add modules later.<p>If you pursue the idea of having the system walk the code and automatically insert those annotations you will (almost certainly) end up re-inventing hygienic macros.<p>(For the record, I much prefer the Lisp2 solution, because it's the hacker's solution.  It's not mathematically elegant, but it's simple (compared to hygiene) and it gets the job done.)",1201898417
108017,comment,107623,107826,0,0,pg,,,"Yes.  I used all the CL and Scheme source of my own that I could find, and I also asked Ken Anderson to analyze some big collection of CL (I think it was) code at BBN.",1201898169
108016,comment,106398,107937,0,0,shiro,,,"> call-it: What's the problem with not knowing (+ 1 2) until run-time?<p>Not only efficiency.  <i>You</i> don't even know if (+ 1 2) means ""1 plus 2"" or ""choose 1 or 2 randomly"" or ""generate a sequence of numbers between 1 and 2"" until you know what x really is (assuming funcall does delay evaluation of its arguments and passes the original form in case x is indeed a macro).<p>The macro version of call-it has the same problem, of course, but if you embrace first-class macros in the above way, <i>every higher order function call</i> will have the problem.  Considering how often HOF is used, the impact is huge.<p>However, as you suggested, you can have two versions of funcalls, one of which evaluates args no matter what x is; then this problem will be solved.<p>(Or you can use hygienic macros, then you can deduce what '+' means purely from its lexical context, at least.)",1201898082
108015,comment,107870,107870,0,0,Funky_,,,"Map fight!",1201897991
108014,comment,107991,107991,0,0,corentin,,,"Sorry, I don't have an answer; but I do have a question :) Why rewrite the thing in the first place? It's not too late to trash the Ruby on Rails project and focus your effort on improving your current asset (the Windows app).",1201897837
108013,comment,107683,107723,0,0,pg,,,"<i>Python is written to be easily parsed and manipulated by humans</i><p>... used to C<p>You sound like an English speaker claiming that English is easier for people to understand than other languages.  There's nothing intrinsically <i>human</i> about infix syntax.  It's just a question of what you're used to.  I honestly find prefix syntax (or lack thereof) much easier to read, because that's what I'm used to.",1201897830
108012,story,,,1,0,pius,"Contributing to Merb (Part 1) (git, merb)",http://www.gweezlebur.com/2008/2/1/so-you-want-to-contribute-to-merb-core-part-1,,1201897699
108011,comment,107988,108007,0,0,functionoid,,,"Thanks for the answer. Yes I considered it. But the size of the images is small and I might need images to be higher quality if I have to retains users on apparel website.",1201897690
108010,story,,,1,0,nickb,"Followup to social network monetization",http://andrewchen.typepad.com/andrew_chens_blog/2008/01/followup-to-soc.html,,1201897487
108009,comment,107847,108002,0,0,bfioca,,,"totally - they keep telling me ""that's a good problem to have.""",1201897480
108008,comment,107795,107795,0,0,ashu,,,"From the comments on that entry:<p><pre><code>  From: Microsoft
  To: Yahoo 
  Subject: Be evil!
</code></pre>
Succinct! :P",1201897479
108007,comment,107988,107988,0,0,Shooter,,,"Froogle Feeds (?)",1201897435
108006,comment,107623,107849,0,0,aaco,,,"I'm not a lisp programmer neither I know the peculiarities of each lisp implementation, but I think I understand it a little bit.<p>My question is, what hinders Arc (or other Lisp if it has the same problem) to create an operator that finds any global symbol from the top, like when an absolute path starts with ""/"" to find a file?<p>For instance, let's stay that there is an ""unshadowable"" operator called ""."" and let's take your example:<p><pre><code>  (let foo snoz (jims-macro frotz))
  
</code></pre>
Well, that shadowed ""foo"" is causing the problem. As you said (""Jim's macro expands into Bob's macro which expands into Ann's macro which uses a helper function called foo.""), this symbol is shadowing the actual function ""foo"" used by Ann's macro.<p>However, if Ann's macro were written carefully (and all macro writes should know that macros can be used in any context, any scope), Ann would care to call ""foo"" from the top using the ""."" operator, like:<p><pre><code>  ...
  (. foo args) ; excerpt of Ann's macro.
  ...
</code></pre>
In this case, in every ""(let)"" or another scope definition method, you could always escape to the global scope using this operator, behaving like a hole to the outside world.<p>Of course, I'm just a Lisp newbie, maybe I'm just creating a huge mess with the concepts :-).<p>Is there any Lisp using that approach?",1201897380
108005,comment,107997,108000,0,0,dawnerd,,,"Yea, without Facebook it's really lacking.",1201897235
108004,comment,107870,107870,0,0,shawndrost,,,"hey, congrats, looks cool!  I would suggest that the map demo connect users to each other rather than forcing them to invite others (though you should keep that potion)... that way people can use it without going through the hassle of inviting a friend.",1201897150
108003,story,,,14,2,jmorin007,"Hold Everything: We May Get Another YHOO Bidder",http://www.alleyinsider.com/2008/02/hold-everything-we-may-get-another-yhoo-bidder.html,,1201897012
108002,comment,107847,107939,0,0,fendale,,,"Thanks for that - I figured something like that would get me far enough - I guess if you need to scale beyond a single server it is a sign of at least some success!",1201896910
108001,story,,,5,0,lackbeard,"URLs are People, Too",http://google-code-updates.blogspot.com/2008/02/urls-are-people-too.html,,1201896878
108000,comment,107997,107997,0,0,bfioca,,,"This is going to be pretty cool once there are more supported sites (like Facebook). Hopefully that will be soon, I really want to use this.",1201896840
107999,story,,,2,0,e1ven,"Don't treat paying users like criminals- Was: Why Does the Wall Street Journal Hate the Web?",http://www.techcrunch.com/2008/02/01/why-does-the-wall-street-journal-hate-the-web/,,1201896741
107998,comment,107567,107996,0,0,imsteve,,,"fucking think.",1201896594
107997,story,,,15,6,jmorin007,"Google Gathers Social Graph Information From The Web, Launches API",http://www.techcrunch.com/2008/02/01/googles-gathers-social-graph-information-from-the-web-launches-api/,,1201896582
107996,comment,107567,107980,0,0,mixmax,,,"Well that's the most cunning and insightful comment I have read in quite a while.<p>""because if they had done something else they would have to work harder...""<p>I give up. I concede. I appraise your superior intellect. I will never be able to give a due answer to that amazing argument.",1201896463
107995,comment,107683,107731,0,0,projectileboy,,,"I very, very strongly agree with you. A couple years ago I went through the exercises in SICP, and I remember being shocked at how hard it was for me to look at and understand Scheme code after 10 years of looking at C, C++, Java and C#. It felt really weird, because I remember being an undergrad and thinking that Fortran and Pascal and C looked really hard, but that the Scheme code in SICP felt very intuitive.",1201896213
