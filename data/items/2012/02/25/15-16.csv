ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
3633176,story,3633172,,1,0,spycrunch07,,,"Wow! it's amazing that a monkey can actually do that.",1330185547
3633175,comment,3632392,3632392,1,0,formosa,,,"I'd be careful about finding a ""co-founder"" half-hazardously.  I've experienced a number of partnerships and they more often than not - end badly.<p>Workload is hard to share even if you have similar skill sets because you'll have different goals.  You might be looking to build a company and he might be looking to sell.<p>Other issues i've dealt with is miscommunication.  It's hard to be brutally open and straightforward with a stranger but its absolutely necessary because it always leads to GIANT problems when you're not honest to the point of being offensive.",1330185543
3633174,comment,3633006,3633136,3,0,shintoist,,,"Thank you, that is really constructive! I do agree with you on using ByteStrings everywhere (some laziness on my part). Calling it Data.Map is a typo, I will update it right away!<p>I was not aware of the benefits of fromListWith, gonna look into it right away.",1330185453
3633173,comment,3632957,3632957,5,0,eloisius,,,"Clearly this guy is a quintessential .NET developer that built crappy e-commerce sites. If that's his thing and what he considers ""programming"" he deserves to fall by the wayside by 60.<p>I started out building crappy e-commerce sites in PHP, but I never once considered it ""programming"" in the way that I wanted to be a programmer. It was an entry point.<p>On the other side of this argument is my 60-something employer who only gave up Fortran for C when his colleagues locked him in a room with a C manual for days. He is a <i>programmer</i> and the tool he uses doesn't define what he is capable of. He churns out some genius code.",1330185416
3633172,story,,,14,7,JRambo,"Monkey controls robot hand through brain implants",http://www.newscientist.com/blogs/shortsharpscience/2012/02/monkey-controls-robot-hand-thr.html,,1330185386
3633171,comment,3632821,3632821,24,0,zecho,,,"The real trick here is that Teller hasn't revealed anything new about the secrets of magic. One of the dirty secrets is that a magician does her best work with a willing audience.<p>People want to be amazed. All magic requires misdirection, sure, but the audience is usually in a frame of mind that's willing to suspend disbelief for a moment long enough for the magician to exploit it. Think about how a street magician works a group: ""Would you like to see a magic trick?""<p>I know one magician who sets the frame of mind of his audience by doing something so ludicrous it attracts a crowd. He sits outside a fast food joint eating lunch and pulls an amazingly large straw out of the bag. It's more clever than ""would you like to see a trick,"" but the effect is the same.<p>I've always been amazed how great magicians can take a relatively simple trick, like a forced card (which always offers an audience member a choice, but the card is always predetermined). Magicians do the sleight of hand right in front of a crowd of people, in plain sight, but nobody notices. Because they don't want to notice. They've allowed their minds to wander for a moment, which is why magicians rarely repeat tricks with the same audience and when they do, its usually a variation of the first that combines another trick (Teller's #5).<p>One of my favorite card tricks is a classic. Select a card and put it back in the middle of the deck. It keeps rising to the top of the deck every time you stick it in the middle. The reality is that you never actually get to put your card in the middle of the deck. You may have selected initially your card, but everything after that is controlled, down to how the magician makes you hold your card when it's handed back to you. My favorite way to start the trick is with a mental magic joke: Tell the subject to think of a card. Then flip over the top card in the deck, which is almost never the card, but would be pretty cool if it was. Then I pull their card out of the deck and begin controlling it through the routine. The whole point is to keep people off balance and to allow them to have what they truly want: entertainment.<p>Teller's story about the Cub Scouts is funny to me because I've found that children of a certain age (around 8-15 or so) are simply unwilling to get into the mindset.<p>Books are filled with advice for how to deal with members of the audience who are unwilling. They usually involve some kind of ridicule of the skeptics for the benefit of the rest of the audience (Teller's #2).",1330185376
3633170,comment,3632984,3633160,3,0,DanHulton,,,"Many good editors/IDEs will do this for you fairly reliably.  Komodo and Sublime Text both support this for PHP/JS at a minimum, as an example.",1330185375
3633169,comment,3632984,3633155,3,0,lucisferre,,,"Not saying he isn't sincere I'm saying it's a common misunderstanding that the improved refactoring and compiler errors are <i>that</i> valuable, that they alone can support a strong argument for static vs. dynamic.<p>There are generally very few situations where you have a single method from a single class sprinkled across an entire codebase for a good reason. That always indicates high coupling and design problems. There are even fewer reasons to rename a well designed method. Constant renaming and high-coupling are bad habits that seem to be commonplace when working in strictly static languages and yet they are known to be bad habits even there. At least dynamic languages discourage these anti-patterns. Not to belittle your friend, I found myself falling into these traps constantly when working in C#.<p>Honestly, what I'm saying is that these problems just are not nearly as significant in say, Ruby, as they are often made out to be by static typing proponents. It's a bit disingenuous to point to these trivialities as reasons why static > dynamic. If it were true then there would be little benefit in dynamic languages. Clearly there is.",1330185374
3633167,comment,3632984,3633096,5,0,bunderbunder,,,"For the sake of context, the original source of that quote is essentially an advertisement for Squeak.  It raises some interesting ideas, and Smalltalk is definitely a system to know.<p><a href=""http://squab.no-ip.com/collab/uploads/61/IsSoftwareEngineeringAnOxymoron.pdf"" rel=""nofollow"">http://squab.no-ip.com/collab/uploads/61/IsSoftwareEngineeri...</a><p>But as an argument for one paradigm vs. another it doesn't really stand up, because the essay takes its own conclusion (that large systems would be easier to maintain if they were more like Squeak) as a major premise.  Him being one of the inventors of the platform, I don't think we can just take his word for it.  At a minimum, what we'd really want to see is a large successful enterprise system built on Smalltalk to serve as an instructive example.  To my knowledge no such system exists, so we can't really take the paper, insightful as it is, as much more than hopeful musing.<p>That said, the ""bind really late"" approach has seen a lot of success.  Just not quite so pervasively as the ""in all aspects"" that Kay advocates in the paper.  Nowadays, the standard way to build large systems is to build completely independent modules and couple them on fluid interfaces.  Text streams in Unix, REST APIs, and even SOAP are clear examples.  What we don't see, though, is a whole lot of reason to think that the languages and run-times on which these modules run must also support late binding and hot-swapping of code at the micro scale, or that we're really suffering for lack of it.",1330185359
3633166,comment,3632957,3633151,1,0,zainny,,,"How do you reconcile that point of view with articles like <a href=""http://www.nytimes.com/2012/01/29/us/bay-area-technology-professionals-cant-get-hired-as-industry-moves-on.html?pagewanted=all"" rel=""nofollow"">http://www.nytimes.com/2012/01/29/us/bay-area-technology-pro...</a> (which appeared on Hacker News not too long ago if memory serves)?<p>Very few companies, particularly those in the Valley, seem interested in hiring older workers. Does that not indicate there is little perceived value in years of experience beyond a certain point (say, 5, as the original article suggests)?",1330185321
3633165,story,3617606,,1,0,cubantrip,,,"Hotel Islazul Villa Punta Blanca is a beachfront hotel located in western part of Varadero, probably most visited beach area in Cuba.",1330185279
3633164,story,,,1,0,tilt,"New programming slang",http://umumble.com/blogs/Programming/321/,,1330185277
3633163,comment,3632969,3632969,1,0,formosa,,,"I'd suggest you using skype there's a ton of free software that lets you do the same.  But honestly, I'd suggest doing a real video for your application to make sure it has a higher production quality.<p>A lot of times it isn't what you say but how you say it.<p>I personally use adobe premier and afteraffects to make sure that the intro, content and outro looks tight.  You could also use final cut pro but im not an appler person.<p>i think its important to use a decent film editor so that you can level everyone's sound and make sure that message comes through clearly... but i admit i may be over thinking it.",1330185249
3633162,comment,3632984,3633063,3,0,gtani,,,"<a href=""https://bitbucket.org/kotarak/clojurecheck"" rel=""nofollow"">https://bitbucket.org/kotarak/clojurecheck</a><p>(I recommend learning both languages tho)",1330185224
3633161,story,,,2,0,PoldiGraz,"Motivation video: The Future Belongs to the Curious",http://vimeo.com/34853044,,1330185189
3633160,comment,3632984,3632984,5,0,carsongross,,,"Static verification is great and all, but the most important reason for static typing is UI/UX:  Hit-dot-see-what-I-can-do.<p>No keeping APIs in my head or losing flow to a google search, hit dot, see what I can do.<p>Everything beyond this is gravy.",1330185149
3633159,comment,3632800,3632800,2,0,mistercow,,,">Use specific names for variables, for example ""value"", ""equals"", ""data"", ... are not valid names for any case.<p>I have to disagree. As parameters to short functions/methods, names like ""value"" and ""data"" can be perfectly appropriate, especially if those names correspond to types.",1330185149
3633158,comment,3630626,3633106,1,0,wslh,,,"You are an absolutist relativist, it is 100% right to say that the real inflation between 2003 and 2012 was/is extremely high.<p>And about rationality you need to understand the limits of rationality.",1330185103
3633157,story,,,1,0,Technews24,"Intel Signs Deal To Manufacture Chips For Tabula",http://thetechjournal.com/tech-news/industry-news/intel-signs-deal-to-manufacture-chips-for-tabula.xhtml,,1330185072
3633156,story,,,156,50,luckystrike,"The Freedom and Perils of Living Alone",http://www.nytimes.com/2012/02/23/garden/the-freedom-and-perils-of-living-alone.html?pagewanted=all,,1330184909
3633155,comment,3632984,3633096,4,0,wpietri,,,"> Complaints like ""refactoring"" or compiler error checking however are the oldest FUD in the book.<p>What makes you say that?<p>First, I happen to have worked with this fellow before [Hi, John! Long time no see. Fun to come across your post here.] and I'm sure he's quite sincere.<p>Second, having spent a bunch of time lately in dynamic languages (Ruby and JS mostly), I do indeed miss the automated refactoring tools that existed for Java. It's really nice to be able to rename a method everywhere across the code base without worrying that something else got mangled. I also miss the magic documentation that a type-aware IDE can provide; I  spend a lot more time digging through layers of code to figure out what a particular parameter is expected to be.<p>Not that I want to switch back; I agree that a language with strong type inference is the way to go. But man, I miss the tools.",1330184849
3633154,comment,3630626,3633088,1,0,wslh,,,"You are being irrational, it is extremely easy to compare supermarket prices from 2003 to prices on 2012.",1330184845
3633153,story,,,1,0,rrohan189,"Ive Learned",http://www.alearningaday.com/2012/02/ive-learned.html,,1330184841
3633152,story,,,1,0,spycrunch07,"What I'd Tell Rihanna If We Were Best Friends",http://blogs.wsj.com/speakeasy/2012/02/25/what-id-tell-rihanna-if-we-were-best-friends/,,1330184832
3633151,comment,3632957,3633064,3,0,16s,,,"Indeed. The older programmer has seen and fixed more problems. It's called experience.",1330184822
3633150,comment,3632984,3632984,5,0,mistercow,,,"There are actually some really good points here. I was bracing myself for the typical anti-dynamic-typing article that merely confuses dynamic typing and <i>weak</i> typing, but no, these are good points.<p>I will say, however, that weak typing can be used to overcome the first complaint. For example, in Python, if you were to do apply a function that resulted in integer overflow, you would get an automatic conversion to long integers. (The actual example doesn't really apply in this case, since to make that function work at all in Python, you'd have to to make `n` a float, which would fix the problem anyway).<p>Edit: And yes, I know that Python is a strongly typed language, but implicit conversion to long integers is still an example of weak typing.",1330184800
3633149,story,,,1,0,tashmi,"Bunk beds, Bunk bed",http://dadsbunkbeds.com/,"Welcome to DADS BUNK BEDS, your one stop shop for quality bunk beds.  We have the selection and pricing that you will love.  We carry only durable wood designs that last.  Choose from our wide selection of kids furniture and help make your kids room a winner. Plus, shipping is FREE.\nFor more information please visit: - http://dadsbunkbeds.com/",1330184759
3633148,story,,,5,0,lest,"Play by Play: Aaron Patterson",http://peepcode.com/products/play-by-play-tenderlove-ruby-on-rails,,1330184716
3633147,story,,,5,1,sinzone,"Why I Left Apple",https://www.facebook.com/RonGWayne/posts/370073493010333,,1330184698
3633145,comment,3630626,3631629,4,0,heelhook,,,"I'll take no statistics over doctored statistics any time.",1330184675
3633144,comment,3632035,3632938,2,0,mbrubeck,,,"Of course this single post does not ""get to the deepest consequences,"" but you really have to look at it as a small piece of the much larger ongoing conversation at Less Wrong.  For example, your last question is better answered by the discussions in this sequence:<p><a href=""http://wiki.lesswrong.com/wiki/Metaethics_sequence"" rel=""nofollow"">http://wiki.lesswrong.com/wiki/Metaethics_sequence</a><p>And I hope your stereotypes of rationalism as ""cold"" might be partly dispelled by one of Less Wrong's favorite topics, Fun Theory.  :)<p><a href=""http://wiki.lesswrong.com/wiki/Fun_theory"" rel=""nofollow"">http://wiki.lesswrong.com/wiki/Fun_theory</a>",1330184649
3633143,story,,,1,0,wokon,__anon__,http://5.lennymoonlight.appspot.com/,,1330184612
3633142,comment,3632957,3632957,2,0,whamill,,,"I wonder how the author's outlook has changed since 2007? Has he spent the last 4-5 years learning new technologies or constantly bettering himself or just stuck with what he learned in 2007 and become bitter at the reality of the industry moving on? Sure, COBOL programmers from back in the day are still in demand in certain scenarios, but his anger seems to be to stem from an unwillingness to learn; an expectation that once one has learned something they should simply be further rewarded for having learned it and continued to use it for a long period of time.<p>The fact is that if you learn some programming language in 2007 and just do the same stuff for the next 4-5 years without expanding your education, your experience or what you try to make of it, you're going to be behind the 'cool kids' that spent the last 4-5 years learning every new language that popped up. But if you spent the 4-5 years with just that one language learning new ways of implementing things, learning how better to take a higher level view of programming and software design and other facets of use in this industry - then he wouldn't be behind anyone else.<p>It would interest me to find out how things have progressed for the author given his rant at generalists, project management and learning new things",1330184555
3633141,comment,3632957,3632957,4,0,ddw,,,"How things have changed in the last five years.  Overall I'd say that programming isn't low prestige w/ bad working conditions anymore.  And good luck to all of those law school graduates!",1330184523
3633140,comment,3632800,3633083,3,0,kstenerud,,,"Or, if you want to be sure that a search/replace of a name won't go awry, you could use names such as customerIdx, nodeIdx, accountIdx. It also helps keep things clear in the few cases where you find yourself with nested iterations (so that you don't accidentally call customers[j] when it should have been customers[i]).",1330184496
3633139,comment,3632267,3632393,5,0,icandoitbetter,,,"Don't delude yourself with this Protestant hard-work-is-necessary mentality. Better representations are possible and they can save us a lot of work. It's easier to perform multiplication using Hindu-Arab numerals than it is with Roman numerals. It's easier to program with Python than Assembly. Difficulty is a property of the representation, not of some underlying 'abstract thing' that is being represented.",1330184489
3633138,comment,3632791,3632791,1,0,JacobIrwin,,,"It holds backup storage and runs a testing server - not very often. Since first posting the blog, it's been re-positioned/turned 90 deg. with drawers now facing to the window. A good fan blows from the back (through some vents I cut out; blows air up and out window) while it's running. It works.",1330184411
3633137,comment,3632922,3633107,6,0,cobrabyte,,,"I'm with you. I purchase my books but I'm not too fond of Apple's ebook reader. I'll finally be able to get those books into other apps. And, maybe I'll start buying more -- novel concept. :)",1330184382
3633136,comment,3633006,3633006,6,0,joeyh,,,"shintoist, I'm glad to read these. Your target audience is not just people who know haskell but have not built anything yet. Plenty of stuff can be built without using a parser, and of course that tends to evolve into code that should probably be using a parser here and there, but isn't. :) Add to that RWH documenting only parsec, and barely being published in time to show applicative use of it, and there's some need for newer examples.<p>I wish your types were more expressive. Using ""\" to cover up a failure, rather than using Maybe is somewhat of a code smell for me. Similarly, if I were parsing these logs I'd want numeric byte sizes, not strings.<p>Finally, I was personally thrown for a loop when you talked about using Data.Map, but threw in a Data.HashMap, apparently for performance reasons. \nParticularly because you continually insert values into the map, which is\nbad news for Data.Map (should use fromListWith when using it), but is apparently ok with HashMap, although no better than just using Data.HashMap.fromListWith.",1330184378
3633135,comment,3628942,3632783,2,0,kamaal,,,"There is too much in Perl core but Python with all those batteries is good, right?<p>Oh, C'mon. Why make your hypocrisy so apparent?<p>Java and C# do Regex and Unicode better? What was this? Java and C# have Perl compatible regular expressions(PCRE) I don't really understand what you mean when you say Java and C# do Regexes better than Perl. Because they are copied from Perl. Besides a single Regex in those languages comes wrapped in layers and layers code surrounded by 10's of lines of exception handling mechanisms. Perl is the only language which deals with such use cases sanely.<p>Perl was the first general purpose scripting language which had first class support regular expressions. Associative arrays. And you call that shoe horning? What about all other scripting language that added the same thing. Python doesn't even have multi line lambda's. Ruby make OO one true way of programming by its very language design.<p>Let me tell you what problem you have.<p>You hate Perl for some reason. You are just looking for reasons to justify that. While none exist.<p>As I said like it or not Perl is here to stay for decades. Because no matter how you bash, troll and whine about Perl. Its utility is supreme in certain areas which is very difficult to beat.",1330184371
3633134,comment,3628887,3632081,1,0,finnw,,,"Saying ""here are next week's lottery numbers"" would not convince me.<p>Suppose I am outside the box and the AI is inside the box, the AI cannot have a perfect model of the lottery machine or of me.  At best it has seen photographs.  All photographs are noisy.  There will always be some detail it does not have that would invalidate the simulation (e.g. I have a minor injury that I have never talked about and is not visible in any photo, an ant crawled into the lotto machine last night, etc.)<p>If it has sent drones to physically inspect the internals of the machine or my brain, then it is already out of the box, so my decision is irrelevant.<p>If I buy a lottery ticket, there are four possible outcomes.<p>1. I don't win (or I die before I can claim my winnings, the draw is declared invalid etc.)<p>2. I win, but it is a coincidence (maybe it was worth a shot for the AI, but my odds of winning are no better than they would be without the AI's help.)<p>3. I win with the AI's help, because the AI is already outside the box and has rigged the draw by modifying the machine, or just inspected it closely enough to predict the draw.<p>4. I win (or believe I win) with the AI's help, because I am inside the box.<p>#3 and #4 should not affect my decision (whether I like it or not, the AI is out of the box or I am in the box with it and unable to let it out.)  So I dismiss them.<p>But the relative probabilities of #1 and #2 are the same as if I bought a ticket without consulting the AI (which I would not normally do.)",1330184278
3633133,comment,3630295,3630985,2,0,mmetzger,,,"The best reference to this is in ""The Simpsons Pinball Party"" (released 2003 - and repeatedly through 2009) is a quote from Grandpa Simpson:<p>Back in my day, pinball had no flippers...",1330184181
3633132,comment,3631738,3632820,1,0,Andrew_Quentin,,,"Well there is a Supreme Court decision to be given here in Britain in a week or two which will finally decide for conclusively whether he will be extradited to Sweden or not.<p>Then there is the formal charging of Bradley Manning. So the timing seems perfect really.",1330184147
3633131,comment,3632984,3632984,8,0,16s,,,"Very good points. I agree 100%. However, I think you can and should mix the two. I write mission critical code in C++ with all compiler warnings enabled and lots of unit testing. I do less critical code in dynamic languages (such as Python) where I can 'import critical_cpp_module' and use it from within the dynamic environment. This approach allows for the best of both worlds. I get the benefit of quick development time, high-level Python libraries and the ability to be sloppy without being punished while at the same time I have strict, very strongly typed and tested C++ code for the things that just <i>have</i> to be right no matter what. When you combine the two approaches, you're more flexible. I suggest Boost Python for those who wish to expose C++ functions, classes, etc. to Python.<p>Edit: Software such as pylint are nice too if you're going to go dynamic only. That helps catch lots of bugs that you'd not otherwise notice.",1330184121
3633130,comment,3632984,3633096,5,0,chi_h,,,"static typing does NOT mean C# and java - there are far better statically typed languages out there.",1330184113
3633129,story,,,1,0,lest,"Updates to ""git merge"" in upcoming 1.7.10",http://git-blame.blogspot.com/2012/02/updates-to-git-merge-in-upcoming-1710.html,,1330184102
3633128,story,,,1,0,vr-zone,"Blizzard backtracks on Diablo III expectation fiasco",http://vr-zone.com/articles/blizzard-backtracks-on-diablo-iii-expectation-fiasco/15020.html,,1330184086
3633127,comment,3630452,3630452,3,0,joeybaker,,,"The elephant in the room is that this is exactly what Apple is doing with iCloud and Google is moving toward with the fabled gDrive.<p>Dropbox is never going to have the integration that these two companies can offer on their OS's.<p>Sure, I can get to my Dropbox files on my iPhone, and I can even use it to sync in some programs, but it's not even close to the synchronization that iCloud offers.",1330184074
3633126,story,,,1,0,tnicola,"10 proven ways not to innovate",http://business.financialpost.com/2012/02/25/10-proven-ways-not-to-innovate/?utm_source=dlvr.it&utm_medium=twitter,,1330184070
3633125,comment,3632593,3632846,1,0,sanxiyn,,,"I grant that ""Python for iOS"" took serious effort, but I am sure ""Python"" took more effort. Still Python is free.",1330184044
3633124,comment,3632162,3632507,2,0,gnosis,,,"Taking each of the tips on this page and expanding on them to make them more suitable for beginners might actually make for pretty good and useful project.<p>Anyone want to take it up?",1330184030
3633123,comment,3632710,3632710,4,0,a_a_r_o_n,,,"Almost never.<p>I used to clear history, cookies, everything on browser restart.<p>I've let the water wash over me, and now I like typing things in the address bar and already being there, or being remembered like Norm when I visit a site again.<p>Rarely a site will piss me off and I'll go in and delete <i>their</i> cookies. I know they can feel it when I do that.",1330184008
3633122,comment,3628839,3631669,1,0,crististm,,,"We have similar experiences with software. I think the problem comes from ""I'm smart - you're dumb"". The software should help me not the other way around.<p>Consider my brand new Samsung TV set: I could not believe that program numbers are not unique! You can have two stations registered with the same program number!!! Do I have to adapt my business because TVs are suddenly smarter than me?<p>If I'm too arrogant to realize that a domain problem has a very simple solution then I will reinvent the wheel and make it square.<p>(Indeed, slogans loose their power through overuse - that does not make them untrue though)",1330183996
3633121,comment,3632984,3632984,18,0,scottw,,,"The claim that ""Debugging is one of the most expensive steps in software development- so you want incur less of it"" is something we can all agree with, but ""even if it is at the expense of more typing"" doesn't follow.<p>Having programmed in both kinds of languages, I have to admit I love not thinking about the type. I don't buy the claim that static typing saves much in the long run (in terms of debugging or writing better code). In 15ish years of using both static and dynamic typed languages, I think I've been burned two or three times at most by not having static types—it's just not a big problem.<p>Using static types creates a self-fulfilling environment in which getting the right type is crucial (and thank goodness we have a modern IDE to help with that).",1330183957
3633120,story,,,1,0,nerfman2020,"Samsung Galaxy S III May Feature 4.8-inch Display, Ceramic Back, LTE",http://www.technobuffalo.com/mobile-devices/phones/samsung-galaxy-s-iii-may-feature-4-8-inch-display-ceramic-back-lte-quad-core-chip/,,1330183905
3633119,story,,,3,0,l_jiangtao,"Hair loss products",http://www.freehairloss.com/hair-loss-products/,,1330183885
3633118,comment,3632887,3632887,4,0,huggyface,,,"I would normally just skip right past, but this sort of intensely boring personal opinion has no merit for the community at large. This guy likes making phone calls and his 2+ year old Android device can't optimize that use. That's great. Not relevant to almost anyone else buying a smartphone.",1330183853
3633117,comment,3632119,3632119,3,0,AznHisoka,,,"haha love the zombies..",1330183830
3633116,comment,3632486,3632486,1,0,SanjeevSharma,,,"I would recommend codeacademy.com. My 10 year old son is using the tutorials there to learn programming.",1330183817
3633115,comment,3632713,3633030,1,0,munchor,,,"Good point, none of the distributions presented in this article are fully free software. For example, Linux Mint comes with some non-free software media codecs, and the package managers of all these 5 distros allow you to install non-free software like Adobe Flash.",1330183738
3633114,comment,3632261,3632907,8,0,slowpoke,,,"<i>>""Would you like to continue receiving free services from Google, like Maps, Gmail, and Search, in exchange for targeted advertising?""</i><p>That's also a framed question, because it's a false dichotomy. You don't need <i>targeted</i> ads (and thus, tracking) to make money of ad income. I'm not even sure (as others have pointed out) if targeted ads are more profitable. Even assuming that non-targeted ads are less profitable than targeted ones, then so be it. I don't think that the business model and/or profit margin of a company (Google or not) is a valid argument when considering privacy, which I would consider a fundamental right.",1330183667
3633113,story,,,59,10,nicpottier,"How Udacity's Greatest Effect will be in the Developing World",http://blog.nyaruka.com/how-udacitys-greatest-effect-will-be-in-the-d,,1330183600
3633112,story,,,1,0,impexpedia,"Commodity News for the week ending February 24, 2012",http://impexpedia.com/blog/2012/02/25/commodity-news-week-february-24-2012/#.T0j9oAetYPQ.hackernews,,1330183600
3633111,story,,,1,0,julelara,"Stormers vs Hurricanes live streaming Super Rugby",http://www.care2.com/c2c/groups/disc.html?gpp=33650&pst=1061355,"Stormers vs Hurricanes\nMatch schedule:\nSuper Rugby\nDate: Sat  25,  2012\nTIME :  15:05 GMT\nLOCATION:  Cape Town\nWatch Stormers vs Hurricanes live streaming and also watch Super Rugby\nfull season live streaming online. You can enjoy this game on your PC,\nSo why you miss this exciting race? Get the best online sports\ncoverage on the net directly on your PC. Download software toSuper\nRugby all Live Rugby match. Watch HD TV on your pc.",1330183588
3633110,comment,3632162,3632770,3,0,gnosis,,,"Beginners should really start with vimtutor (just type ""vimtutor"" in your shell), and go through it a couple of times.<p>This is also useful:<p><a href=""http://www.viemu.com/a_vi_vim_graphical_cheat_sheet_tutorial.html"" rel=""nofollow"">http://www.viemu.com/a_vi_vim_graphical_cheat_sheet_tutorial...</a><p>And when you're done with those, come to #vim on freenode.  You can learn a hell of a lot about vim by just idling there.  Of course, you'll learn even faster by asking questions.",1330183584
3633109,comment,3632267,3633047,1,0,lukev,,,"That's precisely his point. The ""UI"" for math obfuscates what it's actually about. Math is full of purity and simplicity, but the notation and algorithms we start out teaching kids are anything but.",1330183563
3633108,comment,3632261,3632354,1,0,zeppelin_7,,,"More people want their FB likes than you know. If you dont want, you should not start generalizing that the mass population doesnt. Also, half your favorite sites will disappear without those evil ad networks. A large number of people choose ad driven products than subscribing/paying for a service.",1330183547
3633107,comment,3632922,3632922,6,0,krig,,,"I can confirm that yes, it has been cracked. Happily it is (as far as I know) not yet illegal for me to remove DRM protection from books I've purchased, although I'm sure that will change soon.",1330183543
3633106,comment,3630626,3632668,0,0,roderik,,,"So, in this metric, 10% of inflation is high, right? and another countries can use a different metric, and in fact, they do. Each economy is different, if you cant produce energy by natural caracteristics of your country, your economy could be tied to international oil prices, for example. So comparing this things one to one is not possible. I want to make it clear again. I am not defending .gov.ar, but the way we are thinking these problemsis wrong.\nProof need to happen, in a post or anywhere else. Without that a rational decision cant be made, and we will never reach true democracy. The simple blog post as you call it is not only useless but harmful, because we use this information for actually making decisions. In modern politic, there is a close relation between knowledge, rationality and freedom.",1330183533
3633105,comment,3632957,3632957,4,0,padobson,,,"The best point he makes is the one he doesn't raise.<p>A one-dimensional individual will always hit a salary ceiling. A programmer cannot be just a programmer and not hit a ceiling. The very best programmers will hit a very high ceiling, but without branching out into project management, UX, finance, marketing, interface design, or some other area, you'll only be able to advance so far.",1330183530
3633104,comment,3632593,3632961,1,0,moioci,,,"<a href=""http://itunes.apple.com/us/app/javascript-anywhere/id363452277?mt=8"" rel=""nofollow"">http://itunes.apple.com/us/app/javascript-anywhere/id3634522...</a>",1330183520
3633103,comment,3630011,3630639,1,0,sodiumphosphate,,,"Excellent advice!<p>I just discovered this entirely by accident, because I grew tired of killing sox every time I played another audio source (and restarting it afterward).<p>Also, turning off the white noise is very uncomfortable once you've become accustomed to hearing it all the time.",1330183485
3633102,story,,,6,2,jkbr,"HTTPie: cURL for humans (colorful CLI for python-requests)",https://github.com/jkbr/httpie,,1330183471
3633101,comment,3632017,3632017,1,0,lucisferre,,,"Send me to space and you have a deal.",1330183420
3633100,comment,3632162,3632603,3,0,gnosis,,,"Maybe you haven't seen this:<p><a href=""http://www.viemu.com/a_vi_vim_graphical_cheat_sheet_tutorial.html"" rel=""nofollow"">http://www.viemu.com/a_vi_vim_graphical_cheat_sheet_tutorial...</a>",1330183413
3633099,comment,3632242,3632242,1,0,codgercoder,,,"Brings ""permanent record"" to a whole new level.",1330183384
3633098,story,,,1,0,cloudshoring,"Wowza Server nDVR (Live DV recording ) & Web Remote Control",http://www.cloudshoring.in,"Live Video+Wowza servers+nDVR+Cloud services+Web+Mobile provides immense opportunities to deliver newer models in the business of  Video. Wowza’s Adptive bit rate Live streaming using Wowza’s on the fly  Transcoder also offers newer possibilities.",1330183367
3633097,comment,3632765,3632877,6,0,zalew,,,"first you learn how to use the rules, then you learn how to break them.",1330183324
3633096,comment,3632984,3632984,3,0,lucisferre,,,"Static typing has it's place, but it's been massively oversold. I'm interested in static languages that have excellent type inference or like dart with it's optional static types,however 90% of the time in strictly static languages like C# and Java it gets in the way more than it ever helps.<p>Complaints like ""refactoring"" or compiler error checking however are the oldest FUD in the book.<p>> Until real software engineering is developed, the next best practice is to develop with a dynamic system that has extreme late binding in all aspects.<p>> --Alan Kay",1330183298
3633095,comment,3632787,3632923,1,0,Tactalneck,,,"Google may give different results for their mobile browser and have longer term plans for SPFY type enhancements that take into account that you're using a mobile device.<p>I also think the mobile version would use fewer resources per search than the full featured, desktop search with Google Instant.<p>Advertisers may also want to be able to target mobile users vs. desktop users separately.",1330183277
3633093,comment,3632957,3632957,6,0,kls,,,"<i>I’d make the case that it’s better to hire the 27-year-old because he is still at the stage of his career where he enjoys the stuff and is therefore more motivated to learn and work harder, while the 60-year-old is surely bitter about the fact that he’s getting paid less than the younger programmers. No one wants a bitter employee.<p>This assumes that the 60-year-old programmer has even learned .NET programming</i><p>This article is utter trash for that statement alone, what a blatant piece of age discrimination. If most 60 year olds learned COBOL then many will sunset with COBOL, those that do stay relevant with the newest technologies are exactly the type of developers who a smart person would want to hire. The reason being, that algorithms don't change, math does not change and also we have a dirty little secret that we keep reinventing the wheel on new stacks. So a 60 year old that has been through 3-4 stacks is going to have seen a lot more problems and solved a lot more problems that mirror problems that his organization is going to experience. They are also going to have mastered and learned a lot more foundational stuff. To assume that all programming knowledge is temporal is to stack the decks in favor of a certain viewpoint and ignores reality. Arguing that said 60 year old will be bitter is just a cop-out for lack of any sound argument.",1330183209
3633092,story,,,1,0,BryanLunduke,"How to use Portal Blocks to organize visual programming projects.",http://lunduke.com/?p=2249,,1330183178
3633091,comment,3632224,3632407,1,0,carsongross,,,"""Nothing is because of gender. Everything is because of social organization.""<p>Nothing?  Everything?<p>Church starts on Friday, I guess.",1330183133
3633090,comment,3631875,3632279,1,0,viscanti,,,"I guess I don't see how copyright applies to publicly viewable images online that are being used for non-commercial purposes.  Certainly someone can link to that page, and anyone could see the image.  It seems to come down to ""credit"", and there should be a link to the original content.<p>The internet is pretty much built around the idea of finding interesting things in other places online and then sharing that.  In fact, Google made a very profitable business just following and index those links to other content.  The point of pinterest is to share interesting visual pieces.  So a textual link doesn't do as much as showing a thumbnail.  But it's still the same basic concept.  Just as blogs expose links to interesting articles, so too does pinterest expose interesting pictures.  In both cases, if you like the original what you see, you should be able to visit the original author/creator's page to check out more.<p>I see this as about as reasonable as blocking links on a blog.  Don't publish articles online if you don't want people to link to them.  Don't publish photos online if you don't want people to link to them (or share smaller thumbnails).  If someone takes your article/photo and claims credit for it, then you have a valid argument.  But if someone's whole ""crime"" is to enjoy your content enough to share it and advertise for you, a ""thank you"" would be more appropriate than arguing that they're infringing your copyright.",1330183106
3633089,comment,3632883,3633060,1,0,kirchhoff,,,"I had not considered zoom functionality at all. I'm not sure that it's possible to specify that an element shouldn't be resized (the menu), I'll have to investigate.<p>Your suggestions are great, I will try to implement them, thanks.",1330183103
3633088,comment,3630626,3632716,0,0,roderik,,,"I dont understand why do you react like that. I am not joking. Read carefuly. My salary increased more than 4x, but that doesnt prove you wrong right? Statistics doenst work that way. Sorry if I offended you by having a different opinion, but ad hominem arguments like yours are not going to improve things, we should try to actually think.",1330183101
3633087,comment,3632710,3632710,3,0,garethsprice,,,"Never, for regular browsing.<p>I use Firefox's Web Developer plugin to clear cookies for a specific domain if I'm developing and need to test clearing cookies.<p>If I don't trust a site or don't want it leaving traces I'll use Chrome's Incognito mode.<p>Never really got the fuss about cookies, some people seem really paranoid and diligent about clearing them. I don't really care, and I'm usually very mindful of privacy issues.",1330183098
3633086,comment,3632593,3633015,2,0,timothya,,,"I believe the AppStore restricts running external code, so even though it would be possible, I don't think such an app would be approved.",1330183074
3633085,story,,,2,0,kumarrahul,"Apple cuts push email in Germany",http://www.bbc.co.uk/news/technology-17152225,,1330183071
3633084,comment,3629909,3632214,4,0,LargeWu,,,"For me, the 2 things that set off my bullshit detector about HATEOAS are these:<p>1.  Everybody who buys into it, including Roy Fielding himself, has to constantly say ""no, that's not what I meant"" and ""you're not doing it right"" if a REST service doesn't use HATEOAS. It reminds me of the response you get when you point out to college kids how bad Communism works out in the real world (see USSR, North Korea, et al): ""No no no, it could really work, just nobody has done it right yet""<p>and 2: All the arguments eventually come back to an Appeal to Authority.  ""Well, Roy Fielding's dissertation says..."". I sense that the real argument eventually comes down to whether a service can be called RESTful according to Fielding's dissertation, vs whether or not HATEOAS is actually a good idea.",1330183070
3633083,comment,3632800,3633058,3,0,inerte,,,"""i"" as in a counter is almost a standard for any code in any programming language. ""i"", ""j"" and ""k"" (comes from math). If you have the loop counter as ""node"", then you're doing it wrong, but if you have an actual node, then it's ok.",1330183059
3633082,comment,3632267,3632605,0,0,super_mario,,,"So you think the whole of math is just numerical computation? You think there is nothing more to math than computing values of certain classes of functions? This is what you get when your only exposed to so called higher math is calculus and perhaps a few courses on differential equations, with emphasis on numerical methods.<p>There are areas of math that don't fit this simplistic view, things that don't have analytic in their name, like topology, non-Euclidean geometry, mathematical logic etc. Algebra in general is all about studying structure that ensues when you have bunch of objects and operations you can do with them with certain properties. This structure doesn't depend on the nature of object or operation. For example rotation group etc. Then there are things like measure theory, fractals, and things like non-commutative operator algebras that are useful for applications in quantum mechanics. All in all a huge chunk of math is not about computation. Bigger in fact than the part about actual computation, esp. computation of real numbers.",1330183053
3633081,comment,3632800,3632800,1,0,RegEx,,,"Most of the Ruby code I've read through almost never uses camelCase for variables; it's almost always some_variable. I prefer to use lowercase + underscores for method names and camelCase for variables. I find this particularly helpful when dealing with argument-less methods that return strings since () is not conventionally used.",1330183026
3633080,story,,,1,0,rubenn,"Getting framed by the framework of your choice",http://www.rubennoergaard.dk/?p=31,,1330182962
3633079,comment,3629909,3632109,1,0,mnutt,,,"It seems like the ideal scenario is:<p>1) Your data is stored, encrypted by you, in the cloud<p>2) In a standards-based service which you pay for<p>3) And federated to other services by you<p>Mozilla Weave was an instance of a narrow application of this:<p><a href=""http://mozillalabs.com/blog/2007/12/introducing-weave/"" rel=""nofollow"">http://mozillalabs.com/blog/2007/12/introducing-weave/</a><p>There is still the issue that once you grant access to a third party you can't revoke it, but that's unsolvable through technical means in somewhat the same way DRM is unsolvable.",1330182948
3633078,comment,3632984,3633001,2,0,Peaker,,,"His first buggy example would not be caught by a typical unit test...",1330182924
3633077,comment,3632277,3632277,4,0,zaroth,,,"Link should point here: <a href=""http://www.miramontes.com/writing/add-cacm/"" rel=""nofollow"">http://www.miramontes.com/writing/add-cacm/</a>",1330182913
3633076,comment,3632821,3632821,10,0,Avshalom,,,"Here's a video of a similar talk he gave:\n<a href=""http://www.youtube.com/watch?feature=player_embedded&v=J5x14AwElOk"" rel=""nofollow"">http://www.youtube.com/watch?feature=player_embedded&v=J...</a>",1330182854
3633075,comment,3630626,3632780,1,0,roderik,,,yes,1330182746
3633073,story,,,3,0,glennwiz,"Coding Kata .NET",http://codingkata.net/,,1330182689
3633072,comment,3629909,3629909,3,0,velshin,,,"There's often a distinction between APIs intended for general consumption (platform APIs) and APIs optimized for JavaScript and/or mobile clients (""private"" APIs).<p>A platform API tends to be stable, versioned, well documented, and ""unoptimized"" or strongly RESTful. GETing a resource (noun) returns just that one representation.\ne.g. GET /v1/user/123/profile  or  GET api.linkedin.com/v1/people/id=123<p>""Private"" APIs tend to return more data in bulk, optimized to reduce the quantity of remote calls and improve page load times. The responses tend to be  structured in a way that's easier for the client (browser/mobile app) to render content, usually by including more tangentially related data than a traditional REST resource would contain.\ne.g. a browser's load of <a href=""https://github.com/rails/rails"" rel=""nofollow"">https://github.com/rails/rails</a> does GET github.com/rails/rails/graphs/participation<p>Twitter uses the platform API in the browser.\ne.g. GET api.twitter.com/1/trends/1.json<p>I'd be interested to hear from others leveraging APIs in their browser/mobile clients what they're using for MVC (e.g. backbone.js vs server side) and whether they've ""optimized"" their APIs for the client.",1330182642
3633071,comment,3632984,3632984,5,0,dubya,,,"Really good type inference like Haskell has is my preferred option.",1330182626
3633070,comment,3632984,3633001,6,0,bunderbunder,,,"They won't do so reliably if you're working in a larger or longer-lived project.  Then there's much more chance for a mental disconnect between the writing of a procedure and the usage of the procedure.  (Either in the form of each being done by a different person, or the same person but with some 'forgetting time' in between.)  There's also much more chance for the source to start to acquire a large collection but almost-but-not-quite-the-same types.<p>The unit tests that were written with the original procedure are likely to only cover usage scenarios that are expected by the person who just wrote the procedure.  Someone who's not in that headspace can easily be a lot more ""creative"" about coming up with surprising ways to try and use the code. So easily that it might even happen by accident.  Like, say, as a result of a simple refactor.  So in a reasonably-sized project, unit tests for basic functionality end up being a rather short Maginot Line for type errors.",1330182610
3633069,comment,3628839,3630338,2,0,gbog,,,"> Someone has to make an alternative to word that is as easy to use but doesn't allow you to do all the stupid stuff.<p>Notepad? Vim? Plus a little bit of Markdown?<p>I had to do a big certification project. A guy went on with a MS project massive file on my team with milestones, completion percentages and so on. I couldn't see it without nausea (and obviously I couldn't see it at all on my Linux box), so I dumped it as text, reformatted it with some Mardown and custom markup, and did a little parser highlighter in a week-end. Then I could put this under version control, have meaningful commits and diffs, and the MS project guy stopped trying to micro-manage my team, and was fired eventually...<p>That is to say that for me (but not for everyone, I am aware of that issue) nothing beats plain text and, when needed, some markup. Exceptions could be printed books and magazines. But I would not trust MS Word with a 500 pages specification document, and more so because it is important and long, and must be precise. As far as I can tell, TCP/IP specs are written in pure text with some markup.",1330182602
3633068,comment,3632267,3632660,3,0,kbolino,,,"Part of the reason why single-letter variable names persist may be due to multiplication.  There is no good symbol for multiplication; the two most common ones, × and ∙ are easily mistaken for other symbols (x and . respectively) when improperly typeset or handwritten (the distinction is easier with proper typography and neater handwriting, of course).<p>The way most mathematicians ignore this problem is by throwing two variable names next to each other, so xy is x times y.  Obviously, this system is incompatible with multiple-letter variable names.  I have unfortunately seen the two concepts mixed, which makes reading an equation like reading ancient Greek or Latin (which lacked spaces and punctuation).<p>Until there is a commonly accepted, easily distinguishable symbol for multiplication, I don't see single-letter variables going anywhere, or multiple-letter variables being used in general mathematics.",1330182588
3633067,comment,3632207,3632618,6,0,zedshaw,,,"Mastering Regular Expressions is the book you're thinking of.",1330182582
3633066,story,,,1,0,pelletier,"Nanoc, static website and GitHub quick edit",http://thomas.pelletier.im/2012/02/switching-to-nanoc/,,1330182579
3633065,comment,3630822,3632707,3,0,bitsweet,,,"They do not. We've updated the UI to make that much more clear.",1330182546
3633064,comment,3632957,3632957,8,0,mullr,,,"> So what advantage does a 60-year-old .NET programmer have over a 27-year-old .NET programmer when they both have, at most, 5 years of experience doing .NET programming? Absolutely none.<p>Pardon my french, but this is absolute, utter bollocks. I can only assume that this was written my a 27 year old .NET programmer who wants to think that the 60 year olds have nothing on him.  Granted, I behaved the same way when I was a 25 year old .NET programmer. I've gotten over it. Such behavior should not be encouraged or glamorized.",1330182543
3633063,comment,3632984,3632984,3,0,learc83,,,"I learned to program with Ruby and used it pretty much exclusively for 2 years.<p>However, after I learned Java and C++. I found that I really preferred static typing, and the error checking you get from the compiler.<p>I've been learning Clojure, but I'm thinking of switching over to Haskell for my next project mainly because it has static typing (also because I'm intrigued by QuickCheck).",1330182517
3633062,comment,3632957,3632957,6,0,Turing_Machine,,,"""No one cares if you know how to program in COBOL for example. It’s completely useless knowledge.""<p>Wrong. <a href=""http://jobsearch.monster.com/search/?q=Cobol-Programming-Language&sort=rv.di.dt"" rel=""nofollow"">http://jobsearch.monster.com/search/?q=Cobol-Programming-Lan...</a><p>""Even though I haven’t been working in computer programming all that long""  Obviously. :-)",1330182471
3633061,comment,3632267,3633047,6,0,deadsy,,,"Brett Victor is very accomplished. I'm pretty sure he understands math. Personally speaking if Brett Victor had a different opinion about something than me than I'd pay careful attention, because I'm probably missing something.",1330182401
3633060,comment,3632883,3632883,1,0,PeterWhittaker,,,"My first few reactions were ""why can't I X"" only to discover I could in fact X: Select my country, eliminate categories, etc. The only thing left is to perhaps rearrange the categories (business, then national, then world, e.g., but that's a quibble).<p>Zooming the page increases/decreases the number of stories per category, which is quite cool (if perhaps counter-intuitive, but OK). But would it be possible to have an absolute ""no smaller than"" minimum size for the menu? (I've zoomed in a few times via ""ctrl -"" and the menu bar is now unreadably small.)<p>On a related note, as I zoom in, I get more stories, but the font for existing stories remains the same as before the zoom, with their blocks occupying roughly the same amount of screen space as before the zoom; this means that newly added stories are in tiny blocks and tiny fonts: as I zoom, new stories become unreadably small.<p>It would be good to have an absolute ""no smaller than"" minimum for newly added stories as well, scaling down the size of existing stories; I'm OK with different font sizes for relative importance, but existing stories should decrease in size to accommodate new stories as I zoom to add more.<p>EDIT -- It would also be nice to be able to close particular boxes (display an X in the top right corner when I hover there?) and have that story replaced with another from that category.<p>(And it would be waaaay cool if there was some way to mark stories as seen and to not display them again... ...when I revisit the page, I only see things new since the last time, or not displayed the last time. That way, the page is always new. No idea how to do this without a server/account on your end, but it could be cool....)<p>Cool app. I am adding it to my regularly checked folder of news sites.",1330182366
3633059,comment,3632765,3632917,10,0,harshreality,,,"Recent kernels already have initcwnd and initrwnd set to 10.  Since 2.6.38 or so.  If you're using recent kernels (any 3.x), manually setting those to 10 won't change anything.<p>Somewhere in the early 2.6.3x, I think around .32 or .33, had the two patches to allow setting initcwnd and initrwnd as you demonstrate.<p>Somewhere in 2.6.35 or 2.6.36 era, initrwnd was changed to 10.  Later, around 2.6.38, initcwnd was changed to 10.<p>I've seen people claim that certain web accelerators use an initcwnd more like 20 to 40.",1330182317
3633058,comment,3632800,3633031,2,0,mattdeboard,,,"""for node in nodes"" is preferred, at least IMO, to ""for i in nodes""",1330182302
3633057,comment,3632207,3632560,2,0,zedshaw,,,"No, you're wrong still. NL/EOL doesn't factor into it at all. You also are one of those people who thinks the following:<p>1. ""I have been bit in the past by not knowing an obscure fact.""\n2. ""To protect myself, I must learn every obscure fact to prevent this from happening again.""\n3. ""This here has a missing obscure fact and is therefore going to hurt me and everyone around me.""<p>This attitude that you have to teach someone everything about something right away is the reason most educational tech books suck.  You do not need to teach someone everything right away.  You don't even need to teach them everything as long as what you've taught is the foundational elements and those are correct.<p>This attitude is also hyperbolic. The book is not going to destroy the world because you have a problem with one small portion of one exercise that you can't even fix yourself.<p>Finally, you keep saying these things, and you keep asserting you're correct, but I don't see a solution from you.  It's in a git repository:<p><a href=""http://gitorious.org/learn-regex-the-hard-way/"" rel=""nofollow"">http://gitorious.org/learn-regex-the-hard-way/</a><p>So put your money where your mouth is and send me a patch.  If it's soooooo easy to fix and explain then prove me wrong.<p>Until you offer up your supposedly superior world saving solution I have to assume you're just wrong but can't admit it.",1330182284
3633056,comment,3632713,3632988,3,0,udp,,,"Replace the Windows host and you have a <i>perfect</i> way to access a *nix environment.",1330182266
3633054,comment,3632765,3632765,13,0,ChrisLTD,,,"Slightly off topic: the Blogspot mobile theme is killing me with their swipe left and right gestures to navigate posts. When I'm scrolling down the page on my iPhone, I accidentally activate it constantly.",1330182127
3633053,comment,3632883,3633046,1,0,kirchhoff,,,"I experimented with that, but if you click a link from the ""app"" it loads the browser, with no easy way back to the app.",1330182105
3633052,comment,3632984,3632984,2,0,einhverfr,,,"I generally agree with the bit about restricting data to proper types and that this makes the code more readable and reliable.<p>Although not quite the same thing I've been moving towards more rigorous typing through Moose and wrapper classes in my Perl development work/",1330182017
