ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
25964,comment,25879,25879,0,0,palish,,,"Okay, the conversation probably went in a wrong direction.  Let's change pace:<p>1) Do you, personally, write code?  If yes, that's a good thing.<p>2) You probably know that each employee is like a mini-founder.  (If the number of total employees is small, then they could really be a founder.)  It doesn't take a smart person to found a successful business, but rather hard work and dedication.  People can do really, really well on an IQ test and have no dedication, or they can bomb the IQ test and have so much dedication that they make up for it.  Therefore, if the IQ test doesn't have any correlation to how good an employee is, you shouldn't use it to gauge anything.<p>3) At the company I work at, we've put together a programming test.  It's difficult and it grills you hard.  If you get a 60/160 we'll still consider you (I got around 60% two years ago).  The test is followed by every developer in the company spending time with the interviewee, asking them questions.  Then the interviewee is asked to go to the white board and do a programming problem that we give him verbally, with no use of an editor or compiler.  How he can react to a the stressful situation of being asked to solve a hard problem in front of total strangers says loads about him.  But possibly the most important part is that at the end of the day, the decision for hire or no hire is made from a gut instinct by all developers.  That's just how humans work, and it does work.<p>The programming test weeds out all non-hackers.  We call each semi-promising person in, sit them in a room for an hour and leave them with the test.  At the end of the hour we score them and if they do horribly, we send them on their way with no hard feelings.  It doesn't use up too much of our time, and finding a great person is worth the effort.<p>You should read <a href=""http://joelonsoftware.com/articles/GuerrillaInterviewing3.html"" rel=""nofollow"">http://joelonsoftware.com/articles/GuerrillaInterviewing3.html</a> also.<p>Shawn",1180738359
25963,comment,25891,25891,0,0,inklesspen,,,"Paste is a toolkit for building WSGI apps. There's nothing else quite like it. I use it a lot, both by itself and as a part of Pylons.",1180737800
25962,comment,25891,25891,0,0,SwellJoe,,,"That looks quite cool.  It looks like a formalization of WSGI application techniques, rather than anything entirely novel, but it's simplicity is very appealing.  The examples are impressively tight...not a lot of extraneous crap required to fire up an application.",1180736687
25961,comment,25879,25949,0,0,run4yourlives,,,"That's a good point, but even in hiring someone for 3 months, you are turning away others. You need to make the call.<p>Although Blink does present the dangers of gut calls, you seem to agree there is really no other alternative when it comes to hiring. As an entrepreneur, almost every call you make is made with an element of inconclusiveness. Almost every call is a gut call. <p>Some gut calls do fail terribly, but when the only way to get the experience and pre-existing knowledge to make the call is to make a few mistakes, you're SOL. <p>Catch 22, I guess! :-)",1180736610
25960,comment,25879,25919,0,0,cwilbur,,,"Here's your fundamental problem.  It's a logical fallacy.<p>You observe that a good employee is likely to have a high IQ. From this, you conclude that a bad employee is likely to have a low IQ, and that a person with a high IQ is likely to be a good employee.<p>The truth of a proposition does not imply the truth of the converse of the proposition (A - B does not imply B - A) or of the contrapositive of the proposition (A - B does not imply !B - !A).  <p>Further, no company has a verifiable screening program, because they can't evaluate how good the people they screened out were.  Suppose a company has a screening program that rejects 90% of candidates completely at random.   They then choose their hires from the other 10%, using other means.  As long as they get good hires in sufficient quality and quantity, they will believe that the screening program is effective.  They have no way of evaluating the people rejected by the screening program.",1180736588
25959,comment,25936,25937,0,0,SwellJoe,,,"No.  But it might help to have a good reason for using an inferior language.<p>There have been many PHP-based products, and a few Java products that I'm certain of.  As someone else mentioned, it seems very likely that Xobni are using .Net since they're building desktop Windows software.  Our products are in Perl.  And Python and Ruby have a few adherents among YC'ers.<p>So, make sure you can defend your choice, and you'll be fine.  Presumably you've thought a little about your language choice, so defending it shouldn't be hard.<p>The other YC'ers might make fun of you, though.  It really is a pretty stinky language for web apps (and most apps these days ought to be web apps).",1180736132
25958,comment,25879,25930,0,0,cwilbur,,,"Because they realize that there's more to happiness than money, especially in a job where you spend at least 1/3 of your waking time?<p>",1180736079
25957,comment,25879,25898,0,0,cwilbur,,,"There's no evidence one way or another, because there's no clear objective definition of ""a good employee.""<p>For some of the jobs I've had, a willingness to think independently and critically -- far more important in a lot of cases than a high IQ -- was an active detriment.",1180735915
25956,comment,25879,25880,0,0,cwilbur,,,"If you can define objectively what makes a person good, you can probably, after a decade or so of research, put together a statistically significant test that will allow you to objectively determine whether a candidate is good or not.  That's probably longer than your schedule allows, so you'll have to fudge it.<p>First, you want people who are analytical and can figure things out.  I went to an interview once where the interviewer had a binary clock on the table.  It wasn't immediately obvious to me what it was, never having seen one.  He left me in the room for a minute while he went to fetch something, and while he was out I figured out what the clock was and that it was off by about a quarter of an hour.  Later on in the interview he asked if I had any idea what it was, and I told him that it was off.  Apparently I passed the test.<p>Second, you want people who know their stuff, and who, if they don't know some bit of their stuff, can take a reasonable guess or know where to find the answer.  If the candidate submitted a portfolio, you can ask leading questions about the candidate's work: why did you do it this way?  What were the tradeoffs if you had done it this other way?  You also want to make sure the candidate does something small right there in your office: write code for a merge sort, for instance.  <p>Third, you want someone who fits with your company culture.  If you're dominant and want people to follow your instructions, you don't want to hire someone who's always questioning authority.  No matter who's right and who's wrong, you'll both have an unpleasant time of it.  If you expect people to wear business casual clothes and be punctual, you don't want to hire someone who's the most brilliant programmer in the world but who never gets in before 10:30 am and only owns one shirt with a collar.  If the candidate is a poor fit for the culture, the candidate won't perform anywhere near his capacity.<p>In particular, the difference between a supremely productive programmer and a loafer is often the environment the person is in.  Put someone who isn't punctual or a sharp dresser in a culture where he is expected to be at his desk every morning by 8:30 in a jacket and tie, and he'll turn into a loafer out of frustration within a year.  No test will identify that.",1180735514
