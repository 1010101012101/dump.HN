ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
107716,comment,106124,106494,0,0,nickb,,,"it's somewhere on N.YC but I can't find it anymore :(",1201849132
107715,story,,,4,0,nickb,"  Chatty Zuckerberg Tells All About Facebook Finances",http://kara.allthingsd.com/20080131/chatty-zuckerberg-tells-all-about-facebook-finances/,,1201849075
107714,story,,,4,0,nickb,"Facebook Finances Leaked",http://www.techcrunch.com/2008/01/31/facebook-finances-leaked/,,1201849060
107713,story,,,1,0,tomh,"Building a startup in 54 hours",http://blog.seattlepi.nwsource.com/venture/archives/130413.asp,,1201849034
107712,comment,107623,107623,0,0,shiro,,,"I agree.  I was alarmed, too, by non-hygienic macros combined to the terse names of standard functions.  It seems too easy to shadow them (I have to change my custom to name the argument 'obj').<p>About generics, I expected that the type annotation system (annotate, type, rep) would be the basis of some sort of user-expandable generic dispatching mechanism.  In arc0 only macros using it and its handling is built-in to the core, so it's not clear how PG want it to evolve.  He's probably putting it off, but it's where the <i>fun</i> is...<p>Another point I was alarmed is the automatic promotion of non-function objects to a function that tests equality to it (some, all, rem, keep, ... all does that via testify).  It is useful since it captures typical pattern.  However, on the other hand, aggregate data is 'callable' when used in the function position.  I can make a table that maps elements to booleans and I can use it as if it is a predicate, but that illusion breaks once I pass it to other procedures which eventually pass it to 'some'.  (In my Scheme implementation, any objects can be made callable.  It is handy, but I then learned that to keep that ""handiness"", I had to give up most of checking if something is procedure or not.)",1201848867
107711,comment,107132,107241,0,0,pg,,,"I don't know about this argument. What I'm praising is a way of approaching life.  It seems natural that one would oneself approach life in a way one praised.<p>That seems different from praising something one is merely born with, like being English or white or male.  You don't find me doing that.",1201848498
107710,comment,107666,107698,0,0,pg,,,"Zuckerberg had some amount of luck, but he is not average.",1201848291
107709,comment,107623,107623,0,0,pg,,,"One of the things I've tried to do differently in Arc is to design the language based on what actually happens in programs, rather than a priori theories.  For example, let is for the one-variable case because I looked at a lot of CL code and found 76% of the lets bound one variable.  Cond doesn't have implicit progn because I found most cond clauses didn't use it.  Etc x 100.<p>So in reply to the a priori argument that shadowing global function names will cause problems (How big? I don't know.  Big!) I reply that extensive experience has shown that it's just not a big deal.<p>I'll add modules eventually, of course.  But it's not a high priority.",1201848146
107707,story,,,1,0,nickb,"How Common Lisp sucks",http://groups.google.com/group/comp.lang.lisp/msg/e86335fb4cc6c367,,1201847826
107706,story,,,1,0,bootload,"Web's Builders See Too Much Fuss Over Standards, Not Enough Innovation",http://www.wired.com/software/webservices/news/2007/12/w3c_critics,,1201847749
107705,story,,,2,0,far33d,"Bringing gaming features to consumer apps",http://www.businessweek.com/innovate/content/jan2008/id20080128_487869.htm?chan=innovation_innovation+%2B+design_top+stories,,1201847413
107704,comment,107683,107683,0,0,pg,,,"Without being able to see this code that was easier to write in Python than Lisp it's impossible to say for sure, but it seems likely that the differentiating factor was libraries, not the core language.",1201847405
107703,comment,107647,107647,0,0,ibsulon,,,"And, as I mentioned in the blog post, how does that work for screen readers and other enabling technologies for the disabled?",1201846112
107702,story,,,45,9,nickb,"xkcd: Real Programmers ",http://xkcd.com/378/,,1201846005
107701,story,,,1,0,dshah,"Anywhere.fm acquired by Imeem",http://www.foundersatwork.com/1/post/2008/01/anywherefm-acquired-by-imeem.html,,1201845975
107700,story,,,6,0,nickb,"'Bizarre' new mammal discovered",http://news.bbc.co.uk/2/hi/science/nature/7213571.stm,,1201845624
