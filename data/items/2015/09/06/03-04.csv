ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
10176784,comment,10175465,10175465,0,0,simplegeek,,,"&quot;Kafka on the shore&quot; by Haruki Murakami.",1441511989
10176783,comment,10172076,10175686,0,0,crdoconnor,,,"&quot;That prospect differs from a &quot;job guarantee&quot; precisely where that stuff is not sufficiently useful. In the margin there, I object to paying people to take time and effort away from places they may find more value, to do things that are of minimal value, in the name of &quot;dignity.&quot; In fact, I think paying for useless work is destructive of precisely that dignity (along with a pile of economic value).&quot;<p>So you are saying, in essence, that people&#x27;s art projects, poetry and one person startups and time spent watching daytime TV are, <i>on average</i>, more useful than projects like the lincoln tunnel, schools, hospitals and bridges and you object to resources being taken from one to build the other?",1441511952
10176782,story,,,1,0,jobeirne,"A(n) Whole New World (2012) [video]",https://www.destroyallsoftware.com/talks/a-whole-new-world,,1441511862
10176781,comment,10175296,10176714,0,0,pron,,,"Author here. I&#x27;m not trying to claim that nested scoped continuations (what the literature calls &quot;delimited continuations with multiple prompts&quot;) are objectively easy, although I do think they&#x27;re a lot easier than monad transformers, especially for imperative programmers. In fact, in the post I say that I&#x27;m not sure languages should expose this abstraction directly.<p>It is merely discussed here to show that the theory behind the imperative style is not different from the one behind the PFP style, aimed for those who believe &quot;PFP is just math, while imperative is &#x27;not math&#x27;&quot;, or to those who are curious to see (as I was) if the imperative style has something like PFP&#x27;s monad, namely an elegant abstraction that&#x27;s at the heart of everything.<p>In practice, however, most continuations should be used sparingly if at all, except one -- the thread (in particular, the lightweight thread). Lightweight threads make the most annoying problems of monads in an imperative language go away, and are easy for imperative programmers to use.",1441511719
10176780,comment,10152809,10152809,0,0,hughstephens,,,"Dialogue Group | Melbourne Australia | REMOTE OK<p><i></i> Web design / UX front-end Designer <i></i> and <i></i> NodeJS / MEAN engineer <i></i><p>We build products that solve wicked problems – simple solutions to complex issues.<p>We&#x27;re looking to grow our small team by adding a full-time front-end engineer (experience with things like Angular, React etc a massive plus, but we also need someone with a core design nous – you should be confident prototyping in HTML and CSS). Some general experience doing traditional &#x27;graphic design&#x27; is also useful for the occasional thing that needs to be put together (like a logo for an MVP).<p>We&#x27;re also on the lookout for an awesome Node dev – some of our products are (relatively) boring CRUD-type applications (MEAN stack mostly) but we have some more interesting bits and pieces too in the realtime space (think slack meets trello), analytics (how do you build small questionnaires to produce meaningful ongoing measurement of employee satisfaction?) and trying to fix one of the web&#x27;s biggest problems: PDF forms.<p>We&#x27;re a little team and there are still a lot of things we need to work on internally, like formalising the ways that we work and roadmap products (an ongoing struggle), and I&#x27;d love to hear your thoughts on your approach.<p>I&#x27;m (CEO/MD) based out of Melbourne but our team is global (India, Philippines, Dominican Republic, Australia). A bit of overlap with our timezone (+10 GMT) is necessary, but you don&#x27;t have to work 9-5 local – that&#x27;s crazy.<p>Get in touch through email, addresses below. Individuals please, I prefer to work with people directly, not businesses/recruiters etc.<p>hugh + design @ dialoguegroup dot com dot au – design position<p>hugh + node @ dialoguegroup dot com dot au – Node position",1441511614
10176779,story,,,7,1,snake117,"A Threat Analysis of RFID Passports (2009)",https://queue.acm.org/detail.cfm?id=1626175,,1441511494
10176778,comment,10168170,10168740,0,0,tomjakubowski,,,"But Perl is unityped so I don&#x27;t think it&#x27;d be useful there. :V",1441511426
10176777,comment,10174152,10174529,0,0,firebones,,,"How would one go about designing a &quot;how to learn mooc&quot;?  I&#x27;m serious.<p>If you think about it, a lot of why employers require college degrees is that it vets many life skills around being organized and having it together enough to earn a degree.  Factor that out and you have MOOCs for the knowledge * the life skills. So the life skills themselves (such as meeting deadlines, working in groups, showing up on time regularly, learning how to learn, etc.) would have to become some hybrid of MOOC for study habits and a long-running college-experience LARP for the social interaction.",1441511395
10176776,comment,10176289,10176761,0,0,tomjakubowski,,,"I think GP&#x27;s post was tongue-in-cheek; I read it that way, anyway.",1441511313
10176775,comment,10175322,10176726,0,0,mindcrime,,,"<i>When did those ideas become widespread?</i><p>I honestly don&#x27;t know.  I&#x27;d always assumed that all of that happened well before I was born, but never bothered looking for any exact dates.  It&#x27;s just something I&#x27;ve always been exposed to, and have always taken the importance of falsification as a given.<p>A quick search turns up this[1] from Wikipedia:<p>&quot;In work beginning in the 1930s, Popper gave falsifiability a renewed emphasis as a criterion of empirical statements in science.&quot;<p>OTOH, the entry on Popper at Plato[2] says this:<p>&quot;However, in the 1970&#x27;s a series of papers published by researchers such as Miller, Tichý, and Grünbaum in particular revealed fundamental defects in Popper&#x27;s formal definitions of verisimilitude.&quot;<p>which suggest that his work had achieved enough signficance by the 1970&#x27;s that other people were basing work on it (and in this case, perhaps refuting bits of it).<p>[1]: <a href=""https://en.wikipedia.org/wiki/Falsifiability"" rel=""nofollow"">https://en.wikipedia.org/wiki/Falsifiability</a><p>[2]: <a href=""http://plato.stanford.edu/entries/popper/"" rel=""nofollow"">http://plato.stanford.edu/entries/popper/</a>",1441511204
10176774,comment,10176595,10176595,0,0,cjhveal,,,"While this looks stellar and having a serializable format is cool too, I am personally not a fan of gigantic configuration files as this.<p>Being declarative is much better than being imperative and configuration files seem like a natural fit for a declarative system, but they lack expressiveness. They are hard to make generic and lend themselves to repetition and fragility (in my experience).<p>I&#x27;d say that composition wins over configuration. If you provide a domain specific language with a set of useful primitives, users can leverage it to describe what they want with more flexibility and freedom.<p>For concrete examples within js-land, look at gulp.js[1], connect[2]-style middleware, and JSX[3]. All of them describe their structure with code, in a composable, pluggable, reusable fashion.<p>That being said, with a robust enough representation like Vega&#x27;s, I bet you could write code that dynamically builds the final JSON structure.<p>[1]: <a href=""http://gulpjs.com/"" rel=""nofollow"">http://gulpjs.com/</a><p>[2]: <a href=""https://github.com/senchalabs/connect"" rel=""nofollow"">https://github.com/senchalabs/connect</a>.<p>[3]: <a href=""https://facebook.github.io/jsx/"" rel=""nofollow"">https://facebook.github.io/jsx/</a>",1441511191
10176773,comment,10175296,10175936,0,0,pron,,,"I&#x27;d say that Lefkowitz&#x27;s claims are mostly relevant when your runtime has no multicore support (like Python). If your runtime is single-threaded, explicit yields <i>might</i> (it&#x27;s mostly a matter of taste), make explicit reasoning about state-change ordering easier. But then you&#x27;re using shared-state concurrency again, and unsafe shared-state to boot. If your runtime has multicore support -- like Java or .NET -- all this doesn&#x27;t matter, because those concurrent changes Lefkowitz is talking about may happen any time -- not just at yield points.<p>The solution, of course, is not to use unsafe-shared-state-concurrency! Either use threads with messages (like Erlang), or threads with transactional shared-state, like Clojure, or both (in fact even Erlang has both actors and ETS, and Clojure has agents and channels as well as atoms and refs).",1441511191
10176772,comment,10175901,10176700,0,0,CyberDildonics,,,"Some of that can be attributed to the fact that there are multiple integer and floating point units, so the loop counter is often totally inconsequential.",1441511057
10176771,comment,10175901,10176476,0,0,nraynaud,,,"I just used it a few minutes ago: <a href=""https://github.com/nraynaud/webgcode/blob/gh-pages/interpolator/main.c#L150"" rel=""nofollow"">https://github.com/nraynaud/webgcode/blob/gh-pages/interpola...</a><p><a href=""https://github.com/nraynaud/webgcode/blob/gh-pages/interpolator/cnc.h#L111"" rel=""nofollow"">https://github.com/nraynaud/webgcode/blob/gh-pages/interpola...</a><p>One problem is the reset of the functions, I just created a makeshift exception, but I don&#x27;t know how far I want to deviate form the norm.<p>I still don&#x27;t know if it&#x27;s a good idea, but that&#x27;s what personal projects are for.",1441510937
10176770,comment,10176289,10176464,0,0,scotchio,,,"If anyone&#x27;s curious to try this, here&#x27;s how to get it working: <a href=""https://github.com/shockone/black-screen/issues/21#issuecomment-138037521"" rel=""nofollow"">https://github.com/shockone/black-screen/issues/21#issuecomm...</a><p>Overall, actually really like the interface and the potential behind it. Super laggy and could use some work.",1441510874
10176769,comment,10176289,10176738,0,0,aidenn0,,,"The ranger file manager, which I use can do image previews in urxvt and claims to also work with iTerm, st and xterm.",1441510822
10176768,comment,10175901,10175901,0,0,CyberDildonics,,,"Funny that he is more famous for this than for inventing Porter-Duff compositing algebra, one of the cornerstones of modern image manipulation.",1441510764
10176767,comment,10175002,10175002,0,0,lollipop25,,,"You&#x27;ve probably been living under a rock or something. Just because you hate JS doesn&#x27;t mean you should deprive everyone from it.<p>It&#x27;s like having a smartphone without apps.<p>It&#x27;s like having electricity but without appliances.<p>It&#x27;s like having a DVD player without the DVD.<p>It&#x27;s like saying &quot;Hey Google, I don&#x27;t like JS. Can you please not ship Chrome with it?&quot;",1441510756
10176766,comment,10141798,10143172,0,0,neonbat,,,"Yeah I can make a cotton gin and a horse drawn carriage in 2015 . When something is created has no fixed or forced relationship to the effective age of the underlying technology.",1441510746
10176765,comment,10175563,10175563,0,0,tomcam,,,"Seems like a perfect match for Kickstarter, no?",1441510736
10176763,comment,10175020,10175409,0,0,Turing_Machine,,,"&quot; you&#x27;re risking the $60 it costs to buy a Kindle.&quot;<p>That&#x27;s not all that much more than a single (non-mass market) book nowadays. Most technical books are in the $30+ range. Textbooks can cost hundreds.",1441510673
10176762,story,,,1,0,drpp,"Sourcery seeks Sr Rails Engineers to improve food supply",http://getsourcery.com/jobs/engineers/engineer.html,,1441510656
10176761,comment,10176289,10176701,0,0,SwellJoe,,,"That&#x27;s a confusing assertion. Wayland is only a few years old, and has only very recently seen anything approaching widespread usage. What do you mean by &quot;Wayland is old&quot;?<p>And, who&#x27;s &quot;we&quot; when you say &quot;We&#x27;re planning to get all the major toolkits migrated to DisplayWebKit&quot;?<p>I&#x27;m not trying to be argumentative, I just don&#x27;t get where you&#x27;re coming from.",1441510587
10176760,story,,,1,0,cdvonstinkpot,"Audio Hostings – free audio hosting sites",http://www.audiohostings.com/,,1441510585
10176759,comment,10175901,10176476,0,0,jhallenworld,,,"This is a very useful technique for making event driven parsers.  I remember being surprised that the case statements didn&#x27;t all have to be in the same scoping level, but it&#x27;s true.",1441510559
10176758,story,,,1,0,aceperry,"Tesla is about to prove all its biggest critics wrong",http://www.businessinsider.com/tesla-is-about-to-prove-all-its-biggest-critics-wrong-2015-9,,1441510556
10176757,comment,10175322,10176600,0,0,nerd_stuff,,,"You have a point but I forgot we were going back to Alchemy and before.<p>Phlogiston theory was overturned but the idea of oxygen is still standing strong despite the major advances in chemistry since 1773.  Other puzzle pieces have been placed around it but they&#x27;re additions to it.  Even if the universe turns out to be a hologram the idea of oxygen will survive.<p>Once the big puzzle pieces are found they&#x27;re rarely removed.  Since the big shift towards empiricism most &quot;revolutions&quot; and paradigm shifts are happening in new areas or at different scales than the old ones.  Much of what are being called revolutions I would call explorations of the unknown.",1441510538
10176756,comment,10174152,10175766,0,0,firebones,,,"And never underestimate the amount of time that a teenager, with all the time in the world, would dedicate to this.",1441510478
10176755,story,,,3,0,pixelcort,"This is how Google is killing the Web (2014)",http://blog.wibki.com/google-is-killing-the-web/,,1441510442
10176754,comment,10174464,10174464,0,0,zemo,,,"so the application has to be aware of the log publishing strategy, and the application itself writes its log output directly into a zmq socket?",1441510430
10176753,comment,10175322,10176491,0,0,ScottBurson,,,"It&#x27;s true that Newtonian physics has not been discarded, but I think you&#x27;re greatly underestimating the intellectual chasm that had to be crossed to get from it to relativity and quantum mechanics.  The idea that not only velocity but also time, distance, and mass are relative; the wave/particle duality; the uncertainty principle; quantum entanglement; curvature of space-time -- all these were shocking, mind-bending ideas at the time they were first broached.  They all seem to fit together neatly now, in retrospect, and we understand that Newtonian physics is a useful approximation that is quite sufficiently accurate in a lot of everyday situations, but the way we think about physics now is almost inconceivably different from the way we thought about it 200 years ago.",1441510376
10176752,comment,10175020,10175586,0,0,Turing_Machine,,,"Yes. There&#x27;s some horrible, horrible work out there from &quot;respectable&quot; publishing houses. You don&#x27;t get to claim &quot;quality&quot; when you&#x27;ve obviously been too cheap to pay someone to rekey the damned book.<p>Of course, the quality of paper books is also horrible nowadays. Crap paper, crap printing, crap binding.",1441510373
10176751,comment,10174270,10175358,0,0,MichaelGG,,,"They can smuggle it in via attributes. But if they don&#x27;t make this part of the CLR spec, then not really cross-platform and more like C#&#x27;s extension methods.<p>Ideally these features would be designed at a higher level, in the CLR, aimed to target as many languages as possible. I.e., they shouldn&#x27;t be proposed as C# extensions.",1441510323
10176750,comment,10176275,10176275,0,0,geofft,,,"The systemd folks have been saying all along that it&#x27;s just a standardized and stable interface and anyone else can implement that interface. I&#x27;m glad to see this, because it&#x27;s testing the claim: if it&#x27;s true, that means wonderful things for OpenBSD portability, and if it&#x27;s not true, we should be more cautious about coding to systemd&#x27;s APIs.",1441510317
10176749,comment,10170233,10173359,0,0,ikeboy,,,"I don&#x27;t think that&#x27;s enough to solve this problem. If you replace money by utility, it seems like it would still be a paradox.",1441510242
10176748,comment,10174270,10175592,0,0,MichaelGG,,,"F# also has first-class tuple types. But the better way to look at it is that you can have records and can put them in sum and products. Then for compat, there&#x27;s the types for .NET&#x27;s OO system. But sure, that&#x27;s an increase in complexity in F#.<p>Yet in C# you have hard-coded keywords for things like System.Threading.Monitor (the lock keyword). This doesn&#x27;t exist in F#-the-language, but is implemented via a simple function so it doesn&#x27;t count. (Just like you wouldn&#x27;t consider System.Math.Max part of C#-the-language).<p>In C#, you have hard-coded operators, whereas in F# they&#x27;re essentially just functions (compile-time type parameters work similar to _Generic in C11). In C# you have hard-coded LINQ and async syntax, whereas in F# you don&#x27;t (just one general construct for computation expressions).<p>People cite stuff like F# pipelining, but that&#x27;s not a language feature, it&#x27;s just a function. C# and F# both have quotations, but F#&#x27;s are more complete, not a one-off to implement LINQ-to-SQL. That reduces complexity, or is at least a tie. (In the way that arithmetic over integers is less complex than arithmetic over int32.)<p>Type extensions are another case of this. C# has them, but only partially implemented (extension methods), whereas F# implements the feature in a less complex way that provides more coverage.<p>OTOH, F# does stuff like transforming Int32.TryParse to match as a tuple (nice, but a complication). And it also has really ugly things like this one: Explicit parameter names take higher binding than = operator. Example:<p><pre><code>  Foo(Bar = Baz) // Calls Foo with argument Bar with value Baz \n  Foo((Bar = Baz)) // Calls Foo(bool) with result of (=) Bar Baz\n</code></pre>\nMy gut feeling is that once you subtract F#&#x27;s stdlib and add in C#&#x27;s plethora of edge cases, you&#x27;re not actually significantly less complex in a meaningful way using C#, and F#&#x27;s improved uniformity wins out.",1441510217
10176747,comment,10176289,10176663,0,0,scintill76,,,"For easier use, you could even alias `cat` to run `file` first, then pass to your image viewer or whatever if it&#x27;s not a text file.",1441510196
10176746,comment,10175497,10176424,0,0,rasz_pl,,,"they LIED, not the first time, not even the first time this month",1441510193
10176745,story,,,1,0,seamusabshere,"Adding heartbeat to Redis Redlock",https://github.com/leandromoreira/redlock-rb/pull/18,,1441510143
10176744,comment,10175124,10176250,0,0,gkop,,,"You can try overriding the blacklist in Chrome, that worked well for me when I needed to for a Debian/Nvidia system a couple years ago.",1441510029
10176743,comment,10175020,10175416,0,0,Turing_Machine,,,"&quot;it&#x27;s just that Amazon was allowed to take a loss on the sales&quot;<p>That is absolutely not true.<p>The marginal cost of delivering an ebook is so close to zero that it&#x27;s hardly worth calculating.<p>Amazon (or anyone else) can easily deliver ebooks for $0.99 and still make a profit on every single sale.",1441509932
10176742,comment,10176411,10176411,0,0,technion,,,"> All of them failed to notice that a .png file had “eval(‘foo’)” PHP code in it.<p>I have found CXS[0] extraordinarily successful at identifying this sort of thing.<p>Before someone says it, I agree that &quot;nuke it and restore from backup&quot; is the ideal solution. But since we&#x27;re talking about hacked Wordpress servers, we&#x27;re probably already talking about &quot;cleanup after the intrusion&quot; on unmaintained servers with limited management and backups.<p>[0] <a href=""http://configserver.com/cp/cxs.html"" rel=""nofollow"">http://configserver.com/cp/cxs.html</a>",1441509922
10176741,story,,,1,0,zeeshanm,"Tweetstorm: how to keep thinking new ideas?",https://twitter.com/_zeeshan_mughal/status/640364626991968256,,1441509920
10176740,comment,10175124,10175124,0,0,yarrel,,,"Let&#x27;s incorporate it into systemd. That will solve everything.",1441509919
10176739,comment,10174942,10174942,0,0,stuart78,,,"A bunch of cut up PDFs is a rather frustrating way to release something for free. That said, these galleries are pretty fantastic.",1441509908
10176738,comment,10176289,10176674,0,0,kaoD,,,"Wow, how? I use urxvt and dindn&#x27;t know that.",1441509841
10176737,comment,10175020,10175405,0,0,Turing_Machine,,,"What are you talking about? Of course your publisher isn&#x27;t going to pay you more.<p>Amazon pays 70% of retail. How much is your publisher paying you, assuming you earn out?<p>&quot;But you might want to look up what the average revenue is&quot;<p>The average revenue for traditional publishing is close to zero, because 90% or so of the writers never get a publishing deal.<p>&quot;Hint: I do this for a living.&quot;<p>Yes, I understand that you dislike the prospect of competition. That&#x27;s not actually my problem.",1441509808
10176736,comment,10176687,10176687,0,0,snehesht,,,"Invalid link.",1441509694
10176735,comment,10175563,10176287,0,0,jacobolus,,,"The academic community is much larger, broader, and more diverse than the open source software community. There’s much greater diversity in tools and methods, and less centralization of discussion. It is a community grounded in many centuries-old traditions, has more stakeholders involved (students, university administration, public officials, funding agencies, journal publishers), and moves relatively slowly as a body.<p>The open source community is in the wonderful unique position of having been mostly built during a time of instant and limitless free communication, and uses a set of tools and practices which are very accessible and not nearly so entrenched.<p>When you think about it, the speed of change and adoption in the whole constellation of modern software development tools – web browsers, search engines, email, usenet/mailing lists, internet chat, debuggers, profilers, package management, build tools, virtualization, graphical diff, version control and DVCS, blogs, wikis, ticket trackers, Q&A sites, etc. etc. (not even to mention various dynamic language features, coroutines, better garbage collectors, JIT compilers, network APIs, &c.) – has been remarkable, and software development today looks very different than it did 30 years ago.<p>The speed of iteration and experiment in development of tools is so fast because the people building the tools and the people using them are a similar and heavily overlapping group, and because building new tools can be done relatively quickly and cheaply by small teams, and distribution and marketing of open source are cheap.<p>Tools for, say, CAD/CAM, architectural design, structural engineering, 3d animation, video editing, chemical reaction simulation, etc. are much slower to evolve, because they take more professional expertise to work on, cost more up front to build, and have a set of users who mostly are not qualified to build the tools themselves and tool builders who don’t necessarily do professional-level work with it. Instead of “build what you need”, there are two disjoint groups whose mottos could be “buy what you need” or “build what you can sell”.<p>To take the example of a field I’m familiar with, image editing/printing software (along the lines of Photoshop), there are at least 5 disjoint groups involved in any innovation: artists, technical authors, user interface designers, software engineers, and academic image processing researchers. New features are typically developed as a somewhat abstract mathematical model by academic researchers whose incentive is to publish papers with elegant theory, implemented by software engineers whose goals are mostly based around performance and raw function, fit into the existing interface by designers who are trying to match long-established conventions, explained by manual/book authors who want to sell books (which usually means listing recipes instead of explaining difficult abstractions), and then used by artists who usually end up with no clue what the feature does. Along the way product managers, marketing departments, and others also get involved. None of those groups necessarily has the cross-cutting expertise to really understand the needs of everyone up and down the stack, so new features tend to be shallow/gimmicky, mistargeted, poorly designed, poorly explained, and ultimately used haphazardly or ignored.",1441509689
10176734,comment,10169937,10170635,0,0,ktt3ja,,,"I&#x27;m not the OP, but what you say resonates with me as well.<p>May I ask what domain or field you work on?",1441509649
10176733,comment,10176292,10176292,0,0,pedalpete,,,"This Algorithm doesn&#x27;t create a Van Gogh or a Picasso, but rather merges an artists style with another. If the algorithm were given two different photographs, what would the result be?<p>This is clearly pointed out in the Gandalf example. Though the resulting image may mimic Picasso&#x27;s style of line and color, as a whole, it was unable to recreate the randomness and asymmetry of Picasso&#x27;s style.",1441509607
10176732,comment,10168665,10168665,0,0,NeutronBoy,,,"Presumably your boss hired <i>you</i> to do the CSV parsing so he can do other stuff. No point having a team of people all with exactly the same skills.",1441509411
10176731,story,,,2,0,grahac,"Benford's Law",https://en.wikipedia.org/wiki/Benford%27s_law,,1441509411
10176730,comment,10175296,10176372,0,0,pron,,,"> I am trying to say, however, that it&#x27;s not some grand trick that frees the user from thinking about monads.<p>This brings us back to the discussion of what it means to be &quot;thinking about monads&quot;. When a cashier hands me change, is he &quot;thinking about groups&quot;? Is a Rubik&#x27;s Cube whiz thinking about groups? Sometimes people are better at something by thinking about it in a completely different way. That is the exact meaning of duality: two things are the same, but different circumstances may make looking at it in one way more useful than the other. A &quot;push&quot; API (of which &quot;PFP monads&quot; or the &quot;monadic style&quot; as I call it, is an example) and a &quot;pull&quot; API are also duals, yet I believe that when writing concurrent code in imperative languages, the pull shape is style preferable.<p>As discussions about cognition might make some PFP people uncomfortable -- we all should just think &quot;in math&quot;, right? (I&#x27;m kidding. Mostly ;)) -- we can take this back to theory and say that switching between different representations requires computation. In fact, it can be argued that <i>all</i> computation is simply about changing representations and encoding things. 4 <i>is</i> 2 x 2, but going from representing that same thing as &quot;2x2&quot; to &quot;4&quot; is what computation does (and the lambda calculus computes just by substitution -- namely, by &quot;doing nothing&quot; from a mathematical point of view). All this is to say that going from looking at something one way to looking at it another way actually requires some computational power and is not free.",1441509367
10176729,comment,10176120,10176120,0,0,Widdershin,,,"It would be great if you could put a live example app up.",1441509366
10176728,comment,10176289,10176534,0,0,userbinator,,,"You may be diappointed to know that Windows&#x27; cmd.exe will automatically open the default associated program, so all you need to do is enter the filename if you&#x27;ve associated image files with a default viewer:<p><a href=""http://superuser.com/questions/246825/open-file-from-the-command-line-on-windows"" rel=""nofollow"">http://superuser.com/questions/246825/open-file-from-the-com...</a><p>(I suppose a similar thing could be done on *nix with a suitably modified execlp()/execvp().)",1441509352
10176727,comment,10175946,10176528,0,0,officialjunk,,,"Ah, you&#x27;re right. In my defense, there is some butane and a butane lighter at the beginning of the video :)<p>Is there a way for me to update the submission title?",1441509339
10176726,comment,10175322,10176413,0,0,analog31,,,"When did those ideas become widespread?<p>My parents, both scientists educated in the 1950s, never heard of them. They followed a pretty simplistic notion of scientific methodology, that mainly revolved around intellectual honesty: Report everything that you observe, and be willing to change your beliefs when confronted with new information.<p>I never heard of Popper or Kuhn until after I finished my science degree, and then, only in the context of debates about evolution versus creationism. But I don&#x27;t know if I&#x27;m typical or not.",1441509313
10176725,comment,10176649,10176649,0,0,Elizer0x0309,,,"Stop fapping if you are hooked on porn.<p>yourbrainonporn.com\nreddit.com/r/nofap.",1441509307
10176723,comment,10176289,10176289,0,0,supster,,,"This looks really awesome - can&#x27;t wait to try it out!",1441509276
10176722,story,,,14,3,prostoalex,"Metal-Mouths: America’s obsession with perfecting its teeth",http://nymag.com/scienceofus/2015/06/why-is-america-obsessed-perfect-teeth.html,,1441509184
10176721,comment,10175465,10175465,0,0,smartial_arts,,,"Just finished, in the following order:<p>- Blindsight<p>- Echopraxia<p>- Colonel<p>by Peter Watts. Though I should&#x27;ve read the &#x27;Colonel&#x27; before &#x27;Echopraxia&#x27; in the hindsight.",1441509159
10176720,comment,10176634,10176634,0,0,sctb,,,"Previously discussed: <a href=""https://news.ycombinator.com/item?id=10168214"" rel=""nofollow"">https://news.ycombinator.com/item?id=10168214</a>",1441509114
10176719,comment,10175322,10176491,0,0,brudgers,,,"Re-interpretation of Newton in light of quantum mechanics and relativity are part and parcel of scientific revolution according to Kuhn. Science weaves a narrative of progress. The extreme example, and the subject of Kuhn&#x27;s earlier work was the Copernican revolution: we still get the heliocentric model presented as an astronomical refinement not a form of heresy. The standard science narrative doesn&#x27;t see Newton through his own eyes, as principally a theologian, either: he spent a lot of effort trying to prove the existence of god [so did Descartes despite <i>Discourse on Method</i>].<p>None of this is to downplay their intellectual contributions. It is only to illustrate Kuhn&#x27;s assertion that science constantly redefines past literature as continuous with incompatible contemporary beliefs: any interpretation of Newton&#x27;s work orthogonally to the existence of god does not accurately depict his views.",1441509097
10176718,story,,,2,0,krazemon,"Conscious Dreaming and Controlled Hallucinations",http://www.shaman-australis.com/~claude/dreams.html,,1441508978
10176717,comment,10174270,10175964,0,0,MichaelGG,,,"Well, that&#x27;s disappointing. It&#x27;d be nice if C# allowed more succinctness, and eliding type annotations is a major part of that. It feels like those aspects of C# were chosen just to implement LINQ, then forgotten.<p>Also don&#x27;t mistake my tone in my comments. While I am annoyed with the direction MS is taking, C# is still obviously better than most languages and the tooling is a fantastic. I&#x27;m happy it is still being improved, despite detractors saying it&#x27;s too kitchen-sinky or changing too fast.",1441508946
10176716,comment,10176289,10176289,0,0,lazybum,,,"I see it is buzzword-compliant, but what is it good for?",1441508920
10176715,story,,,1,0,slvv,"App Provides a Voice for Those Unable to Speak During Emergencies",http://themighty.com/2015/07/this-new-app-provides-a-voice-for-anyone-unable-to-speak-during-an-emergency1/,,1441508902
10176714,comment,10175296,10175296,0,0,mikekchar,,,"It&#x27;s an interesting article and something I would like to think deeply about, but I hope the author will forgive me if it isn&#x27;t immediately obvious to me.  Especially the statement that &quot;monads have no place in imperative languages&quot;.<p>For example, I do a lot of Java/Coffee script lately.  I don&#x27;t have access to first class continuations.  Don&#x27;t get me wrong; I&#x27;d love to have them.  I&#x27;m sick as the next person of blowing up in a callback and having my stack completely hosed.<p>But in Coffee script, monads are nearly trivial to implement.  The use of the Maybe monad makes doing repeated transformations and filtering incredibly nicer.  It is not obvious to me that a continuation based implementation would be clearer at all.<p>Perhaps the author is trying to make the case that first class continuations are more important than first class monads for imperative languages.  If that&#x27;s the case, then I tend to agree because, like I said, monads are not difficult to implement even if you don&#x27;t have explicit support for them.  Stack preserving continuations on the other hand... :-P<p>I think the idea of using composable continuations is a very interesting one and I&#x27;d like investigate it further, but unless I&#x27;m being very dim-witted (a definite possibility) I don&#x27;t think the matter is as clear as the author hopes.",1441508900
10176713,story,,,38,29,prostoalex,"Can Mommy Bloggers Still Make a Living?",http://www.theatlantic.com/business/archive/2015/09/mommy-bloggers-money/402535/?single_page=true,,1441508884
10176712,story,,,1,0,joeblau,"Appetize – Stream iOS and Android Simulators in the Browser",https://appetize.io,,1441508846
10176711,comment,10169354,10171075,0,0,bitL,,,"How about smaller, lower-voltage electronic parts cause lower interference, noise and banding, contributing to significant improvement of quality of reading of a sub-pixel value (or pixel layer in Foveon), improving quantum efficiency of the sensor, especially its incident photon to electron ratio? And allowing substrates with better characteristics at smaller scales?",1441508673
10176710,comment,10176138,10176138,0,0,jinushaun,,,"I love the new Google identity. It&#x27;s a difficult rebrand, but the design direction and identity system is no surprise given the foreshadowing from Material and Alphabet. It&#x27;s not &quot;amazing&quot;, but it&#x27;s about as good as it gets for such a well known company with a humble design beginning. The original logo was so bad that anything new would be better. The new word mark no longer sticks out like a sore thumb in Material designs.<p>I think people hate the new word mark  because it&#x27;s so damn geometric. Geometric typefaces evoke rigidity, sterility and lifelessness. Perfectly circular &quot;o&quot; and &quot;g&quot; is also how many of us learned to write in primary school, hence many people&#x27;s comparison to children when criticizing the word mark.",1441508645
10176709,comment,10176649,10176649,0,0,factoriez,,,"I&#x27;m a 22 year old independent contractor that is going through some similar things. Best advice I can give is to get out of the box. We think in such technical structured manners and it is super stressful to our simple emotional brains. Find your buddies or go by yourself and step away from the screen, your room, get away from home. Walk. Keep walking. Get lost. Adventure. It not only opens up your perspective but it loosens your senses and flexes your emotional cognitions with the world and yourself. Do this often too. Be free. It may be good to break from programming for awhile if it feels right to do so. Take care friend",1441508557
10176708,comment,10175322,10176491,0,0,analog31,,,"I would describe the &quot;revolution&quot; in the following sense. Workers were aware of both successes and failures of the classical model, and did want to throw the baby out with the bath water. They adopted as a ground rule, that any candidate for a new theory had to contain the old theory as a corner case.<p>Rather than describing a dichotomy between conservatism and revolution, I&#x27;d say that the revolutionaries searched for and found a hybrid of the two.<p>I also think that if any departure from steady-state is defined as a &quot;revolution,&quot; then it&#x27;s self fulfilling.",1441508543
10176706,comment,10175296,10175755,0,0,Silhouette,,,"He does (briefly) mention that kind of variation and why it&#x27;s a slightly different idea in the original presentation. It&#x27;s around 28 minutes into the video.",1441508481
