ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
61227,comment,61217,61217,0,0,derefr,,,"He was standing on the wrong side of the mirror at this very moment:<p>> When I first looked at Facebook it was in the bar of a hotel with workmates. [...] They showed me - it meant nothing.<p>People who use Facebook wonder what going to bars is for:<p>""As far as I can see, it's a building where you put out an image of yourself [a bunch of make-up and/or cologne] and other people do the same.<p>Then you all send each other little glances and approach one another and make pretend 'friends'. And that's sort of it, really.""\n",1191128195
61226,comment,61157,61172,0,0,pius,,,"I'd be very interested to see some references discrediting it.",1191128099
61225,comment,61157,61157,0,0,bootload,,,"<i>""Blub programmers""</i> are referenced in ""Beating the averages"" ~ <a href=""http://www.paulgraham.com/avg.html"" rel=""nofollow"">http://www.paulgraham.com/avg.html</a> and describes the ""Blub paradox"". <p><pre><code>   ""... As long as our hypothetical Blub programmer \n   is looking down the power continuum, he knows \n   he's looking down. Languages less powerful than \n   Blub are obviously less powerful, because they're \n   missing some feature he's used to. But when our \n   hypothetical Blub programmer looks in the other \n   direction, up the power continuum, he doesn't \n   realize he's looking up. What he sees are merely \n   weird languages. He probably considers them \n   about equivalent in power to Blub, but with all \n   this other hairy stuff thrown in as well. Blub is \n   good enough for him, because he thinks in Blub ...""\n</code></pre>\nRaganwarld has a good explanation of the ""Blub paradox"" ~ <a href=""http://weblog.raganwald.com/2006/10/are-we-blub-programmers.html"" rel=""nofollow"">http://weblog.raganwald.com/2006/10/are-we-blub-programmers....</a>",1191126609
61224,comment,61157,61211,0,0,euccastro,,,"I don't see the advantage of hiding the implementation in this case. The new name doesn't give any new insight, nor provides any useful abstraction over the list comprehension syntax. It only raises question marks in the reader's head: where is this defined? Does it have side effects?  Am I OK to mutate the returned list? The passed list? Am I OK to assume the passed list unchanged? etc.<p>Re: different ways to traverse a list and square elements, whenever the idiomatic implementations in your language are good enough for you, you just want to go with them. Hiding those details behind names is premature abstraction IMO. <i>If</i> you know you'll need your own list and square implementation, you can abstract that from the start. If you find needs for change that you didn't anticipate, the overhead of refactoring (or overloading operators, if it suits the problem) there and then is probably less than having abstracted everything that you might possibly want to change.<p>Deciding to square the list in place is not trivial at all. If you do that, you'd better change the signature of the function so that it doesn't return anything [Edit: or using whatever convention you have to highlight mutators, like bang! names in Scheme]. Otherwise, it's too easy to use the old list assuming it has the original values, or to mutate either the old or new references assuming they belong to independent lists.<p>Re: readability, you have to balance the familiarity of the syntax for a newcomer, and <i>more importantly</i>, the ease with which you can get acquainted to it, with its expressive power and its consistency with the rest of the language. If English was precise, concise, unambiguous, and consistent enough a notation, we wouldn't have many other programming languages. <p>More specifically, I find list comprehensions (and generator expressions in general) very quick to get used to, I find that they read well once you have acquainted yourself with them, I find that they have a great ink to information ratio that justifies making that initial learning investment, and I find that they feel right at home in Python.",1191126259
61223,story,,,4,0,majimojo,"On Sci-Fi (books) and Innovative Ideas? For Your Next Startup",,"There are a lot of good ideas in SciFi and Cyberpunk books.  <p>Books can often be better than movies because of the depth of narrative needed to expose a concept or idea.  Also because your own imagination drives the story, so each reader might actually come up with something different (their own interpretation and eventual implementation).  <p>That being said, I'm no expert on this topic, but here are some good ones (emphasis on fun reads), feel free to share your favorites, but don't spoiler it!<p>For the record, I will play video games over reading a book.<p>=================================<p>::Snow Crash:: by Neal Stephenson<p>Plot Outline: A Cyber Ninja hacker set in a Matrix-like world where Real Life and Virtual Life mesh.  <p>Some Ideas Profiled: <p>+ Metaverse, a cyber world that many people live in or use to interface with the real world.  Think MMOs and Second Life.<p>+ Gargoyles, people who wear gadgets to record everything that goes on around them and sell the data into a central marketplace.  Think Crowdsourcing, Streetview Startups or Justin.tv.<p><a href=""http://www.amazon.com/gp/product/0553380958/ref=pd_cp_b_0/002-9120971-7238444?pf_rd_m=ATVPDKIKX0DER&pf_rd_s=center-41&pf_rd_r=0HZ45MZ5VWK6G11YWM8H&pf_rd_t=201&pf_rd_p=252362401&pf_rd_i=0739480235"" rel=""nofollow"">http://www.amazon.com/gp/product/0553380958/ref=pd_cp_b_0/00...</a><p>I've heard from people who read books often that this is classic cyberpunk.  A Second Life founder cites Snow Crash as major inspiration for the game.<p>=============================<p>::Down and Out in the Magic Kingdom:: by Cory Doctorow<p>Plot Outline: A Futuristic Society (set in Disneyland no less) based on expounding today's Internet Phenomenons: social networks, pagerank, ebay reputation, blogging-fame mechanics, and Dog-eat-dog Startup Competition.  And everyone lives forever~~~<p>Some Ideas Profiled: <p>+ Reputation Economy, money doesn't exist in the future.  Instead, people connect to a Google like system through their head and commerce works by measuring your reputation and fame (e.g. how many think about you and thus create a link for your personal pagerank).<p><a href=""http://www.amazon.com/Down-Magic-Kingdom-Cory-Doctorow/dp/076530953X/ref=pd_bbs_sr_1/002-9120971-7238444?ie=UTF8&s=books&qid=1191126693&sr=1-1"" rel=""nofollow"">http://www.amazon.com/Down-Magic-Kingdom-Cory-Doctorow/dp/07...</a><p>Check the customers reviews and you'll see that Jeff Bezos tells you to read it.<p>=============================<p>::The Code Book:: by Simon Singh<p>Outline: A short, history based narrative of Cryptography.  Written in the tone similar to how a Wired Magazine writer will sex up a topic they cover.  <p>Covers Julius Caesar to Quantum Cryptography.<p>Non-Fiction, but for me, it had a startup-like quality when read.  More so than Cryptonomicon by Neal Stephenson which is ABOUT a startup but reads like a regular story (I can't finish that book, its a Tome!).<p><a href=""http://www.amazon.com/Code-Book-Science-Secrecy-Cryptography/dp/0385495323/ref=pd_bbs_sr_1/002-9120971-7238444?ie=UTF8&s=books&qid=1191126752&sr=1-1"" rel=""nofollow"">http://www.amazon.com/Code-Book-Science-Secrecy-Cryptography...</a>",1191125340
61222,story,,,11,9,nickb,"Apple's Growing Arrogance",http://reinventedsoftware.com/blog/2007/09/29/apples-growing-arrogance/,,1191125334
61221,comment,61157,61218,0,0,mynameishere,,,"<i>dest = map(square, src)</i><p>Well, this is okay. Of course, in java, you have to hack it unpleasantly,<p>List dest = map(UtilityMethods.class, ""square"", src)<p>...you have to manually extract the method ""square"" from UtilityMethods.class and process it over src. One advantage: You can use UtilityMethods as a namespace and swap in different methods thereby.",1191125116
61220,story,,,6,0,nickb,"Stick Figure Web Design",http://www.jakevoytko.com/blog/2007/09/29/stick-figure-web-design/,,1191124954
61219,comment,61080,61164,0,0,stuki,,,"	IIS7 is Vista/Longhorn only. Major reason to upgrade for developers.<p>	Also, like mattmaroon above, I fail to see why people hate Vista so much. I have no problems with it. Its stable, has support for my hardware and seems fast enough. And I run the x64 version, which is likely more quirky that the 32 bit one. I did do a fresh install, so I maybe upgrades are more problematic. I have also been a Mac/Linux user since the Windows95 days, so have little experience with XP and 2003.\n",1191124953
