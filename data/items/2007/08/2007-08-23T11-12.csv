ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
45567,comment,45554,45554,0,0,staunch,,,"If you think ideas can be sold I'd be happy to sell you some great ones at very reasonable prices.
",1187870322
45566,comment,45506,45506,0,0,euccastro,,,"<a href=""http://en.wikipedia.org/wiki/Summerhill_School"" rel=""nofollow"">http://en.wikipedia.org/wiki/Summerhill_School</a><p><a href=""http://en.wikipedia.org/wiki/Sudbury_model"" rel=""nofollow"">http://en.wikipedia.org/wiki/Sudbury_model</a><p><a href=""http://en.wikipedia.org/wiki/Unschooling"" rel=""nofollow"">http://en.wikipedia.org/wiki/Unschooling</a>",1187870186
45565,comment,45420,45420,0,0,extantproject,,,"<a href=""http://www.openbsd.org/cgi-bin/man.cgi?query=sshd_config"" rel=""nofollow"">http://www.openbsd.org/cgi-bin/man.cgi?query=sshd_config</a>
",1187870089
45564,comment,45539,45539,0,0,staunch,,,"Student -> Employee -> Contractor -> Founder -> Investor<p>",1187869282
45563,story,,,2,0,bootload,"How things get better",http://www.scripting.com/stories/2007/08/22/howThingsGetBetter.html,,1187867949
45562,comment,45539,45539,0,0,edw519,,,"Exactly.  All you gotta do is deliver.",1187867894
45561,story,,,8,2,euccastro,"Stackless Python-like coroutines in Scheme.",,"After some time of doing only toy tests and book exercises, I'm getting deeper into Scheme for a real application.  One of the things I missed was Stackless Python's simple to use coroutine API.  In Scheme you have<p>- raw continuations, which I find a bit too wild and low-level for my current purposes, or<p>- full-fledged preemptive threading systems, which seemed way too complex for my needs.  Besides, these are implementation specific, and I didn't want to marry any implementation yet.<p>So I decided to give it a try and roll my own on plain R5RS (I'm sorry it's quite verbose as a result.  I may reduce noise with macros in the future, but this is my first shot at it).  It was easier than I was afraid, and great fun!<p>If you are into Scheme/Lisp, please tell me what you think about it. [Edit: I'm especially interested in comments on the API and semantics. This is more frugal than Stackless's, but I don't miss anything worthy. Do you?]<p><a href=""http://pastebin.com/ff732013"" rel=""nofollow"">http://pastebin.com/ff732013</a><p>NOTE: This is just a one day hack; use it at your own risk.  If you are interested in getting future versions of this, just write me at the address in the profile and I'll ping you when I'm confident it's reliable.",1187867771
45560,comment,45448,45463,0,0,chmac,,,"Whether the affiliates would allow the revenue share is a valid point. I was thinking from the perspective of a community site. A site with even 200k active members in a specific field would have a good basis to negotiate a specific deal with an affiliate. I think it's a trend we'll increasingly see.<p>Fundamentally, affiliates make money by giving recommendations, but they're paid for giving those recommendations, so they can't possibly be totally objective. In a revenue share model, the affiliate is paid for negotiating a better deal for their users. Instead of the current situation where only the affiliate wins, this model means win-win for affiliate and user.<p>That's how I reckon it'll play out anyway... :)",1187867417
45559,comment,45518,45548,0,0,palish,,,"Awesome, good to know.. I was a little nervous that I didn't have a massive cluster ready to go ;) I'm just going to make sure my database indices are in the correct places and see how launch does.",1187867399
45558,comment,45448,45508,0,0,chmac,,,"That's an interesting point. We're working on some AdSense revenue sharing stuff at the moment, thanks for the link.",1187867212
