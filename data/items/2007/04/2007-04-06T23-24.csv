ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
9770,story,,,77,92,kkim,"Microsoft is Dead",http://www.paulgraham.com/microsoft.html,,1175903169
9769,comment,9758,9758,0,0,jkush,,,Thanks!,1175903008
9768,comment,9661,9764,0,0,jkush,,,"I've never been afraid of the red pill. If it'll improve my ability to be effective, I'll gladly take it. :)<p>Without knowing much about Lisp, it seems that trying to describe it is like to trying to tell someone about Buddhism, or Jazz. Talking about it is just not the same thing as ""getting it"".<p>Thanks for your thoughts vikram, If I do become a convert I'll be sure to make a special post to news.yc  :)
",1175902902
9767,comment,9540,9542,0,0,vikram,,,"Scheme is cleaner than common lisp. I think Gambit-C has an implementation of Erlang's message passing and mailbox idea for each process and in addition to that it doesn't use OS threads for individual processes it uses first class continuations. In one test it performed similar to Erlang running as many as 900K processes on a 1GB ram P4.<p><a href=""http://people.csail.mit.edu/gregs/ll1-discuss-archive-html/msg03309.html"">http://people.csail.mit.edu/gregs/ll1-discuss-archive-html/msg03309.html</a><p>Having said this. I'm really interested in Erlang because of
mnesia. I'm not sure if I want to spend a bit of my life writing a database in Gambit.<p>Here are thoughts from someone who choose Erlang over Scheme. <a href=""http://theschemeway.blogspot.com/"">http://theschemeway.blogspot.com/</a><p>I don't really agree with his point of view. I think if your 
problem doesn't really have a strong concurrency element in 
it which you would solve by using shared data then it probably doesn't make sense to use the message passing model. Having said that if you are writing for the web one day it definitely will have a strong need for concurrency.",1175902867
9766,comment,9661,9727,0,0,jkush,,,"That's precisely my point and why, I think the article was written.<p>",1175902724
9765,comment,9711,9746,0,0,juwo,,,"I think it is more suited to a research project in a University. There are still a few things to be figured out.<p>But to your point, I meant that cultures do change; willingly or unwillingly, when faced with disruptive and effective technology. The strange thing is; they sometimes willingly change for the worse.",1175901921
9764,comment,9661,9662,0,0,vikram,,,"The article is too long and not that well written. The biggest problem is that, however good the writer they are never going to be able to communicate the power of lisp in prose. It's upto the audience to see it. For those who know lisp, they already know. For those who don't it's like coming in contact with something alien and you can't tell if it solves any problem at all. It's almost as if ones' come in contact with a cult.<p>Though lisp provides a lot of syntactic flexibility. The beauty of lisp is in giving the programmer confidence that you can create a prototype extremely quickly and then optimize it when needed.<p>I find the hardest thing in the world is getting started. Once I start its never as hard as I thought it was going to be. In a nutshell, Lisp helps me get started and then lets me get the code ready for prime time.<p>If you are a web developer, I'd say spend a weekend trying out UCW, write a reddit clone in it. Then try to write it in python. It'll be obvious what lisp has to offer. <p>I'd start by reading SICP by Sussman and Abelson. Their lectures are available in video. I had a profound experience at the end of lecture 2b where they explain how car, cdr and cons are defined, thus explaining that in lisp, code is data.<p>The above comes with a warning... Lisp is truely the red pill. Once you've figured it out, you'll find it physically impossible to code in any other language.",1175901830
9763,comment,9652,9652,0,0,zaidf,,,"Reminded me of the supposed quote by Trump to his daughter upon seeing a homeless guy...it went something like ""Technically, he is richer than I am.""",1175901806
9762,comment,9667,9697,0,0,juwo,,,"what fields should I grep for, that will tell me they were pleased with my demo?",1175901511
9761,comment,9652,9742,0,0,far33d,,,"Debt is only reasonable if you already have enough positive cash flow (not positive revenues.. more money in than money out) to finance that debt. <p>But even if you have positive cashflow, it generally makes sense for young companies to reinvest those earnings instead of taking debt investment. <p>If your business fails, then you still need to pay off the loan. So that's what you get for not giving up your equity. 
",1175901223
9760,comment,9652,9652,0,0,epall,,,"If your company goes south for any of a million reasons, who gets stuck with the bill? If you've sold equity, you've spread out the risk according to who's willing to take it. It's likely the founders opted to risk time more than money, so they're not out anything huge. If you get a loan, somebody's gotta pay it back at the end of the day.",1175901217
9759,story,,,1,1,Harj,"The 10 Real Reasons Why Geeks Make Better Lovers",http://www.wired.com/culture/lifestyle/commentary/sexdrive/2007/04/sexdrive_0406,,1175900985
9758,story,,,2,5,vikram,"SICP lectures - For people who want to learn lisp",http://www.swiss.ai.mit.edu/classes/6.001/abelson-sussman-lectures/,,1175900931
9757,comment,9711,9711,0,0,dawie,,,"Build a Time machine",1175900791
9756,story,,,1,0,dawie,"Google Voice Local Search ",http://labs.google.com/goog411/,,1175900420
