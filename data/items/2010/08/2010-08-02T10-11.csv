ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
1567342,comment,1566278,1567169,0,0,CamperBob,,,"Speaking as a very experienced average Joe, all I need to see is a use case that shows how learning all of the weirdness discussed in the other comments in this thread will help me do my job.<p>I can't remember the last time I had trouble getting something done in C because it didn't support Kleisli arrows, or whatever.",1280746734
1567341,comment,1567330,1567330,0,0,JohnMcDowall,,,"I've done this before when testing out micro business ideas, and if they take off then I get a more professional hosting setup.<p>Like you I build a fast box myself from parts and made sure I had a good broadband provider with consistent upstream speeds.<p>If you're idea's successful, you'll soon know about it.",1280746730
1567339,comment,1566850,1566850,0,0,foxtrot,,,"my only regret is not having the guts to take the plunge and really dive into an idea and see it through from conception to reality. The internet taunts me everyday with news of successful startups and even ones that failed, I failed to even achieve this.",1280746657
1567338,story,,,1,0,tclayson,"JQuery fading background slideshow",http://tclayson.com/blog/2010/08/01/jquery-fading-background-put-content-or-transparent-pictures-infront/,,1280746649
1567337,comment,1567330,1567330,0,0,nudge,,,"It's fine until your garage burns down / floods, or someone digs through your street's connection.<p>Those things are unlikely, but even with a backup you're going to have pretty horrendous amounts of downtime. You could lessen the impact by having some off-site secondary system ready to go at any moment, but then at that point you might as well be renting a server.",1280746639
1567336,comment,1565884,1565953,0,0,davidw,,,"It does convert string literals to regexps, which is kind of disappointing.  I once did some benchmarking with Tcl, and there, glob patterns were significantly faster than regexps, let along string literals.",1280746639
1567335,comment,1566975,1566975,0,0,j5eb6ach,,,"Having Basecamp walk the plank in the 'trailer' is engaging. But isn't Google Apps the real competition?",1280746544
1567334,comment,1566546,1567324,0,0,mootothemax,,,"<i>If PHP had the ability to be changed by PHP programmers, then the massive community would have cleanly fixed all the problems already.</i><p>PHP's greatest strength is also its greatest weakness: it's very easy to pick up and start running code. Have you read the huge number of broken tutorials that tell newbie users how cool, for example, variable variables are? Can you imagine the new levels of abuse such a system would introduce? ;)",1280746509
1567332,story,,,1,0,bluesmoon,"Browsers are exciting again",http://www.computerworlduk.com/community/blogs/index.cfm?blogid=14&entryid=3106,,1280746257
1567331,comment,1566278,1567295,0,0,lelele,,,"You made a point. I've been rumbling on this lately, and I'm sharing my current conclusion here to hear HNers' opinions.<p>Let's consider Common Lisp. Newcomers and outsiders complain that CL doesn't catch up because there aren't free CL environments around with a thoughtless setup (I've been in this camp too). However, if you read comp.lang.lisp, it jumps into your eyes that many lispers are accomplished and sharp programmers. Still, they haven't fixed such ""issues"" once and for all. So, what's the real deal? I think that here lies an explanation: such issues are not such an issue to experienced programmers. That is, if you can't setup a CL system, you simply are not skilled enough as a programmer. Get over it. I think the same applies to other systems like Haskell, GNU/Linux, Emacs and so on.<p>What do you think? Thanks.<p>EDIT: Of course, there are other causes to consider... for instance, since most CL developers work on *nix, there is less work done on Windows. I think that installing a CL environment kind of fires the Law of Leaky Abstractions: you'll have to deal with some nitty-gritty details...",1280746201
1567330,story,,,23,88,iamelgringo,"Ask HN: Anyone hosting their site on servers in their garage?",,"Why more startups aren't doing this?<p>I'm all done with slow disk on cloud hosts.  I have no budget to pay for a colo or a dedicated host.  I'm planning on building a server with commodity components and an Intel SSD.  I figure I can build a server with a quad core AMD chip, an Intel SSD and extra memory and Disks I have lying around for about $500.<p>A Comcast Business Broadband package gets me 22 Mbps/5 Mbps for $100 a month. Double that for 50Mbps/10Mbps.<p>I don't need 5 nines of reliability.  I'm willing to deal with a couple of hours of down time in an emergency while we're getting off the ground.<p>Why aren't more startups doing this?  I understand that you might want to buy decent ""enterprise"" hardware at some point if your site takes off.  But, hardware is dirt cheap compared to the crap offerings you get on cloud hosts.  Am I missing something?",1280746127
1567329,comment,1564897,1565590,0,0,sl_,,,"Exactly :)",1280746012
1567328,story,,,1,0,jpbutler,"A/B Testing: Can you iterate your way to great products?",http://www.joshhannah.com/?p=80,,1280745950
1567327,comment,1566546,1566546,0,0,davidw,,,"Rasmus is a former colleague at Linuxcare, and as far as I'm concerned, is a really cool guy, and very worth talking with.  His story is pretty interesting, too.  That said, I've encountered too much ugly PHP code to really want much to do with the language these days.",1280745891
1567326,story,,,1,0,lmacvittie,"The Domino Effect",http://devcentral.f5.com/weblogs/macvittie/archive/2010/08/02/the-domino-effect.aspx,,1280745842
1567325,comment,1566850,1566850,0,0,jacquesm,,,"My regrets are mostly rooted in trusting the wrong people (against my gut feeling too!) and not speaking my mind when I should have. I've written about it and I hope that by doing so I can save other people some of the hardship and the frustrations that go with that.<p>I got out with my hide in tact but it damaged my relationships with a lot of people that I care about beyond recovery and it changed my personality in a measurable way.<p>The difference between success (selling out to the tune of > $10M) and 'failure' (keeping the company alive for the next decade) was a couple of weeks in timing. Too bad, but it didn't really change my outlook on life, as they say, it's only a done deal when the money is in the bank.<p>My partners in the business didn't survive that blow, so I ended up going the rest of the distance as the sole shareholder with those employees that stayed on.<p>If I had to do it all over again I would be <i>much</i> more careful who I'd bring on board and I would keep a much better eye on things. I doubt I have the energy for yet another run though, these days I'm happy enough helping newcomers to gain a foothold and to speak my mind without any regard for the consequences. Life as a starter-upper is like living in a very large fishbowl filled with sharks, and you, the lonely goldfish in the middle. If that's not your view and you're a start-up 'CEO' congratulations, you either have the right people around you or you haven't had any real adversity aimed at you (yet, and hopefully it will stay that way).",1280745816
1567324,comment,1566546,1567139,0,0,jrockway,,,"No, this is not right.  The problem with PHP is that you can't use PHP to fix PHP.  If you encounter a problem, there is no way to write a library to fix it.<p>Perl, on the other hand, was designed with ""academic"" abstraction mechanisms that can be hooked to change the language.  For years, this was a problem -- Perl 5's object system was more like an object system object system.  Everyone built their own object system for every application, and then used that.  This made a mess, and annoyed everyone, because everyone was doing OO in their own slightly-wrong way.  Yuck.<p>Then someone decided, ""hey, let's use this object system object system to write a real object system!"", and Moose was born.  Now most new Perl 5 apps all use the same object system, and everything works much better.  OO modules compose.  Objects can be shared.  It's possible to write object databases that actually work.  (Just look at the MooseX:: namespace on search.cpan.  All of these modules fundamentally change how ""object oriented programming"" works for a particular class or group of classes, but they all compose together cleanly and don't have effect outside of a limited scope.  Beautiful!  And it makes writing reusable code easy!)<p>No changes to Perl were ever needed for this, and yet the object system is probably the most flexible and feature-rich of any major programming language.<p>If PHP had the ability to be changed by PHP programmers, then the massive community would have cleanly fixed all the problems already.  The Perl community did it.  The Ruby community did it.  Even the Java community sort of did it.  But since the attitude is that PHP is just a hack on a hack, and web apps should just be hacks, PHP remains a hack on a hack that's too difficult to use for complex projects.",1280745715
1567322,comment,1566422,1567145,0,0,ollysb,,,"The sequence where he sees his children seems decidedly like an alternative ending to the sequence we've been seeing the whole way through the film. This already made me suspicious, the spinning top then seemed confirmation that you are not looking at reality.",1280745643
1567321,story,,,4,4,bluesmoon,"Space colonization is implicitly incompatible with libertarian ideology",http://www.antipope.org/charlie/blog-static/2010/08/space-cadets.html,,1280745615
1567320,story,,,4,0,jgrahamc,"Eating your own dogfood in the 1960s",http://blog.jgc.org/2010/07/eating-your-own-dog-food-in-1960s.html,,1280745608
1567319,story,,,1,0,JohnMcDowall,"Developer Practice Desktops",http://www.mcdowall.info/john/blog/index.php/2010/07/30/branch/,"A desktop image to remind a developer to create a new branch for work rather than working in the same branch by accident.",1280745415
1567318,comment,1565488,1565488,0,0,ck2,,,"The bill is regulation theater. Two key points from the article:<p><pre><code>   Fannie Mae and Freddie Mac are completely ignored. 
   Still tax-payer owned and funded, they continue to be 
   huge time-bombs on the government’s balance-sheet.

   The bill does nothing to make banks hold more capital.</code></pre>",1280745387
1567317,comment,1564559,1567100,0,0,scorpioxy,,,"Exactly.<p>Also, you wouldn't want to turn a scope document into one containing mathematical equations and Heisenberg's uncertainty principle.<p>If there is no trust, no amount of documentation will help you. So unless you're Google suing Apple, clients that don't respect or appreciate your work are better addressed as ex-clients.",1280745334
1567316,comment,1564200,1566525,0,0,chris_l,,,"Wow, quite a difference. I paid $13 for shipping, a total of $22 for issue number 1 to come to Germany. Do you receive diplomatic mail or something?",1280745321
1567315,comment,1566282,1566629,0,0,AndrewDucker,,,"I was watching the show for the characters.  The setting of the ad agency isn't entirely incidental, but it's largely there for backdrop.",1280745302
1567313,comment,1566857,1567003,0,0,davidw,,,"It's nice to hear you say that because that's my own approach to things - you get an idea that you must act on.<p>I just wish I'd get one that would make me lots of money:-)",1280745225
1567312,comment,1566278,1566278,0,0,nephesh,,,"As someone who has been learning Haskell recently I think I can bring up a point that no one else has.  Record syntax in Haskell sucks.  Most business programming revolves around a form of DDD, where each of your business entities are fairly well defined.  Creating records that match these business entities is fairly simple, working with them is not.  None of the web frameworks I've seen follow a model based approach where you bind directly to your form representation of a model.  I've been trying to figure out a way to do this in Haskell, but it looks like I have to learn Template Haskell and Generics on top of the already steep learning curve of Haskell, for something that would be simple in almost any other language.  So far I haven't given up, but I don't see mainstream programmers getting into Haskell until they can describe their processes in a model focused fashion (and no, I don't mean with OOP).",1280745009
1567311,comment,1566278,1567297,0,0,tkahn6,,,"Ah duh. That makes sense.<p>Would it also make sense to use Maybe monad for converting a [Char] to an Integer?<p>stringToInt :: [Char] -> Maybe Integer",1280744961
1567310,story,,,18,2,bluesmoon,"Chinese entrepreneurs in Africa, land of a billion customers",http://www.danwei.org/china_and_africa/independent_chinese_entreprene.php,,1280744936
1567309,comment,1566278,1566683,0,0,arethuza,,,"Not sure about that - I seem to remember reading some stuff from the mid/late seventies that was pretty skeptical about the whole idea of using a comparatively high level language for OS development.<p>Similarly, I don't think C++ was ever obscure in that it was widely publicized as the ""next"" C and people were pretty keen to use it - it was more that the early tools for C++ failed to live up to the initial promise.",1280744814
1567308,comment,1566278,1567020,0,0,rwmj,,,"I think ""knowing C++"" just involves rote-learning of lots of stupid rules.  Whereas Haskell is really quite different.<p>Don't forget that F# was ""inspired"" by OCaml ...",1280744768
1567307,comment,1566476,1567075,0,0,sometimes,,,"> It's hard for me to get the impression that his actions are anything but calculated.<p>but calculated to what end? are his motivations as crude as simply wanting to draw the world's attention towards him?",1280744602
1567305,comment,1565184,1565559,0,0,i386,,,"The content and pricing looks great but their iPad app leaves quite a lot to be desired - you can't read long titles, no subcategories and there is no grouping of individual magazines.",1280744436
1567304,comment,1566278,1567234,0,0,jrockway,,,"This is a software-engineering-in-general problem, though, not a Haskell problem.  If you have a bunch of components that can only communicate in a very specific way, then all the components have to communicate in that very specific way.  This limits flexibility and ""working with the system"" becomes the main engineering problem.  I think this is why most software dev teams explode to needing 10 teams of managers to manage a million developers -- because so many ""irreversible"" decisions were made that the application becomes workarounds on top of workarounds.  Haskell is not going to magically eliminate bad planning and the fear of refactoring.  And similarly, it's not going to make it easy to keep adding shit on top of the shit pile, like Scala or Clojure would.  (Not to dis on Scala or Clojure specifically.  I've actually never seen anyone do this; they just add more Java 1.4.2 on top of their existing Java 1.4.2-only mess.  It would be me that added the Scala or Clojure :)<p>I actually have a problem like this right now; I'm starting re-development on an application whose components talk via CORBA over an ultra-expensive and ultra-overengineered proprietary message bus.  My plan is to write a bridge between the proprietary message bus and JSON-RPC (or something like that) in Scala, and make the rewritten components only talk JSON-RPC.  Then, when everything is rewritten, there is no more super-expensive-message-bus requirements, and we shut it off.  Now we have the ability to write components in any language.<p>(Also, the reason this doesn't count as adding shit on top of shit is because eventually the ugly bridge will go away.  That only exists to make the rewrite into a refactor.  You have to have a scaffolding, or all the shit will collapse on top of you and make a big mess. :)<p>Now I know the reply is going to be, ""well, not everyone can just replace their proprietary crap with something simpler and more generic"", but again, that's not a Haskell problem.",1280744376
1567303,comment,1566199,1567055,0,0,rmoriz,,,"not working for me either.",1280744315
1567302,comment,1566278,1567227,0,0,Flow,,,"I understand that lazyness could make it only sort as much as needed to get the first element in the sorted list.<p>Yes, it's triggers my Rainman instincts to point out that
1. It should be max = last . sort
2. Or min = head . sort
3. You are making assumptions on the sorting algorithm to make it possible to short-cut the evaluation.<p>K-MART! K-MART! :)<p>Edit: How nice of you to downvote...",1280744264
1567301,comment,1566278,1567236,0,0,codexon,,,"<i>The only thing I ever saw Don Stewart ""bombing"" were factual evidence.</i><p>This is not surprising coming from someone involved with Haskell. Do I really need to point to you the bug ticket that it was only 8 months ago that you could use something other than GMP? <a href=""http://hackage.haskell.org/trac/ghc/ticket/601"" rel=""nofollow"">http://hackage.haskell.org/trac/ghc/ticket/601</a><p>Even with the option to dynamically link, it still doesn't change the fact that it was the __default__. And what a scary default that was. Company lawyers don't like to touch anything related to GPL with a 10-foot pole, for the reason that it is really up to the jury to decide what is a ""derivative work"" even if you only link dynamically! Maybe if you live in France, or have a 5 person company, this is an acceptable state.<p>Anyway I am done, you and Dons win, are you happy? I simply have no ulterior motive or incentive to defend my findings against organized groups who have their livelihoods and PhDs based on Haskell.",1280743970
1567300,comment,1566228,1566802,0,0,sirn,,,"I am pretty sure installing unsigned MobileConfig was disabled in 3.1.2. Maybe you already installed carrier update that has tethering enabled?",1280743967
1567299,comment,1566916,1567151,0,0,danieldk,,,"Debian/Solaris is where things should be heading IMO. It gives the package management and up-to-date userland of Debian, while bringing most of Solaris' assets.<p>And it seems that Nexenta developers would like to make Debian/Solaris a reality:<p><a href=""http://lists.debian.org/debian-derivatives/2010/06/msg00022.html"" rel=""nofollow"">http://lists.debian.org/debian-derivatives/2010/06/msg00022....</a><p>Very promising!",1280743939
1567297,comment,1566278,1567258,0,0,naradaellis,,,"Oh yeah sure all the time, Maybe shows up a lot. It becomes more useful and less of a pain once you realise you can deal with it using monad operators. From the standard library a list operator and a map operator:<p><pre><code>  elemIndex :: a -> [a] -> Maybe Int
  lookup :: k -> Map k a -> Maybe a
</code></pre>
Say we have a map of lists of string, for some reason. We need to find the index of the element ""foobar"" in a particular key, so you could write:<p><pre><code>  lookup key map >>= elemIndex ""foobar""
</code></pre>
(a simple example for the sake of brevity)<p>Not very impressive, but monads aren't anything groundbreaking after all, they're just utilities that make our lives easier. There are more complicated operations that come in handy later, but they are quite straightforward once you get a grasp of the container metaphor.",1280743911
1567296,comment,1566422,1566712,0,0,samstokes,,,"+1 but doesn't reflect my experience.<p>> when we dream there is a loss of agency, that dreams simply unfold before us<p>I never feel that way while dreaming, even though when I wake I realise I was basically on rails the whole time.  The closest I've experienced to this is that sometimes in my dreams I am simultaneously reading a book and <i>a character in the book</i> - as the former I am a passive observer, as the latter I (feel as if I) have agency.<p>> unless you're a lucid dreamer<p><i>Inception</i> is explicitly inspired by lucid dreaming (the concept of the totem is very similar to a trick people use to train themselves to dream lucidly).  However, even though I've only once or twice had a lucid dream, I found a lot about the film reminded me of dreaming in general.",1280743890
1567295,comment,1566278,1567169,0,0,zv,,,"I'll have to correct you a bit. Judging by the article, Haskell currently isn't usable for work. So why should average Joe choose half-finished product? So why even the brightest hacker choose it when he already has all the tools he need?",1280743882
1567294,comment,1565674,1567089,0,0,daredevildave,,,"Is there a solution like schemas for MySQL?",1280743851
1567293,comment,1566546,1566546,0,0,c00p3r,,,"<i>Creator of PHP talks about security</i> it is already funny.. ^_^",1280743746
1567292,comment,1567110,1567110,0,0,Myrth,,,"Are there any ethical regulations for this kind of stuff?<p>I'm not talking about sci-fi books..",1280743712
1567291,comment,1564185,1564185,0,0,whimsy,,,"Bartab ( <a href=""https://addons.mozilla.org/en-US/firefox/addon/67651/"" rel=""nofollow"">https://addons.mozilla.org/en-US/firefox/addon/67651/</a> ) is a good stopgap solution.",1280743691
1567290,comment,1566916,1566916,0,0,c00p3r,,,"Why not FreeBSD? Just to run Oracle? But it is much easier to run it on Linux nowadays.<p>btw, who will write and debug all the new device drivers?",1280743588
1567289,story,,,43,9,wglb," The Great Game",http://www.tbray.org/ongoing/When/201x/2010/07/30/Mobile-Market-Share,,1280743564
1567287,comment,1566040,1566040,0,0,thomasfl,,,"A stressed out driver stuck in a traffic jam on the highway would probably in many cases be many times safer with automatic car control than driving manually.<p>It can be extremely stressful when you're stuck in a traffic jam and have to pick a kid in kindergarten.",1280743521
1567286,comment,1561301,1561301,0,0,plusone,,,"Liquid Accounts - its done online, simple to use, and cheap aswell. its customizable, so it gives you the option to add and remove modules that you dont need. Free support as well.<p>www.liquidaccounts.net",1280743507
1567285,comment,1566278,1567266,0,0,ithkuil,,,"I found this article referencing the O(n) complexity for the 'head . sort'<p><a href=""http://apfelmus.nfshost.com/articles/quicksearch.html"" rel=""nofollow"">http://apfelmus.nfshost.com/articles/quicksearch.html</a><p>As far as I can understand from the blog and and the cited mailing lists, it works but it requires 
a carefully coded sorting method, otherwise O(n log n) as expected.",1280743486
1567284,comment,1566199,1566981,0,0,ryanpetrich,,,"Two vulnerabilities: one to run code as Safari and another to get kernel access. comex is on a roll!",1280743461
1567283,comment,1566857,1566857,0,0,Aegean,,,"An open source OS for UAVs? If he can do it just like that by throwing in some money I would be surprised. I think his venture is something else.",1280743431
1567282,comment,1567101,1567101,0,0,dazzawazza,,,"flagged: inappropriate.",1280743428
1567281,comment,1566422,1566603,0,0,samstokes,,,"+1.  I think I did look beyond just the plot (after all, I suggested none of the plot actually happened), but agreed, it adds an extra dimension to consider the message of the film as well as the themes it explores.",1280743399
1567280,comment,1566278,1566652,0,0,smcl,,,"Was C really obscure before Linus Torvalds released\popularised linux? I'm fairly young so I have no knowledge of this, but it feels wrong.<p>edit: just noticed a discussion about this exists already. That'll teach me to read all the comments in future :)",1280743337
1567279,comment,1566857,1567000,0,0,wyclif,,,"del.icio.us was very inspirational to me. It was the lean startup before there were lean startups, when everyone was still swirling around in Aeron chairs: <a href=""http://www.petefreitag.com/images/blog/delicious_office.jpg"" rel=""nofollow"">http://www.petefreitag.com/images/blog/delicious_office.jpg</a>",1280743291
1567278,comment,1566278,1567202,0,0,jrockway,,,"The Maybe and List monads have nothing to do with state, and are very
common in programs.<p>Let's use the List monad to determine someone's roommates.<p><pre><code>    > import Control.Applicative
    > import Data.List
</code></pre>
First, the data:<p><pre><code>    > type Person = String
    > type Address = String

    > addresses :: [(Person, Address)]
    > addresses = [(""jrockway"", ""123 Fake St.""), (""jrockway's cat"", ""123 Fake St."")]

    > people :: [(Address, Person)]
    > people = uncurry (flip (,)) <$> addresses
</code></pre>
And some helper functions around this data, a function to return all
addresses for a person, and a function to return all people that live
at a certain address:<p><pre><code>    > assocFilter :: Eq a => a -> [(a,b)] -> [b]
    > assocFilter p xs = snd <$> filter ((==p) . fst) xs

    > addressesForPerson person = assocFilter person addresses
    > peopleAtAddress address = assocFilter address people
</code></pre>
To find a person's roommate, we have to chain two computations.
First, we have to find zero or more places where a person lives.  Then
we need to find who else lives at each of those addresses.  With the
List monad, this is not much code!<p><pre><code>    > roommatesFor :: Person -> [Person]
    > roommatesFor person = do
    >     address <- addressesForPerson person
    >     peopleAtAddress address
</code></pre>
The monadic combinator >>= (which is hidden by do) does all the looping for us, so we don't have to explicitly write it out.<p>BTW, you can just cut-n-paste this into a .lhs file and run it, if you want to try it out.",1280743269
1567277,comment,1566278,1566278,0,0,zv,,,"Well I've read comments so far and I did not see anyone mentioning this.<p>I program both on desktop and on web.<p>On desktop I program C# which is mediocre and recently I have started using C++ with Qt. Qt has huge advantages over C# (QtCreator is IDE that is going to be better in time than Visual Studio, currently it lacks few features, but still I find it usable). On both languages I have my set of libraries which you can't find everywhere else and make my life easier.<p>On web I use php and sometimes I use Rails. Each has advantages, I use php cause I've used it since php3 so a lot of historical baggage. On each I have my set of code and libraries I use the most.<p>So lately there's a whole new languages and frameworks coming out. Why should I spend my time porting my libraries to Haskell? Do I get significant advantage coding in it? No, because I use mostly my own libraries.",1280743268
1567274,comment,1564559,1565135,0,0,kthxbye,,,"I agree that this is a very good way of doing things. And when you are a freelancer you should manage your clients and take care of things like this.<p>What bothers me though is when this happens (and at least for me it always does) in a corporate environment, where this is clearly managing and therefor the job of the manager.<p>I don't mind helping with management as well as doing the actual coding, but then I'd like this added responsibility to be acknowledged so that time can be allocated for this, and that my salary can be adjusted to be closer that of a manager.<p>Unfortunately at many workplaces I've seen management are mostly playing politics amongst themselves, and then occasionally bully developers into taking over full management responsibility when some developing is to be done.",1280743204
