ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
33292,story,,,9,9,kkim,"The Virtues of a Second Screen",http://www.nytimes.com/2006/04/20/technology/20basics.html?ei=5090&en=6fc17b9bf54ea2ef&ex=1303185600&adxnnl=1&partner=rssuserland&emc=rss&adxnnlx=1145557985-oz7cOx7rKEkI//IXM/IYdA,,1184003916
33291,comment,31132,31196,0,0,gustaf,,,"thanks a lot! <p>Iphone is an awesome device - for sure. a lot of our american users are already using it. but the iphone is released in a country where people have computer access almost everywhere. compare that to South Africa which has 5 times as many mobile internet users as computer internet users. the landscape is very different<p>Gustaf, heysan\n",1184003840
33290,comment,33177,33177,0,0,weel,,,"The points made are mostly quite sensible, which is why it's funny that the site itself looks a little jumpy...",1184003753
33289,comment,33246,33283,0,0,pg,,,"Sounds like a case for macros.",1184003740
33287,story,,,3,1,edgeztv,"Boston Startup Housing",,"I think the co-working office space loft in Central Sq is a great idea (<a href=""http://coworking.pbwiki.com/CoworkingBoston"" rel=""nofollow"">http://coworking.pbwiki.com/CoworkingBoston</a>), but many of us cannot afford to pay for both housing and office space.<p>I wanted to see if any startup founders would be interested in renting a house or large apartment together, for both living and working out of that space.  I'm posting this here because I'd like to have other entrepreneurial techies as roommates.<p>The ideal place would be located in the vicinity of Cambridge/Somerville or Allston/Brighton and cost not much over $500 per room monthly, with lease starting Sept 1 (or even better if no lease).<p>We are two guys, ages 25 & 28, working on a web startup.  Anyone have space to offer or want to join us in this search?",1184002991
33286,comment,33246,33283,0,0,abstractbill,,,"The replacements were for performance reasons, and it took a few hours to do.  Sounds like it might been more productive to replace only the occurrences the profiler told you were causing problems...",1184002906
33285,story,,,11,3,brett,"Reinventing HOTorNOT, Part II",http://james.hotornot.com/2007/07/reinventing-hotornot-part-ii.html,,1184002642
33284,story,,,6,0,dawie,"SlapVid featured in Boston Globe",http://www.foundersatwork.com/1/post/2007/07/slapvid-featured-in-today.html,,1184002239
33283,comment,33246,33246,0,0,mynameishere,,,"for (i = 0; i < N; i++)<p>Odd example to use. It's always annoying to re-type the same thing over and over. But I recently went through a mountain of my Java code and replaced:<p>for (Object obj : list)<p>with<p>int size=list.size();\nfor (int index=0;index<size;index++)<p>I'm definitely very long suffering! It took a few hours but what you get with abstractions is a loss of control over implementation. When you use the tighter loop, the compiler turns everything (roughly) into this:<p>Iterator it=list.iterator(); //Which calls new ListItr();\nfor (it.hasNext())\n{\nObject next=it.next();<p>The abstraction has to do that because it doesn't know whether the list (really, the java.util.Collection) is a LinkedList or an ArrayList or a Set. If your loop itself is in a tight loop, it isn't hard to call it millions and millions of times during program execution--which makes millions and millions of unnecessary allocations and method calls. There is a loss of performance which, at the end of the day, is more important than how much you enjoy your job. <p>Of course, other languages would allow you to specify an implementation for a given abstraction.",1184002014
33282,story,,,3,2,transburgh,"When To Dump That Great Idea",http://www.forbes.com/2007/07/06/apple-amazon-myspace-ent-manage-cx_ws_0709dump.html?partner=yahootix,,1184000432
33281,comment,33246,33266,0,0,brlewis,,,"Having a language that is massively popular is one factor in making it easier to find someone to take over code, but I think many managers have an unrealistic estimate of how much it helps.  In some ways it actually hinders, by putting more noise into the hiring process.<p>In my day job, the ultimate argument was hiring a new graduate who was writing good production code in the LFSP on his second day.  An LFSP lets you create a language that fits the problem domain nicely.  This works both in normal companies and in startups.<p>If you're saying that startups can prove the value of an LFSP by being successful with it, I agree.  If you're saying that doing a project as a startup eliminates the risk of having code that is hard for someone else to maintain, then I disagree.  There are plenty of reasons why a startup might need to find someone capable of working within their codebase.",1184000423
