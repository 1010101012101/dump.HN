ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
112513,comment,112503,112509,0,0,aston,,,"Cal Newport's not a bad guy either.",1202525945
112512,comment,112296,112296,0,0,fendale,,,"The fact that Textmate doesn't run on Windows is exactly why I stayed away from it on OS X - I am forced to use a windows machine at work, and am stuck in a terminal a lot of the time, so I decided to learn emacs instead.<p>Once you get over the initial Emacs learning curve its great - then install the emacs code browser, and the rails plugins (if you do rails obviously) for extra productivity.  See [this tutorial](<a href=""http://sodonnell.wordpress.com/the-emacs-newbie-guide-for-rails/"" rel=""nofollow"">http://sodonnell.wordpress.com/the-emacs-newbie-guide-for-ra...</a>) to set it all up.",1202525902
112511,comment,112129,112491,0,0,yters,,,"The back in time ability sounds pretty cool.  I've wondered whether any debuggers implement that idea.  I also like the idea of an extensible grammar (and syntax too, right?)  I think pg should allow arc's syntax to be extended; which I remember him saying he'd do somewhere, but I haven't been able to find the quote since.",1202525769
112510,comment,112342,112342,0,0,kashif,,,"Write some scripts (batch files).",1202525673
112509,comment,112503,112503,0,0,pius,,,"Patrick Winston is one of my favorite people -- really great guy.",1202525591
112508,comment,112129,112292,0,0,yters,,,"On the library side, Yegge says it can call out to C and Perl fairly easily.<p>As long as languages can do that, I don't see what the big deal library support is.  Maybe it's just the extra tedium or something.",1202525549
112507,comment,112342,112342,0,0,fendale,,,"Command line works for me.  I have done some tinkering with TortiseSVN but I am generally not on Windows, so the command line is the most common.",1202525519
112506,comment,112129,112411,0,0,yters,,,"At the top of his follow on article he says it isn't good for server applications, but he'd use it for client side.",1202525446
112505,comment,112129,112415,0,0,yters,,,"If you don't mind online reading, there are a number of manuals at the OCaml website:
<a href=""http://caml.inria.fr/resources/doc/index.en.html"" rel=""nofollow"">http://caml.inria.fr/resources/doc/index.en.html</a>",1202525366
112504,comment,112456,112456,0,0,jawngee,,,"Thanks everyone :)",1202525291
112503,story,,,3,2,mhb,"How to Speak - notes from Patrick Winston lecture",http://calnewport.com/blog/?p=266,,1202525199
112502,comment,112342,112409,0,0,mechanical_fish,,,"Funny, my answer to the original question is ""git-svn"".<p>It has been working great for me. See the guide here:<p><a href=""http://tsunanet.blogspot.com/2007/07/learning-git-svn-in-5min.html"" rel=""nofollow"">http://tsunanet.blogspot.com/2007/07/learning-git-svn-in-5mi...</a>",1202525123
112501,comment,112355,112472,0,0,fendale,,,"Software that doesn't need testing - that doesn't exist I am afraid.<p>The UI is a different ball game (and as browsers evolve it will continuously change), and there are tools out there to solve it in some way or another.  With the Rails tests, at least you have confidence that your backend is correct which is probably 80% of the battle.<p>Also, the value of automated tests in general is to give you confidence that the small change you just made didn't break something else!",1202525041
112499,comment,112220,112220,0,0,msderosa,,,"I see this as just publicity piece for Seattle.  The cities, here and abroad, that advertise themselves as the next Silicon Valley are a dime a dozen.  Theyâ€™re looking to create buzz and interest among possible investors.  The primary information for investors here -- those people, who want to make Seattle the next Silicon Valley, lack imagination.",1202524944
112498,comment,112355,112472,0,0,pius,,,"<i>losers like this are why I quit using rails.</i><p>Yeah, this blog post was definitely inflammatory . . .<p><i>well, that and the whole ungodly slowness thing.</i><p>That's pure FUD -- it's nowhere near as slow as you imply.<p><i>rails doesn't provide any facility for testing the stuff that is actually hard to test - the frontend javascript/flash/ui layer.</i><p>That's not true.  Every popular testing library for Rails (stock or third-party) has view testing.  I noticed you threw in Flash.  Do you really expect your web application framework to test your Flash files?  What would that look like?<p><i>it makes it easy to test stuff that shouldn't need testing.</i><p>Your domain modeling, controllers, and all-around application logic shouldn't need testing?",1202524919
112497,comment,112215,112359,0,0,ashu,,,"Web-based software also allows you to constantly update your software without even making the user aware that the software is getting updated. To my mind, that is one of the biggest advantages of web-based software and one of the reasons why it will ultimately kill most forms of ""desktop"" software.",1202524797
112495,comment,112215,112280,0,0,jksmith,,,"You're not seeing the potential of the web anymore than the original writer does. The web provides utility computing, the box on your desk does not. As soon as we lose this horse/buggy mindset and start noodling on the issues of 1) proof of correctness in code, 2) fault mitigation or absorption, and 3) true concurrency (grab a unit of computing power wherever it is), utility computing will absolutely render the desktop obsolete for any computing problem -- yep any computing problem. Right now, that Google facility in The Dalles can compute anything faster than what you can do on your desktop for less money. The fastest video card you can buy for your Dell will do one TFlop -- SETI@Home claims to be averaging 408 TFlops from a volunteer project. This is the law of economics kicking in, where money spent and efficiency desired cross, and it will kill the traditional desktop.",1202524685
112494,comment,112296,112296,0,0,kmt,,,"Real programmers use... <a href=""http://xkcd.com/378/"" rel=""nofollow"">http://xkcd.com/378/</a>",1202524592
112493,comment,112456,112456,0,0,raju,,,"Wow! Great site. Kudos to you guys...",1202524518
112492,story,,,9,2,toffer,"Sniff browser history for improved user experience",http://www.niallkennedy.com/blog/2008/02/browser-history-sniff.html,,1202524177
112491,comment,112129,112129,0,0,mfp,,,"I've written between 50 and 100KLoCs of OCaml code over the last year (before that, I did mostly C and Ruby, which I've been using since 2002; touched many other languages but never did anything significant, over 5-10,000 lines with them). If I had to describe the language in two words, I'd say that it's practical and loyal.<p>It's a loyal language because it doesn't bite you in the ass when you don't expect it. It's practical because there's a decent number of (high-quality, in general) libraries available, there are several concessions to serviceability in the language (mainly the ability to combine imperative and functional styles) and the implementation is solid and stable.<p>I haven't experienced the problems with the type system I've seen some people complain about. On the contrary, I've found it to be immensely helpful both when exploring new ground and when refactoring code. Deliberately breaking the code by changing a type or a function and letting the compiler guide you is a joy. In addition to other well-known benefits (Caml riders often feel that ""it works as soon as it types"" for a reason...) I won't repeat here, the type system (in particular the module system) sometimes makes me realize that I'm following the wrong track (I've learned to love functors after the early troubles).<p>Another thing I appreciate very much is the excellent performance and its predictability (other people might not care about this). The compiler doesn't (nor needs to) do deep magic the way GHC does to yield good results, so you can easily predict the performance (speed & memory usage) of your code --- and improve it when needed. Joel Raymond tells how this feels perfectly: ""I would describe working with OCaml to guiding a scalpel: you move it and things happen. Right now, right here, in real-time. Compilation time is almost unnoticeable, the tool is powerful but reasonably simple. I have no problem expressing the most complex things and moving the project forward at a fast clip. I'm enjoying myself tremendously at the same time!"" (Joel has switched to Erlang^H ^H^Hfactor^H^H^H K since he wrote that, though).<p>Expanding a bit on the Objective Caml toolset, I haven't really used ocamldebug (even though it knows some fine tricks like allowing you to go back in time...), but I often use the profiler and I've come to love camlp4, a tool that allows you to extend OCaml's grammar (I'll just say that it's very powerful, this post is already getting too long). I use the REPL mainly to explore libraries (just do ""include Themodule"" to see all its types & functions) or to check the type of a function (the type almost always tells you all you need to know without reading the documentation). I don't find it worse than irb --- but I rarely code inside the REPL anyway.<p>Now for the cons... as much as I like the language, some things could be improved:<p>* the standard library is a bit meager. Several third-party libs to complement/extend it exist, but there's still work left (there's some activity in the works to create a Community Distribution with richer libs).<p>* sometimes you feel some kind of ad-hoc polymorphism would be nice<p>* I've also wished a few times that the compiler were a bit smarter (inlining in higher-order functions, other classical optimizations)<p>* the community is very quiet: the code-to-blogging/discussion ratio is much higher than in other communities. INRIA isn't very talkative regarding its future plans for the language, and the ML has seen moderate activity historically (it's been revitalized as of late after the first OCaml Meeting)",1202524142
112490,story,,,8,0,nickb,"How Vista launches programs - or, a detailed analysis of how precisely not to launch programs",http://slashdot.org/comments.pl?sid=446922&cid=22350458,,1202524058
112489,comment,111956,112483,0,0,tb,,,"Mostly the reason for that is to allow the compiler to optimise the order of evaluation of the conditions. If you could put functions with side-effects in there then it would be impossible to do that since the compiler would have to guarantee some kind of consistent evaluation order.<p>There have been proposals for some way to mark user-defined functions as side-effect free and thus allow them to be used in guards. None has had acceptance from the core Erlang developers yet.<p>In any case this is not usually too much of a problem. The Erlang idiom is to use 'case' instead of 'if' in most cases (no pun intended) and where a calculated value is needed then just assign it to a variable beforehand - not quite as pretty I agree but no big deal.",1202524003
112488,comment,112105,112105,0,0,apgwoz,,,"The article mentions that the fnid could be stored in a cookie. While this is true it definitely would not be desired, as doing so would make it impossible to browse the site with multiple windows,each on different pages.",1202523999
112487,comment,112447,112449,0,0,xirium,,,"Google considered fusion ( <a href=""http://video.google.com/videoplay?docid=1996321846673788606&q=engedu"" rel=""nofollow"">http://video.google.com/videoplay?docid=1996321846673788606&...</a> ).",1202523544
112486,comment,112296,112340,0,0,agotterer,,,"I used textpad for years, recently switched to notepad++ and am very happy.",1202523482
112485,comment,112430,112430,0,0,nreece,,,"The Javascript Compressor ( <a href=""http://javascriptcompressor.com/"" rel=""nofollow"">http://javascriptcompressor.com/</a> ) can compress and obfuscate Javascript code.",1202523454
112484,story,,,4,0,joshwa,"""On the Creation and Maintenance of Hype"" (video)",http://www.viddler.com/explore/rentzsch/videos/4/,,1202523388
112483,comment,111956,112206,0,0,lg,,,"You said it.  I checked out the Erlang tutorial just now, and apparently you can't use user-defined functions in the test-expression of a conditional, to prevent people from putting side-effecty functions in there?  Now maybe there's some good reason  for that, that has to do with the mysteries of handling concurrency or something, but it gives me the prima-facie feeling of java for the fp crowd.",1202523370
112482,comment,112430,112430,0,0,xirium,,,"Don't bother obsfucating. A good programmer could make equivalent functionality without seeing a line of code. As an example, if you're familiar with a spreadsheet application then you can code the core functionality without reference to the original source. Is your script more complicated than a spreadsheet?",1202523215
112481,comment,112245,112437,0,0,Hexstream,,,"I think most people, myself included, already use a same password on multiple sites. Not saying it's particularly security-conscious, just that it's already what a lot of people do.<p>Also, they said you can use multiple openID accounts if you want, so you could still have different password for each site if you so choose.<p>So, I think your point is moot.",1202523207
112480,story,,,2,0,Vincent_,"The new Microsoft Download Website Beta",http://www.mylifeupdate.com/2008/02/09/the-new-microsoft-download-website-beta/,,1202523113
112479,comment,112296,112296,0,0,nreece,,,"Notepad2: <a href=""http://www.flos-freeware.ch/"" rel=""nofollow"">http://www.flos-freeware.ch/</a>",1202522688
112478,comment,111841,111990,0,0,anewaccountname,,,"Since 'cat > foo.py' erases foo.py, you are obviously lying about that error message.",1202522627
112477,comment,112215,112408,0,0,xirium,,,"I can see the benefit of Comet in this case but I don't see the benefit of Flash. Please could you explain.",1202522489
112476,comment,112220,112286,0,0,imsteve,,,"The downside is, if your company is failing then you kill yourself.",1202522474
