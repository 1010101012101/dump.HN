ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
82430,comment,82007,82084,0,0,MuddyMo,,,"The Honeybee strategy sacrifices speed for reliability. Try selling that strategy to a client!",1195649221
82429,comment,81985,82102,0,0,ntoshev,,,"This whole thread smells of lack of understanding of software. Hackers should know how inefficient an SQL server would be to handle Twitter-type tasks, versus specialized code. This is supposed to be hacker's news, not small business news.<p>news.YC is a good example of an efficient architecture. If it was written in Ruby/MySQL, pg would need at least 20 servers to keep up with the current traffic, versus a single box now. And the latency would never be as good as it is now.",1195648953
82428,comment,81594,81717,0,0,aswanson,,,"He's onto something here.  What tools/languages are you using for this.",1195648930
82427,comment,82034,82222,0,0,terpua,,,"I would say Jolie is more of the former and less of the latter.",1195648920
82426,comment,82390,82411,0,0,terpua,,,"Nothing formal yet...waiting to see if there is any interest.",1195647980
82425,comment,81985,81985,0,0,tlrobinson,,,"First of all, I'll say that this (really neat sounding) project doesn't necessarily fall into the following category, the title just reminded me of a pet peeve of mine...<p>I'm always skeptical of the claims of ""do this amazing thing in x lines of code"" where x is some ridiculously small number. For example, the prototypical 10 minute Ruby on Rails blog, or the 1 line of code WebKit-based web browser.<p>The problem with these things is they make great whiz bang demos, but they really don't take any less code, it's just that <i>you</i> don't have to write that code because it's already written for you and hidden behind a layer of abstraction... which is great, as long as it can also be applied to real world problems, not just little toy demos.\n",1195647032
