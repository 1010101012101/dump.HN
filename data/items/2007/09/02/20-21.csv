ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
49520,comment,49444,49444,0,0,palish,,,"You might want to ask yourself, ""Why am I choosing to not use an RDBMS?""<p>If the answer is ""because I know it will save time"" or ""because I'd like to explore the possibility"", more power to you.  I wholeheartedly encourage it.<p>If the answer is anything else then you should just use one, because that path will save you time (possibly a lot of time).<p>Check out Rails.  The ORM is so well done that it feels like you aren't using a database at all.",1188766756
49519,comment,49233,49279,0,0,cellis,,,"Ok, and what is Fuzzwich? SocialMoth, etc. These aren't just means of communication; they're actually fun. A form of gaming, if you will.",1188766549
49518,comment,49233,49316,0,0,cellis,,,"Yeah, I've already had two jr. developer jobs and I hated (and quit) them both. They were cubicle jobs. I only listed the actual ventures I tried, not the jobs.",1188766232
49517,comment,49514,49514,0,0,cellis,,,"cameronellis.ellis at gmail dot com",1188766054
49516,comment,49331,49331,0,0,forgotmylastone,,,"Yes, but only in the following way:  sorted by highest score,  -2 funny modifier, and with a plugin to allow thread collapsing.",1188765865
49515,comment,49313,49417,0,0,davidw,,,"I think it's also accurate regarding many <i>un</i>successful startups, and therein lies the problem...",1188765659
49513,comment,49440,49440,0,0,nirs,,,"MoinMoin is extensible and modular system. You can replace almost any part of the system by installing a plugin. It is the best system for a typical wiki hosted on your server, if you like to extend and customize the system, and you happen to like Python.<p>A wiki page can use any markup supported by the system parsers. MoinMoin comes with its own markup, rst, plain text and docbook parsers. Parsers for other markups created by the community are in <a href=""http://moinmoin.wikiwikiweb.de/ParserMarket"" rel=""nofollow"">http://moinmoin.wikiwikiweb.de/ParserMarket</a>. You add your own parser that know how to parse the text and how to drive the formatter, which create the html. Parsers are also used for syntax highlighting. Moin comes with cplusplus, CSV, irc, java, pascal and python. <p>Formatter can create any output you like - the default create html, and the system provides other formatters for xml, docbook and plain text. You can add your own formatter if needed. Any page can be formatted in any exiting format, for example <a href=""http://moinmoin.wikiwikiweb.de/?action=format&mimetype=text"" rel=""nofollow"">http://moinmoin.wikiwikiweb.de/?action=format&mimetype=t...</a>.<p>To create custom applications, you usually add both action and macro plugins. Macro is a plugin that execute when a page is rendered and return output. Action is a plugin that handle request to urls like /wiki/pagename?action=foo. Most of MoinMoin UI is implemented in terms of actions and marcos, so for example, if you want to have a different RecentChanges - you can simply install a modified RecentChanges macro in your wiki. You can find lot of actions and macros in <a href=""http://moinmoin.wikiwikiweb.de/ActionMarket"" rel=""nofollow"">http://moinmoin.wikiwikiweb.de/ActionMarket</a> and <a href=""http://moinmoin.wikiwikiweb.de/MacroMarket"" rel=""nofollow"">http://moinmoin.wikiwikiweb.de/MacroMarket</a>.<p>Formatted pages are compiled to Python bytecode, and literally executed when a page is visited. Static macros run when a page is compiled, and their output is compiled into the page. Dynamic macro are executed during page runtime, and are used to provide user, time or namespace dependent data.<p>MoinMoin let you have acl for entire wiki, evaluated before and after page acl. You can have a default acl applied to pages without acl, or page specific acl. See <a href=""http://moinmoin.wikiwikiweb.de/HelpOnAccessControlLists"" rel=""nofollow"">http://moinmoin.wikiwikiweb.de/HelpOnAccessControlLists</a>. For greater control, you can use your own security policy object, implementing any security scheme you like. See <a href=""http://moinmoin.wikiwikiweb.de/SecurityPolicy"" rel=""nofollow"">http://moinmoin.wikiwikiweb.de/SecurityPolicy</a>.<p>MoinMoin UI can be changed by a theme plugin. A theme is responsible for creating the stuff before an after a page or action content. You can provide multiple themes for single wiki, or your own customized theme. MoinMoin uses plain Python as ""template"" language - you can easily change the behavior by overriding few methods. See <a href=""http://moinmoin.wikiwikiweb.de/HelpOnThemes"" rel=""nofollow"">http://moinmoin.wikiwikiweb.de/HelpOnThemes</a>. There are many themes created by the community in <a href=""http://moinmoin.wikiwikiweb.de/ThemeMarket"" rel=""nofollow"">http://moinmoin.wikiwikiweb.de/ThemeMarket</a>.<p>MoinMoin support Wiki-RPC 1 and 2 <a href=""http://www.jspwiki.org/Wiki.jsp?page=WikiRPCInterface2"" rel=""nofollow"">http://www.jspwiki.org/Wiki.jsp?page=WikiRPCInterface2</a>. You can also add xmlrpc plugin to extend the system as you like.<p>MoinMoin can be deployed on any platform, either using plain CGI (slow), standalone or twisted Python server (e.g. behind Apache), or using  FastCGI (recommended) or mod_python (more tricky).<p>There is a GUI editor - modified FCKEditor, which may be easier for common users, but it has issues.<p>Search is very powerful, supporting Google style modifiers, booleans and regular expressions. However, search become slow on big wikis. For typical wiki it is just fine. For bigger wikis it is painfully slow. See <a href=""http://moinmoin.wikiwikiweb.de/HelpOnSearching"" rel=""nofollow"">http://moinmoin.wikiwikiweb.de/HelpOnSearching</a>. There is an experimental index search engine using Lupy. The next version will have a better search using <a href=""http://www.xapian.org/"" rel=""nofollow"">http://www.xapian.org/</a>.<p>MoinMoin has great Unicode support - anything can be unicode: page content, page names, group names, user names and even passwords. User names can also contain spaces, so users can register with their real name.<p>MoinMoin has the best Right to Left support. You can define a language and direction for whole wiki, single page, sections within a page, or words within a paragraph. Other systems either does not support this, or have partial support using raw html.\n",1188765301
49512,comment,49488,49488,0,0,ztaylor,,,"maxmind is great and affordable\n",1188765142
49511,comment,49425,49425,0,0,chaostheory,,,"From the looks of the screencast, the tool is truly awesome. There's only one problem. I've waiting for this site to open up for at least 2-3 years now.... I almost forgot about this site until this article came about...",1188765142
49510,comment,49246,49246,0,0,andreyf,,,"I thought the ""team of Cambridge mathematicians"" that it took to conduct research on hip to waist ratios was a dead giveaway, no?",1188765094
49509,comment,49266,49278,0,0,forgotmylastone,,,"You sound much more like you are from 'Slashdot'.",1188765037
49508,comment,49313,49498,0,0,palish,,,"I'd bet there were happy slaves, too.  <p>A corporate job is slavery:<p>""Slavery is a condition of control over a person against their will, enforced by violence <i>or other forms of coercion</i>. Slavery almost always occurs for the purpose of securing the labor of the person concerned.""<p>This is grimly apparent to me since I'm typing this out at work on a weekend.  There's a big demo is on Tuesday and I'd better have my part done, or else.  I'd give anything to have just enough money to work on my own projects instead.<p>People do find satisfaction in working for someone, but why in the world wouldn't you want to decide what to work on?<p>Anyway, the 1 million line project has finished compiling (after 15 minutes and 20 build helpers).  Back to work..",1188765030
49507,comment,49444,49444,0,0,Hexayurt,,,"<a href=""http://itamarst.org/software/cog/"" rel=""nofollow"">http://itamarst.org/software/cog/</a><p>Cog is the Checkpointed Object Graph object database, providing semi-transparent persistence for large sets of interrelated Python objects. It handles automatic loading of objects on reference, and saving of modified objects back to disk. Reference counting is used to automatically remove no longer referenced objects from storage, and objects will be automatically be attached to the database if a persistent object references them.<p>======<p>I looked this package over a few years ago, and I think it got an awful lot of things right... but not enough.<p>It's worth examining the design if you want to understand the intricacies of non-RDBMS approaches. A lot of thought went into it.",1188764446
49506,comment,49505,49505,0,0,transburgh,,," This kind of thing can kill a startup if you accept paypal.",1188763823
49505,story,,,13,8,transburgh,"What's Going On With PayPal? Is eBay Communications Clueless?",http://www.centernetworks.com/whats-going-on-with-paypal-is-ebay-clueless,,1188763797
49504,story,,,4,0,abstractbill,"Vertical wind tunnel, just opened in SF Bay Area",http://www.iflysfbay.com/,,1188763545
