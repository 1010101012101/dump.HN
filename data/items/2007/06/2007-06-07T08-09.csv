ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
26732,comment,26645,26663,0,0,antirez,,,"They analyze fecal excrements with a stick. After few mixes the more it looks like the Google logo the better the employer is. Image matching is performed via a cluster of slaves voting from 0 to 9.<p>Well... apart from joke, it is a very bad sign when you start to ""rate"" humans, I think that all this meters at Google are the reason why most of us thing that Apple accomplished good design and beautiful creations. Now thing about Google: Yes, smart engineering but there is some ingredient missing. Sometimes good things come exactly from the guys Google will reject at the first stage of the interview.",1181206542
26731,comment,26727,26727,0,0,vlad,,,"<i>First, drive.</i><p>I agree with what he says.  What I would like to see him do is to actually suggest ways to follow his suggestions, and some examples of how he actually followed his philosophy.  I've asked him in the comments about this.<p>Such ideas are echoed loudly in business articles, leadership articles, programming articles, and college admissions articles.  However, what ends up happening is people still hire those who are ""like"" them.  I've often read many publications and felt like the logic made sense.  However, the actions by those people and organizations were heavily biased.<p>I've often read 'literature' and have known that I am that person the organization is looking for.  However, people then come up with some crazy reasons to reject those who are different: such as, ""if that person was X, he would have done Y by now.""  All of a sudden, you throw that person's drive and achievements in many different fields out the window, and instead choose based on arbitrary metrics most familiar to them.<p>It's almost like the publicity department and the actual selection committees are two different sets of people... which usually, is actually the case.<p>So, while Marc's observations (similarly echoed by other publications and blogs) are true, the only way to apply these things is to follow Paul's advice:  move to wherever the action is so people meet you personally.  I'm learning that is the best advice to follow, whether you're applying to college, a job, starting a business, looking for partners, or whatever else.<p><i>Second, curiosity.</i><p>Now that Marc mentions that he likes well-rounded individuals with all sorts of backgrounds and a lot of proven drive in many different fields, he says curiosity is next important.<p>He mentions that somebody applying for an Internet company is supposed to have heard  about REST, the Facebook API, Google's API, etc.<p>He makes two assumptions in this section:<p>1) all the best developers have all tried to create a social network with Ruby on Rails in the past 6 months and know about those technologies!<p>2) if you're young, then therefore you must be using Ruby on Rails to create a web application that implements Google Maps and Google AdSense!<p>That advice is going to eliminate 90% of smart programmers out there.  What if they're Windows programmers (probably most of the people out there?)  Now, before startup school, I still knew about Amazon S3, REST, and some of Google's API.  But I didn't know about techcrunch, or have any interest in creating web applications until I attended startup school.  Somebody driven like me, has easily analyzed some of the top frameworks and played with the Facebook API by now, and has had no problems creating a tool in the framework.  But I think that's what other people would be able to do, as well!<p>What he's describing is checking for fluency in the ""silicon valley scene"", not for 'curiosity'.  That's great, but at least acknowledge that.<p>Since I am curious, I applied to Startup School and am now more fluent in the ""silicon valley scene"" because of Startup School, news.yc, and techcrunch.  But I couldn't have known web apps were feasible without hearing about those sources.<p>The problem is, his interpretation of what curiosity is, is going to take all those people with ""drive"" and eliminate them from consideration.<p>In part 1, he says the previous careers and experiences don't matter, but what the person was able to accomplish on his initiative.  Then in part 2, he holds the person's current job against them.  To paraphrase: ""If they are at that job, then maybe they don't really want to work for a cutting-edge Internet company, after all?""<p>HELLO!  THAT'S WHY THE GUY APPLIED TO YOUR COMPANY.<p>I see colleges and organizations say they are looking for those well-rounded, self-driven people who are curious and successful in many different fields, saying that what you do matters more than where you came from, then going right on and worrying more about their college ranking in US News and World Reports, or selecting people with an impressive college on their resume, or those who are similar to themselves, and completely disregarding all of the real-world metrics of success they themselves defined in their promotional literature.<p>The reason given?  ""If that person was X, he would have done Y by now.""  No--if that person has been successful in many different areas, and you like those that overcome difficulties, then what you're saying is contradictory and self-fulfilling.<p><i>Third, ethics.</i><p>I agree with another YC user who says that there is no absolute knowledge.  If somebody tries to explain something they know in the best way they can, it doesn't mean they have no ethics.  In fact, I would say that's a disservice to the company to judge people like that.<p><i>Do basic skill tests.<p>It's amazing how many people come in and interview for jobs where their resume says they're qualified, but ask them basic questions about how to do things in their domain, and they </i>_flail_<i>.""</i><p>If you're in agriculture, they may be a good candidate.<p><i>A lot of people come in and interview for programming jobs who, at their core, can't program.<p>And it's such a breath of fresh air when you get someone who just goes, oh yeah, a linked list, sure, let me show you.</i><p>Why does he treat young people like they are morons?  I would expect somebody who is 24 to understand good UI design, understand the target market, have completed and sold his or her own shareware, understand that results and a quality product matter more than linked lists.<p>As far as programming goes, I would want someone who can build something without errors as they go along.  Somebody who understands that criticism from those not in the target market don't matter whatsoever.  Somebody who is more concerned about helping to make the world a better place than trying to create the coolest algorithms ever.  Somebody who has no problem talking with the actual target market and bouncing ideas, talking to the users, etc.<p>That's just what is expected.  For a breath of fresh air, it would be cool if the person has used similar technology in the past, as that wouldn't be too important.<p>In conclusion, I've asked Marc to write some examples where he chose driven, successful, well-rounded candidates who overcame some barriers and different careers (what he writes about in part 1) without penalizing them for not knowing about what's hot in the Silicon Valley right now, or holding the fact that they're trying to work for your company against them--please assume people are intelligent, and if you know they're hard-working and they want to work for your company, then why hold that against them?<p>It's simple insecurity--similar to somebody thinking that if a hot girl hits on them, it must be because she has every single STD.  ""How dare these smart and driven programmers want to work at this company or attend this college?  This is an outrage!  They must be applying to this new and very challenging environment because they are lazy and not curious whatsoever!""",1181206530
26730,comment,26717,26717,0,0,motoko,,,"I relate, but I also don't appreciate this non-submission. There is no content here!",1181205890
26729,comment,26727,26727,0,0,staunch,,,"<i>Pick a topic you know intimately and ask the candidate increasingly esoteric questions until they don't know the answer. They'll either say they don't know, or they'll try to bullshit you.</i><p>What if they're just trying to give you their educated guess? That can be valuable, it can also be misinterpreted as bullshit. I prefer to just make sure a candidate is psychologically able to say the words ""I don't know"" at some point.
",1181204674
26728,comment,26639,26639,0,0,cheponis,,,"OOP is heavily overrated.  Anything that can be done with OOP can be done, and often done better, without OOP.<p>",1181204276
26727,story,,,22,7,staunch,"Marc Andreessen: How To Hire The Best People You've Ever Worked With",http://blog.pmarca.com/2007/06/how_to_hire_the.html,,1181203272
