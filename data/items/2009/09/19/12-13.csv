ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
831925,comment,831820,831919,0,0,jacquesm,,,"Ever since the Zimmerman case I wondered how they were going to actually enforce this. I understand if you have a corporate presence in the US that it helps to play nice but the amount of encryption software that is available in repositories all over the planet basically means that this whole encryption-is-a-munition thing is ridiculous.<p>It always was, but if the intent was to restrict encryption capabilities to the current definition of 'the good guys' then it utterly failed.",1253365151
831924,story,,,1,0,edw519,"Can Condoms Save Us From Climate Change?",http://www.alternet.org/module/printversion/142709,,1253365083
831923,story,,,2,0,edw519,"The Perfect App To Start Your Weekend Off With A Drink. Fast.",http://www.techcrunch.com/2009/09/18/the-perfect-app-to-start-your-weekend-off-with-a-drink-or-several-drinks-fast/,,1253364960
831922,comment,831447,831461,0,0,josefresco,,,"Anyone HN left with a sense of humor?  dranke apparently lost his.",1253364957
831921,comment,831827,831827,0,0,adrianwaj,,,"too many innocents being executed. That's murder or manslaughter in my eyes: <a href=""http://www.google.co.il/search?q=site:http://www.tdcj.state.tx.us/stat/+innocent"" rel=""nofollow"">http://www.google.co.il/search?q=site:http://www.tdcj.state....</a>",1253364882
831920,story,,,1,0,edw519,"EchoSign Reaches One Million Users For E-Signatures",http://www.techcrunch.com/2009/09/18/echosign-reaches-one-million-users/,,1253364876
831919,comment,831820,831820,0,0,GiraffeNecktie,,,"It's a darned good thing they got that export exemption otherwise there would have been containerloads of Firefox held up at the border and storeowners all over the world would be screaming that they didn't have enough Firefox for the Christmas rush.",1253364773
831918,comment,831447,831793,0,0,raquo,,,"Free startup idea: T-shirt funding pool for leaked documents.",1253364751
831917,comment,831853,831853,0,0,Sandman,,,"Here's his bigger brother:\n<a href=""http://www.youtube.com/watch?v=cHJJQ0zNNOM&feature=fvst"" rel=""nofollow"">http://www.youtube.com/watch?v=cHJJQ0zNNOM&feature=fvst</a>",1253364739
831916,story,,,2,0,jacquesm,"EBay Loses Dior Trademark Case in France",http://www.pcworld.com/article/172269/ebay_loses_dior_trademark_case_in_france.html,,1253364615
831915,comment,831817,831817,0,0,econoplas,,,"I disagree somewhat about the ""not very productive"" part, at least in the particular case of scala.<p>I've developed several large projects in Python (specifically CPython 2.x) for $$ for about 6 years and I am learning scala right now.  So I have a somewhat interesting perspective on both.<p>Although I suppose I could be termed a Pythonista since I ""do python"" for a living, I consider myself more of a true polyglot... I also use Perl, Ruby, C++, Java, Lisp, C#, whatever language I can get my hands on that fits for the project at hand.  I don't subscribe to the Golden Hammer theory.<p>So far, scala does feel like it has that 5x productivity improvement as compared to using straight Java, on par with what I experienced when I started porting significant portions of the code base of a large application from C++ to CPython (embedding CPython in C++, or vice-versa as needed).<p>I personally see scala being somewhat in a different category from CPython for 2 main reasons: JVM (stability, maturity) & Java interoperability (vast library resources).<p>1. The JVM is arguably the most widely used, stable, and mature virtual machine ever developed.  Not surprising since Sun and IBM have both invested millions (billions?) in JVM  development over the last 15+ years.  The latest generation JVMs sport multi-threaded garbage collection, profiler support, remote debugging, remote method invocation, compile-and-reload while debugging, and very advanced JIT.  JVM runs in more places than any other VM to date.  'Nuf said.  Yes CLR is probably on similar footing nowadays.  By comparison Python, Ruby, Perl, scheme, or any other language that has its own home-grown VM is always going to be behind that curve... for example, I was just reading about how most of the Common Lisps (many pre-dating the JVM) are still working on adding multi-threaded garbage collection.<p>2. The other (main) reason I'm looking at scala is the HUGE advantage of JVM interoperability and the vast libraries available.<p>From my Python & Java & other language experience, I have learned that:<p>=> cool-language-features-productivity-multiplier = 5x to 10x productivity improvement, such as what Lisp and most of the dynamic interpreted languages (CPython, Ruby, Perl) claim and pretty much deliver<p>=> existing-library-productivity-multiplier = 100x or more, since I don't have to re-invent every wheel every time for file format X reader/writer, GUI widget, or other library du-jour.  Let's face it, we have to interoperate and communicate with a lot of different gizmos & whatzits nowadays, right?<p>We all know that we as programmers are vastly more productive when we can get almost any library imaginable (usually open source) to do almost anything we want... GUIs, Charting, FFTs/Numerics, networking, 3D graphics, Neural Nets, , and can even leverage Eclipse environment and toolkits for programming in the large for GUI building, writing rich-client platforms (building entire IDE's), Web server frameworks, web services & SOA development, DSLs & modeling, reporting, DB persistence, and then write our glue logic in scala or other JVM language of choice.<p>We can even intermix them with other JVM languages in the same project (Groovy, Jython, Jruby, clojure, PNut, etc).<p>The good news is... if I pick scala, and it doesn't work out... I can always selectively replace out the pieces I don't want to keep one-at-a-time in Java or any other JVM language as time permits.  But if it works, I'll just leave it alone.  Nobody even needs to know my JAR is written in scala except that they have to put a couple of scala JARs on the classpath.  Not so for CPython where the installation & deployment overhead is much steeper in my experience.  Not everyone has CPython 2.6 installed on every machine for example, but most everyone has a JVM 1.5 or greater whether they know it or not :)<p>Wow.",1253364476
831913,comment,831828,831828,0,0,jacquesm,,,"Any unix source distribution could serve that purpose, I don't see why Tunix would be any different.<p>Smaller ones are probably easier because you can understand them completely.",1253364405
831912,comment,831502,831573,0,0,joezydeco,,,"I think that's a harder case when it comes to large-screen televisions.  Do we really expect that people will buy a new TV every few years like they do with iPods, phones, and laptops?<p>It's going to take something really significant to convince a whole block of TV watchers to upgrade their sets.  In the US, it's only happened with the advent of color broadcasting (1960s) and HD/digital broadcasting (2000s).",1253364360
831911,comment,829000,829501,0,0,pmorici,,,"I emailed the guy and got a response.",1253364317
831910,comment,831817,831905,0,0,lsb,,,"Jane St likes it because of the rock-solid type system, but they've been eyeing Haskell compiled with -Wall for the same reasons.",1253364211
831909,comment,831447,831876,0,0,euccastro,,,"He'd wear it inside out.",1253364157
831908,comment,831817,831883,0,0,plinkplonk,,,""" lousy IDE support, ""<p>This is valid in a sense, but it is also important to remember that a <i>lot</i> of software was built with emacs and vi or even more ancient editors.<p>""If you're serious about software, concentrate on writing something that is reliable as hell and easy to maintain and install. ""<p>That is terrible advice, not so much the sentence itself as the ""stay away from powerful languages"" spin you give it, as in<p>""Messing around with unstable languages is a lot of fun. It's educational too. But don't build your business around it. ""<p>There are profitable companies using Haskell and OCaml (and Lisp and J and .. )!<p>You make a decent point then spoil it by stretching it too far, to the point of farce.<p>One situation in which you should definitely  not use advanced languages is when you know you have (or intend to hire) very dumb ""programmers"" who won't be able to warp their heads around the ""exotic"" language, which probably doesn't have a ""Learn in  21 days"" book to go with it.<p>Many companies doing outsourced software do hire these ""middle of the curve"" programmers and will do well to stay with ""stable"" languages. If you have a bunch of bright programmers doing something innovative, it is a completely different situation.<p>By your logic PG wouldn't have built Viaweb in Lisp, FlightCaster wouldn't be using Clojure and so on.<p>Taking just one example, Clojure is evolving very fast, which for you would be ""unstable"". I know at least 4 startups using Clojure, one using Scala  and no one's yet complained of ""instability"" and lack of IDE support destroying their productivity. There <i>are</i> tradeoffs (IDE maturity being one, if you are an I-can't-program-productively-without-my-IDE kind of guy ) with any language selection, but the consequences aren't as dire as you make it out to be.<p>As I said, this is bad (or rather very one sided, which amounts to the same thing in practice) advice. There is an excellent rationale for building certain types of applications in powerful languages, what PG calls  LFSP  - languages for smart people.<p>PG and other people have made this argument more eloquently than I can, so I'll refrain.<p>""Python/Django and Ruby/Rails are only barely stable enough to work with.""<p>heh heh! Sure, What do you use then? COBOL? Should be ""stable"" enough  for you I guess.<p>Somebody should tell all the stupid programmers using RoR or Django to run companies that they are being foolish, using ""barely stable"" software. ;-)",1253364054
831907,comment,831502,831624,0,0,allenbrunson,,,"that's true for me too. one of my eyes is so poor that i have effectively no 3d vision. it keeps me out of sports involving balls as well.<p>but on the other hand, color-blind folks have had this type of impairment forever, so i guess it's only fair.",1253363952
831906,story,,,56,15,prakash," Climbing the wrong hill",http://www.cdixon.org/?p=989,,1253363644
831905,comment,831817,831890,0,0,tomjen2,,,"I am not sure OCaml has gained any traction lately. The only paradox of OCaml is why people use it~",1253363603
831904,story,,,3,0,matt2358,"Sequoia Capital -- What's with the new UI?",http://www.sequoiacap.com,,1253363544
831903,comment,831817,831883,0,0,tomjen2,,,"I am not sure you will be that much less productive if you go from Java to Scala. You know most of the libraries, and so code completion is less of an issue and Scala removes many of the problems that are in Java.",1253363526
831902,comment,831817,831883,0,0,masklinn,,,"> Esoteric languages are a lot of fun.<p>No esoteric language was mentioned in TFA.<p>> But they're not very productive<p>Esoteric languages aren't ""not very productive"", they're the most counter-productive langages on the planet. Productivity runs counter to the point of an esoteric language.<p>> Messing around with unstable languages is a lot of fun. It's educational too. But don't build your business around it. Python/Django and Ruby/Rails are only barely stable enough to work with. Thinking that using Haskell, Clean, IO or Lisp will be a net benefit to productivity is foolish.<p>Wow. Cocaine is one hell of a drug.",1253363449
831900,comment,831447,831447,0,0,MicahWedemeyer,,,"Am I missing something, or are screenshots impossible to fake now?  I make fake screens all the time for fun.",1253362641
831899,comment,830939,831064,0,0,josefresco,,,"""Uh, no. Being arbitrary and protective about what products you allow people to build onto your own products is not inherently a restraint of trade.""<p>I think Microsoft would have a different opinion about that given their experience with the government in the 1990's and still to this day about what they allow and pre-install on THEIR own OS.",1253362575
831898,comment,831817,831883,0,0,gaius,,,"I'm not sure how true this is. I was into Java in '95 when it had ""lousy IDE support, buggy compilers, few libraries, few bindings to existing libraries, and so on"". Java fell far short of its potential, and the ambitions Sun had for it, but still, that wasn't a bad call. People who got into Python early on made a similarly good call.<p>And also, some esoteric languages, like Haskell, the ML family, Erlang and so on have deep roots, they may not be mainstream but they aren't going away anytime soon. And sometimes something funny happens; anyone who has ML experience is going to feel right at home on F# and suddenly the library problem is solved, the IDE problem is solved, the bindings problem is solved...",1253362395
831897,comment,831817,831883,0,0,shabda,,,">  But don't build your business around it. Python/Django and Ruby/Rails are only barely stable enough to work with.<p>I agree with your basic premise but,<p>Python and ruby both have extremely good library support. Hell, python's stated aim is batteries included. Both of them have (al least semi-)mature Jvm implementations. Django has a stated policy of not breaking backward compatibility on point releases.<p>I agree you need to choose stable languages to work with, but if you are selling consulting services around Java god luck competing with BigCo. If you are building your products with Struts, good luck doing xml-situps.",1253362360
831896,comment,831827,831827,0,0,yannis,,,"An interesting infographic, however, note the last week is actually sometime in April. The last person executed in Texas was Moody (<a href=""http://www.tdcj.state.tx.us/statistics/deathrow/drowlist/moody.jpg"" rel=""nofollow"">http://www.tdcj.state.tx.us/statistics/deathrow/drowlist/moo...</a>) on 09/16/2009. You can see his last statement at\n<a href=""http://www.tdcj.state.tx.us/stat/moodystephenlast.htm"" rel=""nofollow"">http://www.tdcj.state.tx.us/stat/moodystephenlast.htm</a>",1253362327
831895,comment,829268,829980,0,0,IsaacL,,,"Thanks for your answer. I took another look at that chapter, though I'll definetly need to come back to it and try out some of the excercises for understanding. I should take a closer look at Clojure as well (tried a few Project Euler problems, but would like to try a large project in a Lisp dialect).",1253362243
831894,comment,831842,831842,0,0,petercooper,,,"This is why I can't get on with taking notes on a computer - ever. It feels stilted and thoughts don't flow that way. Some authors have claimed they can tell which authors write by pen and which write by a typewriter/computer - I believe it.",1253362129
831893,comment,830571,831805,0,0,gtufano,,,"Point 2. has been long solved.\nAnd in ten years using exclusively OOo I have been hit by point 1 two or three times... The main offenders were the Gartner spreadsheets with pivot table. OOo calc v.3 opens them, btw...",1253362089
831892,comment,831817,831817,0,0,wheels,,,"I have to say that, even as someone fascinated with Scala this week, I find the argumentation here a little disingenuous.  There are a lot of ways to filter developers and I don't think that the ability to learn a new language sets the bar high enough to actually select for the good ones and potentially means selecting the wrong tool for the job.<p>There are a large group of people that are effectively programming language hobbyists, frequently learning new programming languages for kicks, and while that set intersects the set of good developers, it is not a subset of it.",1253362019
831891,comment,831502,831585,0,0,hy3lxs,,,"I would strongly disagree that 3D in UP can be dismissed as merely a ""post-process like VHS."" All future Pixar films are going to be in 3D, and Pixar does not make story / layout choices on a whim. Just because the movie is enjoyable in 2D doesn't mean a lot of thought / early planning went into the 3D, it just means the core story was not strongly affected by it. Here's the first part of this interview with the director of UP talks about the use of 3D in the development process:<p><a href=""http://www.movieretriever.com/blog/336/interview-pete-docter-director-of-up"" rel=""nofollow"">http://www.movieretriever.com/blog/336/interview-pete-docter...</a><p>Some choice quotes:<p>""We just focused on telling as strong of a story as we could and then the 3D group followed up with the 3D. And they did use it creatively. We tried to use it like color or like camera or anything else - to emphasize emotion.""<p>Development is pipelined at Pixar, starting with Story. So this sounds like 3D was integrated as soon as Animation got their hands on it.<p>""If people really embrace it and feel it's the way to go, then we'll do them all that way. This one, you can see either way, which I think is nice. Some people find it really engaging and interesting but other people are kind of put off by the glasses and whatever. I don't think you're losing anything by seeing it in 2D, it's just a different way to see it.""<p>As an extreme analogy, I bet that watching UP with a black and white filter, I would still laugh / cry while watching the film.<p>Extensive interview on 3D with some of the people in charge of 3D:<p><a href=""http://www.awn.com/articles/reviews/pixar-goes-3-d"" rel=""nofollow"">http://www.awn.com/articles/reviews/pixar-goes-3-d</a><p>""Yes, the most gratifying thing is that we put a lot of time and energy and thought in our approach to 3-D and we never really knew if people would get it. To see some of the online reviews coming out of Cannes, it seems that people really got our nuanced, subtle approach. We want to pull people into the movie and not push them away from it with a lot of gimmicky stuff coming at ya.""<p>""What was really interesting was, not knowing how 3-D was going to work with editing and with composition, how good camera and staging play really nicely in 3-D. And this turned into a motto for us. We did about eight minutes of Ratatouille as a test and it was really stunning.""<p>Gee, I would really like to see that one... anyways there are a bunch of interesting interviews on this stuff.<p><a href=""http://www.google.com/search?q=bob+whitehill+interview+up+3d"" rel=""nofollow"">http://www.google.com/search?q=bob+whitehill+interview+up+3d</a>",1253361957
831890,comment,831817,831839,0,0,gaius,,,"He forgot OCaml ;-)",1253361930
