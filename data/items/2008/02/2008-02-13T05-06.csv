ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
114673,comment,114568,114568,0,0,bokonist,,,"Here's the biggest challenge I think you face.  Because ERP is so entwined in a how a company does business, it's really hard to create a ""bottom-up"" solution.  Executives have to be involved, you'll need sales people to explain things, and - most important - you won't really know how it goes until after the implementation. This means there is little incentive to create good software. Once the customer has spent a ton of time customizing it and retraining employees, they're not going to switch away just because the product kind of sucks.  The highest quality software is found in consumer apps like GMail that are really easy to switch away from.<p>Is there any way you can make your solution have minimal up front cost and to be rolled in gradually, similar to the way that Salesforce and now Google Apps spread?  That way you can compete just based on quality - not on sales ability.  That will in turn force you to make the solution great, and you'll end up kicking everyone's ass.",1202882339
114672,comment,113838,113838,0,0,foonamefoo,,,"I know Paul is of the opinion that tables are simpler than divs, but even tables don't have to be set to a fixed width in pixels!",1202882014
114671,comment,114532,114558,0,0,foonamefoo,,,"Run away.",1202881863
114670,comment,114532,114532,0,0,foonamefoo,,,"Huge warning flag.",1202881835
114669,comment,114532,114532,0,0,CoreyKossack,,,"There are a few perspectives on this. The first one, which everyone else has voiced, is that verbal promises are worth nothing. Things can always change and you could be left behind...<p>However, in some ventures I have been involved in, equity distributions are not decided in the very beginning because you don't know enough yet. If you give equity too early, you can mess up big time in many ways. In my opinion, the best thing you can do is sit down and talk through the terms. Figure out what is going to impact the decision about how much equity you do receive, and at what point in time that is expected to happen. Lay out some terms in advance, even if the actual equity percentage is not laid out from the get-go.<p>The last thing to say is that contracts are only as good as the people who sign them. Trust should be the #1 factor in your decision to deal with business partners. That said, you have to protect yourself, so do what you are comfortable with and roll with the punches. If you are not getting paid and don't have a 100% promise of stock in the company, the time you are putting in right now is ""volunteer"" time, and that is something that only you can decide if it is worth to you. I wouldn't let the lack of set deal terms scare you off just yet, if you think this is something you could really benefit from. But of course, it's all your call!<p>Corey Kossack
President
Club E Network
<a href=""http://www.ClubENetwork.com"" rel=""nofollow"">http://www.ClubENetwork.com</a>",1202881802
114668,comment,113901,114245,0,0,mechanical_fish,,,"Wait, are you saying that medicine and counseling <i>don't</i> have pathological bureaucracy? Have you asked your doctor to describe exactly how much time and effort it takes to get money from dozens of separate insurance companies, all of which are using every trick in the book to avoid paying? Or are you lucky enough to live in a civilized country?<p>And, please, don't even ask about postdoctoral research and the attendent interactions with university bureaucracy, departmental politics, and Federal grant review processes. Or I might need counseling. And my insurance doesn't cover that. :)",1202881787
114667,comment,113720,113969,0,0,michelson01,,,"they were already making millions a year for many years.  it's not like they were broke before this.",1202881767
114666,comment,114382,114467,0,0,foonamefoo,,,"that(google TOS)'s is against google mission:
    Google's mission is to organize the world's information and make it universally accessible and useful.",1202881739
114665,comment,114568,114657,0,0,carpal,,,"1) I don't think so.  The real win is for an ERP is not processes, it is reporting.  Being able to examine every aspect of the business in ONE place in a real-time fashion is an amazingly huge boon for businesses.  Businesses succeed not because of good processes, but because of constant improvement.  You can't improve if you don't know what to improve.  A good ERP implementation will solve this with good reports.<p>2) For a startup, small businesses might actually be better.  They might still be able to spend a decent chunk of change (.25-1M) on an ERP system, but have much lower requirements making an easier implementation that is less likely to fail.<p>3)  ERPs aren't really modular, that is true.  I'm not sure there is a win to a real ""modular"" ERP system.  The who idea behind an ERP is that everything in a business is connected, so the systems should be connected too.  Sales people are connected to orders are connected to finished goods are connected to build processes are connected to inventory are connected to purchase orders.  Removing one ""module"" in that chain defeats the purpose of the ERP.",1202881647
114664,story,,,22,0,mqt,"Arc 1 - new version",http://arclanguage.org/item?id=2166,,1202881482
114663,comment,114513,114513,0,0,tjr,,,"The people who are presently not voting, by and large, don't vote because they don't care enough about who's in office to bother voting.  I don't think we can expect these people, if forced to vote, to put any significant effort into deciding who to vote for.<p>So who benefits by forcing them to vote?  Would it just be random?  Or would certain viewpoints/candidates be propelled by ignorant, disinterested voters?",1202881447
114662,comment,114532,114532,0,0,boredguy8,,,"The problem that people have hinted at, but nobody's come out and said: Fair changes when money's involved.",1202881322
114661,comment,114198,114198,0,0,CoreyKossack,,,"In the past I watched TV a lot, but now only watch sparingly at night as a way to relax and get myself off the computer.  :)<p>Beyond that, I do watch a lot of TV/videos online.<p>Corey Kossack
President
Club E Network
<a href=""http://www.ClubENetwork.com"" rel=""nofollow"">http://www.ClubENetwork.com</a>",1202881306
114660,comment,114310,114310,0,0,CoreyKossack,,,"We have bootstrapped Club E Network, a broadband TV & Social Network for entrepreneurs, from the ground up. We started with nothing, took on great partners (including a technology partner to create the BETA version of the social network), and have brought it in a few months since launch to the range of tens of thousands of unique visitors a month to get us off the ground. Now that we are at that level, we will be taking some investment to further develop the next generation of the site (much more advanced) as well as continue developing our original television series.<p>I think not having money gives entrepreneurs a real advantage in some ways, because you are forced to REALLY think hard and discover innovative ways to market and improve your site, without cash. It's been a very interesting experience, and I definitely believe something that is beneficial for entrepreneurs to go through, as opposed to taking money right from the start.<p>Corey Kossack
President
Club E Network
<a href=""http://www.ClubENetwork.com"" rel=""nofollow"">http://www.ClubENetwork.com</a>",1202881055
114659,comment,113720,114204,0,0,neilc,,,"I'm just curious, but what makes them ""Web 2.0 founders""?",1202881003
114658,comment,114310,114310,0,0,skmurphy,,,"Francis Fischbach interviewed Dave Stubenvoll of Wowza Media
<a href=""http://www.skmurphy.com/blog/2008/01/25/founder-story-dave-stubenvoll-of-wowza-media-systems/"" rel=""nofollow"">http://www.skmurphy.com/blog/2008/01/25/founder-story-dave-s...</a><p>Dave offered a number of useful ""lessons learned"" for bootstrappers. Wowza is bootstrapping a Flash Streaming Server and making headway in the niche of their choosing against Adobe. My three key take-aways were<p>1. If you are a lone entrepreneur, team up.<p>2. Figure out how to get it rolling without quitting your day job.<p>3. Don't ""Build to Flip."" Dave notes: “if I was dependent upon the sale of this company to some single entity, I probably wouldn’t survive. I would be doing things to sell as opposed to doing things to make sure that the business is around next year and the year after, and the year after.”<p>There's a lot more there: he has been involved as a founder or the early stages of five startups (two that were intrapreneurial or internal startups at Intuit and Adobe).",1202880888
114657,comment,114568,114568,0,0,boredguy8,,,"Let me say from the outset that I agree. So this criticism really is friendly criticism. Also: I have little hope, though I want to hope. So...<p>1) The concept of ERP is flawed.<p>ERPs are basically trying to solve the problem of documentation. Remember, ERPs were developed by IT. And they're what happen when IT people try to solve a problem using IT tools and IT methodologies. Now, is there some good there? Yes. Steve the Secretary can't quit and take his 20 years of experience out the door with him. ""Where do I find <x>?""is never[1] a question post-ERP, because the process is well-defined.<p>Think of it this way. You already have a business (program). But you have a problem in that the founders are getting old, or workers are getting old, or things aren't being done consistently (no commenting). So with this massive program, you're going to cull through the processes people are already doing (source code), and evaluate them (optimize) and then implement a consistent approach (document the new code).<p>Guess what? That's hard to do with 20,000 lines of code. Now do it with a thousand employees. Oh, and make sure they remember that ""one person"" they call once a year to make sure your biggest customer gets their fruit basket every Christmas.[2]<p>""Well, all this sounds like a good idea!"" you're saying? Sure, in a sense. But here's the flaw: just like good code, a good organization needs documentation from the very beginning. And that's my first criticism: don't get into the business of going back and documenting things that should have been done. Get involved in being involved from the very beginning. Of course, that's harder to ""sell"" -- small businesses have smaller ERP needs because there's less of an enterprise. So you'll make less profit. What makes me hope against hope: your solution could grow as the organization grows.<p>2) Big business is better than small business<p>There's a reason most ERP customers are big businesses: they have a lot to lose with knowledge leak.<p>But that's not the real reason. The real reason is that they're most able to benefit from the ERP while minimizing the cost of implementing the ERP. How do I know this? Big businesses usually get big because they have good business practices. And they're good at communicating those practices to employees. That is, they have good procedures and good documentation -IN THE FIRST PLACE-. So the process of encoding that is, while not without incident, not as hard as it could be. A small business that stays small because of the high training costs they incur every time someone moves on, or who doesn't follow procedure well so is unreliable, or what have you--THEY'RE the ones that have the most to -gain- from an ERP, but they're also the ones least able to bear the costs of documentation. If you're following the analogy, large enterprises already have some documentation, but have some poorly-documented interactions or classes. On the other hand, many small businesses have far LESS documentation - either because they don't need it (""Only 100 people, we can communicate it!) or they're just bad at it.<p>All that to say: the people you're marketing to are least able to meet the needs of the requirements / planning phase. That's a problem. I think there are solutions, but your post makes it sound like they're (smaller enterprises) are the EASIER customer, and I don't think that's necessarily (or even often) true.<p>3) ERPs are not modular<p>ERPs are almost the perfect example of the corporation existing to protect its own existence. ""We've got a good thing here,"" says someone high up, ""Let's keep it that way."" ERPs -sell- themselves as being modular and adaptable and nimble. ""Nimble"" doesn't need a multi-million dollar budget, a hoard of consultants, and two years.<p>Say your HR department figures out a method of processing applications that increases processing speed by 10% with no degradation in quality. Without an ERP, the head of HR (maybe) checks with their VP and then tells everyone below them to change, and that's that. Good luck making that change post-ERP.<p>And this is the downside to the upside I mentioned above. Steve the Secretary can't quit, but Gillian the Genius can't get hired and have a brilliant insight that rapidly streamlines processes. (Which, I suppose if you really think about it, is what enables ycombinator: large organizations with non-malleable standards need to outsource innovation. Lucky us!)<p>The plus side: although the cost of inter-departmental interaction change goes up, the intra-departmental change is (comparatively) easier.<p>I think your system could benefit in modularity, especially if the ERP were ""in the hands"" of the people. But that, of course, increases risks.<p>The bottom line: if you build for modularity (really build for it, not in the ""The salesperson told me it was modular"" sense) from the beginning, it would be amazing. But you have to really build for it. And I know you get that, but I don't think I can say ""really"" enough times here.<p>The BEST of luck!<p>[1] If you listen to marketing. There are still problems with finding things post-implementation, but I will concede these types of problems are significantly reduced. The -real- loss now is, ""How do I get <x> done when the ERP doesn't want to let me?"" - and THAT answer is far more valuable, in my opinion, and far less often documented.<p>[2] Dramatization (barely)",1202880742
114656,comment,114551,114551,0,0,trekker7,,,"$$$ earned :-)",1202880444
114655,comment,114501,114501,0,0,staunch,,,"Absolutely not as a primary host. EC2 should only be used for handling peak load, so that you don't have to build out more servers just to handle your traffic spikes. That's it. Nothing more.",1202880263
114654,comment,114568,114568,0,0,lvecsey,,,"How about in some way using emacs? The tiger team would develop the elisp needed to cater to the company.",1202880259
114653,comment,113655,113936,0,0,amohr,,,"It's a social media player and, as far as money goes, we're trying to pound that out:  basically food/shelter/bandwidth/coffee for 3 or so.  Our current calculations say around 20k maybe to get from where we're at to series A (that is if we were to do that at the end of the summer)
any questions, brnlligtsmehi (at) gmail",1202880091
114652,comment,113655,113655,0,0,skmurphy,,,"This is actually available here
<a href=""http://ycombinator.com/tredennick.html"" rel=""nofollow"">http://ycombinator.com/tredennick.html</a><p>It's a great article that came out in the Sep 2001 Spectrum (on-line edition).",1202880083
114651,comment,114310,114310,0,0,Mistone,,,"first off - this is one of the best threads i've seen here in a long time and I'm deeply inspired to hear others stories of bootstrapping success and failures.<p>We have bootstrapped rephoria from day one and are now nearing the one year mark but alas have yet to ship our product.  I lost my day job mid last last year and thought it was going to be a massive blessing as i had been working nights for two months proir and was feeling the constant strain...wrong.  We were not ready from a team capability standpoint and with no funding was constantly stressed by money issues.<p>During that time we experienced so many setbacks and disappointments but have kept pushing as we are continually inspired by the potential of the vision. Basically it was not until I took a day job some 4 months later that things got rolling again.<p>As of today we are closer than ever to launching and what we are launching is far better than what I would have launched last year, so in reality (hindsight) at that point we were not ready for investment.<p>As first time entrepreneurs I believe that we will need to get past launch - get real users - and validation of the model - at which point I will make a strong push to secure an angel round.<p>Bootstrapping is a fundamental entrepreneurial quality - it forces you to believe in yourself, your team, and your idea in the face of all odds.  If you can make it through you will be a superior entrepreneur.  Bootstrapping is part of the true Hacker spirit.  That said the ability to achieve scale and growth is greatly enhanced by having the funds in place to focus and execute on the plan in a timely fashion.<p>My twitter a few hours earlier read: Wishing i could hit the biz refresh button and have the time i had 3 months ago with the team i have now.",1202879953
114650,comment,114568,114568,0,0,carpal,,,"That is exactly what I'm doing for my day job.  We evaluated a ton of ERP/MRP providers, and they were all A) Extremely expensive, and B) Awful.  So I lobbied them to have it be made in-house.<p>It is currently being done with only one developer.  We're 6 months into the implementation, and are piloting in several of the modules.  It is going pretty well so far.<p>If it continues to go well, we're considering spinning it out into its own company.  A well-designed and user-friendly ERP system is a killer asset to have, and being able to resell it is an even bigger one.<p>I've come to pretty much the same conclusion as you, about customizing.  I figured we'd have a ""standard"" set of modules, which would either be completely replaced or slightly modified as necessary to fit the client company.  Certain things like maintenance, receiving, purchase orders and sales teams probably don't vary much between companies.  Other things like manufacturing routers and change orders probably do.  This would allow us to be flexible where it is necessary, and to reuse code where it is not.<p>As a side note, we're hiring another developer to work on this system.  IC to start.  Let me know if you're interested.",1202879777
114649,comment,114532,114532,0,0,skmurphy,,,"They absolutely have something to divide, the current equity. You are working against your own interest by helping to add value to the company without setting your option price and share count. If the 100% owner isn't willing to share now, something is wrong. There are a number of ways to address the issue of actual performance: time based vesting, milestone completion vesting, a cliff for a probationary period with no vesting (typically 6-12 months and then the 6-12 months all drop in). This is a very serious red flag if they have incorporated and tell you ""they don't have something to divide."" It's much better to have the disagreements now (and perhaps let some folks go along the way for poor performance) than effectively make it a competitive free for all on an ongoing basis (can you imagine the discussion in 6-12 months ""I did more than you"" ""No I did a lot more than you, and I spent most of my time fixing your mistakes""). You are right to worry about team dynamics.",1202879710
114648,comment,114532,114532,0,0,dkokelley,,,"Just tell them you'll join on the condition that equity is on paper. If they're your friends, explain to them that it just makes sense to do this right away in order to focus on your business and prevent any greed or disagreements.<p>Imagine this hypothetical scenario: 1 Year from now, you have a decent amount of cash flow, and are steaming along smoothly. As far as personal income is concerned, you've all somehow survived on savings, credit, and a small salary. Now an investor comes up and wishes to invest, or say that you have a buyer or some other liquidation event. How will you split the harvest? Now each of the founders looks back and evaluates how much they feel they've contributed. Disagreements arise. The programmers claim that they built the product, the sales guys claim that they brought the income in, and ultimately, the legal owner with 100% equity gets the money and you never speak with each other again.<p>The moral of the story: It's easier to divide a hypothetical pie now than a real pie later. Get the equity worked out now.",1202879694
114647,comment,114532,114608,0,0,streblo,,,"Agreed. You're doing volunteer work until you have your stake down on paper.",1202879645
114646,comment,114568,114568,0,0,comatose_kid,,,"I work at a fortune 100 company; my only ERP interaction is  occasionally entering an equipment purchase order via an Oracle system.  It sucks, so you're preaching to the choir.<p>Nevertheless, I'd still have to ask the following:<p>1)  Your beliefs are easy to agree with, but how do you get your first 10 customers to believe that your solution upholds these beliefs?<p>2)  How do you sell the idea of 'writing your own' to a business person who doesn't want to become the head-contractor for a software team?<p>3)  Keeping in mind my white-hot ignorance about this particular vein of software, I'd want to know if the problem is really with the software? Or is it a problem with understanding the process and the implications of implementing it a certain way (ie, can processes interact?  do we know if they will at specification time?)<p>4)  How smart does the tiger team need to be?  An ideal system should be reasonably easy to implement by average programmers.<p>5)  How do you sell developers on learning your platform?  A customer might be concerned that not enough developers know your ERP well enough to implement future extensions.<p>6)  How do you sell customers?  You're competing against the well-oiled sales machines of your larger competitors, and all but the smallest businesses may not mind spending $1M to ensure that their all-important business processes are implemented with a well-known ERP (poorly implemented or otherwise) that they can trust their business to....<p>I guess one way to counter this may be to make the ERP free (open source), and have a team of core developers/contributors who could then charge $ for implementation.<p>Don't mistake my concerns for a lack of enthusiasm.  This is a field ripe for improvement, and you seem to have the ideal background for it.",1202879250
114645,comment,114568,114639,0,0,boredguy8,,,"ERP = Enterprise Resource Planning<p>In this context, you're buying a database and an application to manage inventory. And people. But people are just inventory with different expiration dates. They really are designed to do contain EVERYTHING a business does. If there's a procedure for doing something, it needs to be in the ERP.<p>You mostly have two options in the status quo, as the poster said: Pay to have it customized ($10,000,000 total budget (hardware+software) for a 4,000 employee organization isn't unusual) or conform to the ERPs methodology.",1202879178
114644,comment,114556,114556,0,0,paulgb,,,"It needs a password. How ironic.",1202879045
114643,comment,114310,114310,0,0,goodgoblin,,,"Yes we can",1202879041
114642,comment,114551,114591,0,0,skmurphy,,,"I think this is more a measure of your traction--your ability to set and hit targets--and might be better expressed by<p><pre><code>   Act / Plan 
</code></pre>
instead of<p><pre><code>   Act - Plan 
</code></pre>
assuming some normalization of item size in either case. It's the inverse of the ""Schedule Fantasy Factor.""",1202878904
114641,comment,114198,114308,0,0,akkartik,,,"J&W ftw",1202878814
