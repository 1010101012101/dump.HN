ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
537187,story,,,76,43,kpanghmc,"Content Stealing Jerks",http://www.kevinwilliampang.com/post/Content-Stealing-Jerks.aspx,,1238309948
537186,story,,,1,0,senthil_rajasek,"Former AOL Head Jon Miller Heads to News Corp. as “Chief Digital Officer”",http://kara.allthingsd.com/20090327/jon-miller-to-news-corp-as-digital-head/,,1238309847
537185,comment,536124,536124,0,0,miked,,,"High-level languages are the single most important breakthrough in the history of software engineering. That's because they enable a <i>tremendous compression of meaning</i>.<p>Languages, both natural and artificial, have two purposes: thinking and communication. Maximizing both of those depends on maximizing clarity while minimizing noise (including extraneous text). HLLs help achieve both. That's why most everybody uses them.",1238309794
537184,comment,536764,536900,0,0,skmurphy,,,"As someone who has been interested in paying for a SaaS or Hosted version of Etherpad since January it's been annoying.<p>Because I plan to use it with my customers I knew I wanted to pay for a supported SaaS/hosted version. I have been surprised that we have been unable to have any meaningful discussion about it. I know that one interested user doesn't constitute a market, but I was dismayed with the lack of meaningful engagement beyond we will notify you when it's ready.<p>I think the part that's was left out of the Venture Hacks article was when someone tells you they want to buy it, have a conversation with them to understand how they plan to use it and how they value it (what are the alternatives that they are comparing it against).",1238309728
537183,story,,,1,0,senthil_rajasek,"How the Nation’s Only State-Owned Bank Became the Envy of Wall Street",http://www.motherjones.com/mojo/2009/03/how-nation__s-only-state-owned-bank-became-envy-wall-street,,1238309638
537182,story,,,7,2,yters,"Siftables, the toy blocks that think (TED talk)",http://www.youtube.com/watch?v=JP0w9lZoLwU,,1238309201
537181,comment,536958,537046,0,0,johnrob,,,"Dude, it's like 75 and sunny where I am.  Not going outside, hacking to be done :)",1238309185
537180,comment,536764,537097,0,0,skmurphy,,,"The question is what is the simplest or most basic product that people want to buy. If you don't merge all of the feature requests, but pick the smallest subset that prospects tell you that they will pay for, you are less likely to get overwhelmed/diluted. Once you know what the minimum feature set is you are more likely to be able to develop it, and if you have pre-sold it there is much less risk than you have developed something that you love that no one wants.<p>""Frankly, I don't see a point in pre-selling, do you?"" If you have ever developed something that no one (or too few) people wanted to pay for you may get more cautious about developing something without assessing customer buying interest first.",1238309137
537179,comment,530605,535190,0,0,danbmil99,,,"I think we're talking past each other, though there is still a fundamental disagreement in principle.  Of course I believe that science 'works', in the sense that in theory, everything should be reducible to a lower level description.  High-level source code reduces to machine code; weather reduces to quantum mechanics.  However, there's a critical decision about what level you choose to work at when you attack a problem.  While you may know that QM has something to do with why certain steel alloys are strong and light, when you build a bridge or a building you don't work at the QM level.<p>In the practical world of software development today, we do indeed have tens of millions of lines of code 'under' the application level most of the time.  Even on Linux, where every one of those lines of code is theoretically accessible as source, the practical fact is nobody has the resources to read, comprehend, and manage all of that code during the lifetime of a typical project.  Therefore, you are necessarily in a position where you have to deal with most of that codebase as black boxes, which have a statistical likelihood of doing what they are intended to do.  You have to program defensively, hoping for the best but assuming the worst.  You have to rely on your pattern recognition skills and your intuition to guide you.  You have to treat the chaotic complexity you sit on top of like a surfer riding a wave.  You cannot afford to take a fully reductionist approach.  It's just not possible anymore, full stop.<p>The exception to this would be a small, embedded system with a minimal operating core and limited memory.  But wait -- that system today is almost sure to be networked up to the bigger, chaotic systems that populate the metaverse.  So again, at the level of communications, you have to treat the components you communicate with as black boxes.<p>If you disagree, give me a feasible scenario in which you could in fact take control of the situation in a reductionist fashion.  I propose that any such scenario is a toy problem, that will not scale to real-world deployment.<p>The cat is already out of the bag.",1238309017
537178,comment,536458,536458,0,0,erlanger,,,"This document is covered with ""FAIL"" stamps, but they didn't even mention HAProxy as a load balancer! Anyway, I think that slide 135 is what most people do, maybe adding a DB cluster.",1238308973
537177,comment,536958,537046,0,0,mdolon,,,"Out of curiosity, where are you located?",1238308825
537176,comment,536572,536762,0,0,st3fan,,,"Of course there is more to it. But every app starts with a (unique) idea. Think of it as a stealth startup. We do that for a reason too ...",1238308798
537175,comment,536718,537167,0,0,mahmud,,,"I found ""abstract NLP"", specially their use of Chomsky's work, a bit of a voodoo. I have worked through Bandler and Grindger with a pencil for months, and eventually became disenchanted with the faux-science aspects of NLP.",1238308593
537174,comment,537000,537145,0,0,wayne,,,"For every awesome PhD who can code, there are 3 who forgot how to code, never coded anything beyond a toy, or are too good to code what we code.  Maybe all the good ones get snagged up by Google.",1238308476
537173,comment,530605,534834,0,0,danbmil99,,,"swing sucks almost as hard as AWT.",1238308280
537172,comment,537000,537145,0,0,chancho,,,"The reddit thread (<a href=""http://www.reddit.com/r/programming/comments/888km/how_a_programmer_reads_your_resume_comic/c08isni"" rel=""nofollow"">http://www.reddit.com/r/programming/comments/888km/how_a_pro...</a>) on this point gives some insight into the mind the person who holds such a prejudice. Apparently, PhDs can't code, take too long to solve problems because they want to solve them utterly, and are difficult to work with. This is news to me, but it appears to be a popular sentiment among rank-and-file coders. You could make a lot of guesses as to why this perception exists, or even if it's correct. Maybe it has to do with the caliber of PhDs that apply for rank-and-file coder jobs, or maybe it has to do with the caliber of shops that hire redditors (oh snap.)",1238308206
537171,comment,530605,533409,0,0,danbmil99,,,"It's not that PhysX or ODE aren't good enough, it's that they only solve part of the problem.  We did do some empirical analysis to get the pneumatic models.<p>""Brute force the problem by using large amounts of real-world data, is what I'm getting at.""<p>Absolutely, that is Trevor's viewpoint, and I agree.  Turns out to be somewhat difficult in practice.  It's hard to even know what all the parameters should be, much less do all the work necessary to tune them.  And all the while, the robot itself is changing.  Joints get loose; servos get replaced.  It's a constant battle.<p>There is a feeling among hard-core robotics folks that this level of simulation is either impossible or not worth the trouble.  I tend to disagree.  I think we got pretty far with the Anybots simulator; we did manage to evolve a neural network that balances on the simulator, and also balances the real robot.  It's definitely a 'hard' problem to get a simulator good enough to be usefully predictive.",1238308112
537170,comment,536958,537006,0,0,einarvollset,,,"Your loss.",1238308014
537169,comment,536764,537148,0,0,rjurney,,,"You aren't just selling, you are learning.<p>You are very unlikely to get it right based on a hunch without multiple iterations with real customers.  That means that you will end up iterating whether you build it or not.  So its best to first iterate without building: you get more iterations and less wasted development that way.<p>As the interview explores, that doesn't mean building nothing, but it does mean validating an idea first and foremost.<p>I understand that this can be frustrating for a developer.  We tend to think, 'if we build it, they will come' and we don't like sales.  But personally I've wasted too much time building elegant software... nobody much wanted, to build new stuff without validating it first.<p>If you ""don't get"" this interview, I would suggest a second listen.  It contains a critical lesson.",1238307978
537168,comment,536865,536865,0,0,Kaizyn,,,"Bugtracking doesn't matter if you aren't working for a profit-seeking enterprise or other enterprises that pay people to write software for them.  For these situations, telling the users to fix the bug themselves and send in a patch will never ever fly.",1238307916
537167,comment,536718,537071,0,0,c00p3r,,,"The Man-Month is enough! =)<p>Btw, there is another 33 years old book which is still worth reading - <a href=""http://www.amazon.com/Structure-Magic-About-Language-Therapy/dp/0831400447/"" rel=""nofollow"">http://www.amazon.com/Structure-Magic-About-Language-Therapy...</a>",1238307837
537166,comment,537113,537134,0,0,donw,,,"Reminded me a little of a Tachikoma.",1238307726
537165,story,,,9,2,swannodette,"Designed as Designer",http://dreamsongs.org/DesignedAsDesigner.html,,1238307667
537164,story,,,3,1,greg,"Take the tedium out of building charts in Flash",http://extra.amcharts.com/editor/column/,,1238307650
537163,comment,537022,537022,0,0,gojomo,,,"Whatever happened to Trilogy?",1238307612
537162,comment,536485,537020,0,0,danbmil99,,,"The fact that it was turned down speaks volumes.",1238307392
537159,comment,536764,536878,0,0,jfarmer,,,"This is an old trick out of the direct marketing handbook, BTW.  Direct marketers would send out mailers for lots of different products, asking people to respond if they were interested.<p>They then gauged market demand by the response rate.<p>I think this technique might actually be illegal when done over snail mail nowadays.",1238307009
537158,comment,535797,536251,0,0,paulgb,,,"Google Answers had incentives and was much better for it.",1238306959
537157,comment,536485,536485,0,0,danbmil99,,,"Chevy Chase spoke at our HS graduation, and as best I can recall, he told us that adults are jerks, it's fun to smoke pot (he said it euphemistically but we all knew what he meant), and not to take things too seriously.  I think he was pretty stoned at the time.",1238306776
537156,comment,537113,537113,0,0,danbmil99,,,"I've always believed that robotics is much like architecture or the best of industrial design.  It's a meld of art and science.  Form and function must flow.  Don't try this with a committee.",1238306585
537155,story,,,14,0,jmathes,"Lessons from GDC: Restrictions Fuel Creativity, And That’s Why Stealth Games Were Invented",http://joblivious.wordpress.com/2009/03/29/restrictions-fuel-creativity-and-thats-why-stealth-games-were-invented/,,1238306578
