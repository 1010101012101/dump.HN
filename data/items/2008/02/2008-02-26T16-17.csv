ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
123963,comment,123903,123944,0,0,iamelgringo,,,"Honestly, if you're going to make a serious study of the subject, I'd suggest an O'Reilly Safari subscription.  For $15 a month, you get access to 10 books at a time.  For $40 a month, you get access to their entire library.  I'm not a shill for the service, I just really like the service. It's well worth the cash.<p>Online tutorials are good for a quick, down and dirty overview of a topic.  But, if you're going to learn something a bit more in depth, I'd think that you're better off looking at a book.  It's pricey, but it's worth it for me.  I figure I'd spend $40 a month on tech books anyway.  I'd might as well pay them and get the whole library as well as the Lynda.com video all at the same time.<p>Also, if you're really serious about it, I might consider finding a web database development class or certificate program somewhere.   It might be slower going than you want, but you'll have a more complete understanding of the subjects once you were done.",1204045081
123962,comment,123847,123847,0,0,mberning,,,"I always like it when a billionaire says ""To focus on what you don’t have is a terrible mistake. With the gifts all of us have, if you are unhappy, it’s your own fault.""<p>Is it so much for a person to want to own their home, have a personal savings, have health care, and be able to retire at a reasonable age? I don't think it is a 'mistake' to want for any of these things, and sadly, there are a good number of people in the world that this is not accessible to.",1204044999
123961,comment,123786,123802,0,0,goofygrin,,,"eek.  I've not have good experience with any of those sites...<p>Craigslist has been the worst.",1204044943
123960,comment,123693,123693,0,0,goofygrin,,,"You just gave me tired head.<p>Unless you really want to deal with all this blitting stuff, I recommend that you look at making flash games.  You get to deal with the more interesting problem (to me) of making a fun, playable game vs. dealing with the nuts and bolts of graphics programming.<p>Also ask those guys at popcap how their financials look.  I bet they aren't doing too poorly :)<p>For about 3 years, I've said that the minigame will rule the world and it it beginning to turn that way.  Look at 90% of the Wii games and they are all minigames.  Games like Peggle and the downloadable content for XB360 are all minigames that make bank.",1204044805
123959,story,,,1,1,Ztrain,"Google Adwords: the reality",http://mybizexperiment.blogspot.com/2007/09/google-adwords-results-after-one-month.html,,1204044777
123958,story,,,4,1,jmorin007,"Which Social Network Is Down the Most?",http://www.centernetworks.com/pingdom-social-network-downtime,,1204044735
123957,comment,123903,123944,0,0,food79,,,"I wouldn't spend too much time deciding between the two--they are more or less functionally equivalent, so just pick one and don't look back.<p>Python is a little more ""corporate"", with a little more regimented style (e.g. significant whitespace, PEP style guide - <a href=""http://www.python.org/dev/peps/pep-0008/"" rel=""nofollow"">http://www.python.org/dev/peps/pep-0008/</a>). CherryPy is super-simple to get started.<p>Ruby is a little more ""hacker"", with a more idiosyncratic cast of characters such as DHH and _Why and a little more focus on coolness and tricks. Rails is the way to go, but you can get up and running with the basics with the Camping Framework in about 10 minutes.",1204044695
123956,comment,123903,123944,0,0,mrevelle,,,"If you do decide to go with Python, web.py (<a href=""http://webpy.org/"" rel=""nofollow"">http://webpy.org/</a>) is simple and you'll be up and running fast.<p>If you're interested in how it all works, dig into WSGI.  And if you find that web.py is too low level, transition to Django after you have a feel for how web apps work.",1204044633
123954,comment,123903,123942,0,0,nickb,,,"I agree. Rails is currently the way to go. It's much more mature than Django and has more flexibility and more mature gems/plugins.<p>Lynda tutorials are great. I'd also recommend free ones:<p><a href=""http://railscasts.com/"" rel=""nofollow"">http://railscasts.com/</a><p><a href=""http://www.akitaonrails.com/2008/2/1/rolling-with-rails-2-0-pdf-version"" rel=""nofollow"">http://www.akitaonrails.com/2008/2/1/rolling-with-rails-2-0-...</a><p>And for-pay ones at <a href=""http://www.peepcode.com"" rel=""nofollow"">http://www.peepcode.com</a><p>Also, grab ""The Rails Way"" book by Obie Fernandez (it's THE BEST book on Rails.. when you learn the basics, it's better than 'Agile Web Development with Rails') and  ""The Ruby Way"" by Hal Fulton.",1204044532
123953,comment,123376,123376,0,0,daniel-cussen,,,Nice.,1204044356
123952,story,,,1,0,jmorin007,"How to Tamper in God's Domain (with screen printing)",http://www.37signals.com/svn/posts/867-how-to-tamper-in-gods-domain-with-screen-printing,,1204044107
123951,comment,123880,123940,0,0,ntoshev,,,"You don't need to make downgrading easier than this ;)",1204044012
123949,comment,123903,123903,0,0,topcoder8,,,"My advice is to pick a language and go from there. Start with either PHP, Ruby or Python. Once you are comfortable with the inner workings of the language, then move forward with an agile development framework. Depending on which language you finally chose you will find open source frameworks for each:<p>Ruby: Ruby on Rail, Merb
PHP: CakePHP
Python: Django<p>I truly think that understanding the language itself will help a lot before jumping into the framework.",1204043867
123948,comment,122748,123404,0,0,col,,,"We're a site geared towards people looking to travel overseas. I'm not sure how much airlines and so one would be willing to spend on advertising with us, but this thread is inspiring anyway :)",1204043835
123947,comment,123060,123579,0,0,fiaz,,,"Oh, one more thing...<p>I would like to add that the first example of telling the circuitry ""go"" and ""stop"" implies some processing on behalf of the circuitry such that it has an understanding of the meanings behind these symbols.  This conveyed to me in some way that the author of the article was indicating that the circuitry had an understanding of these words (hence my lengthy discussion of symbol vs signal).",1204043677
123946,story,,,26,42,Readmore,"MacBook Pros updated today - Good time to buy",http://www.apple.com/macbookpro/,,1204043665
123945,comment,123175,123175,0,0,topcoder8,,,"Wow.. thanks everyone for the valuable advice..<p>After reading through all the comments, I do feel Bookmarklet is the way to go. However my only concern with Bookmarklets is there's no way on updating an user's bookmarklet automatically, so if you need to change something, you pretty much have to email all your users to remove their current bookmarklets and setup the new one. correct?",1204043446
123944,comment,123903,123938,0,0,german,,,"Thanks a lot, you really understood my problem :)
I don't want to learn PHP, now I have to decide if it's going to be Python or Ruby.<p>Can you please point me some of the information sources you used.<p>Thanks again.",1204043413
123943,comment,123697,123697,0,0,Readmore,,,"I think this is a really smart move. This could make Yahoo search something more enjoyable to use than Google. I personally like the added 'widgets; of Ask search but their results aren't as good. I think Yahoo is much closer in quality to Google so something like this could really help them.",1204043365
123942,comment,123903,123903,0,0,rapind,,,"Ruby on Rails. I recommend following a screencast tutorial, like the ones at lynda.com <a href=""http://movielibrary.lynda.com/html/modPage.asp?ID=324"" rel=""nofollow"">http://movielibrary.lynda.com/html/modPage.asp?ID=324</a><p>Sure rails hides a lot but it'll introduce you to some best practices, like the concept of MVC etc.",1204043330
123941,comment,123880,123880,0,0,brk,,,"Most of the time you can't downgrade if you're over a limit.  You would have to delete users, files, whatever, and then downgrade.<p>Or, you're charged an overage fee until you've cleaned out the excess bits.",1204043169
123940,comment,123880,123930,0,0,jam,,,"Right, that's the obvious solution. I'm still curious to see if anyone has come up with a different way of doing things, though.",1204043088
123939,comment,123693,123837,0,0,jcl,,,"Some arguments I have seen for dynamic typing:<p>- Code is shorter and potentially easier to read.<p>- While static typing can identify some bugs at compile time, these are usually the easiest bugs to find regardless of the language you use.  The hard bugs -- the ones not caught by the compiler -- only become obvious through testing.  So if you have a good suite of tests, you will find both classes of bugs, whether or not you use a statically typed language.<p>- In a dynamically typed language, you spend less time wrestling with the typing system -- instead of casting in C or Java, doing long template-related declarations in C++, or convincing ML or Haskell that your program should be allowed to run.<p>- And, more theoretically, a statically typed language limits the space of programs that you can write.  While most of the programs disallowed by static typing are buggy, some are useful, and a statically typed program with the identical useful functionality is longer.<p>Of course, static typing has its benefits as well.  It's the reason our fastest languages are as fast as they are, and it's a comforting safety net, especially in large projects.",1204043015
123938,comment,123903,123903,0,0,iamelgringo,,,"I had a similar issue a year or so ago.  I tried to jump right in to a web framework, but I ran into a few problems.  Like so much in the technology world, web frameworks grew in response to a certain set of problems.  If you dive into web frameworks without having a least a rudimentary understanding of the problems that are being solved, you'll end up puzzled more often than not.  So, when I picked up a bunch of Rails books, and started to work through them.  So much of it was confounding, because so much of Rails is developed in response to problems in PHP + Java web development.<p>You could just say, ""Screw it all,"" pick up a PHP book and dive in head first.  You'll pick up some pretty bad habits along the way, but it depends on how you like to learn.<p>Here's a syllabus that I'd suggest to really get your head around web programming and understand what's going on:<p>HTTP--learn the basics of what the protocol does, and why.  Learn the different response pages, because they are going to be your error messages.<p>Web servers--you just need a 100 ft overview.  Learn how to setup and configure a web server.<p>Programming--You need to pick a language, Python or Ruby and learn how to at least do some basic programming with it.  I'd recommend Python, personally.  It's more explicit, and has less ""magic"".  You probably need to understand variables, iteration or looping.  You need to understand some basics of the object oriented programming concepts like methods, classes and scoping.  And, if you're going to get into any of the web frameworks, you need to understand what things like a dictionary and array are.  At least a basic understanding of regular expressions are necessary to learn Django's URL naming convention.  The better you know programming itself, the better web developer you'll be, and more things will become possible for you to program.<p>CGI --  This is the ancestor to pretty much all dynamic web pages, and the foundation of most web development.  Pick the language that you're learning, and go through some tutorials  on CGI scripting for the language you're going to focus on.  And, this will help you understand the basics of what goes on in the address bar, GET and POST methods of the HTTP protocol.  You'll also get familiar with the idea of taking variables and inserting them into HTML templates dynamically, which is the basis of most web frameworks.<p>Learn SQL, and database basics.  You need to understand what a database is, how to create a database, why databases are important, how to create and drop tables, how to do queries, etc...  Having at least a basic understanding of relationships, foreign keys and constraints is helpful when reading some of the web framework documentation.  You really should understand how to do a query in SQL, just so you can understand what the web framework is doing for you.<p>Finally, pick up a web framework, and start to work through it.  After learning the above, learning the web framework will tend to make a lot more sense than if you dive into a web framework deep end first.  Pick the framework that's most popular for your language, that way, you can be assured you will have plenty of documentation to work with.  I'd recommend Django for Python, and Rails for Ruby.<p>Lather, rinse, repeat.  Iterate through the above steps, and learn more and more each time you approach each subject.",1204042969
123937,comment,123697,123876,0,0,ntoshev,,,"Alexa Web Search is a little deeper, but it also doesn't give you an API to the inverted index itself.",1204042940
123936,comment,123880,123880,0,0,bradg,,,"Try to structure your service with monthly allotments. So instead of a total of 5GBs, allow 1GB per month.<p>Also, from an implementation perspective; make sure that to run an upgrade/downgrade all you need to do is change some database field values. You do NOT want to be running code that has to go through and change a bunch of stuff.<p>For users... keep them around; just disable their login. We're going to be implementing multiple users in our application and we are going to handle downgrades by simply maintaing an ""ordered list"" of users. So you have 20 users on your account w/ 20 max in that plan. If you downgrade to a 10 user plan, we ""gray out"" and ""disable"" the ""bottom 10"" users. The administrator can rearrange the disabled users towards the top of the list, which will ""re-enable"" them.<p>This raises another important point with our approach; we keep all of the users data so that when they downgrade, they can see that all of their shit is there but some of it might be disabled (don't hold your users data hostage or they will get PISSED! Note how for our users approach we don't just disable users willy nilly. The admin/user has control). If they can see their data is there, just not ""usable"" w/o an upgrade... they might be tempted to upgrade again.<p>Good luck implementing all of this! It truly is a pain in the ass. Just keep it all data driven and your life will be much easier.",1204042833
123935,comment,123354,123815,0,0,ntoshev,,,"There's nothing wrong with being just coder, although they seem to be scientists too. To me their approach to data demonstrates that scientific method has become a viable way of doing business. The recent bestseller Super Crunchers seems to try to establish this as a trend:<p><a href=""http://www.amazon.com/gp/redirect.html?ie=UTF8&location=http%3A%2F%2Fwww.amazon.com%2FSuper-Crunchers-Thinking-Numbers-Smart%2Fdp%2F0553805401&tag=descidecom-20&linkCode=ur2&camp=1789&creative=9325"" rel=""nofollow"">http://www.amazon.com/gp/redirect.html?ie=UTF8&location=...</a>",1204042800
123934,comment,123828,123924,0,0,robg,,,"If it's your restaurant, you do! Now, if you want to stay in business better to offer a few dishes (not a buffet) that people would kill to eat delivered by cooks who love great, simple food.<p>(And yes, we can run with this line of thought all day. Mmmmmmm, embodiment.)",1204042601
123933,comment,123828,123898,0,0,xirium,,,"You may be interested in The Paradox Of Choice - Why Less Is More ( <a href=""http://video.google.com/videoplay?docid=6127548813950043200&q=engedu"" rel=""nofollow"">http://video.google.com/videoplay?docid=6127548813950043200&...</a> ).",1204042596
123932,comment,122829,122829,0,0,fiaz,,,"Definitely a cool thing.  I wish I didn't stop with my Scheme programming 3 years after my SICP class!  It would have helped dive into all this LISP code...<p>...now if only PG would share with us how to grow an online community of thinkers...",1204042431
123931,comment,123903,123903,0,0,rrival,,,"Spend some time on intro cs theory/topics - freelance PHP 'scripters' whose understanding of structured logic is abysmal are everywhere and they tend to start with HTML and go horribly astray.",1204042365
123930,comment,123880,123880,0,0,RyanGWU82,,,"Ummm, normally you wouldn't let a user downgrade until they remove enough data that they fall under the lower limit.  Doesn't seem that difficult...",1204042230
123929,comment,123693,123861,0,0,pistoriusp,,,"I couldn't use pygame on os x because it required a dependancy that wouldn't compile, I'm not sure which dependancy is was.<p>Pyglet has no dependencies and I just found it a lot simpler than pygame to get started with.",1204042069
123928,comment,123788,123788,0,0,fiaz,,,"I think there is an improper use of the term ""disruptive"" in this article.  Case in point:<p>THE DISRUPTOR: Zink<p>THE DISRUPTION: Inkless printing<p>THE DISRUPTED: Desktop printers, ink cartridge resellers, and photo services<p>The reason why this is inapplicable is because there are perhaps more compelling reasons to use regular paper in an office setting instead of ""special"" paper.  Furthermore, the headache of ""toner low"" messages are not as much of an annoyance as ""oops I'm using the special paper to scratch some notes on!  I better get the 'normal' paper before I get busted!"".  Also, it seems to me that having to retool for the sake of avoiding ""toner low"" messages to be replaced by ""need more special paper - NOT THE PAPER YOU USED IN THE PAST!!!"" is not much of a disruption.<p>I also fail to see how BlinkX, Expensr (any name with a consonant followed by 'r' fails to resonate with me anymore and I just think that the founders are riding the coat tails of a 4 year old phenomenon), and PatientsLikeMe qualify as ""disruptive"".<p>The others seem to be quite interesting.",1204042050
123927,story,,,2,0,kirubakaran,"Unit Testing Resources",http://codeulate.com/?p=13,,1204041878
123926,comment,123903,123904,0,0,illicium,,,"Pylons and CakePHP are also quite good frameworks, if you're into that kind of thing, but I'd also suggest writing something simple in PHP (which is pretty much still <i>the</i> webdev language these days),",1204041778
123925,comment,123754,123754,0,0,brlewis,,,"Any arguments for/against the following?<p>Quote: the ""build it and they will come"" mentality is a fallacy. You need to build something great and have distribution in order to succeed. And distribution is hard to get.",1204041758
123924,comment,123828,123911,0,0,jkush,,,"I agree with you. What I'm more interested in however, is who really gets to say what dishes are on the buffet? The cooks? The consumers? My gut tells me the consumers have a lot less choice than it appears.",1204041701
123923,comment,123509,123509,0,0,pchristensen,,,"Lesson learned:  creating a profitable, repeatable business process is more valuable than being an excellent piece of that process.  That's something every startup founder should always remember.  Google is more than its engineers, Goldman Sachs is more than its IBankers, Hollywood is more than its stars, etc.<p>Companies are engines that turn money into more money - everything else is just a part in that engine.  Maybe you can make more money being a part in a big engine than owning your own small engine, but don't complain if the owner of big engine swaps you out.",1204041619
