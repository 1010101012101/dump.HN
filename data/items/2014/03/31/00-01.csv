ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
7498835,comment,7498442,7498812,14,0,daenz,,,"Yep.  If they&#x27;re really receiving death threats, that&#x27;s something they take up with the authorities.  Articles like this are just a transparent attempt at getting brand sympathy.  They do nothing else.",1396227599
7498834,comment,7482017,7483919,1,0,wpietri,,,"Interesting. I hadn&#x27;t considered whether anti-discrimination laws would constrain him from expressing his political opinions at work.",1396227597
7498833,comment,7498455,7498802,3,0,brianchu,,,"There&#x27;s a difference between assigning an anonymous function to a variable and declaring a named function. It&#x27;s the difference between:<p><pre><code>    var funcName = function(){}\n    function funcName(){}\n</code></pre>\nThe problem is that using named functions involves nuances that can be confusing. Generally it&#x27;s considered idiomatic to just avoid named functions altogether. You can read about some of the nuances here: <a href=""http://kangax.github.io/nfe/"" rel=""nofollow"">http://kangax.github.io/nfe/</a>",1396227544
7498832,story,,,42,81,phsource,"Is the U.S. stock market rigged? [video]",http://www.cbsnews.com/news/is-the-us-stock-market-rigged/,,1396227543
7498831,comment,7497130,7498572,1,0,brudgers,,,"The Haskell compiler will complain if I am writing wrong Haskell code, or more generally when the types are indeterminate  and can&#x27;t be inferred.<p>This not the same as &#x27;wrong code&#x27; in the abstract. The code will run fine if I don&#x27;t pass in mismatched data, or more generally bad data. And if I am passing in bad data, static typing doesn&#x27;t give me good answers, it just keeps the program from crashing. Don&#x27;t get me wrong, there are times when crashing is bad. But there are times when the cost of a runtime error is nominal and the value of flexible code is high.<p>Static typing trades one type of cognitive overhead for another. The Java program of 500 classes is its manifestation.",1396227524
7498830,comment,7494705,7494705,3,0,rbanffy,,,"Working excessively long hours has obvious negative impacts on a programmer&#x27;s performance. If you do it constantly, instead of being considered a hero you should be considered a liability. Would you board a plane with a pilot who flies, say, 300 hours a month<p>I am fine with chasing a bug for hours every once and then or to extend your schedule when your muse pays you a visit, but if you do it so frequently that it starts impacting your performance negatively, you should stop out of consideration for your colleagues.",1396227523
7498829,comment,7496261,7498585,2,0,wslh,,,"I forwarded your comment to the right people in my company.<p>In the meantime have you tried to ask these kind of questions in <a href=""http://reverseengineering.stackexchange.com/"" rel=""nofollow"">http://reverseengineering.stackexchange.com/</a>",1396227490
7498828,comment,7497130,7498206,3,0,massysett,,,"<p><pre><code>    data Foo = Foo\n        { bar :: !String\n        , baz :: !Int\n        }\n</code></pre>\nThis is actually a great illustration of why &quot;making data fields strict&quot; is a lot more tricky than it sometimes looks. All that<p>>  bar :: !String<p>is going to get you is the first cons cell in weak head normal form.<p>If my string is &quot;Hello&quot;, then in unevaluated form I have<p><THUNK><p>Using the strict data field gets you weak head normal form, which is<p><THUNK>:<THUNK><p>Probably not what you had in mind.  As far as Haskell is concerned those two thunks might be<p>undefined:undefined<p>Using a strict Text will get you where you want to go, because when you reduce that to weak head normal form you will get a fully formed Text.<p>Watch out with lists, which is all that a String is.",1396227484
7498827,comment,7483729,7497455,1,0,taeric,,,"I&#x27;m not sure what I&#x27;m reading here.  First thing to remember, is that Netscape 4 was pretty rushed and terrible.  To the point that I remember thinking of how awesome IE was at a few points.  And I already had a large distrust of MS.<p>That is, MS used some underhanded tactics to gain market share.  They also took advantage of (and probably forced) a major misstep by a competitor.<p>That Phoenix/Firefox was able to be resurrected from the ashes is a fortunate occurrence, but at no time did that at all come of as if it was planned.  I pretty much consider it the &quot;classic coke&quot; of the browser wars.  (Remember, phoenix was originally Mozilla&#x27;s suite, stripped down to just the browser.)<p>So, yes, it has gone rather well.  However, I&#x27;m not sure the codebase can afford to survive the death of its stewardship again.  The statistics show a clear dominance of &quot;not Mozilla&quot; historically.<p>To the point that I&#x27;m not all sure on what you are basing your claim of Mozilla &quot;now setting the pace.&quot;  Don&#x27;t get me wrong, I&#x27;m glad it is doing well.  It is my browser of choice.  However, I realize I am the minority both in my friends/family and statistics.<p>Which is funny.  In my family, the browser choice is either Safari or IE.  Depending on OS of choice.  In my friends, it is Chrome.  To the point that I&#x27;m not even clear what lessons are to be learned from these choices, honestly.<p>So, back to the point.  How were the pundits wrong?  Did AOL/Netscape somehow come off well by the rewrite?  Was it a sound investment?  If anything, I would think the continued active development of the non-servo codebase shows that it is sound advice <i>not</i> to bet the company on a rewrite, and that they learned it.  Are you really claiming otherwise?",1396227451
7498826,comment,7496968,7498654,5,0,seanmcdirmid,,,"> Edit, let me try that point again, because I don&#x27;t think that was very clear. You may design iteratively, but you&#x27;re still designing. ... You have more tools than that, so as a metaphor evolution as a designer can be described by a simpler ontology.<p>I would claim that our process of building things very much follows the process of evolution even if we have the ability to design explicitly rather than perform random mutations follows by natural selection. Our ability to classify things and carry over implementation fits with this way of building. OOP is not just a way of implementing a design, I would say this is actually secondary: its a way of coming up with a design in the first place where you really don&#x27;t have it all down in your head before you start coding.<p>This is what so annoys me about Haskell: it works very well when you can figure out everything before hand; in fact, you are expected to think long and hard about your problems because its language abstractions are very unforgiving otherwise.<p>Haskell designs are then elegant out of necessity, and this is very limiting when you just need to get something done (aka worse is better). OO implementations are typically over-engineered and less elegant, not because OO thinking is somehow defective, but because elegance is not required to encapsulate complexity and just get something working.<p>> My point there was that if you had choose one axis on which to classify parts of your code, implementation details wouldn&#x27;t likely be it. A fool&#x27;s errand in general, I suspect, but at any rate not possible under the class inheritance model (single or multiple).<p>Implementation details provide the strongest signals of similarity than artificial interfaces. If you were going to let a DNN or RNN classify your code, it would probably be along this axis as well as with how the code was actually used.<p>> That you have to choose is a consequence of the strict single-inheritance model here.<p>I rarely let myself be constrained by single inheritance, even when I&#x27;m coding in C# I have my mixin patterns handy (ya, more boilerplate, but I can type fast; all my own languages support mixins).<p>> Completely classifying a software abstraction is identifying the point n-dimensional space that describes it in terms of all the different ways to categorize it.<p>I agree, but if we aren&#x27;t limited by single inheritance (say linearized multiple inheritance via mixins...or gasp...aspects), then this argument no longer holds.",1396227446
7498825,comment,7498573,7498691,1,0,m1sta_,,,"Can you see an argument for how both physical property rights and intellectual property rights are both government granted rights?",1396227429
7498824,comment,7498442,7498442,1,0,bhouston,,,"Oculus VR was in trouble soon as Sony and Microsoft started to develop very quickly their own VR headsets.  There was just very little market let for Oculus VR that mattered.  I think they basically took advantage of Facebook with some grand and likely unrealistic vision.<p>I would be surprised if Oculus VR ever lives up to its vision.  Rather we will be using Sony and Microsoft VR headsets in the next decade if VR does in fact go mainstream for gamers -- which is still up in the air I think.",1396227403
7498823,comment,7496332,7496332,3,0,shirro,,,"Not picking on this tool specifically but I see these sorts of things posted on HN a bit and I am struggling to understand the appeal. So genuine quesion: I can understand it is a fun task to build but what advantages does it bring in real world use? Is it just a novelty thing or do people use these sorts of tools and if so why and what advantages do they have over ssh/cli?<p>My sysadmin brain is always looking to reduce the dependencies and the attack surface. Ideally I want less services running on less ports. Less software to install, maintain and secure. As a result I stick to ssh and shell most of the time. Generally any admin tool that has big library dependencies (eg anything python, node.js or ruby) is on my shit list. I am a bit more sympathetic to Go because of the single static exe but otherwise I prefer plain old shell.<p>I understand historical graphs are nice to look at and time series data is one of the areas where web tools are a win. Though I am probably more likely to look at alerts based on triggers than watch a graph in real time. I don&#x27;t understand what advantage tables of process stats in html offers over the same in the cli.",1396227370
7498822,comment,7498409,7498409,2,0,typicalbender,,,"I don&#x27;t know anything about how Dropbox or Turtl handle data and when they do their encryption but it would still be possible for Turtl to do hash level checking even with client side encryption. They could just hash the file and encrypt it all client side and then send both back to the server. It seems that this article is insinuating that Dropbox has full access to your data (which I dont know is true or not).",1396227369
7498820,story,,,1,0,mjb,"The Essential Leslie Lamport",http://brooker.co.za/blog/2014/03/30/lamport-pub.html,,1396227332
7498819,story,,,1,0,luu,"Rote learning and programming",http://dpb.bitbucket.org/author/david-prager-branner.html,,1396227287
7498818,comment,7496522,7498061,3,0,olalonde,,,"Your Javascript example is a bit contrived too. How about:<p><pre><code>  foods.filter(function (e) { return e !== &#x27;chocolate&#x27;; }).forEach(eat);\n</code></pre>\nRegardless, I disagree that the Coffeescript example is more readable. My brain is much faster at parsing symbols (`(`, `{`, etc.) than english words.<p>With your JS example, without having to read the words, I know there&#x27;s a loop, a conditional and a function invocation. I also know that I can safely add statements after this piece of code without worrying it might break some other function (in Coffeescript, I&#x27;d have no way to tell if the implied return really mattered or not assuming it was the last line of a function).<p>With your CS example, I have no way to tell what&#x27;s going on until I&#x27;ve read the full sentence. I have to read every word and see if it matches one of the many reserved keywords in order to determine if it has a special meaning or if it&#x27;s just a regular variable.<p>In Javascript, you have a few reserved words but the list is relatively short and those words are almost always preceded by a line break or a symbol.<p>Maybe our brains work differently...",1396227257
7498817,comment,7497665,7498724,0,0,mahyarm,,,"I think the cost of medical care was probably cheaper, the liabilities less.  I was a kid then so I don&#x27;t actually know.",1396227251
7498816,comment,7498564,7498790,4,0,kome,,,"Public money saved him.",1396227225
7498815,comment,7498286,7498693,1,0,yeukhon,,,"Yeah that definitely helps clarifying the issue, I think.<p><i>As long as Openstack only use Apache licensed code >>from MondgoDB Inc.<< and diligently avoids using any open source contributions from any community contributor to the MongoDB ecosystem, then you remain compliant the your CLA. </i><p>I wouldn&#x27;t have known the APGL licensed database and the conflict with MongoDB, Inc. licensed code and community code. I guess now all ORM built upon pymongo used in commercial settings is that trouble zone then?<p>This is a huge bummer. Definitely an alert for those looking forward to use MongoDB at commercial settings as parent said.",1396227219
7498814,comment,7498198,7498678,1,0,quchen,,,"To be fair, if the place you&#x27;re trying to debug is not evaluated (be it due to laziness or because it&#x27;s generally dead code) that should be a pretty strong indicator something is wrong.",1396227211
7498813,comment,7496154,7498110,0,0,Snail_Commando,,,"This discussion is getting a little bit more political than I would have liked it to.<p>I responded to another comment in a little more detail:<p><a href=""https://news.ycombinator.com/item?id=7498742"" rel=""nofollow"">https://news.ycombinator.com/item?id=7498742</a><p>Maybe you&#x27;d like to take a look.<p>I&#x27;m not trying to make a statist or anti-statist argument (apologies if I am putting ideologies in your mouth.)<p>My entire point is that this is the best system that we have, given all the other alternatives. Experimental validation is incredibly expensive, and it really boils down to whether or not you think that private companies will risk billions of dollars in time and opportunity cost when other parties can rationally choose to &quot;strike last&quot; or &quot;invest last.&quot; It&#x27;s more of a game theory argument than a political one.<p>It&#x27;s certainly possible that there are solutions to this that don&#x27;t involve patents. <i>We just haven&#x27;t thought of one yet.</i> Patents have all kinds of other undesirable baggage that people want to get rid of. If we come up with a better system, then we&#x27;ll do it.<p>In order for our drug discovery process to continue if we abolish patents tomorrow, the following has to be true:<p>Pharmaceutical companies will still find it rational to stake money on clinical trials that may or may not yield the results necessary to ethically bring the drug to market. And they must still find it rational to do this while knowing that another rational company can just wait to hear the results of the clinical trial and just sell the drug effectively for free.<p>If you disagree with that paragraph, and more specifically, with what I said in the comment I linked, I would like to hear what you have to say.<p>I <i>am</i> open minded and I&#x27;m a little bit hurt that you are casting me off as having an unquestioning belief in any system, let alone one that I think is just barely good enough given the alternatives.",1396227207
7498812,comment,7498442,7498442,72,0,pekk,,,"Death threats are obviously inexcusable. This shouldn&#x27;t even have to be said.<p>But this is a classic PR strategy. When you do something that makes many people very angry, all you have to do is wait for someone to say something incivil. Then make headlines with whatever it is they said.<p>Then the message shifts to how you&#x27;ve been wronged. And any time anyone complains or argues against what you did, associate the critic with the death threats and demand that they distance themselves from them. At this point there is no way for the critic to be heard again, and the line of inquiry is broken. Either they halt their criticism and turn to apologizing for something they didn&#x27;t have anything to do with, exactly as if they were responsible - or they can be effectively smeared as supporting or even responsible for death threats. If not that individual, then whatever group they are part of can be effectively stereotyped as vicious animals who make death threats.<p>For example, this is what the Adria Richards people did when it became apparent that their case was controversial and Richards&#x27; actions were subject to criticism: they changed the subject to death threats, and the conversation of the original event never really resumed.<p>Actually, nobody really even has to say anything incivil in reality. It only has to be plausible that SOMEONE might send a death threat. (This is ALWAYS plausible; there are so many crazy people out there.) Then it&#x27;s easy to claim or fake the evidence.",1396227194
7498811,comment,7498474,7498743,2,0,adamnemecek,,,"That kind of depends on your background. I think that this book is recommended in some OS college courses as complementary reading since it describes a full blown OS and not some simpler OS that might be better suited for teaching purposes. You might want to find some OS college course that has materials available online, work through that and read this as you go along or when you are done with the course.",1396227171
7498810,comment,7498442,7498442,8,0,crazygringo,,,"Jesus Christ. <i>Death threats</i>? Harassing phone calls to their <i>families</i>?<p>I mean, I understand that a lot of the community supporting them has a visceral hatred towards Facebook. I don&#x27;t share the negative response towards Facebook&#x27;s purchase of Oculus, but I certainly understand where it&#x27;s coming from.<p>But <i>death threats</i>? That&#x27;s insane. What is <i>wrong</i> with these people??",1396227165
7498809,comment,7497533,7498085,1,0,ZanyProgrammer,,,"Alameda has piss poor public transit connecting it to Oakland. Plus the opposite side of the Oakland Estuary is Fruitvale, not exactly one of the more desireable areas to live in.",1396227148
7498808,comment,7498198,7498771,1,0,SamReidHughes,,,"Any.  (Maybe not something as simple C or Go, and nothing like Agda, but something like ML or Java or C++.)  There is something wrong with the grandparent post, because it&#x27;s not making an argument that distinguishes Haskell from other statically typed languages.",1396227137
7498807,comment,7498198,7498198,3,0,dllthomas,,,"Haskell&#x27;s biggest win is the power of its type system, including its ways of getting types places other languages simply can&#x27;t.<p>In C and Python, &quot;a statement&quot; is a different kind of thing than &quot;an expression&quot;.  Statements don&#x27;t &quot;have types&quot; - the expression that makes it up may, but the value winds up discarded and the type doesn&#x27;t matter (except maybe to produce a &quot;unhandled value&quot; warning, if you&#x27;ve set things up for that).<p>In Haskell, statements are just another kind of expression, and the types of those expressions determine how they get chained together.  This means I can leverage the type system to help me avoid new kinds of errors - want to be sure you don&#x27;t try to do I/O in an STM transaction?  Or access that variable from the wrong thread?  Or...  In Haskell, that&#x27;s straightforward.  In C, that&#x27;s not something you can express and you have to check it all by hand.",1396227131
7498806,comment,7497665,7497665,1,0,jamii,,,"In London, Parkour Generations runs kids parkour classes (<a href=""http://parkourgenerations.com/class?classtype=youth"" rel=""nofollow"">http://parkourgenerations.com/class?classtype=youth</a>). While they do have dedicated gyms most of the classes are still run outside, in keeping with the general philosophy of parkour. A lot of what is taught in these classes is not specific physical techniques but instead how to be aware of your own limits, how to push your limits safely and how to deal with fear. The effect on the confidence and maturity of the kids is incredible.<p>The general feeling of a lot of traceurs is that not only do padded floors and crash mats not keep you safe, but that training only in &#x27;safe&#x27; environments makes you dangerously complacent. Soft landings disguise lots of dangerous habits and it only takes an awkward angle or a turned ankle to turn that into a broken bone. Anecdotally, my only parkour injury occurred in NYC where (thanks to the wonderfully friendly NY police) I spent a few months only training indoors in a padded gym.",1396227130
7498805,story,,,2,2,saadmalik01,"Selfies Are Far More Dangerous Than You Think",http://www.policymic.com/articles/86287/a-psychiatric-study-reveals-selfies-are-far-more-dangerous-than-you-think?utm_source=policymicFB&utm_medium=main&utm_campaign=social,,1396227126
7498804,comment,7497688,7497688,1,0,paulbaumgart,,,"I think the key point they&#x27;re missing is that most tech goes through a &quot;hype cycle&quot; of unreasonable expectations followed by a crash followed by slow, steady, solid growth[0]. That&#x27;s the same trend at play here: it&#x27;s not that the dotcom-bubble ideas were categorically idiotic, it&#x27;s just that many were premature and overhyped. Now, a lot of those ideas are being done right, and people with a weak grasp on the underlying tech can&#x27;t tell the difference.<p>0. <a href=""http://en.wikipedia.org/wiki/Hype_cycle"" rel=""nofollow"">http://en.wikipedia.org/wiki/Hype_cycle</a>",1396227123
7498803,comment,7498286,7498637,2,0,nevi-me,,,"Geolocation, specifically GeoJSON. That&#x27;s the main reason why I chose it (I started working on my app while it was at 2.0). When 2.4 came out with better geospatial indices (albeit basic compared to PostgreSQL+PostGIS) and GeoJSON support, I moved to using GeoJSON, and I am happy so far.<p>The website/app is at <a href=""https://rwt.to"" rel=""nofollow"">https://rwt.to</a> , and an example route search is; from &quot;Milky Way, Johannesburg&quot; to &quot;O.R. Tambo International Airport&quot;.<p>I should note that I&#x27;ve had a look at geocouch and it didn&#x27;t fit my use case, I&#x27;m not doing trivial &#x27;find my 3 places near [y,x]&#x27; queries, but am traversing a pseudo-network of routes to calculate directions. Neo4j also wouldn&#x27;t have worked in my case. TokuMX is based on MongoDB 2.2 as far as I&#x27;m aware, so them too.",1396227118
7498802,comment,7498455,7498455,2,0,dyladan,,,"Can someone please explain to me in a bit more detail what the advantage of not having named functions is?",1396227110
7498801,comment,7498573,7498691,2,0,m1sta_,,,"The United States did not invent the idea of intellectual property.",1396227100
7498800,comment,7498381,7498766,7,0,maratd,,,"> This is actually modern day slavery<p>Yes, it is. And contrary to the assertion of the article, this sort of thing happens pretty much in every town in the US.<p>If you owe the court money and you don&#x27;t pay ... you&#x27;ll be thrown in jail. Can&#x27;t pay the fine? Jail. Behind on your alimony payments? Jail. The government always gets paid.<p>The worst part is that the people who get caught up in this are not exactly model citizens. Not exactly a clear case for sympathy.<p>Regardless, debtor prisons are <i>barbaric</i>, period.",1396227080
7498799,comment,7496968,7498192,2,0,kibibu,,,"But this is an excellent example of where Shape <i>can</i> have concrete code in it though. is_inside is true iff the shape&#x27;s bounds are inside the rectangle. So assuming you have a means to test rectangle bounds:<p><pre><code>    bool is_inside(Rectangle enclosing_rect) {\n       return enclosing_rect.contains(this.get_bounds());\n    }\n</code></pre>\nNow you don&#x27;t need to implement cookie cutter is_inside methods everywhere, but rather the simpler get_bounds(). In fact, you can add is_inside after all your shapes are implemented and it will just work, as long as they have get_bounds.<p>Maybe you want to add some sanity checking to make sure bounds never have negative width, so you implement get_bounds() in Shape, and implement get_left(), get_right(), get_top(), get_bottom() in the child classes. Now you don&#x27;t have to add cookie-cutter assert(left < right) stuff everywhere, just in one place.<p>Other similar ideas: if you write an &quot;intersects(Point)&quot; method on each shape, then you can pull a <i>concrete</i> implementation of sampling-based area approximation up to the base Shape class, and leave analytical area calculation to the children. This is useful if you are working with distance-field, parametric or noisy shapes, for example.",1396227079
7498798,comment,7498564,7498792,3,0,Namrog84,,,"Yeah that site doesn&#x27;t seem to work for me on mobile either :/",1396227068
7498797,comment,7496231,7496569,1,0,bartvds,,,"I&#x27;m DT org member: I posted a big reply about DT further in the thread: <a href=""https://news.ycombinator.com/item?id=7498775"" rel=""nofollow"">https://news.ycombinator.com/item?id=7498775</a>",1396227040
7498796,comment,7498381,7498736,1,0,mdesq,,,"No worries. Thank you for submitting it. It <i>is</i> interesting and I personally don&#x27;t mind it. I was more commenting on the tendency (it seems to me) of HN to upvote different things than it used to. I also partly wanted to experiment and prove that the comment would be downvoted as I predicted. HN tends toward cliquishness, it seems to me.",1396227031
7498795,comment,7498207,7498684,1,0,Dylan16807,,,"When I say &#x27;particular&#x27; I mean someone notices the truecrypt volume being shared either semi-publicly or multiple times and files a DMCA for the volume itself.  Then you have to alter it or make a new one.",1396227018
7498794,comment,7497130,7497366,10,0,massysett,,,"&quot;There doesn&#x27;t seem to be any interest in the Haskell community in making tools to deal with this sort of thing&quot;<p>Actually there&#x27;s a great deal of interest in dealing with lazy evaluation and making it more explicit so that you&#x27;re less likely to leak resources.<p><a href=""http://hackage.haskell.org/package/pipes"" rel=""nofollow"">http://hackage.haskell.org/package/pipes</a>",1396226999
7498793,comment,7498286,7498685,1,0,h1karu,,,"There&#x27;s no need to go through all of that trouble.. Why not just use Cloudant until the BigCouch merge hits ? :)",1396226998
7498792,comment,7498564,7498564,3,0,lugg,,,"Anyone have a mobile <i>link</i> that works?<p>edit: link",1396226970
7498791,comment,7493856,7497000,3,0,waterlesscloud,,,"There&#x27;s no point in visiting the second page. Even if you upvote something there, it&#x27;s the only upvote it will get.",1396226956
7498790,comment,7498564,7498564,33,0,bane,,,"He doesn&#x27;t so much as say it, but show it in his eyes how much the NASA contract meant and how much passion he has.",1396226941
7498789,comment,7498409,7498409,2,0,carlosdp,,,"I mean, is not being able to take action on illegal file sharing when the feds come knocking really something to be proud of? It&#x27;s a liability from a company perspective, not a strength IMO.",1396226930
7498788,comment,7498409,7498627,5,0,mden,,,"Unless you are using it as an example of how your solution works differently. Which they are.<p>I don&#x27;t see anywhere that they are claiming their business is for copyright infringement, in fact, it doesn&#x27;t seem like it&#x27;s for mass distribution at all unless you give out your key, and then you just defeat the point of the service.",1396226916
7498787,comment,7497533,7498182,2,0,jessedhillon,,,"Why are you assuming the side shows in the video are gang-related? All I see is a bunch of guys -- actually remarkably multiracial, exactly the opposite of what a gang scene would look like -- enjoying car stunts. It&#x27;s pretty awesome AFAICT.",1396226915
7498786,comment,7497688,7498639,1,0,quaunaut,,,"Normally I&#x27;m not that kind of person! But at least once, it was such a nice surprise that we spoke for hours. I loved it.",1396226901
7498785,comment,7498474,7498772,3,0,adamnemecek,,,"You don&#x27;t know what you are talking about.",1396226898
7498784,comment,7498409,7498740,1,0,orthecreedence,,,"There should be a link on the top left (a logo of a turtle shell). If you click that it will take you to the main site.",1396226881
7498783,comment,7498485,7498774,1,0,voltagex_,,,"I didn&#x27;t realise that. I think there are a few different options but BountySource has nice GitHub integration and seems to be well known in the OSS community.",1396226864
7498782,comment,7492341,7498567,1,0,bane,,,"My impression of you is that the letters &quot;VR&quot; have short circuited your brian and caused you to forget that things have to still fit within the constraints of physics. Today, or with any possible future advancement. Hand waiving and &quot;advancement&quot; won&#x27;t ever surmount these constraints. Building towards a future that can&#x27;t ever happen is not a useful thing to do.<p>Things being hard are not a reason not to do things, things being stupid or impossible are.",1396226858
7498781,comment,7496968,7497427,2,0,jkrems,,,"Maybe that was a misunderstanding: I didn&#x27;t mean to say that interfaces should exist purely in the head of the programmer. I did say that implicit interfaces/protocols (Go, Objective-C) are better than interfaces that need shared dependencies (Java/pure virtuals in C++). If I had to order it I&#x27;d say: duck typing better than explicit interfaces; implicit interfaces that are backed by static type checks &quot;better than&quot; duck typing. The &quot;better than&quot; in quotes for the latter because it really is more about how much static analysis the language supports and it&#x27;s more a matter of opinion.<p>But I&#x27;m relatively convinced that interfaces/protocols that require coupling of implementations are clearly inferior to the ones that are implicit.",1396226843
7498780,comment,7498083,7498489,1,0,CocaKoala,,,"Sports are awesome. My fiancee is crazy into hockey; she grew up in Detroit and is a passionate fan of the Red Wings. After we got serious, I started tracking the Wings so I could chat with her about how the season is going, and now I have a lot of fun listening to their games on the radio and tracking their season (although this current season is pretty rough). I grew up in Seattle and this year&#x27;s football season + the Superbowl was incredible for me; I spent YEARS being salty over the 06 loss to the Steelers and the utter curbstomping of the Broncoes almost made up for it.<p>I wonder how this guy feels about the Olympics. Does he bitch and moan about &quot;ugh I can&#x27;t believe people watch this crap&quot; when people are rooting for Michael Phelps, etc?",1396226837
7498779,comment,7498198,7498725,4,0,quchen,,,"- Haskell types often guide development: the error message (&quot;type mismatch: expected blabla&quot;) gives you strong hints about what sort of error you&#x27;ve made. The magnitude of this one is hard to convey by merely writing/reading about it though.<p>- Easy wrapping to create new types: Ever switched the arguments of `mv` in your terminal (strings)? Read the User ID as an account balance (ints)? You can distinguish these statically, and it&#x27;s easy to do so. (You can of course write a wrapper class in C++ around Int as well a la &quot;class OtherInt { int value; int get(); set(int i) }&quot;, but how often do you do that?<p>- No IO in a type? It cannot do IO. Has &quot;Monad&quot; in the type? It can do Monadic stuff, but no operations specific to any Monad instance (such as Maybe, IO, ...).<p>- Types are forced documentation. Don&#x27;t get me wrong, no documentation is as awful in Haskell as it is anywhere else. However, even without any ordinary comment, a type can give away a lot of what a function does; maybe even more importantly, it tells you what it cannot do. If you see something of type `(a -> b) -> (a -> a)`, you know that the first argument cannot possibly be used - it has to be a dummy parameter.",1396226827
7498778,comment,7498442,7498705,4,0,waterlesscloud,,,"What here indicates cluelessness to you?",1396226822
7498777,comment,7496968,7496968,1,0,dangoor,,,"Something I haven&#x27;t seen mentioned in this discussion so far is the Data, Context, Interaction (DCI) pattern.<p><a href=""https://en.wikipedia.org/wiki/Data,_Context,_and_Interaction"" rel=""nofollow"">https://en.wikipedia.org/wiki/Data,_Context,_and_Interaction</a><p>As mentioned at points in this thread, some objects need different behavior based on their context. DCI is a thought provoking way to represent that (though one that not in common use and that is often described as &quot;being done wrong&quot; on the object composition mailing list[1]).<p>[1]: <a href=""https://groups.google.com/forum/#!forum/object-composition"" rel=""nofollow"">https://groups.google.com/forum/#!forum/object-composition</a>",1396226802
7498776,comment,7496261,7497042,5,0,sontek,,,"This is probably the most featured / well known one:<p><a href=""https://github.com/lmacken/pyrasite"" rel=""nofollow"">https://github.com/lmacken/pyrasite</a>",1396226787
7498775,comment,7496231,7496231,3,0,bartvds,,,"I am a DefinitelyTyped (DT) org member, not just for the definitions but I also do infrastructure work, and as side-project I maintain TSD which is a dedicated package manager for DT.<p>(thanks @WalkerCodeRanger from reddit to link me here: it seems I&#x27;m the only DT org member who is active on reddit and now hackernews.. shit is about to get real :)<p>I&#x27;ll do some representin&#x27;, but keep in mind this is just my personal view as active member and not some sort of &#x27;official&#x27; statement (let&#x27;s be clear there).<p>--<p>DT and this type-definition effort is actually a pretty complex with some interesting aspects:<p>Org:<p>DefinitelyTyped has mostly grown organically from just one guy starting to share his definitions (borisyankov), then some others joined in (diullei) and then it just grew and grew and we now have > 380 definitions.<p>The org members are just enthusiast pitching in some time, with like 10 active members handling the PR&#x27;s and a huge flock of random people sending in files and fixes. It is a mildly chaotic, best effort kind of thing. We have no hard ties to the TypeScript team, although we harass them mercilessly in the typescript-compiler repos with bug reports and feature requests. They are fully aware of DT, they link us and AFAIK they run our test suite with their new compiler versions.<p>Contribs:<p>Some definitions are really well maintained and much used; especially jquery and the angularjs defs are very popular, together with mocha/chai/sinon, underscore/lodash, jasmine etc. Others are less active: some have never been touched after a 16 year old enthusiast pushed his proud work for some niche module to us. This is no different then any package manager.<p>It is all welcome too, because work done is work done: next time somebody might pick up on it and improve, send it back, rinse, repeat.<p>Keep in mind it can be quite a time-intensive process to write the initial defintion file (and its test): it is easily a few hours burned, likely more for the bigger libraries. Not many people create new ones as it can be a slog sometimes (I actually like to do it: you learn buckets about the library you&#x27;re modelling, so ask me anything about bluebird, lazy.js or highland API :)<p>There are some tools available out-there to automate extractiob: some export from JSDoc, C#, or other crazy solutions that cost as much work to use as they save, but even then it is a lot of hassle to do right.<p>In an ideal world the definitions would be maintained by the library authors, but alas many do not care for TypeScript (or Dart or whatever). Although some authors actively send in updates, mostly it are enthusiasts contributing what they can. Some are JavaScript/node open source veterans (on vim/sublime\n/webstorm/eclipse), while many other come from the MicroSoft Visual Studio / C# crowd. For many this is their first time using git and github or their first PR ever.<p>This then means that quality is very varied: we do have some quality rules and a contribution guide and try to be strict but is only as good as people can be pushed without bailing out (again, similar to any package repo). We have a testing procedure (running on Travis) and are actively working on improvements, but again, it is all loosely organised spare-time work with imperfect data.<p>Consumers:<p>There are a few main consumers of the repository:<p>- our NuGet exporter is a PowerShell script that bundles each directory and pushes that as NuGet packages. There are some improvements planned but we need some other things first (who has time? :)\n- TSD is a dedicated client (command-line and module). This is my main side project, previously by another org member. I&#x27;m actively developing this to cover many of the issues we see (it supports stuff like retrieving definitions for semver versions). This v0.5.x was a full re-imagining of a simpler version by @diullei, and v0.6.x is in the works (cleaner data model, betetr code style, more best-practices, more externalised functionality to re-use)\n- JetBrains IntelliJ (WebStorm etc) also reads from the Github repos: you can use it to augment auto-suggestion (even for plain JS files!)\n- Some other experimental clients (TPM)\n- And many people just use a git clone or manually grab definitions.<p>Version matching:<p>I see a lot of comments about how to get the correct definition for a particular library version. The repository (and our rules) already facilitate this: you can postfix a semver to the filename. For example: <a href=""https://github.com/borisyankov/DefinitelyTyped/tree/master/node"" rel=""nofollow"">https://github.com/borisyankov/DefinitelyTyped/tree/master/n...</a><p>- TSD parses this and can filter it with semver ranges.<p>- The NuGet exporter currently does not do anything for this; it just bundles everything from each directory and pushes it to NuGet. We have a notion to improve the NuGet exporter to smarter package and annotate versions and other meta data, but we need a few other things before that (some of which I have in TSD but am now extracting to external modules).<p>But even then, in practice, nobody is creating or maintaining these older versions!<p>This is odd: for many critics it is a big deal, but for active users comes up only occasionally (it is after all a valid concern). It is mentioned in the contribution guide but almost nobody sends them in. If you&#x27;d need one you can look in the commit history and try to find one, then add it with the semver postfix. But then you need to backport any relevant fixes, and you never really know how perfect a definition is at any point in its history. Usually there are imperfections: that is just the nature of how it works with manual descriptions and of course the TypeScript type system can not describe everything.<p>Future:<p>We&#x27;re brooding on a meta-data feature (a small yaml) that describes some properties for each definition, like if it can be found on npm, bower, if it has external module declaration etc. I need this for TSD, and NuGet could use it too. The requirements are a bit vague around the edges and we&#x27;re weary to commit to something unmaintainable.<p>Bower / component.io:<p>It comes up time-and-time again that we should export these to bower. I think this is not a good idea at all:<p>The problem with bower is that every package needs it&#x27;s own repository. This would mean that at the current count we&#x27;d maintain ~400 repositories, with likely more to come. This is not a lot of fun to maintain. Besides that github will be happy there is the real problem of how we&#x27;d ever going to test interdependent type definitions (yes, this is done a lot).<p>Then there is the thing with the git tags: bower identifies packages by a git tag with a semver. If you give a definition repos tags with semvers of the library it is modelling then it will be very unpleasant to back-port API fixes (as you&#x27;d have to update all the tags), or abandon the old ones which kinda defeats the purpose.<p>We can automate some of this of course, but that brings complexity, risk etc. Some users have started a test on this (dt-bower), but AFAIK it didn&#x27;t work out (as I&#x27;d expect). If you look in the DT&#x27;s issues and the codeplex forum you&#x27;ll find plenty of talk about it (lots by me too).<p>Conclusion:<p>So yea, it is all a bit messy and organic, but it is very difficult to formalise. As long as libraries authors don&#x27;t export type information by themselves it will have to be retrofitted by the community, which means human labour which means things get a little messy and less precise. But as we pool effort we all build on each other.<p>Is this bad?<p>That depends on what you expect out of it. It seems some of you expect C# level of perfect typing. TypeScript is not C#, TypeScript is power-boosted JavaScript.<p>You start with what you like about dynamic JavaScript, then add typing and compiler features where possible.<p>Fact is that even with all the imperfect type definitions this is way more exact then whatever you can do in Vanilla JS and your human meatbrain: instead of trying to remember every detail of the API from the documentation, we now describe it in definition files and have the compiler track it for us. Then we share this information, so other devs can benefit and need to spend less time in API docs themselves. And just like memories these get outdated, then you get back in the doc and update your knowledge (except with DT you can now share your enlightenment).<p>And don&#x27;t forget Typescript works fine with definitions: you can do all the dynamic coding you want (implicit, or explicit with the &#x27;any&#x27; data-type). Only add typing if you want a little more safety:<p>I personally use many modules from npm without typing them (I still do lots of regular JavaScript too btw). Before all this I did a lot of ActionScript (1, 2 and 3) and that also hits this sweetspot of dynamic and static in one language (but without the glory of npm).<p>And to be honest this is a bit of a #firstworldproblem:<p>IMHO one of the most amazing things in tech is this ongoing explosion of the JavaScript ecosystem: it was fun before, but node + npm made it go apeshit critical. I was all over that before TypeScript came along, and here we have this technology that is a clean, tight super-set that smoothly improves the original with that little bit of extra sanity and syntax power. It is not just a thing on its own but the way it meshes with the whole ecosystem that makes it <i>pop</i>. Dart has nothing on this. I will say nothing about CoffeeScript although it has it&#x27;s place.<p>My penny (it got out of hand.. deal with it :)",1396226777
7498774,comment,7498485,7498485,5,0,deftnerd,,,"I&#x27;ve been bothered that Bittorrent Sync isn&#x27;t opensource. Alternatives are always welcome.<p>What bothers me is that the fundraising site they use charges 10%. That&#x27;s a lot. Are there not fundraising sites out there with less painful cuts or alternative revenue streams?",1396226771
7498773,comment,7498564,7498564,11,0,mas644,,,"elon = grit, as an entrepreneur when i have dark times, i&#x27;ll read about him to get amped. my favorite quote: &quot;Optimism, pessimism, fuck that; we’re going to make it happen. As God is my bloody witness, I’m hell-bent on making it work.&quot; -- back in 2008 after the SpaceX Falcon rocket failed to make orbit 3 times. More context: <a href=""http://dcurt.is/elon-musks-determination"" rel=""nofollow"">http://dcurt.is/elon-musks-determination</a>",1396226769
7498772,comment,7498474,7498743,4,0,JSno,,,"dont waste your time on BSD anymore.\nLinux dominates.",1396226754
7498771,comment,7498198,7498725,1,0,dllthomas,,,"When you say &quot;other statically typed languages&quot; do you mean ML and Agda, or Java and C?",1396226731
7498770,comment,7497688,7497688,1,0,adventured,,,"In some ways it&#x27;s far worse than 1999. The Russell 2000 has a 75 pe ratio (a year ago it was 35).",1396226725
7498769,comment,7496154,7497336,9,0,pwg,,,"Actually, what you have is a &quot;patent application&quot;.  It is not yet a patent, although according to the Patent Offices public pair system (<a href=""http://portal.uspto.gov/pair/PublicPair"" rel=""nofollow"">http://portal.uspto.gov/pair/PublicPair</a>) it has had a &quot;Non Final Action Mailed&quot; on 2014-01-14.  So it is being examined.  Looking at the rejection on the pair system, all the claims of the application have been rejected during this go-round.",1396226694
7498768,comment,7497817,7498482,1,0,waterlesscloud,,,"Snooping doesn&#x27;t become not-snooping when software does it instead of a human. Ask the NSA.<p>How would I deal with it? To me it&#x27;s clearly none of Dropbox&#x27;s business and they shouldn&#x27;t be doing this in any way, shape, or form.",1396226694
7498767,story,,,1,0,Rlarivi,"Touch and Go Scanner",https://www.facebook.com/touchandgoscanner,"Hello. My name is Richard Lariviere. I am introducing a new product called the Touch and Go Scanner. I am looking for exposure for my product and I will be demonstrating it and showing it off at the One Spark event in Jacksonville, Florida April 9th through 13th at Mad Men Marketing located at 111 East Bay Street, Suite 201.",1396226664
7498766,comment,7498381,7498381,10,0,pbiggar,,,"Wow. This is actually modern day slavery, exactly as implemented in countries like Pakistan and India[1]: you owe a debt, and you are held in servitude until you pay it back, while racking up new bills the entire time you&#x27;re there.<p>[1] From my recollection of Disposable People: <a href=""https://www.freetheslaves.net/sslpage.aspx?pid=348"" rel=""nofollow"">https://www.freetheslaves.net/sslpage.aspx?pid=348</a>",1396226659
7498765,comment,7498286,7498286,15,0,gtrubetskoy,,,"This sums up MongoDB pretty well: <a href=""http://nyeggen.com/blog/2013/10/18/the-genius-and-folly-of-mongodb/"" rel=""nofollow"">http://nyeggen.com/blog/2013/10/18/the-genius-and-folly-of-m...</a>",1396226650
7498764,comment,7498485,7498485,2,0,Executor,,,"Yes, yes, and yes!",1396226643
7498763,story,,,2,0,rectangletangle,"Show HN: jSave, robust persistence for client-side JavaScript",https://github.com/rectangletangle/jSave,,1396226619
7498762,comment,7492341,7493311,1,0,albeec13,,,"That still has nothing to do with what I said. The poster I responded to brought up Google in a conversation that was completely unrelated to them. Not only that, his comparison wasn&#x27;t even apt, because Google has built and sold hardware and develops Android, so saying their business model is exactly the same as Facebook isn&#x27;t even remotely accurate.<p>I have no problem with companies changing their focus and direction, and my response was strictly related to the poster&#x27;s out-of-left-field comment.",1396226584
7498761,comment,7498083,7498477,1,0,CocaKoala,,,"Your list is incomplete; it should read &quot;nation, religion, and sometimes politics, and also justin bieber, twilight, harry potter, the hunger games, jennifer lawrence, and whichever celebrity does something crazy in the next week&quot;.",1396226581
7498760,comment,7498198,7498198,6,0,dllthomas,,,"<i>&quot;[2] I don&#x27;t want this thread to degenerate into a favorite editor flamewar the way the other one did, so I&#x27;m leaving out the commenter&#x27;s clearly preposterous claim that learning vim is worth your time.&quot;</i><p>Asserting that a &quot;claim that learning vim is worth your time&quot; is &quot;clearly preposterous&quot; is not exactly the straight and true path through the valley of flamewars.",1396226561
7498759,comment,7496522,7498061,2,0,c0nfused,,,"While on the one hand I agree with your overarching point, I actually find the second set of code tells me much more about what is going on.<p>That might be because I have been doing curly brace languages for a decade but tells me more, Foods is an array, not an object.<p>The word isnt as a keyword also makes me want to scream inside a little every time I see it:)<p>That said you are totally right, It&#x27;s a tool in a  category of tools I never really got into.",1396226548
7498757,comment,7495358,7496773,1,0,lcrs,,,"Those SIGGRAPH talks, OCIO and Jeremy Selan&#x27;s <a href=""http://cinematiccolor.com"" rel=""nofollow"">http://cinematiccolor.com</a> have been a touchstone a while :)  Thank you so much for the filmicgames link, that&#x27;s exactly what I was curious about.<p>In return maybe I can offer the Academy&#x27;s linear-to-display reference rendering transform, which is intended to replace the myriad of tonemapping LUTs currently used for film: <a href=""https://github.com/ampas/aces-dev/blob/master/transforms/ctl/rrt/rrt.ctl"" rel=""nofollow"">https://github.com/ampas/aces-dev/blob/master/transforms/ctl...</a>",1396226541
7498756,comment,7497254,7497931,2,0,qbrass,,,"For clarification, that&#x27;s 11% Android, 1% Linux proper. \nNot 12% Linux with 11% of the Linux share being Android.",1396226527
7498754,comment,7496968,7497749,1,0,jkrems,,,"Can you give an actual example of the difference between composition and delegation? In my definition those two are just two different perspectives on the same thing.",1396226486
7498753,comment,7497665,7497665,1,0,tnuc,,,"Amazing how people behave better when they have to think of each other instead of some rule that makes little sense.<p>Reminds me of the town in the Netherlands that took out all its street signs and traffic lights.<p><a href=""http://en.wikipedia.org/wiki/Drachten#Traffic_experiment"" rel=""nofollow"">http://en.wikipedia.org/wiki/Drachten#Traffic_experiment</a>",1396226477
7498752,comment,7498083,7498668,1,0,CocaKoala,,,"Honestly, I feel like the amount of mindshare given over to sports pales in comparison to the amount of mindshare given over to movie stars, musicians, and celebrities. I only found out about the Seahawks and their success because I grew up in Seattle and made an effort to see how they were doing. I don&#x27;t listen to Miley Cyrus at all, but couldn&#x27;t help learning how everybody in the world felt about her performance at the VMAs. Why isn&#x27;t the article about that?",1396226472
7498751,comment,7497130,7498158,2,0,taeric,,,"Doesn&#x27;t this just describe lisp, though?  Most of your questions have a dialect or library set that is specifically made to address them.",1396226470
7498750,comment,7497533,7498091,2,0,jessedhillon,,,"For your one mention of race in 200 words -- expect a flood of responses either chastising you for unnecessarily bringing up race politics, or letting you know that it&#x27;s actually just fine for it to be about race.<p>~~an Oakland resident",1396226465
7498749,comment,7497221,7497419,1,0,Zigurd,,,"It&#x27;s the culture, not the pay. Want to get horrified? Go read cop boards like officer.com.",1396226462
7498748,comment,7498198,7498662,2,0,SamReidHughes,,,"If you wanted a useful reply you could explain how.  The grandparent has things backwards -- it&#x27;s possible for functions to force restrictions on their <i>callers</i> (by forcing them to pass a pure function as a parameter).  The caller can&#x27;t <i>force</i> the callee to consider all cases of its input.",1396226462
7498747,comment,7498409,7498409,3,0,cordite,,,"I honestly think this is one of the best times to advertise something like this.<p>There have been posts here before about alternative services getting a 51% customer increase on days where a breach in security or general trust is broadcasted to the world.",1396226444
7498746,comment,7498442,7498705,10,0,DerpDerpDerp,,,"It&#x27;s really hard to get people to understand something their paycheck requires them not to.",1396226434
7498745,comment,7496137,7497491,4,0,jjoonathan,,,"Nope, I labeled them correctly. Your expectations of what would happen (which align with my own) have no bearing on what is right or wrong.<p>Police officers have better things to do than &quot;pandering to the ego of a bystander&quot; (is that what they&#x27;re calling politeness these days)? Then surely they have <i>much</i> better things to do than spending hours engaging in an egregious miscarriage of justice to flatter their own notions of self-importance (i.e. that they deserve  unquestioning obedience even in non-urgent situations). Except that they clearly didn&#x27;t. So what, exactly, are the &quot;more important things&quot; they have to think about?",1396226411
7498744,story,,,4,1,zdw,"Propellor – ""Whups, I seem to have built a config management system""",http://joeyh.name/blog/entry/propellor/,,1396226393
7498743,comment,7498474,7498474,4,0,geekam,,,"I want to start learning internals of nix systems. Is this a good book to start with? Or is there a book on Linux (or any other nix OS) that I should begin with?",1396226387
7498742,comment,7496154,7498317,1,0,Snail_Commando,,,"I do have experience in academic research. I&#x27;m not sure I agree with the assessment that pharmaceutical companies play a limited role in clinical research.<p>> 3. The role of pharmaceutical companies is fairly limited to clinical research, getting over regulatory hurdles and marketing. In a given year approx 100k potentially useful compounds will be discovered, but only a couple are approved by the FDA.<p>This glosses over almost the entire drug discovery process, which is a crucially important and nuanced process that yields <i>new fundamental science.</i> The positive scientific externalities of clinical trials are unambiguously a good thing.<p>You are correct that much compound discovery happens in academic settings (though it does happen commercially as well.)<p>Discovering the basic compound chemistry is just the first step. It must pass through a series of critical scientific assessments to see if the compound yields statistically significant desired biological effects.<p><a href=""https://en.wikipedia.org/wiki/Phases_of_clinical_research"" rel=""nofollow"">https://en.wikipedia.org/wiki/Phases_of_clinical_research</a><p>This process is the experimental phase of drug discovery. It involves hundreds to thousands of different researchers, participants, institutions, and explicit organizational dynamics. The cost must be borne and there must be incentive to bear the cost. My entire argument is that the patent system enables this incentive structure.<p>> Wrt general scientific research, science has always been fine without patents: Einstein, Feynman and Co don&#x27;t need financial incentive to do their best work, it&#x27;s just what they do.<p>This point speaks to a more abstract point that is useful to consider, not only in the pharmaceutical context, but in the context of what makes science: <i>science</i>.<p>You are correct that fundamental theoretical science has always been fine without patents. The men and women who output some of our species&#x27; most beautiful interpretations of nature are rarely motivated by money. (I feel like that aspect of your argument was a bit of a non sequitur, I think all scientists are motivated by intrinsic knowledge, not money. I&#x27;m uncomfortable with my perception that you were implying that pharmaceutical scientists are somehow distinct from the examples you provided. Apologies if I misunderstood.)<p>The distinction between the pharmaceutical industry and the fundamental work of Enstein, Feynman et al. is that the drug discovery process involves two major expressions of scientific thought: <i>theoretical</i> and <i>experimental</i>. In this case, the basic compound discovery would be an expression of <i>theoretical</i> science (and <i>experimental</i> work), which must in turn be validated by more <i>experimental</i> science: the clinical trial phases.<p>In your example, it is true that Einstein, Feynman et al. did not need financial incentive to make immeasurable contributions to collective Good. They were doing priceless <i>theoretical</i> work, for what they are primarily known for. But (un)/fortunately, we need to do <i>experimental</i> science as well. Sadly, this cannot be done for free.<p>To continue with the physics analogy, The Higgs boson was <i>theorized</i> &quot;without financial incentive&quot; prior to its <i>experimental validation</i>. Of course, the <i>experimental validation</i> cost billions of dollars and the output of one of the greatest feats of human engineering: the Large Hadron Collider.<p>In this case, it was incredibly &quot;expensive&quot; (arguably, cost should be no object) to do this experimental validation. The cost was borne by government funding, ostensibly to increase the sum total of Knowledge.<p>Of course, resources are limited. The government cannot fund all basic research. We have aligned market machinery to incentivize pharmaceutical companies to fund the incredibly &quot;expensive&quot; cost of drug discovery experimental validation. For better or worse.<p>---------------------------<p>The premises to my argument:<p>- experimental validation (the lion&#x27;s share of the drug discovery process) is necessary<p>- this process is expensive in terms of financial burden and opportunity cost<p>- despite our intrinsic desire to do all research, we must allocate our resources accordingly<p>- market actors in a (mostly) free market seek to maximize their utility<p>- a market actor (in a market with no property rights) presented with the choice of:<p>(a) spend X-Large sum -> manufacture + sell drug<p>or<p>(b) wait until other market actor spends X-Large sum -> manufacture + sell drug (at essentially zero input cost)<p>... can rationally wait to choose (b).<p>My argument:<p>- The pharmaceutical patent system provides the economic machinery necessary to incentivize private corporations to fund drug discovery experimental validation.<p>The point of mutual confusion or &quot;the basics&quot; as you put it:<p>The drug discovery process doesn&#x27;t yield any meaningful scientific output, and is essentially an exercise in regulatory avoidance and marketing.<p>I disagree with &quot;the basics&quot; that you laid out.<p>I do want to say something explicitly: you&#x27;ve been very respectful and considerate and I really appreciate that. That&#x27;s an increasingly rare thing on Hacker News.",1396226386
7498741,comment,7497533,7498643,1,0,h1karu,,,"a progressive who listens to Keak Da Sneak\nIn da building feeling like YEEE! \nR.I.P. to tha Mac Dee Are Eee!",1396226342
7498740,comment,7498409,7498409,3,0,matttah,,,"On the phone is there a way to get to your main site from the blog?  Was curious on your service but no easy way to jump to the main site, but maybe I missed it?",1396226330
7498739,comment,7497665,7497665,2,0,pyromine,,,"Interestingly enough I&#x27;ve been on a bit of a kick today researching Sudbury schools that are entirely kid run, and from what I can tell every initiative that gives students more freedom seems to be beneficial.<p>The problem is giving students freedom is often thought of as synonymous to allowing more violent behavior to take place. When rules are put in place to protect victims that is understandable, but most rules instead decide that students should not be allowed to voluntarily choose to do things adults think are unsafe. Honestly, I hope we can break that belief.",1396226289
7498738,comment,7498286,7498612,2,0,alrs,,,"???<p>Most people in a commercial setting aren&#x27;t modifying the MongoDB source code.  AGPL does not require that any software that communicates with AGPL software be AGPL&#x27;d.<p>But yes, if you&#x27;re using MongoDB in a commercial endeavor, and you modify the source code, and you&#x27;re using AGPL version, you do need to share your changes to the MongoDB source code.",1396226282
7498737,comment,7498198,7498610,7,0,quchen,,,"The <i>Monad tutorial fallacy</i> is an in-joke in the Haskell community nowadays, born out of what you observed: when people feel like they understand monads, they are so happy about it that they write a bad tutorial about it.<p>My advice:\nMonad is a typeclass, and typeclasses unify things that act alike. Learn Monad instances (List, Maybe, State, ...) separately without worrying about how they are &quot;monadic&quot;. After some time you will develop an intuition for what do, <-, return, >>= etc. have in common. And that&#x27;s what Monad is.",1396226266
7498736,comment,7498381,7498694,4,0,mcphilip,,,"I submitted this story.<p>There&#x27;s no particular reason why it should have been front page material -- just the time of day it was submitted and the provocative title helped, I guess.  I found it interesting and am a longform journalism fan.  I thought others on HN might find it interesting so I submitted it.  I have no particular political agenda [1] and don&#x27;t necessarily agree with all the content of this piece, but it made me think about a challenging subject and seemed like it could launch an interesting discussion.<p>Sorry it&#x27;s not your cup of tea, just trying to add some variety to the HN submissions.<p>[1] The only other longform piece I&#x27;ve submitted -- A Death at Tough Mudder -- is about the circumstances surrounding a participant&#x27;s death at a spartan race.  I don&#x27;t read longform to pat myself on the back when I find articles I agree with.  I read it to take a break from all things tech related and to learn about new things.",1396226251
7498735,comment,7498699,7498699,1,0,clef,,,8,1396226190
7498733,comment,7497221,7497376,1,0,Zigurd,,,"> <i>&quot;These men and women are signing up to protect us...&quot;</i><p>There is a lot of propaganda to that effect, but most of their actual activity does not support that. Solution rates for strong-arm robbery and serious property crime are low, and the prisons are full of small-time drug sellers.<p>It also makes no sense that police officers need to live in the municipality in which they work unless it would help reduce the crime rate.",1396226184
7498732,comment,7498381,7498694,3,0,martey,,,"From the same FAQ you quoted: &quot;Please don&#x27;t submit comments complaining that a submission is inappropriate for the site.&quot;",1396226179
7498731,comment,7498409,7498409,7,0,korzun,,,"Even if they do not &#x27;know&#x27; what you are storing, posting that will pretty much label your company as a &#x27;kiddie cesspool&#x27; by anybody who values their data.<p>I&#x27;m not in need of their service, but they will never have me as a serious client after a blog post like this.",1396226124
7498730,comment,7496522,7498362,1,0,TheZenPsycho,,,"<p><pre><code>    fs.readFile(&quot;person.json&quot;)\n    .then(function(e, personJson) {\n        var person = JSON.parse(personJson);\n        return myDB.query(&quot;lastname&quot;, person.name);\n    })\n    .then(function(matched) {\n        return msgQueue.push(JSON.stringify(matchesLastname));\n    })\n    .then(function(id) {\n        log.info(&quot;Message sent to queue: &quot; + id);\n    });</code></pre>",1396226121
7498729,comment,7497688,7497936,4,0,7Figures2Commas,,,"> &quot;Airbnb is like a hotel chain without the hotels.&quot; Yeah. That means they absolve themselves of costs, growth time, investment into that growth, location issues, the works.<p>This is brought up a lot in discussions of AirBnB&#x27;s value, but overlooks several important facts:<p>1. Real estate is an asset. Just because there may be costs associated with it doesn&#x27;t mean that it isn&#x27;t desirable to own.<p>2. A number of major hotel brands franchise and provide management services; they don&#x27;t own all of the properties that sport their brands.<p>3. Hotels are able to capture revenue from revenue streams that AirBnB can&#x27;t, such as events and F&B.<p>This doesn&#x27;t mean AirBnB isn&#x27;t valuable, perhaps more so than certain hotel chains, but overly casual comments in the vein of &quot;AirBnB doesn&#x27;t have any buildings to maintain!&quot; aren&#x27;t the basis of a serious, credible argument that AirBnB is more valuable than major hotel chains.",1396226112
7498727,comment,7497688,7497688,1,0,thro2,,,"bogus article, best accompanying photo ever.",1396226089
7498726,comment,7496154,7497057,1,0,peterashford,,,"When do you think patents were first envisaged?  Hint: it&#x27;s a little bit earlier than the existence of the US",1396226081
7498725,comment,7498198,7498501,1,0,SamReidHughes,,,"Have you ever used any other statically typed languages?  How much of Haskell&#x27;s benefit do you think it provides that simply having static typing doesn&#x27;t provide?",1396226067
7498724,comment,7497665,7498533,2,0,smtddr,,,"Ok, what was different in the &#x27;80s?",1396226055
7498723,comment,7498364,7498493,1,0,xamlhacker,,,"No it is not a competitor. In fact, it can be a nice addition to asm.js. asm.js compilers should be able to generate very efficient code from SIMD.js constructs.",1396226045
7498722,comment,7498381,7498694,2,0,Jtsummers,,,"It&#x27;s not the pedantic answer, it&#x27;s <i>the</i> answer. The content doesn&#x27;t get here without up votes. So other people disagree with you on its relevance, or you and others that consider it irrelevant aren&#x27;t doing your job and flagging it. In nearly every thread either clearly political or tangentially political someone like you asks this question. Just flag it and be done with it.",1396226028
7498721,comment,7497665,7498533,5,0,nickonline,,,"Wow, you&#x27;re absolutely correct.<p>I always assumed that in the US it was because of the litigious nature and never stopped to consider the fact that if your kid breaks their arm it&#x27;s $10k for the parents to fix it. Thinking about it from the healthcare point of view is amazing.",1396226016
7498719,comment,7498286,7498675,1,0,AdrianRossouw,,,"I guess I&#x27;ll be able to confirm once I&#x27;m forced to build something in it, but I don&#x27;t think it can really be faster to setup and get running with than CouchDB.<p>Usually first thing you need to do is write a REST layer on top of it, and with CouchDB that part is just done already.<p>Obviously there&#x27;s certain kinds of data I wouldn&#x27;t put in Couch, or any kind of NoSQL database.<p>You need to know what the right tool for the job is,but I just want to figure out when that tool is mongo.",1396225940
7498718,comment,7498198,7498644,2,0,seth1010,,,"I&#x27;m interested in what you think of ScalaCheck[1].  It looks like at least someone <i>is</i> doing it.<p>[1] <a href=""http://scalacheck.org/"" rel=""nofollow"">http://scalacheck.org/</a>",1396225938
7498717,comment,7496968,7497621,2,0,geekingfrog,,,"It&#x27;s a very good book. It explains a lot of &#x27;why&#x27; and inner working of good practices.<p>It&#x27;s also fairly comprehensive, ranging from\n - some evilness (type inference with ==, eval and its performance toll)\n - functions and higher order functions\n - objects and prototypes. Some good explanations of the all prototype and constructor thing\n - array, dictionnary and some things to know about their prototypes\n - api design and concurrency<p>It&#x27;s 200 pages full of content, I recommend it.",1396225917
7498716,comment,7496338,7497875,1,0,marcosdumay,,,"He seems to be talking about some completely unrelated concept. There&#x27;s nothing to rebut, he should just use a different word, and talk at different events.",1396225908
7498715,comment,7498699,7498699,1,0,adamzerner,,,8,1396225907
7498714,comment,7498699,7498699,1,0,adamzerner,,,7,1396225906
7498713,comment,7498699,7498699,1,0,adamzerner,,,6,1396225904
7498712,comment,7498699,7498699,1,0,adamzerner,,,5,1396225903
7498711,comment,7498699,7498699,1,0,adamzerner,,,4,1396225901
7498710,comment,7498699,7498699,1,0,adamzerner,,,3,1396225899
7498709,comment,7498699,7498699,1,0,adamzerner,,,2,1396225898
7498705,comment,7498442,7498442,4,0,benched,,,"If it wasn&#x27;t for the money, I&#x27;d think these guys were just clueless. Billions excuse much.",1396225880
7498704,comment,7496054,7497778,2,0,gtrubetskoy,,,"I was just going to post the &quot;>1 machine&quot; definition when I saw your comment.<p>I think there are also at least two meanings of &quot;Big Data&quot;. The more popular one is simply a trendy name for good old and boring &quot;statistics&quot;, but with a twist that the data comes by way of the Internet, social media, all that.<p>The second one (and a little closer to my heart) is what &quot;>1 machine&quot; means from a developer/sysadmin perspective. This is where the hadoops, hives, cassandras, etc. come into play, and it&#x27;s A LOT to learn, even for seasoned developers.<p>I think it&#x27;s also a little intimidating for people who have become very comfortable with the typical rdbms stack. Parallel processing can be hard to understand, it&#x27;s not something you can tinker with on your laptop over the weekend, and it&#x27;s not surprising to hear all the &quot;your big data thing is stupid&quot; comments.",1396225874
7498703,comment,7498286,7498640,9,0,munro,,,"If you want to store & query JSON [1], Postgres 9.3 is great!  Plus you can index functions, meaning you get cool things like fast JSON look up, and doing case insensitive searches.  Which is hard in Mongo, you would either have to do a slow regexp look up, or save a lower case version in your application logic.<p><pre><code>  CREATE INDEX ON members ((lower(my_json_data->>&#x27;email&#x27;)));\n</code></pre>\n[1] <a href=""http://www.postgresql.org/docs/9.3/static/functions-json.html"" rel=""nofollow"">http://www.postgresql.org/docs/9.3/static/functions-json.htm...</a>",1396225855
7498701,comment,7498198,7498486,3,0,quchen,,,"Haskell is not about the actor model. It is possible to use it this way, but not what the language is about, or why you should learn it in particular.",1396225843
7498699,story,,,5,23,adamzerner,"Ask HN: How happy are you?",,"People on HN seem to be ambitious do-gooders in tech related fields. I&#x27;m curious how happy these types of people generally are.<p>Let&#x27;s use the 2-8 scale:",1396225830
7498698,comment,7497130,7498479,4,0,axman6,,,"I think this is more of an implementation issue than a language issue. A haskell compiler could choose to reevaluate everything every time it&#x27;s demanded, and it would run in very little space. GHC uses thunks to represent computations which haven&#x27;t been run yet, which are replaced once any threads evaluates them. This can lead to space leaks, but I don&#x27;t believe there&#x27;s any requirement that this be how the results are evaluated. GHC chooses this evaluation strtategy because it usually results in faster code, but obviously can lead to problems if you don&#x27;t know what you&#x27;re doing. Like all languages, it takes experience to avoid whatever deficiency exists in your language of choice; it won&#x27;t be obvious to a beginner why the naive implementation of fibonacci works for some values but overflows the stack on others, but they will eventually learn.",1396225809
7498697,comment,7445585,7466206,1,0,mandeepj,,,"Yes, may be adblock. Should not it work irrespective of whether i am incognito or not? I mean if adblock is blocking it then it should block facebook icon all the time?",1396225785
7498695,comment,7498198,7498570,3,0,quchen,,,"I don&#x27;t think ProjectEuler is very helpful for learning a language. The first ten problems or so might be useful to learn the basic syntax, but after that it&#x27;s really just about number theory, or optimizing brute force.<p>If you&#x27;re looking for Haskell beginner exercises, I recommend<p>a) implementing functions from Prelude, Data.List, Data.Tree yourself<p>b) doing the exercises given in RWH (even if you don&#x27;t actually read the book - just do those you understand).<p>RWH: <a href=""http://book.realworldhaskell.org/read/"" rel=""nofollow"">http://book.realworldhaskell.org/read/</a>",1396225758
7498694,comment,7498381,7498636,4,0,mdesq,,,"I obviously wasn&#x27;t asking for the pedantic, condescending answer, so how is this an acceptable answer? Downvote me all you like; I was asking a legitimate question about how this fits the HN newsworthy criteria. &quot;Off-Topic: Most stories about politics...&quot;\nI realize there&#x27;a lot of patting ourselves on the back here that we&#x27;re not as backwards as some random person/place, but it&#x27;s not why I came to HN.",1396225735
7498693,comment,7498286,7498672,2,0,harlowja,,,"I think the followup from yahoo &#x27;might&#x27; help: <a href=""http://lists.openstack.org/pipermail/openstack-dev/2014-March/030593.html"" rel=""nofollow"">http://lists.openstack.org/pipermail/openstack-dev/2014-Marc...</a>",1396225699
7498692,comment,7497688,7498581,6,0,TheCoelacanth,,,"Twitter had $422 million in revenue in the three quarter before its IPO. Splunk had $121 million in revenue the year before its IPO.<p>Both were running at a loss, but they did both have a considerable amount of revenue. That puts them way ahead of many of the companies from the dotcom bubble since they at least have a proven way of bringing in money, even if it isn&#x27;t enough to fully cover their expenses.",1396225694
7498691,comment,7498573,7498573,22,0,Zigurd,,,"Intellectual property is an Americanism that metastasized. It&#x27;s a global idea not because of it&#x27;s own merits, but because it was propelled by American treaties and diplomacy during an era when America was dominant.<p>One irony in that is the fact that the Framers were skeptical of intellectual property. In fact, they didn&#x27;t call it intellectual property. Even less did they call it &quot;intellectual property rights.&quot; It was a temporarily granted monopoly. It was not considered to be a right.<p>How is that? All your actual rights are assumed to exist. The  Bill of Rights explicitly says it isn&#x27;t the List of Rights. That&#x27;s because your rights predate any laws and constitutions. You simply have them, and governments are more or less just in observing that you have rights and in not trampling them.<p>This is key to making the US constitution future-proof. It carves out a set of legitimate powers. It doesn&#x27;t enumerate your rights: to travel by car or jet-pack, or space-warp, to use unbreakable codes, to marry the person you love, etc.<p>Patents and copyright monopolies, on the other hand, are explicitly granted, and, unlike your rights, they expire. The congress could at a whim change patent and copyright terms to a week, a day, a nanosecond, and there would be no constitutional case against that law. Because these grants of monopoly are NOT rights.",1396225667
7498690,comment,7496968,7497639,0,0,jonahx,,,"<a href=""https://yourlogicalfallacyis.com/middle-ground"" rel=""nofollow"">https://yourlogicalfallacyis.com/middle-ground</a><p>The alternative he presented is not to share private state between class and superclass.  This really isn&#x27;t a &quot;know the right tool for the right situation&quot; kind of thing -- it&#x27;s almost never a good thing.<p>You could accomplish this alternative, among other ways, by:<p>1. Using composition and delegation.\n2. Using mixins, if your language supports them.\n3. Using inheritance, but depending only upon your superclass&#x27;s public interface.",1396225661
7498689,comment,7497688,7498218,1,0,leoc,,,"Weren&#x27;t there similar, though less dramatic circumstances in 1999 too though? ISTR that Alan Greenspan lowered interest rates in order to help fight the LTCM fire.",1396225636
7498688,comment,7496154,7497199,2,0,peterashford,,,"Holy US-blinkers Batman!  Patents existed for hundreds of years before the US even existed.  Their framing in the US constitution does not describe the reasons for the creation of patents.",1396225628
7498687,comment,7497130,7497913,1,0,cordite,,,"Rúnar Bjarnason talked about it in his presentation &quot;FP Programming is Terrible&quot; [0] (he makes up for that title in the end)<p>I asked him about it on twitter since it reminded me of thunks, he said &quot; a trampoline executes a sequence of thunks, yeah&quot; [1]<p>[0]: <a href=""https://www.youtube.com/watch?v=hzf3hTUKk8U"" rel=""nofollow"">https://www.youtube.com/watch?v=hzf3hTUKk8U</a>\n[1]: <a href=""https://twitter.com/runarorama/status/449070763421618176"" rel=""nofollow"">https://twitter.com/runarorama/status/449070763421618176</a>",1396225613
7498686,comment,7498198,7498644,2,0,SamReidHughes,,,"I already know how they work.  Still waiting for an explanation of what they can do that you couldn&#x27;t do in Java or C# or (with some verbosity) C++.<p>Edit: For example, to answer this question, you could define a type and explain how Haskell lets you automatically generate arbitrary instances of that type, where Java or C#, being as limited as you claim them to be, would be incapable of doing so.  Edit: Also, Clojure and Erlang are irrelevant.  My comment you originally replied to said that static typing was what makes QuickCheck possible.",1396225613
7498685,comment,7498286,7498661,2,0,AdrianRossouw,,,"I use elasticsearch to index my couch database and query it using the rest based json query language.<p>i find it helps being able to scale them out separately too.<p><a href=""http://daemon.co.za/2012/05/replacing-couchdb-views-with-elasticsearch/"" rel=""nofollow"">http://daemon.co.za/2012/05/replacing-couchdb-views-with-ela...</a>",1396225603
7498684,comment,7498207,7498512,1,0,TheLoneWolfling,,,"Not automatically via the method used here (hash blacklist)",1396225592
7498682,comment,7485869,7497083,2,0,mlchild,,,"Really interesting. Complicated, but really interesting.",1396225538
7498680,comment,7497665,7498332,1,0,bane,,,"American here, I&#x27;ve been run over by guys on skis more than once at the local sledding hill growing up. My favorite sled was literally a rolled up piece of stiff plastic...fastest thing on the hill and I routinely had other kids wanting a ride.",1396225506
7498679,comment,7498286,7498563,1,0,AdrianRossouw,,,"This is actually really interesting. Due to it&#x27;s nature, using mongo as a data source can easily become something very deeply ingrained into your application.<p>Whereas if mysql shipped with a similar restriction, you could easily flip the connection strings and have it mostly working on postgres or something else.",1396225495
7498678,comment,7498198,7498595,1,0,SamReidHughes,,,"> In C or OOP languages, you just get a player object/struct and you have to enforce this state logic manually, and you can easily write a function that puts the player in an inconsistent state (player.alive = False, but player.HP = 15).<p>False.  In OOP you can do this using the visitor pattern.  The difference is that Haskell makes this real convenient, with its algebraic types feature baked into the language, while OOP makes it very cumbersome.<p>> As a side note on the last point: people make the argument that this separation makes Haskell impossible to do printf debugging. Not true—the standard library provides ways of circumventing the type system specifically for this reason.<p>It&#x27;s still far more annoying when the language is lazily evaluated and has Haskell syntax.",1396225492
7498677,comment,7498198,7498504,5,0,LeonidasXIV,,,"> Python usually waits until runtime to throw exceptions, even for something obvious like a syntax error.<p>Just a nitpick, but that is not true. Well, not completely. Python combiles its code on runtime, and at that part SyntaxError exceptions are thrown. No need to actually reach the code, since the bytecode compiler traverses the whole module anyway.",1396225480
7498675,comment,7498286,7498637,1,0,timfpark,,,"i think a lot of the reasons I&#x27;ve seen come down to business reasons, not technical.  Someone wants an app fast, like now, and MongoDB is fast to setup and get running with.",1396225475
7498674,comment,7497533,7498091,2,0,throneaway,,,"Ethnic demographics and crime rates are correlated, so it would be a mistake to dismiss concerns over crime in an area as a &quot;race thing&quot;. People may have legitimate concerns about an area not necessarily driven by racial animus in Oakland, Baltimore, Detroit, DC, Atlanta, and etc.<p>Because of the correlation between crime and demographics, it might be tempting to publicly call out concerns about high crime neighborhoods as examples of racism, but I still wouldn&#x27;t check your iPhone on the street at night in Oakland.",1396225460
7498673,comment,7498381,7498534,3,0,billyjobob,,,"Not all disabled people are cripples.  Just because you occasionally see someone with an obvious physical injury in a wheel chair does not mean that is representative of the vast majority of disabled who have hidden disabilities.<p>For example, many physical conditions vary from day to day - one day she may be well enough to drive, the next she will have to rest in bed.  Then there are the millions with mental disabilities who may even function perfectly well most of the time except for the days they try to kill themselves.  Sure they &#x27;could&#x27; work, but no employer would ever take them on, so they must live on disability.",1396225459
7498672,comment,7498286,7498612,1,0,yeukhon,,,"> the only people using mongodb in a commercial setting are those who are paying 10gen for a commercial license or those that don&#x27;t know they are violating the AGPL license.<p>It is not clear to me exactly what the problem is from the message. Are we now discouraged to use MongoDB as a database (from startup to university), or writing MongoDB database driver based on existing MongoDB language driver such as pymongo or writing on top of MongoDB&#x27;s database driver?",1396225451
7498671,comment,7497130,7498379,7,0,nmrm,,,"This is a solved problem; they are called Universe Types.",1396225434
7498670,comment,7497130,7497130,1,0,edem,,,"I fail to see the concrete examples you came up with to back your claims up. Or...were there none?",1396225431
7498669,comment,7496154,7497195,1,0,peterashford,,,"My understanding was that the original idea of patents was to prevent inventions being lost to mankind due to their being held secret.  Patents allow inventors to have a short term monopoly in return for societies long term intellectual gain.  Clearly, this is NOT occurring with today&#x27;s software patents.<p>(1) Most s/w patents are not for &#x27;inventions&#x27; that are non-obvious and therefore not even capable of being kept secret in the first instance, and,<p>(2) So many patent applications are so broad as to not actually describe a system in an implementable way.  End result: we offer up monopolies, benefiting the &#x27;inventor&#x27; but end up with no knowledge added to society.  A situation that impoverishes the many to pay the few for pretty much nothing.",1396225419
7498668,comment,7498083,7498336,1,0,cylinder,,,"Sports are fun to watch, I just watched a great Elite Eight game.<p>The problem is that people are just committing far too much mindshare to sports these days. ESPN has three channels devoted pretty much to just <i>talking about sports</i>, in great detail, including gossip, drama, recaps, minutia, etc.<p>People, and let&#x27;s be honest, mostly men, sit there consuming this stuff all day, reading about it online, talking about it with friends, watching it in the evenings, playing fantasy sports...<p>Past a certain point it goes beyond entertainment and into the realm of tribalism. There&#x27;s just far too much emotional and mental investment into this stuff.",1396225407
7498667,comment,7498381,7498520,3,0,kbenson,,,"<i>I&#x27;d like more information before I can really make judgement about this person. What are the details of this 1997 (did I math that correctly?) car wreck? Is she at fault? Were there any settlements involved? What kind of injury does she have that keeps her from working? Can she learn to do something that doesn&#x27;t affect her disability? Specifically, what injury prevents her working but allows her to drive?</i><p>Why are you trying to judge the <i>person</i>?  This whole article is about many more people than just her, but also specifically about the problems presented by private probation companies as a whole.<p><i>What I don&#x27;t understand is how, when someone makes a colossal mistake (especially one that we&#x27;ve all been educated about), anyone else would blame everyone but the mistaken.</i><p>Was there any statement that she should not have been fined?  Was there a cry that the legal system was unjust for pulling over people driving without a license? This is a story about people being taken advantage of.  I saw no claims they were entirely innocent, just that they were put into a system that exacted much more punishment that they were likely due, and most likely legally due.<p><i>For me, this whole story hinged on that one time she got caught driving without a license: there&#x27;s no reason she should have been unaware of the consequences.</i><p>For you, this whole story, about multiple people, officials, and cities, including the death of some individuals while they were incarcerated for failure to pay a fine, hinges on <i>single</i> person&#x27;s <i>single</i> traffic stop and whether she was aware of the consequences?  Which consequences would those be, the ones where she is supposes to pay a fine, or the ones where she goes to jail because she is <i>incapable</i> of paying that fine and stays there for over 100 days without seeing a judge?",1396225370
7498666,story,,,1,0,jipiboily,"Hey Rubygems, do not include your stuff implicitly (and don't class_eval Class)",http://jipiboily.com/hey-rubygems-do-not-include-your-stuff-implicitly-and-don-t-class_eval-class,,1396225366
7498665,story,,,22,11,mlchild,"In China, Alibaba now lets you invest in TV and movie projects",http://thenextweb.com/asia/2014/03/26/in-china-alibaba-now-lets-you-invest-money-in-tv-and-movie-projects/,,1396225364
7498664,comment,7489028,7491121,1,0,purephase,,,"With the proliferation of Nexus tablets (or Android tablets in general) and that Play Books is stock in the OS, I feel pretty confident in it sticking around.",1396225360
7498663,comment,7497665,7498226,4,0,bane,,,"Yeah, I grew up with something like that too. It was a huge wooden and steel fort. Mostly two, but even three &quot;kid&quot; stories tall. If you fell it was into hard mulch.<p>All manner of unstable bridges, and tunnels and swings and things. Every so often they&#x27;d bring the kids out to paint designs on the fort. My favorite were the ones kids painted in the very adult inaccessible tunnel system made out of reused palette wood. It was rare to come home from a day of playing on it without a splinter of a bruise or something.<p>The most awesome piece of a 4 story steel rocket ship. It was incredibly tall and once you got up in the top you could rally some friends together to coordinate shaking it and make some of the other kids cry from fear it would topple over. There was also a huge geodesic dome made out of steel piping (and a couple other various lattice like steel tube structures) that were pretty easy to climb wrong and get hurt on. A couple of the structures were maybe 10-12&#x27; tall and made of recycled telephone poles, so you leave the playground with a little tar or whatever they treat the wood with. If you climbed to the top, there was usually a comfortable platform or something to rest on.<p>Any day of the week in summer you could go and there would be hundreds of kids climbing and fighting and fantasizing and falling all over that structure.<p>Today the playground has a small slide and a small set of very safe and boring, very generic, equipment. I&#x27;ve driven by it quite a few times and have yet to see even a single child on it.<p><i>edit</i> oh and I almost forgot. In one neighborhood, our playground was literally made out of molded concrete. It looked almost <i>exactly</i> like this set.<p><a href=""http://www.synthetrix.com/mpe/swisschs.jpg"" rel=""nofollow"">http://www.synthetrix.com/mpe/swisschs.jpg</a><p>And it was <i>awesome</i>. Since it was so durable, you didn&#x27;t feel bad scratching it with rocks or throwing rocks at it. It was rough surfaced too so you didn&#x27;t want to be too tough with it. And if you fell, it was right onto concrete surface. All the interesting geometries and surfaces made kicking balls, or dropping balls and frisbees and things into the concrete tubes loads of fun.",1396225358
7498662,comment,7498198,7498613,3,0,coolsunglasses,,,"Your comment misrepresents the reality for Haskell programmers.",1396225348
7498661,comment,7498286,7498637,1,0,mikegioia,,,"It allows you to query json documents in a way similar to sql. redis is key/val and sits in ram, couch requires complicated design documents to query and is better as a key/val, but I&#x27;m unfamiliar with riak.<p>I think trello uses mongo primarily for production. technically it&#x27;s feasible but I&#x27;ve found it to be more trouble than it&#x27;s worth to scale -- too many machines are required per shard. I&#x27;m currently looking into rethink db as a replacement now though.",1396225346
7498660,comment,7496522,7498634,1,0,kaonashi,,,"The biggest problems I find with bad coffeescript that I don&#x27;t generally find in bad javascript are extensive inheritance hierarchies, overbroad class design, and explicit dependencies.<p>Generally the same kinds of problems I find with bad ruby/java.",1396225329
7498659,comment,7498381,7498653,6,0,Jtsummers,,,"Because we all know that deterrence is so effective. We should put a jaywalker in the stockades in the town square every day as a warning to the other pedestrians out there.<p>The problem with your suggestion (deterrence to &quot;encourage&quot; others to pay up faster), these folks <i>can&#x27;t</i> pay up faster. You ever been to one of these small towns? There&#x27;s no money, a several hundred dollar fine is a month or more of labor for the ones that <i>have</i> a job. They have to forgo food, insurance, electricity, water or some other essential in order to pay off these debts. You want them to pay faster? Get rid of the fucking speed traps and corrupt officials that screw them.",1396225320
7498658,comment,7496698,7496698,2,0,jroseattle,,,"Will be interesting to see if MSFT drops prices on Azure anytime soon. Given how focused Nadella seems on making Microsoft a competitor in the cloud space, standing pat would seem odd.",1396225292
7498657,comment,7498409,7498409,4,0,limsup,,,"Am I the only one who was totally onboard until I saw it was written in lisp? Can&#x27;t trust non-pragmatic people.",1396225283
7498656,comment,7497688,7497936,1,0,6cxs2hd6,,,"Correct me if I&#x27;m wrong, but hotel chains like Hyatt, Hilton, Marriott, Ritz Carlton, etc. are franchisers. The company may own and operate a few hotels itself, but the vast majority are owned and operated by third parties. The hotel chain is essentially a booking service for others who want to rent their space.<p>In that respect[1] Airbnb is not very different. The bad news is, that&#x27;s partly why they&#x27;re facing regulatory grief. The good news is, they could easily be worth more than a Hyatt, because it&#x27;s not as if Hyatt is worth X due to owning so many real estate assets (they don&#x27;t).<p>[1]: In other respects, of course, it&#x27;s very different. Airbnb doesn&#x27;t franchise. The owner/operators are mostly individuals, not professional hoteliers.",1396225246
7498655,comment,7497817,7498420,1,0,cottonseed,,,"Yes, I was being flippant.  That&#x27;s not constructive and I apologize.  However, I think there is an interested discussion to be had about property rights, just like intellectual property rights.  I&#x27;d want to know the history of property rights.  How did we get here?  What are our cultural goals and how to property rights help (or fail) to achieve them?  What are the limits?  Do we think it is a moral question?  That is, is it a question of right and wrong?  It might be obvious that people shouldn&#x27;t be able to come and take your stuff, but what about eminant domain and criminal asset forfeiture in the US?  What about corporate property rights?  I&#x27;m thinking about water privatization and the popular uprising in Bolivia, for example.  Or (back to intellectual property) the rights of corporations to patent otherwise protect chemicals and genes found in nature, also called piracy by some, biopiracy.  Or extending copyright on things destined for the public domain (copyright extension acts).<p>> it&#x27;s not really relevant to the parent comment ... and few think stealing music is ok either.<p>Maybe I misunderstood the parent comment, but wasn&#x27;t the poster complaining that so many people on twitter outraged about Dropbox&#x27;s behavior think privacy is acceptable?<p>I think a lot of people are unhappy with the current intellectual property law and they feel powerless to influence it.  The kind of frustrations that produces the GPL and Creative Commons, although not all of us have the vision, leadership or influence of a Stallman or a Lessig.  I suspect some current attitudes about piracy are related to those frustrations.  I also think a debate about piracy -- rather than just shouting &quot;It&#x27;s wrong.&quot; -- can be very profitable.  I&#x27;m reading Adrian John&#x27;s history of Piracy (highly recommended).  From the Introduction:<p>&quot;Those who were called pirates almost never [took the charaterization at face value]: they always repudiated the label as inaccurate and unjust. The point is that when they did so, they often triggered debates that threw light on major structural issues and had major consequences as a result. We can profit by focusing on precisely these contests -- and the more prolonged, variegated, and ferocious they were, the better. They strained relations between creativity and commercial life, and at critical moments caused them to be reconstituted.&quot;",1396225220
7498654,comment,7496968,7498582,13,0,icambron,,,"> Is this another ad for big design upfront, aka waterfall?<p>Not at all. You won&#x27;t even know what the right abstractions are upfront. If you want to express the point here in terms of coding process, it&#x27;s something like &quot;refactor your code into this&quot;. That the design emerges iteratively isn&#x27;t the same thing as saying there&#x27;s no design. Contrast to evolution, which is not just iterative but also has <i>no design at all</i>. No one gets to sit around and think, &quot;huh, let&#x27;s reorganize this&quot;. Because if they did, maybe organisms in convergent evolution would share code.<p>Edit, let me try that point again, because I don&#x27;t think that was very clear. You may design iteratively, but you&#x27;re still designing. &quot;Oh, these things have x in common, so let me build an abstraction that captures that commonality and have them use it.&quot; But evolution can&#x27;t do that. The only design tool it has is mutating existing code into additional subclasses. You have more tools than that, so as a metaphor evolution&#x27;s &quot;designs&quot; can be described by simpler ontologies. So why limit yourself to those ontologies? You can think of evolution as having ridiculous limitations on the kind of design work it&#x27;s capable of, which are independent of the fact that it&#x27;s iterative.<p>> Strapping bird wings onto a rat often isn&#x27;t going to work.<p>That you have to implement genuinely different things differently is true enough, but not really challenging the point that class hierarchies make encapsulation harder. Also: maybe an engineer would design a bat a bit differently inside so that it could use the avian wing tech? Just a thought.<p>> Why not classify all of our code at the finest grain we can?<p>My point there was that if you had choose one axis on which to classify parts of your code, implementation details wouldn&#x27;t likely be it. That you have to choose is a consequence of the strict single-inheritance model here. Completely classifying a software abstraction is identifying the point n-dimensional space that describes it in terms of all the different ways to categorize it. A fool&#x27;s errand in general, I suspect, but at any rate not possible under the class inheritance model (single or multiple).<p>Edits: multiple for clarity",1396225209
7498653,comment,7498381,7498622,2,0,gatehouse,,,"Unless it has a deterrence effect and makes people pay faster in the future.",1396225185
7498652,comment,7498166,7498166,1,0,purephase,,,"I&#x27;ll be watching this thread with interest myself, but one that I thoroughly enjoyed reading (and it&#x27;s pretty short) is Dr. Strangelove&#x27;s Game by Paul Strathern [1]. It is not particularly well known according to sites I frequent, and I think it&#x27;s unfortunate.<p>[1] <a href=""https://www.goodreads.com/book/show/1193827.Dr_Strangelove_s_Game"" rel=""nofollow"">https://www.goodreads.com/book/show/1193827.Dr_Strangelove_s...</a>",1396225184
7498651,comment,7497130,7497752,1,0,ubercow13,,,"A grade is also how they decide if you get your undergraduate degree. It would be a strange shame if that decision had nothing to do with your intelligence or competency as you imply.",1396225174
7498650,comment,7498381,7498540,6,0,_delirium,,,"In some cases that would be true. But in a number of cases I think there&#x27;s a fairly particularized local bad incentive that gets mitigated at the state level via dilution (and also looks worse, if anyone has to look at it). Texas did something like this with traffic fines. Due to extensive abuse of small municipalities who were trying to extract windfall profits from the fact that they happened to be located along an interstate in Middle-of-Nowhere, West Texas, the state did the state version of &quot;nationalizing&quot; to the revenue from traffic tickets: changed the law so all ticket revenue gets sent to Austin. This has mostly solved the problem: these small municipalities no longer have the incentive to ticket a bunch of people.<p>In this case I think it&#x27;s mostly due to different local vs. state incentives. At the local level, if you happen to live in a 750-person municipality along a freeway, ticketing people aggressively is popular, because it raises money for the municipality, mostly from outsiders passing through. But if Austin takes control of ticketing revenues, it gets much less popular: the average Texan does not want aggressive ticketing on the West Texas interstates.",1396225161
7498649,comment,7496540,7498041,3,0,zanny,,,"And every modern IP stack also provides a firewall, be it iptables or whatever the Windows Firewall is. I don&#x27;t think the &quot;NAT is necessary because putting our computers on the public internet is scary&quot; is anything close to a reason to keep the hodge podge mess we have.",1396225141
7498648,comment,7496698,7496967,1,0,fizx,,,"Still missing any of the fleet management stuff that AWS gives you. :/  No replacements for auto-scaling groups, IAM, CloudFormation.",1396225140
7498646,story,,,1,0,alexnking,"Legality, terms of service for performing a web crawl",http://stackoverflow.com/a/19556521/15813,,1396225103
7498645,comment,7498409,7498619,8,0,orthecreedence,,,"Incorrect, my friend! There&#x27;s no server-side javascript. Turtl is a downloaded, self-contained app, and all encryption happens in that app.",1396225058
7498644,comment,7498198,7498638,3,0,coolsunglasses,,,"You&#x27;re wrong and you should look into how typeclasses, derivation, SYB, and GHC generics work.<p>That they <i>aren&#x27;t</i> doing it is reason enough. Clojure and Erlang&#x27;s QuickCheck libraries would derive Arbitrary if they could. :)",1396225053
7498643,comment,7497533,7498357,1,0,QuantumChaos,,,"That is the irony of progressive thinking: they are constantly torn between saying &quot;Black people don&#x27;t really do X&quot; and &quot;X is completely fine, people just look down on it because of racism&quot;.<p>In this case, X = &quot;driving a car around in circles&quot; or &quot;a vibrant and expressive form of performance art&quot;, depending on what kind of progressive you are :)",1396225044
7498641,comment,7496540,7498050,2,0,zanny,,,"> One wonders if every ISP customer were willing to pay the extra fees (if any) and requested a publicly reachable IP address, could the ISP&#x27;s meet the demand?<p>Well no, that is why all ISPs are using DHCP. Most offer static IPs for extra fees, but like fractional reserve banking that only works if all possible subscribers aren&#x27;t trying to claim unique IPs each.",1396225008
7498640,comment,7498286,7498565,5,0,mikegioia,,,"I was considering tokumx because it seems like scaled better than normal mongodb but to be honest I&#x27;d love to move of this database entirely. I&#x27;m somewhat unfamiliar with postgres but does it have a storage/querying system comparable to mongo?",1396224993
7498639,comment,7497688,7498454,3,0,krisgee,,,"Some people really like meeting strangers and especially travelling strangers.",1396224950
7498638,comment,7498198,7498606,2,0,SamReidHughes,,,"> It can automatically derive automatic randomized generation of your data-types FOR you.<p>There&#x27;s nothing about Haskell (or some extension to Haskell, I presume) that makes this possible that wouldn&#x27;t make this possible in other languages like C#, Java, or, with a bit more verbosity, C++.  If I&#x27;m wrong, please say what it is, I&#x27;d love to know.",1396224949
7498637,comment,7498286,7498514,5,0,AdrianRossouw,,,"i would love to see a solid technical reason to choose mongodb over any of the other NoSQL db&#x27;s (couchdb, riak, redis, etc..) other than &quot;it&#x27;s popular&quot;.<p>No, I&#x27;m not trolling. I really want to know : <a href=""https://news.ycombinator.com/item?id=7446919"" rel=""nofollow"">https://news.ycombinator.com/item?id=7446919</a>",1396224945
7498636,comment,7498381,7498611,6,0,zizee,,,"Because it was voted there. If you want different sorts of stories checkout <a href=""https://news.ycombinator.com/newest"" rel=""nofollow"">https://news.ycombinator.com/newest</a> and vote for the ones that you want.",1396224944
7498635,comment,7496968,7497755,2,0,iopq,,,"Yes, but does Human inherit Neanderthal? If we don&#x27;t know this beforehand, how do we implement both classes?",1396224938
7498634,comment,7496522,7497276,1,0,varkson,,,"These sort of problems crop up a lot more the larger a codebase gets and the more people working on it. Being careful with your variable naming and global scope are necessary to working well with CS.",1396224937
7498633,comment,7497688,7497688,3,0,richardlblair,,,"The thing that should scare you all, is that this article isn&#x27;t wrong. If you argue that it is wrong, than I&#x27;m sorry, but you aren&#x27;t seeing things clearly and this is going to hurt you most.<p>If you are making a good wage in this industry, put some away for when shit hits the fan. It&#x27;s not a matter of if, it&#x27;s a matter of when. Be prepared, friends, because shit is going to go down.",1396224935
7498632,comment,7496430,7496430,1,0,wavesum,,,"Whoa. I&#x27;ve had similar ideas on my own, and now it seems they weren&#x27;t so unique after all. I&#x27;m founder of Wavesum which is focused on music analysis algorithms and their applications. Would be cool to compare our beat tracking algos. Lots of love and ramen was put into ours.",1396224925
7498631,comment,7498198,7498198,7,0,michaelochurch,,,"Haskell encourages you to think upfront about the shape of your data, because you have to design the types upfront and your constraints are checked at compile time. You can build a level of reliability and quality into your software that&#x27;s hard to achieve (not impossible, but rare without great programmers) with a dynamically typed language.<p>There&#x27;s a certain imprecision that you see with mediocre programmers. They don&#x27;t know how things work, and get used to fooling around with a certain squishiness that&#x27;s tolerated on large object-oriented projects as long as there&#x27;s one good programmer (&quot;architect&quot;) in the batch to clean up messes. That&#x27;s good enough to get by in the business world, but not if you really want to understand what you&#x27;re doing and call yourself a true programmer.<p>Haskell forces you to build from the ground up, and a nice consequence of this is that, for any type, you can inspect its pieces and get down to the bottom. Functions will have easy-to-find type signatures and, sometimes, you can get a good sense of what the function does from its signature.<p>In fact, in Haskell, the type system can be used to make assertions about functions like &quot;this function doesn&#x27;t have any side effects&quot; and it&#x27;s trivial to do so.<p>In the long term, Haskell&#x27;s heavy use of immutable data structures confers some major performance advantages as well.<p>Is it the right language for every purpose? No, but it&#x27;s very good for many, and it&#x27;s a source of great ideas that have percolated into other languages, like Clojure and Rust. Additionally, it will force you to think rigorously about your data and what is happening to it.",1396224920
7498630,comment,7498381,7498568,9,0,bradleyjg,,,"The article made reference to a 1983 US Supreme Court case <i>Bearden v. Georgia</i> which held that states may not imprision a person if he is legitimately unable to pay a fine or restitution.<p>Ref: <a href=""http://supreme.justia.com/cases/federal/us/461/660/case.html"" rel=""nofollow"">http://supreme.justia.com/cases/federal/us/461/660/case.html</a>",1396224907
7498628,comment,7496968,7497389,1,0,jroseattle,,,"&quot;Composition is the only proper way to reuse code because composition is explicitly stating you are using the composed code.&quot;<p>And every other pattern is not suggesting this very same thing?",1396224851
7498627,comment,7498409,7498577,29,0,catshirt,,,"law evaluates intent. i&#x27;m not a lawyer, but i&#x27;m not an idiot either and it&#x27;s pretty easy to read between the lines here.<p>if the intent is to illustrate security and encryption, there is no reason to invoke &quot;copyrighted material&quot; at all.",1396224839
7498626,comment,7497665,7498120,5,0,bane,,,"Yeah sure, you didn&#x27;t grow up boxing and wrestling with your friends?<p>Hell, we used to have stick fights and beat each other with sticks, or play full contact football without any gear.<p>We used to also climb all over parking structures, up and down trees, construction sites, ditches, rain water drains.<p>One thing you learn from punching around with your buddies is the unwritten agreement of fairness. You only punch or slap as hard as you want to get punched or slapped. The golden rule works both ways!<p>I thought <i>I</i> grew up in a pretty overly coddled time. Are things really this bad?",1396224808
7498625,story,,,2,0,mhart,"Rewriting Git History (or how to fake being a flawless committer)",http://engineering.adslot.com/2014/03/28/rewriting-git-history/,,1396224799
7498624,story,,,1,0,wallflower,"Tax Breaks to Anchor Tech Growth in San Francisco",http://bits.blogs.nytimes.com/2014/03/30/a-tax-break-to-anchor-tech-growth-in-san-francisco/?hp,,1396224788
7498622,comment,7498381,7498568,5,0,cesarbs,,,"The funny thing is that when someone is locked up for not paying their debt, the government very likely ends up having spent more money doing that than just leaving that debt alone.",1396224774
7498621,comment,7498455,7498603,1,0,gadr90,,,"Thanks! Updated.<p>Didn&#x27;t know that about the new ES6 functions. I&#x27;ll check it out.<p>Yes, named functions do improve debugging... But I guess it&#x27;s worth the trade. I have come across very confusing code thanks to named functions.",1396224767
7498620,story,,,4,0,pmorle,"An App Store Experiment",http://pollenizer.com/app-store-experiment,,1396224733
7498619,comment,7498409,7498543,4,0,foobarqux,,,"The security model is broken. You can&#x27;t securely do encryption in server side javascript.",1396224670
7498618,comment,7494682,7497934,3,0,brg,,,"Tax write offs do not work like you seem to imply.  There is no net financial gain to any charitable donation .  Consider a dollar of profit.  If kept on the ledger as profit, a corporation pays around fifty cents of that dollar in tax.  If donated that dollar of profit is not taxed, but the corporation now had lost a dollar instead of 50 cents.",1396224659
7498617,comment,7498381,7498574,4,0,delinka,,,"Then it&#x27;s a shame that the author led with this particular woman.<p>My opinion on the &quot;debtor&#x27;s prison&quot; subject is that non-payment of fines should never result in jail time. Other punishments perhaps (revocation of license, liens against property, etc), but never jail time. Nor should interest and penalties be permitted to eternally inflate those original fines. And the privatization angle ... these companies need to be heavily regulated. I could go on and on about that one...",1396224627
7498616,comment,7498381,7498532,3,0,ThomPete,,,"Are you serious?<p>Did you read the article? Do you understand the difference between not being poor and able to pay your bills and then being poor and not able to pay the bills?",1396224622
7498614,comment,7498286,7498600,3,0,saryant,,,"<a href=""http://objectrocket.com/pricing"" rel=""nofollow"">http://objectrocket.com/pricing</a>",1396224604
7498613,comment,7498198,7498560,1,0,SamReidHughes,,,"> Short version: Most, if not all programming bugs are due to your code receiving something it did not expect. Haskell&#x27;s type system helps eliminate this problem by forcing your code to declare exactly what it expects, and to handle all cases of said expectations.<p>No it doesn&#x27;t (force).  It&#x27;s about as good as C++ on this front, with better error messages.  What it does do is make it a lot easier to program in a style that handles all cases, but without forcing you to do so.  You can pattern match on something instead of making a visitor.  But you can still call head or tail.",1396224597
7498612,comment,7498286,7498563,2,0,epoxyhockey,,,"Yahoo isn&#x27;t the only large company to instruct its employees to avoid mongodb due to it being AGPL.  In my opinion, the only people using mongodb in a commercial setting are those who are paying 10gen for a commercial license or those that don&#x27;t know they are violating the AGPL license.",1396224587
7498611,comment,7498381,7498381,4,0,mdesq,,,"Why is this the top story on HN, let alone on the front page?",1396224585
7498610,comment,7498198,7498198,4,0,dwc,,,"A while back I was learning Haskell. I had a problem I wanted to poke at a bit, so I thought I&#x27;d give it a try. So I made various types in Haskell&#x27;s nifty type system, which is NOT hard or tricky. I made some functions to work with the types. Easy. I worked all this stuff up and tried to compile, and being that I wrote a fair amount of code of course there were a couple of typos, etc. But then there was another part that wouldn&#x27;t compile because I&#x27;d made an error, and the type system called me out on it. It&#x27;s like getting the benefit of <i>unit analysis</i> (or <i>dimensional analysis</i>) from the compiler.<p>That&#x27;s one thing to like. A lot. There are other things. Polymorphism/overloading through type classes is so easy and clean it&#x27;s hard not to love. The list goes on and on.<p>For my part, I got hung up a bit on using monads. This was a few years ago, so maybe there are better articles/explanations now, but at the time there were a zillion monad tutorials, all of them written by people who almost but not quite &quot;got it&quot;. I need to try Haskell again.",1396224583
7498609,comment,7490151,7495288,1,0,wpietri,,,"I&#x27;m not saying it&#x27;s worth nothing. I&#x27;m saying it&#x27;s not proof that there never will be any problems. I&#x27;m saying that gay employees, partners, and donors can have reasonable concerns about Eich.<p>Personally, I&#x27;d be happy if Eich said, &quot;Boy, I was a jerk to support Prop 8. I&#x27;ve always believed in equality, but I supported Prop 8 for [mistaken reasons]. I now understand that helping to strip some of my employees of their civil rights was harmful action, and apologize unreservedly.&quot;<p>But instead, he&#x27;s dodged the question with some vigor. Which makes it reasonable to think he still thinks some of his employees don&#x27;t deserve the same rights as he does. Whether or not that actually leads to bigoted actions within Mozilla as it has outside of it, reasonable people could fear that it would.",1396224565
7498608,comment,7496522,7497140,1,0,h1karu,,,"npm depends on a javascript compiler such as g8 so how is that different than clojurescript depending on the JVM ?!  It&#x27;s no different at all you&#x27;re just complaining that you don&#x27;t like to have to install software before using it which is ridiculous if you want to use powerful software.",1396224563
7498606,comment,7498198,7498589,6,0,coolsunglasses,,,"Have you read the source to Haskell&#x27;s QuickCheck?<p>It can automatically derive automatic randomized generation of your data-types <i>FOR</i> you. No other generative testing library (such as for Clojure or Erlang) can do this.<p>Further, the random data generation can be customized using the functional combinator API.<p>Haskell QuickCheck&#x27;s source code is a compelling example of what can be done with static types and typeclasses in Haskell.",1396224542
7498605,comment,7497130,7498576,3,0,thirsteh,,,"> laziness always seemed an important part of Haskell&#x27;s elegance<p>It&#x27;s part of it, but to a lesser extent than you would expect. The much more important part of Haskell is its no-corners-cut separation of effects, which happened chiefly because, without it, laziness meant that there was no way to know when fireTheMissiles() would actually happen.<p>> Is laziness now considered something of a failed experiment?<p>To some extent, yes. No one is saying laziness doesn&#x27;t make the implementation of some algorithms and data structures extremely elegant, just that, most of the time, you don&#x27;t actually gain much by leaving your function calls and data types lazy.<p>I enjoy being able to make infinite/self-referencing data structures, or leaving fields lazy and &quot;performing&quot; all of the function calls in the initialization of the &quot;struct&quot;, but have only the functions producing results that will actually be needed matter performance-wise. However, if you don&#x27;t use any strictness annotation, that benefit doesn&#x27;t outweigh the problems that can be caused by space leaks.<p>If you <i>do</i> use strictness annotation, I don&#x27;t think it matters too much whether the language is lazy or strict, you just have to write strictness annotation instead of laziness annotation.",1396224504
7498604,comment,7498198,7498198,8,0,maxcan,,,"One aspect that doesn&#x27;t get mentioned much is recruiting from both sides.<p>As an engineer, if you land a job coding haskell you&#x27;re pretty much guaranteed to be an environment thats extremely engineering-centric, has minimal technical debt, and is staffed by lots of smart people. usedox.com, alpha heavy, jane street (ocaml but close enough), silk, tsuru, fobo are all exemplary examples of this.  anyone of them is an amazing environment and you&#x27;ll learn a ton.  (the first one is my own company, so consider that one with a grain of salt)<p>As an employer of engineers, if you put out a call for haskellers, you&#x27;ll get a far smaller applicant pool than say ruby, python, java, or c#.  But the signal to noise ratio is incomparably higher.  Very few mediocre engineers will claim haskell as a skill.",1396224504
7498603,comment,7498455,7498455,2,0,AdrianRossouw,,,"> arrow &quot;keyword&quot; a very sensitive choice<p>I think you meant &#x27;sensible&#x27; there.<p>I actually find the cs arrows a lot more useful than the es6\nshort-hand function definition, because a lot of the time I want\nto do be able to do composition, and the es6 one always binds the\nscope to where it&#x27;s defined.<p>I love named functions otherwise, which ease debugging and understandability.\nI actually don&#x27;t care for implicit returns, not just because i\nprefer being explicit, but because it&#x27;s the cause of some very weird bugs at times.",1396224503
7498602,comment,7498381,7498381,4,0,faddotio,,,"I&#x27;m utterly shocked that this happened in a Southern state.",1396224488
7498601,comment,7495719,7496142,1,0,prawn,,,"Potentially a combination of things. Education and reinforcement, discipline, opportunities, etc. All would surely help. On the last item, at a servo (what an Australian generally calls a &quot;gas station&quot;) soft drinks and energy drinks are often cheaper than water or promoted in two-for-one deals. They&#x27;re also always at eye level, leaving milk and water on lower shelves of the display fridges.<p>When you reach the counter (and the same thing happens near supermarket checkouts), there is literally shelving with hundreds of chocolate bars between you and the attendant.<p>And this is where you&#x27;re filling the car that enables you to avoid walking a distance instead.<p>Another opportunity example is fast food. The 24-hour shops will be Hungry Jacks (Burger King in AU), McDonalds and so on, or servos. Supermarkets will generally have shut by 9pm.",1396224486
7498600,comment,7498286,7498286,2,0,emperorcezar,,,"None of this means anything unless there is clear pricing. Am I not seeing it?",1396224460
7498599,comment,7498198,7498535,1,0,coolsunglasses,,,"Immutability is good but far from enough.",1396224451
7498598,comment,7491864,7496442,1,0,nknighthb,,,"It takes no imagination to distinguish between &quot;things users go to Facebook to see&quot; and &quot;things users do not go to Facebook to see&quot;.",1396224444
7498597,comment,7496968,7497295,3,0,peterashford,,,"I&#x27;m a Java programmer and I think classes in JS would be awful.  Tacking on the ES6 behaviour will not make JS a sane OO language, it&#x27;ll make JS a bunch of new, inconsistent behaviours tacked onto the old, inconsistent behaviours.<p>FWIW I&#x27;m with you: I think that treating JS as a functional language is a cleaner fit that crowbar-ing OOP into it.",1396224438
7498596,comment,7498381,7498520,2,0,some_guy_there,,,"$745 for a traffic ticket sounds a bit too much. Punishment for any crime should be proportional to the crime committed. I don&#x27;t think anyone is asking for no punishment for violating traffic rules, but proportional punishment is hardly the intent of justice system in her town.<p>Punish her to make sure that she does not repeats the same mistake again, which is what a lot of places in America do daily, without anyone needing to write an article about it.",1396224432
7498595,comment,7498198,7498198,6,0,clin_,,,"Here&#x27;s a handful of things I really appreciate about Haskell, although some of this apply to other ML family languages as well:<p>1.) Algebraic Data Types let you enforce a huge amount of correctness in your programs simply by how you define your types.<p>For example, say you have a data type that represents a player&#x27;s state in a game. If the player is alive, he has a &quot;HP&quot; and &quot;inventory&quot; record. If the player is dead, he should just be dead—HP and inventory may or may not be set to 0 and None, respectively. In C or OOP languages, you just get a player object/struct and you have to enforce this state logic manually, and you can easily write a function that puts the player in an inconsistent state (player.alive = False, but player.HP = 15). In Haskell, you can define the player such that code that produces this kind of inconsistent state will not compile.<p>Of course, you should still write tests in Haskell, but it&#x27;s amazing to me that the type system can catch the vast majority of programming errors before your program even compiles. It takes longer to get something up and running, but you make up for this up front cost with long term gains in maintainability.<p>2.) Functional purity enforces two very useful properties:<p>a.) Data is never mutated by accident. This ensures you never have to look beyond the scope of the function you&#x27;re working on (or closing over, in some cases) to know what&#x27;s going on. You can then compose these functions to create more complex programs.<p>b.) When you do need mutability and side effects to happen, Haskell forces you to be very explicit about this and enforces a strict separation between &quot;pure&quot; and &quot;effectual&quot; code. This seems arbitrary until you realize that almost all of your errors not caught by the compiler happen because of IO. Whereas you have complete control over the pure part of your program, IO is nondeterministic and full of exceptions and edge cases. Separating this part of your code makes it far easier to reason about what&#x27;s happening, adding to maintainability.<p>As a side note on the last point: people make the argument that this separation makes Haskell impossible to do printf debugging. Not true—the standard library provides ways of circumventing the type system specifically for this reason.<p>3.) &quot;Monads&quot; and other fancy sounding abstractions can be hard, but with practice they become as intuitive as inheritance in OOP. The real barrier to entry is the awful, awful documentation everywhere. I make no apologies for that: it&#x27;s just really shitty and the community needs to do a hundred times better.",1396224419
7498594,comment,7498166,7498166,1,0,chewxy,,,"I liked deVries&#x27; The First Modern Economy - the first volume is great. It&#x27;s not a pop-econ book, but rather a good hard look at the Dutch economy circa 1500s. A Concise Economic History of The World is also not a bad book, if a bit dry.<p>There are too some other cliometric books that I really liked but can&#x27;t for the life of me recall it. There was another that was along the lines of Money and Market of All Times or something or like that, which I recommend for a quick skim through (not really worth a deep read - I&#x27;d treat it as the others already mentioned in this thread)",1396224398
7498593,comment,7498381,7498520,5,0,pessimizer,,,"You&#x27;re completely missing the point. Putting her in years of indentured servitude to the state and some third party contractor doesn&#x27;t mitigate the chance that she&#x27;ll hit you while driving uninsured <i>at all</i>.<p>In fact, while scrambling to get the money, she&#x27;s going to be forced to make the decision often between driving and hoping she doesn&#x27;t get caught, or not paying her fee and going to jail.<p>It&#x27;s amazing that someone could read this horrible tale and can only see how it affects themselves. How much oppressive klepto-state will you support to prevent the slightest chance that the situation of the poor might affect you and yours?",1396224398
7498592,comment,7498409,7498556,1,0,orthecreedence,,,"I&#x27;m glad you&#x27;ve been having a good experience! It&#x27;s been fun building it and I&#x27;m excited to to keep growing it and making a viable platform for the more privacy-conscious.",1396224389
7498591,comment,7498381,7498568,5,0,_delirium,,,"For regular debt owed the government you can&#x27;t usually be jailed, if it&#x27;s not as a result of fraud: the IRS can try various ways to coerce you into paying, but they cannot jail you for an outstanding debt that you really can&#x27;t pay. Instead they resort to negotiating repayment plans, garnishing wages, etc.",1396224384
7498590,comment,7498051,7498051,1,0,devNoise,,,"Seems like Facebook is having parallels to the IE6 support problems websites used to face. They could do some cool stuff with new HTML5 features, but the displays most of their users have are not up to snuff. Guess they had issues with getting the big picture newsfeed to degrade for those displays.",1396224381
7498589,comment,7498198,7498535,1,0,SamReidHughes,,,"Just being statically typed helps, there&#x27;s nothing particularly special about Haskell that makes QuickCheck possible.",1396224378
7498588,comment,7490151,7491249,1,0,wpietri,,,"Could you spell out your perceived contradiction? As far as I have seen, the perception of contradiction happens only with people who don&#x27;t find them credible to begin with.<p>Personally, I don&#x27;t see it as hypocrisy. In the case of those opposed to Prop 8, people aren&#x27;t arguing for some generic tolerance, they&#x27;re arguing for civil rights, including equality before the law. Most of the gay people I&#x27;ve talked to figure the prejudiced are going to keep on with their hating; they just don&#x27;t want that bigotry enshrined in law.",1396224325
7498587,comment,7497533,7498112,1,0,paulbaumgart,,,"There is a feedback loop at play: the entrepreneurs go where the capital is and the capital goes where the entrepreneurs are. The geographical distribution arises organically from that feedback + the initial seed of Stanford University.<p>It&#x27;s not that VCs look down at Oakland per se, it&#x27;s that there aren&#x27;t many good investments to be found there.",1396224285
7498586,comment,7498381,7498520,6,0,macspoofing,,,"You completely missed the point. First the anecdote was merely a segue to the core thesis of the article - that is the dubious way certain counties levy and collect fines.  Second the article didn&#x27;t actually claim the woman was innocent because again,  that wasn&#x27;t the point.  You seem to have stopped reading after the first paragraph.",1396224285
7498585,comment,7496261,7496972,2,0,jevinskie,,,"Do you know of anything similar for amd64 Mac/Linux? Not PLT hooking but the sort of deal where the beginning of the function is overwritten with a jump to the hook. The overwritten instructions in the original function are copied to a mmap()ed area of memory that jumps back past the hook jump.<p>I found an old copy of MobileSubstrate that has partial support for i386 and x86_64 (which works fine on Linux since the ABI is the same as Mac). I found out that it doesn&#x27;t support all the possible jumps in the overwritten area. I&#x27;ve been slowly patching and improving it[0] but I&#x27;d rather be spending my time hooking stuff than writing the hooker.<p>[0]: <a href=""https://github.com/jevinskie/substrate"" rel=""nofollow"">https://github.com/jevinskie/substrate</a>",1396224273
7498584,comment,7498573,7498573,3,0,matthewsinclair,,,"I just posted a link to the above paper in a comment here:<p><a href=""https://news.ycombinator.com/item?id=7496154"" rel=""nofollow"">https://news.ycombinator.com/item?id=7496154</a><p>But it&#x27;s such a good article, that I think it warrants reconsideration given the &quot;Abstract Ideas Don’t Deserve Patents&quot; article in the New York Times (linked in that above comment thread).<p>This paper really changed my mind on the notion of IP. And if you&#x27;ve got a view on the subject, it&#x27;s worth reading.",1396224254
7498583,comment,7496968,7497377,4,0,peterashford,,,"Yes! I most emphatically agree with this.  I do a lot of OO programming in Java or C++ but I think its a horrible idiom for JS. Although I also think prototypical inheritance in Javascript is also pretty ugly :o)  For me, JS seems to work best when treated like a poor man&#x27;s functional language using libraries like underscore.",1396224191
7498582,comment,7496968,7498459,5,0,seanmcdirmid,,,"> Software is designed; you don&#x27;t (or at least shouldn&#x27;t), construct your programming abstractions by progressively mutating the different parts of your code.<p>Is this another ad for big design upfront, aka waterfall? It is a nice ideal, but when you get down into it, software really is evolved since requirements are constantly changing and your understanding becomes better.<p>>  You get to build a bat by strapping wings onto a rat, and you know how to build wings because you already did it for birds.<p>Really you don&#x27;t. The bat flies quite differently from the bird, with substantially different attributes. Strapping bird wings onto a rat often isn&#x27;t going to work.<p>> This issue comes up enough in gaming that the no-hierarchy-lots-of-mixins approach has a name: the entity-component model.<p>This is actually much older than that (Common Lisp Flavors), and languages like Scala include mixin-like traits, not to mention the work of Bracha and Cook. Inheritance is still heavily involved in that though, it is not &quot;mixins or inheritance&quot; but &quot;inheritance with mixins,&quot; it still very much is OOP, and you are still defining a DAG if not tree.<p>> Finally, how far would we really be willing to take biology&#x27;s classification-by-implementation philosophy, even if classifying pieces of code were really our goal? We could end up with superclasses like UsesAStar and HashSet. Not really the point of all of this, right?<p>Why not? Why not classify all of our code at the finest grain we can? Of course, existing languages are poorly suited to that task, but we can always define new languages where this isn&#x27;t a PITA. Or we could just use machine learning to figure out what the connections are automatically (this will happen eventually, just not for another 10 or 20 years I hope).",1396224180
7498581,comment,7497688,7497950,0,0,MichaelGG,,,">when pre-revenue companies with unworkable business plans IPO&#x27;ed at high valuations.<p>Twitter? Or Splunk?",1396224179
7498580,comment,7498409,7498558,2,0,orthecreedence,,,"Thanks, I&#x27;ll make that more clear.",1396224168
7498578,comment,7498381,7498571,1,0,TomGullen,,,"Not saying I disagree necessarially, but if she has no license doesn&#x27;t that mean insurance wont pay up if she crashes into someone and causes serious injury?",1396224155
7498577,comment,7498409,7498545,2,0,orthecreedence,,,"Great point. It&#x27;s worth noting that Turtl is a <i>storage</i> tool, not a means of distribution. The article is not promoting infringement, but instead gives an overview of how it&#x27;s just not an issue with Turtl, because Turtl has no knowledge of the data being stored.",1396224135
7498576,comment,7497130,7498305,3,0,codeflo,,,"> I think most haskellers agree that laziness complicates things more often than not, and if we could start over we wouldn&#x27;t make Haskell lazy by default.<p>Following Haskell&#x27;s evolution somewhat from the outside, this is surprising. (And also somewhat disappointing, as laziness always seemed an important part of Haskell&#x27;s elegance.) Is laziness now considered something of a failed experiment?",1396224134
7498575,comment,7498198,7498198,3,0,dustingetz,,,"Functional programming is where you end up if you ask the question, &quot;how can I write better software more quickly with fewer bugs&quot;. I know of no shortcut to grokking why FP makes this possible other than just learning how to do it.",1396224130
7498574,comment,7498381,7498520,16,0,agwa,,,"This article is not about her.  It&#x27;s about the government of Harpersville, Alabama and their de facto debtor&#x27;s prison system.  It&#x27;s immaterial what she did because nothing excuses throwing someone in jail indefinitely for not paying a fine they can&#x27;t afford, driving up their debts by charging them for every day they spend in jail, denying them due process, etc.",1396224124
7498573,story,,,80,56,matthewsinclair,"Against Intellectual Property (1995)",http://www.uow.edu.au/~bmartin/pubs/95psa.html,,1396224105
7498572,comment,7497130,7498326,5,0,rtpg,,,"With something like Haskell (very good type inference) the types will only bother you if you&#x27;re writing wrong code (or writing particularly complex expressions, I&#x27;m not necessarily against compilers complaining about things that are complicated).<p>It&#x27;s not a free lunch, but damn is it cheap.",1396224091
7498571,comment,7498381,7498520,2,0,emperorcezar,,,"She still didn&#x27;t deserve indefinite detention.",1396224086
7498570,comment,7498198,7498198,1,0,Ingon,,,"I think if the curve is too steep probably you are trying to learn too much at a time. Focusing on small and well defined problems will help you out at least initially. For instance I used Project Euler[1] to study some of the basics, because the tasks there are well constrained and you cannot do too much architecturally. You will learn the mechanics of writing small functions, defining types, and then you can move onto something bigger, where high level concepts are involved.<p>[1] <a href=""https://projecteuler.net/"" rel=""nofollow"">https://projecteuler.net/</a>",1396224075
7498569,comment,7497130,7497946,1,0,iopq,,,"700MB? Considering my SSD is 400GB, why would I care?",1396224063
7498568,comment,7498381,7498497,5,0,bdcravens,,,"I thought &quot;debtor&#x27;s prisons&quot; referred to being locked up for private debt, not fines and fees owed the government.<p>There&#x27;s nothing new about breaking the law and going to jail when you can&#x27;t pay the fines. You&#x27;ll typically sit in jail at a given rate until the debt is paid (for example, $50/day, and there&#x27;s multipliers for working while in jail)",1396224038
7498567,comment,7492341,7496786,1,0,nknighthb,,,"Once again, your cynical rant focuses entirely on the present state of COTS technology with no allowance for advancement.<p>Your assumption about me, by the way, is entirely wrong. If you&#x27;ve brought a product to market, I&#x27;m sorry the experience turned you into a cynical curmudgeon. It only turned me into someone who had accomplished something hard. Things being hard is not a reason not to do them, a reason to act as if others won&#x27;t do them, or to fail to look around and notice the advancements occurring all around us.",1396224030
7498566,comment,7498381,7498520,9,0,noarchy,,,">For me, this whole story hinged on that one time she got caught driving without a license: there&#x27;s no reason she should have been unaware of the consequences.<p>Consequences such as, &quot;People wound up in jail for months without ever seeing a judge.&quot;<p>Do you expect these kinds of consequences in the United States?<p>The lady in this case may have fared slightly better, with her time in jail coming in at seven weeks: &quot;Ford spent seven weeks in jail, during which time her debt grew into the thousands. She did not, however, see the inside of a courtroom.&quot;",1396224023
7498565,comment,7498286,7498286,13,0,yanowitz,,,"If you&#x27;re stuck with mongo in legacy infrastructure\nand it doesn&#x27;t make sense to refactor/architect\nit away, I suggest tokumx. It&#x27;s allowed us to kick the can on this problem for at least another year. Almost no lock contention, far more compact on disk (even cheap disk space adds up) and (what seems to be) a\ngrowing set of users.<p>I&#x27;m optimistic that pg9.4 will be our migration path. But regardless, tokumx has given us the breathing room\nto defer the decision.",1396224010
