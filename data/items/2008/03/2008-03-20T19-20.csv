ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
141880,story,,,1,0,drm237,"Less Talk More Risk",http://www.gibdon.com/2008/03/less-talk-more-risk.html,,1206043088
141879,story,,,1,0,ciscoriordan,"SpinVox Translates Voice-to-Text Service Into A $100 Million Round",http://www.techcrunch.com/2008/03/20/spinvox-translates-voice-to-text-service-into-a-100-million-round/,,1206042911
141878,comment,141819,141875,0,0,ivankirigin,,,"I'm probably biased because Tipjoy isn't affected in the least by a drop in spending in Ads. We're probably boosted, all things being equal. Consumer frugality would certainly affect us though.<p>Your business model shouldn't change on the margins. A slow or fast season in Ads won't make a typical business die or become viable.",1206042712
141877,comment,141816,141831,0,0,marrone,,,"yeah Crock is awesome. He also made jslint<p>jslint.com",1206042642
141876,comment,141786,141786,0,0,iamdave,,,"Good time to start a company, what about the rest of the economic front?  If a startup is being frugal, does that invariably mean the people who use services are going to be frugal?",1206042567
141875,comment,141819,141820,0,0,tom_rath,,,"What about the significant drop in ad spending which occurs in every recession?  Or is it ""different this time"" like in 2000?",1206042372
141874,comment,141629,141636,0,0,thorax,,,"We use Code Igniter on all of our sites you see in my profile.<p>Love it, love it. Has its issues, but I can't really put into words how useful it has turned out to be for our team.<p>We may very well go with Django long-term, but I've never spent a day regretting that we're using CI. And this from a guy who has always had a fairly low hacker opinion of PHP. CI kinda changed that a good bit once I pushed back my skepticism.<p>I highly recommend it for PHP developers who want to move to the MVC model and get a lot of ROI on their development time.<p>If you're comfortable with Ruby or Python, you'll enjoy the other frameworks more, of course. But I wouldn't use PHP on its own without Code Igniter.",1206042249
141873,comment,141617,141754,0,0,rbanffy,,,"If it's a toaster, it probably can run NetBSD.<p>Since you don't report any crashes, it's a plausible idea.<p>I don't think it's possible to design a webite as cruel as this microwave.",1206042113
141872,comment,141617,141754,0,0,rbanffy,,,"If it's a toaster, it probably can run NetBSD.<p>Since you don't report any crashes, it's a plausible idea.<p>I don't think it's possible to design a webite as cruel as this microwave.",1206042038
141871,comment,141617,141754,0,0,rbanffy,,,"If it's a toaster, it probably can run NetBSD.<p>Since you don't report any crashes, it's a plausible idea.<p>I don't think it's possible to design a webite as cruel as this microwave.",1206042030
141870,comment,141669,141798,0,0,bct,,,"The appeal of being a person in a virtual world is in creating your own stories. If your experiences are identical to everybody else's, if you can't have a real effect on the world, then you're a passive observer rather than a real participant.<p>Passive interactivity (it's an oxymoron but I think you get my meaning) can be fun, of course. The problem is one of expectations; if you come into a static game expecting a virtual world, you'll be disappointed. It doesn't help that MMORPGs ""look"" like worlds, or that (to some extent) they're marketed as them.",1206042012
141869,comment,141669,141669,0,0,mkull,,,"Ultima Online was on the right path.<p>Everquest set MMO's back 10 years in my opinion. :(",1206041976
141868,comment,141786,141848,0,0,spencerfry,,,"I don't think she's saying that all of her 5 points are unique to recessions per say, but rather she's saying they're more apparent and important during a recession. While her interesting points to me -- being frugal and taking a closer look at your idea -- apply to startups during the state of any economy, theyâ€™re further highlighted during a recession. The only real point that applies to recessions alone is #4, which is quite significant and important to keep in the back of your mind.",1206041897
141867,comment,141672,141788,0,0,jamesbritt,,,"""For that reason, the idea that an iPhone confers social status really jumps out at me, because it just doesn't seem true.""<p>Though it may suggest that the owner has a bit of spare cash, since they're not economically priced.",1206041809
141866,comment,141845,141858,0,0,tim2,,,"Unless I'm missing something, yslow just measures download size and latency.<p>I want to measure how well the browser progressively renders the page. For example if I made a layout with tables nested 50 deep, the browser would do worse at progressive rendering and have a higher render time than if I used just css.<p>Likewise, I'm not talking about network latency, eg pingdom, keynote(?). Or compatibility, eg gomez.",1206041765
141865,comment,141758,141758,0,0,jamesbritt,,,"Judging by some comments, I don't think my initial post was clear.<p>My question is not about keeping others from copying my ideas, but demonstrating that I have not filched ideas from others.<p>Suppose you are working on a product.  You have a discussion with some other company; turns out they are working on something similar.<p>You release your product, and they claim you stole the idea and sue.<p>How does one demonstrate that your work was done independently and began before any such discussions?",1206041718
141864,comment,141669,141669,0,0,0xdefec8,,,"Ignoring gameplay issues, I think another interesting feature of procedural game dev is the memory/CPU tradeoff.<p>For example the 97,280 byte FPS:  <a href=""http://en.wikipedia.org/wiki/.kkrieger"" rel=""nofollow"">http://en.wikipedia.org/wiki/.kkrieger</a>",1206041569
141863,comment,141591,141801,0,0,sah,,,"The author seems to want to say that <i>language features</i> are invalid criteria on which to judge the quality of a language (instead, he suggests that you should look at the quality of the documentation, the libraries, the community, and perhaps the syntax).<p>It's true that there are some language features, like type checking and memory management, on which reasonable people disagree.  I think that those represent opportunities for innovation.  Type inference, for example, seems to be changing the terms of the debate about static vs. dynamic typing.",1206041302
141862,story,,,11,4,prakash,"The Hyperinflation of XMLSpy",http://www.yafla.com/dforbes/The_Hyperinflation_Of_XMLSpy/,,1206041262
141860,comment,138966,141287,0,0,astine,,,"The reason Europeans are not as accepting of warfare is because they screwed themselves over twice with it. War is always the last resort of negotiation. When nations become too belligerent or stubborn conflict will always follow. Europe forgot this lesson twice in as many generations and suffered the consequences.<p>There are only two ways to prevent conflict: 1. be reasonable in all of your negotiations and 2. make sure you are always ready for a conflict.<p>If you fail to do the first, others may see no choice but to fight you. If you fail to do the second, they may not see any downside to it. This boils down to one principle, you must always back every one of your demands, even the reasonable one which you have a right to, with sufficient force.<p>In short, there is nothing wrong with using machines to do our fighting for us. There is something wrong with killing civilians and unnecessarily invading foreign countries; but there is nothing wrong with using better weapons to do the same job.",1206041199
141858,comment,141845,141845,0,0,prakash,,,"YSlow is good for measuring page render time, using <i>your</i> computer and internet connection and provider meaning it might <i>not</i> mirror where your end-users are coming from geographically and from a network perspective.<p>There are companies you can use to measure performance of a webpage from various geographies, networks, and internet connections available from pingdom, Keynote, Gomez and other companies",1206041160
141857,comment,141672,141772,0,0,davidw,,,"Consider also that you have to <i>sell</i> stuff to someone, that selling stolen stuff isn't as easy as selling stuff normally, and that people you are selling to are more likely to already have something quite similar to what you're trying to sell them.",1206040946
141856,comment,141679,141763,0,0,twak,,,"Code reviews should be much more to with medium to big ideas, not small details. Small details should be trivial to a good hacker.<p>so: ""You've got that wired in backwards"", ""Tim built one of those over here"", ""When we implement foo, that'll bar"" & ""That's a security hole because ...."" are good.",1206040688
141855,story,,,12,2,prakash,"Ning's business model",http://blog.ning.com/2008/03/so_whats_your_business_model.html,,1206040674
141854,comment,141816,141844,0,0,zain,,,"I actually hope they don't. Having a small, core YC crowd there would be much nicer than seeing all the Web 2.0 party hoppers you normally see at events on Upcoming.",1206040647
141853,comment,141490,141490,0,0,earle,,,"I wouldn't get too excited without seeing some sort of actual documentation.  Hopefully this is done ala-WSGI",1206040647
141852,comment,141845,141845,0,0,davidw,,,"<a href=""http://developer.yahoo.com/yslow/"" rel=""nofollow"">http://developer.yahoo.com/yslow/</a> ?",1206040632
141851,comment,141679,141679,0,0,gruseom,,,"Every formal code review I ever sat through was a painful experience that went on for longer than planned, covered way less code than planned, resulted in minor improvements at best and had zero long-term impact on the quality of the codebase.<p>Of the many reasons for this, I'll mention one: by the time a code review takes place, the key design decisions surrounding that part of the system have typically already been made. To do a retroactive redesign during a meeting is out of the question; that would be more work than writing the original code in the first place. So all people end up doing is scrutinizing tiny things like null checks. I'm not saying those don't matter; of course they do, but they're only a small part of making good code.<p>So the code-review approach boils down to saying ""do the big stuff on your own and look over the small stuff together"". That seems backwards to me.<p>(By the way, I'm talking about commercial projects. There's an entire literature around formal inspections, as you know, and good results have been said to be obtained with them, but if you want to go that route you're talking about heavy-duty process control, slowing development to a glacial pace that is  unworkable for most commercial software.)<p>I've personally observed two things that do work. First, pair programming. It's not for everybody (the community here, for example, is largely derisive of it), and I'm not arguing for it in general. But there's no question that it does what code reviews are supposed to (but don't).<p>The other thing I've observed to work is to write the code individually but review it on checkin. That's how we do it on my current project. We'll either watch the repository and look over changes as they are committed, or email a patch and ask for review. This kind of review isn't as efficient or as comprehensive as writing the code together in the first place, but it does allow major problems to be caught and dealt with quickly (at the cost of some rework).",1206040532
141850,comment,141591,141591,0,0,dreish,,,"Lack of closures is hardly an ""invalid"" reason to dislike a language, especially if the reason for lacking closures is that they're too confusing for less-skilled programmers.",1206040522
141849,comment,141679,141763,0,0,nradov,,,"We have coding standards. The developers are good about following them, and some coding standards problems can even by caught automatically by static analysis tools.<p>But coding standards don't prevent logic errors, or requirements misunderstandings. Even the best developers make those kinds of mistakes and we catch a significant fraction of them during code reviews.<p>The other major benefit of consistently doing code reviews is learning. The attendees often pick up useful new techniques. And you spread knowledge of the code base around the team, which reduces the organization's dependence on any one developer and also brings out opportunities for code reuse.",1206040468
141848,comment,141786,141786,0,0,m0nty,,,"None of those are unique to a recession: you should be frugal, you should look at your ideas again, etc. Top reason to start a company during a recession: your competitors will go bust.",1206040280
141847,comment,141837,141841,0,0,wmf,,,"The RAD Lab is not a joke, but this post is a little thick with hyperbole.",1206040155
141846,comment,141786,141786,0,0,sabat,,,"A lot of people do start companies during 'downtimes'. Off the top of my head: sixapart started when both Ben and Mena got laid off. Flickr was pretty much the same story IIRC.<p>Also could get one more attention -- maybe -- because the media won't necessarily expect anyone to be doing anything positive. Recessions are one big moan, and the 'yipee!' of a startup will stand in stark contrast. IMHG (in my humble guesstimation).",1206040131
141845,story,,,5,12,tim2,"Ask YC: A way to measure page render time?",,"How do you measure the affect of different layouts on browsers' progressive rendering of pages?",1206040061
141844,comment,141816,141816,0,0,gojomo,,,"I recommend putting events on Upcoming and Facebook Events, too, if you want big attendance.",1206039948
141843,story,,,1,0,prakash,"Weekly Digest of the Social Networking Space: March 19, 2008",http://www.web-strategist.com/blog/2008/03/19/digest-7/,,1206039816
141841,comment,141837,141837,0,0,tlrobinson,,,"I can't tell... is this a joke?",1206039659
