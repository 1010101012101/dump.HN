ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
1015958,story,,,24,5,ivey,"An In-App Purchase Brain Dump",http://www.subfurther.com/blog/?p=856,,1261835931
1015957,comment,1015934,1015934,0,0,riffer,,,"Currently at #4 on the frontpage<p>Users with negative karma should not be able to submit stories",1261835880
1015956,comment,1015879,1015879,0,0,jim_lawless,,,"In the late 70's while in my teens, I was interested in making video games.  I had a TRS-80 and learned BASIC and then Z-80 assembly-language.  I then bought a Commodore 64 and learned more languages while at a tech school.  I became a programmer for banking software and never really got a game off the ground.<p>To answer your second question, I wish that I had some insight into software design as I was learning to program.  Too often, I would kludge through something in BASIC ... that was the mental model of the software that I retained.  It was hard to translate something like that into assembly-language or anything other than BASIC.<p>I took a course in Pascal which helped to organize my approach to problem decomposition and program design.",1261835833
1015955,comment,1015879,1015879,0,0,geekles,,,"I got started in grade school. We had a bunch of Apple IIc's and IIe's. We learned basic. I believe my first ""real"" program was a graphic of Spuds McKenzie, the Budweiser dog.<p>I didn't do much serious programming until I was about 24, the place I worked, a convenience store, just got cash registers with scanners. So we had all this scanning data but no easy way to collate it over time. I wrote a perl script that would parse our scanning data and tell me how much of x we sold for a period of time y. That was when I truly got bit by the programming bug.<p>My advice would be to have a problem you really need to solve, a goal. The rest is just trying to figure out how to make your language of choice reach that goal for you. It is so much easier to learn how to program when you have a real, tangible, and personal goal, and not some arbitrary exercise put forth by a language tutorial.<p>Something I wish I knew before getting into programming? Language choice is personal. Find a language whose syntax you enjoy and you can wrap your head around. Don't get caught up in language wars/debates. It's basically meaningless (although fun to argue about). Whatever language you enjoy the most is the one you should be using.",1261835764
1015954,comment,1015591,1015619,0,0,BearOfNH,,,"There's always a market (here, an audience) for personal attacks on the wealthy and successful. It comes with the territory.<p>For his part, pg is leading by example -- laughing all the way to the bank.",1261835723
1015952,comment,1015879,1015879,0,0,ericlavigne,,,"I think you are very lucky to have heard about Lisp while you are just starting to get into programming. If I could send my younger self some advice, it would be the books you just mentioned. Also Felleisen's other books such as Little Schemer (shorter and more introductory than How to Design Programs) and How to Design Worlds. I think I would have been ready for them around 8th or 9th grade, but I didn't discover Lisp until grad school.<p>How difficult is it to find Lisp programming jobs in Boston (interested in other cities as well)? Here in Florida, I've been stuck with a choice of Java, C#, or Fortran.",1261835716
1015951,comment,1015684,1015684,0,0,IgorPartola,,,"While I find Gladwell's writing stimulating, the man quotes Wkipedia as his source multiple times. How a New Yorker writer could get away with it, I don't know.<p>I think Outliers boils down to ""if you have the lucky background at the right time and the right place, you will be given more and bigger opportunities."" The rest is simply interesting anectdotes.",1261835678
1015950,comment,1015862,1015929,0,0,pmjordan,,,"Where of course 'GIF' in your post is interchangeable with '8-bit PNG', which do work fine in IE6 (and 5.5).<p>I tend to avoid the various semi-transparency-in-IE6 hacks when I can avoid them and just degrade reasonably gracefully to 8-bit images where the designer/customer absolutely cannot live without translucency in modern browsers.",1261835622
1015949,comment,1015147,1015516,0,0,basugasubaku,,,"The attribution of this poem to Borges is controversial. At least one Wikipedia article states that the original author is one Don Herold: <a href=""http://en.wikipedia.org/wiki/Don_Herold"" rel=""nofollow"">http://en.wikipedia.org/wiki/Don_Herold</a><p>EDIT: Curiously, the original article is often misattributed to Vonnegut: <a href=""http://www.google.com/search?q=sunscreen+vonnegut"" rel=""nofollow"">http://www.google.com/search?q=sunscreen+vonnegut</a>",1261835615
1015948,comment,1015311,1015892,3,0,telemachos,,,"First, thanks for sharing your work as open-source.<p>In response to this post, though, I have to say that I never quite understand why (in the world of open-source software) people often think that merging is somehow good or necessary. We don't think that in other areas (merge Apple and Microsoft?, merge Honda and BMW? merge Scorsese and Fincher?).<p>I was recently one of the static site compilation newbies you mention. I wasn't overwhelmed. I was delighted to have so many options to choose from. I looked over a bunch of the different platforms, and then I made a choice. It was easy, and again I <i>liked</i> having the options.<p>So my serious response to you as a user of open-source tech is stop worrying about the other projects. Make yours as good as you can with whatever time you choose to devote to it. There's no reason to merge.",1261835252
1015947,comment,1015879,1015879,0,0,mantas,,,"I was gaming a LOT since I was ~5. Then I started playing with HTML when I was ~11 and naturally got into PHP and Javascript in a few years.<p>During that time, I ruun few warez sites and a free hosting company (which was profitable!)",1261835063
1015946,story,,,2,0,superberliner,"Ample SDK Open-Source GUI Framework",http://www.amplesdk.com/about/,,1261834849
1015945,comment,1015544,1015812,0,0,josefresco,,,"Not opening up has served Apple pretty well in the desktop world.  They lost the market share war clearly but won the profitability war.  Which would you rather be right now, Dell selling at razor thin margins or Apple who sells a lot less but makes much more per sale.",1261834793
1015944,story,,,1,0,sushrutbidwai,"Numbers will matter a lot in next decade",http://sushrutbidwai.com/?p=238,,1261834764
1015943,comment,1015879,1015879,0,0,silentbicycle,,,"When I was 5 or 6, my parents got me a Commodore 64. It had some games, including some written in BASIC. I was always curious how things worked, and I wanted to make games, too. The library had a couple books about BASIC, and I learned enough to write text-adventure-ish games. Understanding the concept of variables at an early age gave me a big head start on algebra, too.<p>In my early teens (early 90s), I saved and got a C++ compiler, Borland Turbo C++.  Digging into real memory with a debugger was <i>so cool</i>. I wish I'd had a Forth to play with, at that age! Later, I dug into Linux, and all the stuff that came with them. For free! (I'd suggest Python as a first language, nowadays.)<p>A couple things I wish I'd learned earlier:<p>1) Learning how to work on codebases with other people takes different skills than solitary stuff. Since I started by working alone as a little kid, I didn't really learn consistent variable naming conventions, how to define interfaces between components, etc. until I was in my late teens and digging into open-source stuff. You may not <i>ever</i> learn these things doing projects that are only a couple pages long. (_The Practice of Programming_ by Kernighan and Pike is a short, lucid book that covers this well, IMHO.)<p>2) Complexity kills projects. Most things don't <i>need</i> to be large systems, and if you structure a system as a group of communicating components, you can get a prototype (rough draft) of the whole system, see design mistakes early, and then cleanly replace the parts that need it. (I don't think conventional OO works that well for this - as Joe Armstrong observed, everything carries along too much context.) Start simple and don't worry about efficiency until you have to. Brainstorm on paper, if that helps.<p>3) Write programs for something you're interested in, not just another blog engine or what-have-you. The added motivation in making something <i>to make music</i>, cool 3D animations, etc. will keep you going through the hard parts. Your social science background will give you an angle for interesting projects beyond the ken of most CS students.",1261834613
1015942,comment,1015311,1015653,0,0,compay,,,"And hosting it for free at Github.",1261834340
1015941,comment,1015311,1015493,0,0,jrnkntl,,,"Regarding your PHP 'tip', that kinda makes the whole point of using a static generator in the first place a bit useless.
And when you decide to do it anyway, configure your apache (or whatever you like) to parse .html as php.",1261834267
1015939,story,,,1,0,vog,"Tutorial for cross compiling Windows applications",http://www.nongnu.org/mingw-cross-env/#tutorial,,1261833995
1015938,story,,,1,0,gpeipman,"Using LINQ and reflection to find matching properties of objects",http://weblogs.asp.net/gunnarpeipman/archive/2009/12/26/using-linq-and-reflection-to-find-matching-properties-of-objects.aspx,,1261833911
1015937,comment,1015675,1015675,0,0,ajuc,,,"For me it helps, when I can see effects of my work right now.<p>I write games in my free time, and I've noticed, that if I overenginer and have to write architectural code for too long, I abandon the project. The faster there is sth to play with, no matter how simple, the better.<p>So I first write graphics code, so there is sth on the screen, then some simple keyboard input module, that later will be replaced, just to be able to move character on screen. Then I can see if the idea was good, and if it's fun to play with it. If it's fun, improving (and playtesting:) it is very addicting, so I can finish the project.<p>Also, IMHO, it's better to start with simple idea, and give it depth by polishing details, than to start with ambitious project in the first place. Iterative programming ftw :)",1261833690
1015936,comment,1015879,1015879,0,0,bmj,,,"I came from a liberal arts background (philosophy and writing), and got into programming when a friend was describing his work.  He pointed me in the direction of Perl, and I went from there.  I was fortunate to find a job at a startup doing a mix of front-end stuff and some Perl hacking, working under one of the founders who was also a self-taught hacker.  It was very useful to work under a mentor.",1261833635
1015935,comment,1015850,1015850,0,0,riffic,,,"Ca-ca-ca-ca-ca-catch the wave!",1261833585
1015933,comment,1015879,1015879,0,0,Apreche,,,"LOGO on an Apple 2 in Kindergarten",1261833108
1015932,comment,1015850,1015850,0,0,pkrumins,,,"I found this video scary.<p>Possibly because of uncanny valley. The person looks almost human, yet acts strangely.",1261832892
1015931,comment,1015879,1015879,0,0,maxklein,,,"I learnt the basics in high school, deepened my knowledge in college, did a bunch of Microsoft Certification Courses to give myself professional experience, and I attend 3-5 seminars a years to improve my knowledge and keep me up to date.<p>Just kidding.",1261832878
1015930,story,,,1,0,gibsonf1,"Robot roaches would be a benefit, not a pest",http://www.sfgate.com/cgi-bin/article.cgi?f=/c/a/2009/12/26/BALE1B9FJ4.DTL,,1261832865
1015929,comment,1015862,1015862,0,0,adriand,,,"This library, and the jQuery Supersleight plugin (there's also a non-jQuery version) are probably the best IE6 PNG ""fixers"".<p>However, in my experience you would be better off designing for this issue from the outset and avoiding the use of these libraries if you care about your layouts looking good in IE6.  For simple situations, these can work fine, however you'll run into issues for anything beyond the basics.  For example, in this library:<p>> ""Fixed"" <IMG/> elements must take on visibility:hidden;, and thus become unclickable. I see no workaround other than using clear pixel GIF replacements, and that is code that I am not going to write.<p>There go your buttons.<p>I've also encountered issues where sometimes, replaced images take on a different height and get stretched, but this behaviour is unpredictable.<p>Your best bet for dealing with transparent PNGs in IE6 is either to stop caring about IE6 and leaving IE6 users with the opaque backgrounds around the images, or switching to transparent GIFs.  A good designer can produce transparent GIFs that are just as crisp as PNGs, and then you don't need to rely on hacks any more.",1261832535
1015928,comment,1015054,1015196,0,0,nazgulnarsil,,,"agreed.  post hoc analysis that sounds good is of little value without quantitative predictions.",1261832430
