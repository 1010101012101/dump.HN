ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
8669591,comment,8669095,8669568,0,0,thomasvarney723,,,"Headspace is an app I&#x27;ve tried and thought was interesting.",1417147190
8669590,comment,8668680,8669229,0,0,codygman,,,"<a href=""https://www.haskell.org/haskellwiki/Haskell_in_industry"" rel=""nofollow"">https://www.haskell.org/haskellwiki/Haskell_in_industry</a><p><a href=""https://www.fpcomplete.com/business/resources/case-studies/"" rel=""nofollow"">https://www.fpcomplete.com/business/resources/case-studies/</a><p><a href=""http://engineering.silk.co/post/31920990633/why-we-use-haskell"" rel=""nofollow"">http://engineering.silk.co/post/31920990633/why-we-use-haske...</a><p><a href=""http://bos.github.io/strange-loop-2011/talk/talk.html#%281%29http://www.shimweasel.com/hs_gbu/"" rel=""nofollow"">http://bos.github.io/strange-loop-2011/talk/talk.html#%281%2...</a><p><a href=""http://www.quora.com/What-startups-use-Haskell-for-production-work?share=1"" rel=""nofollow"">http://www.quora.com/What-startups-use-Haskell-for-productio...</a><p><a href=""http://www.quora.com/To-what-extent-do-people-use-Haskell-at-their-work-place-How-do-they-use-it?share=1"" rel=""nofollow"">http://www.quora.com/To-what-extent-do-people-use-Haskell-at...</a><p><a href=""https://angel.co/haskell/jobs"" rel=""nofollow"">https://angel.co/haskell/jobs</a><p><a href=""http://www.quora.com/What-is-the-largest-commercial-program-written-in-Haskell"" rel=""nofollow"">http://www.quora.com/What-is-the-largest-commercial-program-...</a><p><a href=""http://janrain.com/blog/haskell-janrain/"" rel=""nofollow"">http://janrain.com/blog/haskell-janrain/</a><p><a href=""http://functionaljobs.com/"" rel=""nofollow"">http://functionaljobs.com/</a><p><a href=""http://www.haskellers.com/jobs"" rel=""nofollow"">http://www.haskellers.com/jobs</a><p>And I&#x27;ve noticed &quot;haskell&quot; at least being listed in job postings more lately:<p><a href=""http://www.dice.com/job/results?caller=basic&q=haskell&x=all&p="" rel=""nofollow"">http://www.dice.com/job/results?caller=basic&q=haskell&x=all...</a>",1417147180
8669589,comment,8668680,8669508,0,0,andrewflnr,,,"Have you read the Rust Guide? It starts off with the basic cases where the syntax makes sense. Most of the weird stuff is either macro weirdness or making sure the grammar is simple (e.g., the function::<blah>() business).<p><a href=""http://doc.rust-lang.org/guide.html"" rel=""nofollow"">http://doc.rust-lang.org/guide.html</a>",1417147168
8669587,comment,8668750,8668750,0,0,EdwardCoffin,,,"Can anyone familiar with this book say how well it has aged?  It&#x27;s been on my shelves, unread (mostly), for years, and I keep wondering whether I should still aspire to read it.",1417147093
8669586,comment,8669394,8669575,0,0,Igglyboo,,,"A lot of people don&#x27;t realize that if your business relies completely on someone else&#x27;s then you aren&#x27;t going to get very large.",1417147054
8669585,comment,8669095,8669568,0,0,chdir,,,"Either join a course or pick up a good book. I found this book immensely useful and simple to follow: &quot;Mindfulness in Plain English&quot; [1]<p>[1] <a href=""http://www.amazon.com/Mindfulness-Plain-English-Anniversary-Edition/dp/0861719069"" rel=""nofollow"">http://www.amazon.com/Mindfulness-Plain-English-Anniversary-...</a>",1417147053
8669584,comment,8668680,8669162,0,0,jpgvm,,,"Most Haskell programmers also write exhaustive tests, the type system is great but it&#x27;s not there so you can avoid writing tests.",1417147046
8669583,comment,8669095,8669568,0,0,DigitalJack,,,"Google Jon Kabat-Zinn.",1417147044
8669582,comment,8669394,8669394,0,0,mdesq,,,"This was predictable, but the only reason I <i>like</i> business FB pages to begin with is so that I can receive content from them in a way that doesn&#x27;t clutter up my email inbox. If I&#x27;ll now only be hearing from the businesses that can afford (and then foolishly pay for) FB ads, the value of FB goes down dramatically for me.",1417147036
8669581,comment,8668680,8669547,0,0,tel,,,"Haskell is not quite sufficient to connect mathematical proof to your code. Coq/Agda/Idris are much closer to this idea though and, if you can create a spec in one of those systems then a proof really is sufficient.",1417147026
8669580,comment,8668680,8669547,0,0,jpgvm,,,"He never posited that code couldn&#x27;t be proven correct by formal methods, only that he doesn&#x27;t assume the type system compiling it makes it correct.",1417146921
8669579,comment,8669095,8669095,0,0,ozborn,,,"I think if you are looking for mental self improvement this Havard article may be more appropriate (<a href=""http://www.health.harvard.edu/blog/regular-exercise-changes-brain-improve-memory-thinking-skills-201404097110"" rel=""nofollow"">http://www.health.harvard.edu/blog/regular-exercise-changes-...</a>). The short summary is <i>exercise</i>. Not only do you get your &quot;better brain&quot;, but the rest of your body benefits as well.",1417146863
8669578,comment,8668680,8668992,0,0,abecedarius,,,"I agree with Ertl, and it&#x27;s why I practically stopped using C: the sufficiently smartass compiler. Been playing with Rust a little, lately.",1417146826
8669577,comment,8664891,8665399,0,0,FreeFull,,,"It probably helps that Rust&#x27;s type system is close to what ML-family languages have (the compiler itself was originally developed in OCaml)",1417146782
8669576,comment,8666831,8669201,0,0,DonHopkins,,,"You facts are wrong, and even if you were right, your argument doesn&#x27;t hold any water.",1417146781
8669575,comment,8669394,8669394,0,0,danenania,,,"I&#x27;m not a big Facebook fan or anything, but this seems like a predictable development. A user&#x27;s attention and newsfeed real estate are limited resources, while the number of pages they&#x27;ve liked increases with time. If ALL business pages reached a large percentage of their followers for free, the typical newsfeed would be inundated with promotions. It&#x27;s a natural monetization point--Facebook makes more money (which is the main purpose of Facebook), and their users are insulated from seeing too much marketing content.<p>If you want to reach people reliably, build a funnel that <i>you</i> control. Facebook/google/service X can all be valuable components of this funnel, but none of them should be the foundation.",1417146737
8669574,comment,8669394,8669553,0,0,josho,,,"I find it interesting to contrast FB with the early days of Microsoft--from a a developer perspective.<p>FB is routinely hostile to its developers* killing off APIs and screwing around with the system. Microsoft, however, went through extreme measures to ensure backwards compatibility of applications between OS upgrades.<p>I suppose the difference is that Microsoft needed developers to create its network effect and grow their DOs/Windows monopoly. FB however needs users, not developers, to create its network effect and grow their monopoly.<p>This begs the question, why can FB be so hostile to their own users? I suppose the answer must be because their users don&#x27;t leave FB the ecosystem.<p>*Obviously I&#x27;m using the term developer loosely here. The article isn&#x27;t so much about developers as it is about business&#x27; building on FB, not unlike business&#x27; that built on MS.",1417146648
8669573,comment,8668680,8669384,0,0,codygman,,,"That&#x27;s exactly how I work with Haskell.",1417146630
8669572,comment,8662782,8666813,0,0,crdoconnor,,,"What, so one extra zipcode server for every application server?",1417146624
8669571,comment,8668680,8669479,0,0,codygman,,,"It verifies types, which most unit test suites I&#x27;ve seen with dynamic languages duplicate.",1417146553
8669570,comment,8668680,8669482,0,0,codygman,,,"I&#x27;m pretty sure quickcheck is run when you do &quot;cabal test&quot;, though you could make a compiler wrapping script that fails if your quickcheck tests fail.",1417146482
8669569,comment,8668750,8669548,0,0,psbp,,,"They probably haven&#x27;t updated the iOS app yet.",1417146456
8669568,comment,8669095,8669095,0,0,pgrote,,,"What is the best way to learn how to meditate? Any good resources?",1417146403
8669567,comment,8668651,8669235,0,0,kev009,,,"There&#x27;s been talk (at BSDCam) of implementing inotify which is needed for the Linuxulator and exposing it in the FreeBSD API too.  So your wish isn&#x27;t so far fetched but I&#x27;m not sure anyone is actively working on it.  Patches welcome :)",1417146371
8669565,comment,8668680,8669547,0,0,codygman,,,"Perhaps mathematical proof + comprehensive test suite (including property/fuzz testing) + (time used without bugs showing up * number of people using it)",1417146355
8669564,comment,8668651,8668962,0,0,teacup50,,,"I don&#x27;t understand your point; kqueue is a comparatively <i>new</i> idea.<p>Do you want signals written as messages across ZeroMQ? In that case, look at Mac OS X&#x27;s use of Mach ports for exception handling, which is an even <i>older</i> idea than kqueue.",1417146340
8669562,comment,8669441,8669441,0,0,meric,,,"You can sell it to your employees.<p>If your employees don&#x27;t have the cash, you can lend the money to them to pay it off over time.<p>You can also consider a profit-sharing arrangement if you want to retain a stake in it, staying on as advisor.<p>Or even still, give it to your employers to manage it on their own giving them a free majority stake.",1417146291
8669561,comment,8669095,8669095,0,0,jastanton,,,"Are there any other training programs for better memory?",1417146134
8669560,comment,8668537,8669552,0,0,seanmcdirmid,,,"Writing is often part of the journey, not the destination. But you should always write to with the hope of being read.<p>Building a career in academia is vacuous, it&#x27;s not the only thing that can be done with a phd.",1417146122
8669557,story,,,173,47,owenwil,"IO.js – Evented I/O for V8 javascript",https://github.com/iojs/io.js,,1417146025
8669555,comment,8664506,8667137,0,0,throwaway43232,,,">  Are you saying that these 1-5% provide more contributions then that huge chunk of the 95% that are, in your words, &quot;overly sensitive&quot;?<p>Not at all. The 1-5% are usually the ones working by themselves creating a project from scratch and then maintaining those projects as others join the project. The capacity to remain highly focused on solitary tasks (like starting and building an open source project until it is useful enough for others to get involved) is more common in people on the aspie side of the spectrum.<p>The other 95% are not overly sensitive. Maybe just 1-5% are overly sensitive and lack the capacity to function with abrasive and insensitive people. The middle 90-98% plus the 1-5% that are the linchpins of any open source project are responsible for most of the open-source world.<p>We basically only lose the overly-sensitive ones (men and women), which is an acceptable loss until we start seeing open-source projects of significant technical importance written largely by people who are overly sensitive. I don&#x27;t see that happening because overly-sensitive people are generally pre-occupied with being overly sensitive instead of getting things done. When I read complaints by someone being overly sensitive, I check their github profile and look for other technical contributions. Typically there isn&#x27;t much to look at. Technical contributions entitle you to your opinions.<p>Lastly, I honestly have nothing against people who are overly sensitive so long as they either stop being overly sensitive or at least keep their overly sensitive thoughts to themselves and focus on the technical issues of the task at hand. I just exhausted of people derailing technical discussions because they are overly sensitive.<p>Anyways, I&#x27;m being overly sensitive about overly sensitive people in open-source, which is a massive waste of my time. Back to coding.",1417145907
8669554,comment,8660637,8669431,0,0,panjaro,,,"yeah !!!",1417145884
8669553,comment,8669394,8669394,0,0,jliptzin,,,"This should not surprise anyone. FB has a long history of pulling the rug out under its developers and advertisers in the name of maximizing their own profits. I cannot recommend strongly enough against building a business that is dependent on Facebook in any significant capacity.",1417145779
8669552,comment,8668537,8669289,0,0,foldr,,,"No-one will read it. If you want to do it as a personal exercise in self expression that&#x27;s fine, but it&#x27;s a mistake to view it as a career goal. Any time you spend in grad school writing something other than a draft paper is (in purely career terms) time wasted.<p>(Probably no-one will read your papers either, but you can at least list them on your CV.)",1417145732
8669551,comment,8667558,8669155,0,0,mrow84,,,"> Keep in mind this energy transition has occurred before, back in the 16th century. The UK used to depend on wood for its energy. The US led in adopting coal, which was used only marginally for thousands of years. Coal was dirty, it stank, required new technologies to collect and distribute, while wood was cheap and plentiful. As it turns out coal was fundamental to the industrial revolution, the US as a leader in coal developed new industries and led in industrialization and leap frogged Britain.<p>I realise it&#x27;s tangential to the article, but where on earth did you learn your history of the industrial revolution [0]? Presumably in the USA?<p>[0] <a href=""http://en.wikipedia.org/wiki/Industrial_Revolution"" rel=""nofollow"">http://en.wikipedia.org/wiki/Industrial_Revolution</a>",1417145633
8669550,comment,8668154,8668783,0,0,netboardme,,,"Great! Thanks!",1417145628
8669549,comment,8668154,8668216,0,0,netboardme,,,"Thank you for the tip. I&#x27;ll play with netvibes.",1417145607
8669548,comment,8668750,8669505,0,0,3rd3,,,"Odd, my App Store still displays the old version with 2/5 stars mostly due to the lack of multitasking support.",1417145567
8669547,comment,8668680,8669432,0,0,cbd1984,,,"If correctness can&#x27;t be demonstrated by mathematical proof, and it can&#x27;t be demonstrated by comprehensive test suite, how can it be demonstrated? What kind of definition of &#x27;correct&#x27; are you using?",1417145501
8669546,comment,8668568,8668568,0,0,al2o3cr,,,"Everyone knows the language of 10 years in the future will be a Lisp.<p>In ten years, everyone will STILL know the language of 10 years in the future will be a Lisp. ;)",1417145465
8669545,comment,8664506,8666496,0,0,throwaway43232,,,"> What you can do, and have done, is claim that aspie sensitivities are more important than female ones because aspies are somehow a greater contribution to the world.<p>Not at all what I claimed. I&#x27;m talking about overly sensitive people, not women. I know tons and tons and tons of people, women included, who are not overly sensitive and who are able to handle situations like an adult and focus on the task at hand, which in the case of open source is building software and writing code. It&#x27;s not a therapy session. It&#x27;s about building things and that is more important than feelings. Your feelings are my distraction.<p>I&#x27;m actually the go-between at work between those people think are assholes and some people that are overly sensitive. I quietly hate the role I play and wish I didn&#x27;t have to waste time trying to protect people from their emotions. It&#x27;s exhausting.<p>The overly sensitive people often hijack technical discussions  and try to make those discussions about something that matters to them personally and that makes the discussion no longer about the code and technical matters that the group is trying to solve.<p>Furthermore, just as many overly-sensitive men as women are responsible for hijacking technical discussions to talk about feelings. In fact, I probably witness men being overly sensitive about some social issue with greater frequency (probably due to base rates in our industry).<p>I also didn&#x27;t claim that aspies tend to be sexist, but that they tend to either not place importance on how their word choice might be interpreted or they might not even be aware that their word choice did offend. It&#x27;s mentally taxing and expensive to deal with overly sensitive people who lose focus on the task at hand because they feel offended or hurt.<p>Terms like &quot;microagressions&quot;[0] aren&#x27;t even part of the aspie vocabulary. Due to my own morbid curiosity, I spent a bunch of time reading about microagressions and I was like, &quot;yeah, a bunch of these types of things happen to me all the time too. What&#x27;s the big fucking deal?&quot;. I don&#x27;t think anything of them. People who dwell on them are only blocking themselves. All I could think of when reading them was Bob Newhart&#x27;s skit &quot;Stop It!&quot;[1]. It&#x27;s bad enough that people do that to themselves, but the people who are vocal about them are forcing others to dwell on their own personal issues, wasting everyone&#x27;s time. That&#x27;s exactly what Sharp did by calling out Torvalds. Calling Torvalds out and playing the victim card was a massive waste of everyone else&#x27;s time and did nothing to contribute to the technical discussion at the time.<p>If people want similar project with different culture to exist, there is a more civil solution, go write a project from scratch or fork a project written by assholes and recruit all the overly-sensitive people to participate in trying to make it better. I wish you the best of luck, but what you shouldn&#x27;t do is come into anyone else&#x27;s house that they built and call them out on how they behave in their house.<p>[0] <a href=""http://microaggressions.tumblr.com/"" rel=""nofollow"">http://microaggressions.tumblr.com/</a><p>[1] <a href=""https://www.youtube.com/watch?v=Ow0lr63y4Mw"" rel=""nofollow"">https://www.youtube.com/watch?v=Ow0lr63y4Mw</a>",1417145446
8669543,comment,8668792,8668792,0,0,michaelochurch,,,"Doubtful. The hunter-gatherer tribes that we encounter are (probably) fitter than average on account of remaining extant into the 21st century, and even those don&#x27;t live long past their contact with industrial people.<p>Population is the first issue. Pre-industrial life <i>probably</i> wasn&#x27;t as horrible as some make it out to be, with the life expectancy, once one survived childbirth, closer to 55 than 20. (The 20-30 figure included infant mortality.) However, hunter-gatherer lifestyles don&#x27;t support a high population. That means, as populations increase and tribes branch out and split, but inevitably people run out of room, war. In the &quot;original affluent society&quot; of pre-agricultural humanity, the major wars of nations didn&#x27;t happen, but low-level tribal wars caused a death rate of about 0.5% per year. That&#x27;s <i>8 times</i> the murder rate in Flint, Michigan, the most dangerous city in the US as of now.<p>Agricultural society can support more people per unit of land. That also means that they will have more soldiers and conquer or assimilate the hunter-gatherers. (Nomadic raiders, however, will typically be fitter and militarily superior... but <i>their</i> existence is predicated on that of the agricultural people, so that doesn&#x27;t scale either.)<p>So, ultimately the pre-agricultural &quot;affluent society&quot; was one with a high rate of violence and not much stability, and it got wiped out pretty handily by agricultural (or industrialized) neighbors. All that said, it is correct to note that the standard of living for the average person did not improve much between the Stone Age and (arguably) approximately 1800 AD. Economic growth existed, but it was gobbled up by population growth. In some ways, life got better each century and, in others, it got worse, but for the average person there wasn&#x27;t much progress from the neolithic up into modernity and, with the psychiatric calamity of workplace Taylorism, people are arguably even unhappier than they were in all of those societies where life was nasty, brutish, and short. So, subjectively, I think the argument is strong for a lack of progress (that is, in 2014, entirely the fault of society&#x27;s poor leadership). People <i>are</i> richer now and live longer, but still mostly miserable. That said, every phase of society was an inevitable consequence of the former and &quot;the original affluent society&quot; would never have made it, couldn&#x27;t possibly scale up to our current population of 7 billion, and had a rate of violent death that we&#x27;d consider appalling.<p>What I think has changed is the nature of work and our demands of it. In primitive societies, &quot;work hours&quot; didn&#x27;t make sense because people hunted, gathered, fought, cooked, and built shelters as needed. There was a heterogeneity to it. Modern work is psychological monoculture, with work quality apportioned according to social status and rank, which means that it&#x27;s mental torture (extreme boredom) to be of low status. Primitive &quot;work&quot; (which wasn&#x27;t done in measured hours) had horizontal heterogeneity, whereas in modern society the only antidote to crushing boredom is vertical growth, leading to a low-level and generally nonviolent, but also inescapable, sense of competition and stress. Pre-agricultural life had its flaws and people had good reasons to escape it (and, one should note, the transition to agriculture tended to unfold over thousands of years in most societies, with intermediate states of some hunting/gathering and some agriculture) but it was probably less boring than the average desk job today.",1417145369
8669541,comment,8669478,8669530,0,0,droinspired,,,"ya but how clean is that layout bro?",1417145309
8669540,comment,8669394,8669394,0,0,sehugg,,,"... And local musicians whose shows I keep missing because their posts get squelched, even though I&#x27;ve liked their page.",1417145286
8669538,comment,8667118,8667118,0,0,Animats,,,"From the article: <i>“The protocol is only useful for browsers and big services”\nThis is sort of true. One of the primary drivers behind the http2 development is the fixing\nof HTTP pipelining. If your use case originally didn&#x27;t have any need for pipelining then\nchances are http2 won&#x27;t do a lot of good for you.</i><p>This may be a big issue, and may impact net neutrality.  You get better performance if your stuff is inside a pipe from a Big Service.  This makes Google look good. It also increases the relative benefit of running everything through a content delivery service.<p>This, in turn, creates a use case for CDNs which suck up all the components needed to display a page by whatever means necessary and deliver them to the end user over one HTTP2 connection.  It then  makes sense for the CDN, not the end user page, to be the advertising insertion point.  If ads are loaded from a third-party ad server, they might not show up before the user is done viewing the page. This sometimes happens now.  With server-side control of ordering within a single HTTP2 pipe, advertisers tied in with the CDN can be sure that ads will appear when the advertiser wants them to appear.<p>So there&#x27;s a net neutrality issue. When multiple streams are multiplexed over a single pipe, the server gets to determine who goes first.  Control over that order is valuable.  That control may end up in the hands of the CDN, not the site operator.",1417145244
8669537,story,,,3,1,substack,"Offline decentralized single sign-on in the browser",http://substack.net/offline_decentralized_single_sign_on_in_the_browser,,1417145193
8669536,comment,8668680,8669464,0,0,Scramblejams,,,"So you have the knowledge to judge the question uninsightful, but you don&#x27;t lend your own insights. And instead of taking the trouble, you&#x27;re content with the question being knocked down the page, which reduces the chances of anyone else doing it. Like I said, very Reddit. Would that we had a community more interested in illuminating than mercilessly judging.<p>I&#x27;ll do it.<p>@aosmith: It&#x27;s interesting, because Go&#x27;s creators explicitly aimed it at the &quot;systems&quot; niche, which is what C was created to do, but C programmers don&#x27;t seem to have picked up the baton the way Pike/etc hoped.<p>I think it comes down to a handful of things, in no particular order. YMMV, of course.<p>(1) Control. C gives you minute control over memory, Go of course does not. That&#x27;s very satisfying and useful to many C programmers. Also, it&#x27;s often helpful to have a good idea what your code is mapping to in terms of assembly instructions.<p>(2) Speed. Go still isn&#x27;t anywhere near as fast as C in many, many cases.<p>(3) Portability. Lots of C programmers need (or get satisfaction from) the ability to compile C on a zillion platforms. Go supports only a few.<p>(4) Garbage collection. (Sorta a revisiting of point #1). Many C programmers don&#x27;t want GC in their code. Now, while I wouldn&#x27;t mind if my copy of &#x27;less&#x27; used GC, some programmers would. I know I don&#x27;t want GC freezing my game. So this is an issue, not one that will ever go away.<p>(5) Libraries. Go&#x27;s made strides but can&#x27;t touch C&#x27;s library selection. Of course, you can use C libs from Go, but that has its own complications, and if the author already prefers C, why pick Go?<p>(6) Newness. In the context of systems languages, Go is still very new. Nobody&#x27;s built an entire userspace out of it, ya know? Not that that&#x27;s necessary, but certainly when the Unix programmer sits down and selects C, s/he knows anything can be built with it. It&#x27;s long since passed into respectability. Go&#x27;s on its way, but isn&#x27;t there yet.<p>I&#x27;m sure there are a few other things. Don&#x27;t think there&#x27;s a way to run a runtime-less Go. As Damien mentioned, C has a bevy of tools, Go&#x27;s selection is much more limited. I&#x27;m sure others can think of some more.",1417145121
8669535,comment,8668680,8669354,0,0,letstryagain,,,"> Of course it&#x27;s possible. If your issue is memory checking you can use mudflap or valgrind.<p>It might be theoretically possible but in practice nobody has managed to do so with any non-trivial application.",1417145112
8669534,comment,8669179,8669473,0,0,RubyPinch,,,"tangential rant/vent<p>> Google is your friend here<p>and then you find people who do writeups consisting of &quot;And I&#x27;m gonna skip over this part, since if you don&#x27;t know how to do it, you shouldn&#x27;t be doing it&quot;, or &quot;I reverse engineered X, but I&#x27;m not going to tell anyone because it would be bad if this was widespread&quot;<p>(though, my personal focuses were more towards specific games (though not for uncompetitive advantage sake, the tools resulting from the RE mentioned are public n&#x27; stuff, and known by the devs for a long time now))<p>one of the tools was in python so it was easy enough to decompile that, but it still doesn&#x27;t teach thought process or methods for finding relevant items in the code (like hooking into a function that processes in game market data so it can be saved to a text file)",1417145097
8669533,comment,8669091,8669091,0,0,LiweiZ,,,"It&#x27;s all about linking those outside inputs to one&#x27;s brain. A simple question: what comes to your mind when you hear the name of your favourite fruit? There are some nice books with different theories, but, to get it, I found this is a good starting question to explore and understand what brand is after working and learning in branding and marketing for a while.",1417145080
8669532,comment,8667689,8668562,0,0,comrh,,,"I have a friend with a lot of homeless experience in a ~55k person city in NJ. He told me there are some people who feel a social bond, the homeless have de facto leaders and people with social capital within the population. My friend said one of the people told him he would never go back because he felt like it was going from a place where he mattered to a complete nobody.",1417145047
8669531,story,,,4,0,xkarga00,"The Potential of Blockchain Technology",http://www.youtube.com/watch?v=r8JopZWlvtw,,1417145004
8669530,comment,8669478,8669521,0,0,slater,,,"According to whois:<p>droinspired.com\nowner: dylan roberts, #54 1720 Garnett Point etc. etc.<p>seemly.co\nowner: dylan roberts, #54 1720 Garnett Point etc. etc.<p>Totally not your sites, though",1417144955
8669529,comment,8664989,8668463,0,0,jbooth,,,"Well, then there&#x27;s BlockingQueues as noted above.  Callables, Runnables and BlockingQueues are a great setup for CSP-style concurrency.",1417144938
8669528,comment,8668359,8668359,0,0,wodenokoto,,,"It&#x27;s extremely impressive how line and wechat have managed to build an app-store within the AppStore.<p>But with Google and Apple as a direct competitor in both chat and AppStore markets and gatekeeper in large portions of these markets I think the author is forgetting the main threat here.",1417144867
8669527,story,,,2,0,typpo,"Here's why GoPro wants to make its own drones",http://www.theverge.com/2014/11/26/7295731/heres-why-gopro-wants-to-make-its-own-drones,,1417144855
8669525,comment,8669179,8669473,0,0,Nursie,,,"Such an effort would likely lead to a lot of lawsuits from multinationals like Sony. For an example, look at what happened to various members of the ps3 hacking scene.",1417144815
8669524,comment,8668680,8668680,0,0,Aldo_MX,,,"Every time I see someone praising C I curse Microsoft for not having proper support for C99 in Visual Studio.",1417144746
8669523,comment,8668680,8669485,0,0,byuu,,,"> Aren&#x27;t there C++ compilers that will compile to C code?<p>Uh ... no? CFront did that when it was just &quot;C with Classes&quot;, but nowadays with C++14? That would be absolutely terrifying.",1417144712
8669522,comment,8669251,8669251,0,0,mmastrac,,,"The content of this presentation is very interesting, but it just serves to illustrate a distressing slide into the non-ownership of your own devices. Apple has thankfully not gone too far down this path (beyond gatekeeper at least).<p>Why should I give up control of my own devices just so media that&#x27;ll end up pirated at some point regardless of the level of protection that Microsoft throws at the PC can have its own dedicated path to a video card?",1417144634
8669520,story,,,4,0,tomrod,"Messy desks correlated with creativity",http://mic.com/articles/103954/the-science-of-why-the-most-creative-people-have-the-messiest-desks,,1417144495
8669519,comment,8668253,8669442,0,0,stormbrew,,,"Huh. That is a really interesting approach, and I was not aware of it. Thanks.<p>I haven&#x27;t looked deeply, but this seems like something where the edge cases will be tricky, though.",1417144491
8669518,comment,8668948,8668948,0,0,locktips,,,"You should change your job for a certain time. A job at office. Changes make you feel happy.<p><a href=""http://hinscosafeandlock.com"" rel=""nofollow"">http://hinscosafeandlock.com</a>",1417144471
8669517,comment,8668787,8669205,0,0,dcherman,,,"Is it really unfortunate?  It&#x27;s a matter of opinion.  I find a single `var self = this;` to be much more readable than many .bind(this) calls when you&#x27;re several levels deep.",1417144431
8669516,comment,8669394,8669438,0,0,sillysaurus3,,,"The advertising doesn&#x27;t really help you, though.  You&#x27;re forced to pay for advertising which ends up targeted at people who don&#x27;t engage with your brand.<p>Check this out:  <a href=""https://www.youtube.com/watch?v=oVfHeWTKjag#t=3m10s"" rel=""nofollow"">https://www.youtube.com/watch?v=oVfHeWTKjag#t=3m10s</a><p>Unless something has dramatically changed since that video was created 9 months ago, the situation is pretty grim.",1417144311
8669515,comment,8669478,8669484,0,0,slater,,,"You do, do you? Well you would, considering it&#x27;s your site.<p>Flagged.",1417144233
8669514,comment,8668847,8669424,0,0,cbd1984,,,"Anything that can confuse a person is a potential exploit vector.<p>That said, I don&#x27;t know of any specific exploits which rely on this behavior.",1417144231
8669513,comment,8668787,8668880,0,0,mrspeaker,,,"Also, forEach/map/filter all accept scope as a second parameter: blah.map(function(){}, this);",1417144212
8669512,comment,8669394,8669454,0,0,robryan,,,"They didn&#x27;t hand them to her but Facebook&#x27;s network size and sharing features certainly allows a message people care about to spread much further than it would in the small business owner was just relying on their own website.<p>As we all know it is risky to pitch too much of your businesses future on someone elses platform, especially one in which you don&#x27;t pay for and have no formal business arrangement.",1417144201
8669511,comment,8668680,8668680,0,0,facorreia,,,"> C is the fastest language out there.<p>I thought it was Fortran.",1417144190
8669510,comment,8668300,8669127,0,0,3rd3,,,"LOL, are you fucking kidding me…<p>One of the points of the blog post is that web browsing in Emacs allows you to integrate browser work and Emacs work, which for me is the most compelling one. But you can possibly achieve something similar by integrating Emacs into Firefox via SSH and using for example .js [1] for automatization work. That way you wouldn’t have the disadvantage that you basically lose most formatting and layout which are actually quite helpful if you stay away from the loud and annoying websites. That’s why I thought it was worth mentioning. I also use Tree Style Tabs and it could be helpful to keep work related websites and Emacs buffers organized in that way.<p>[1]: <a href=""https://github.com/defunkt/dotjs"" rel=""nofollow"">https://github.com/defunkt/dotjs</a>",1417144177
8669509,story,,,9,6,sonabinu,"It's Time to Get Good at Functional Programming",http://www.drdobbs.com/tools/its-time-to-get-good-at-functional-progr/212201710,,1417144161
8669508,comment,8668680,8669388,0,0,byuu,,,"Pretty much all of it. For example, let&#x27;s take <a href=""http://chrismorgan.info/blog/teepee-design-header-representation.html"" rel=""nofollow"">http://chrismorgan.info/blog/teepee-design-header-representa...</a><p><pre><code>    impl<&#x27;a> AnyRefExt<&#x27;a> for &&#x27;a Header {\n      #[inline]\n      fn as_ref<T: &#x27;static>(self) -> Option<&&#x27;a T> {\n    \n    trait UncheckedAnyRefExt<&#x27;a> {\n      unsafe fn as_ref_unchecked<T: &#x27;static>(self) -> &&#x27;a T;\n    }\n    \n    //I am guessing the second line is special because Rust can&#x27;t deduce &quot;to&quot; should be a TraitObject type?\n    let raw = require_single_field!(raw);\n    let to: TraitObject = transmute_copy(&self);\n    \n    //is this adding header and &#x27;static together?\n    pub trait HeaderMarker<OutputType: Header + &#x27;static> {\n    \n    //I have zero clue what this is doing\n    //I can&#x27;t even fathom a guess\n    match *self {\n      Past => write!(f.buf, &quot;0&quot;),\n      ExpiresDate(ref tm) => tm.fmt_header(f),\n    }\n    \n    //so _raw is a reference to a vector of bytes inside [] and it might possibly return whatever a box is of headers?\n    fn parse_header(_raw: &[Vec<u8>]) -> Option<Box<Header>> {\n    \n    //is there really a language keyword called macro_rules! ?\n    macro_rules! impl_header_from_fromstr {\n      //what in the world is ($ty:ty)?\n      ($ty:ty) => (impl Header for $ty {\n        fn parse_header(raw: &[Vec<u8>]) -> Option<$ty> {\n\n\n    //who thought &quot;h.is::<H>()&quot; was a good way to test a type? Why not &quot;h.is(H)?&quot; Why the => ?\n    //what is this even returning? a tuple of false and None?\n    Typed(ref h) if h.is::<H>() => {\n      (false, None)\n    },\n    \n    //... why not UTF-8? Because &quot;{}&quot;?\n    format_args!(format_but_not_utf8, &quot;{}&quot;, HeaderShowAdapter(h))\n</code></pre>\nThe names don&#x27;t make any sense to me at all. What the hell is an AnyRefExt? How does an UncheckedAnyRefExt differ? What in the world is the match thing doing? Why the asterisk on self? Why all the apostrophes and colons and dollar signs and exclamation points? Why is there both -> and =>? How does an &&#x27; differ from a &#x27;?<p>I could probably learn the language with a huge time investment. But for something aiming to fill the role of systems programming, it&#x27;s just so incredibly <i>different</i> from everything else. It <i>almost</i> feels like they are going out of their way to make it as different as possible.<p>I know, this is all syntax stuff. C++ template meta-programming syntax is pretty insane, too, and took me a while to pick up. Yet when I attempt to read up on the syntax and the reasoning, it becomes even more confusing. I don&#x27;t expect them to write a C++ clone, I understand this is their own language. But just a tiny modicum of reflection that people have spent 15+ years learning the syntaxes and behaviors of C-like languages would be so greatly appreciated. I mean, you see how Haskell is doing, and a lot of people blame that on the absolutely alien syntax to anything programmers are used to.<p>Yet, with Rust, everyone else with C-family backgrounds just seem to look at this, and go, &quot;oh yeah that makes sense.&quot; Boggles my mind.",1417144071
8669507,comment,8665912,8665912,0,0,BorisMelnik,,,"I run Ubuntu on the Toshiba Satelite P96X and man do I love this thing. Tore out the DVD drive and stuck another SSD inside which lightened the load and obviously added more storage. Also swapped the primary HDD with an SSD.<p>The rig is now 4-5 years old has 12GB RAM and a 2nd gen i5 in it and this thing FLIES. Photoshop, Dreamweaver, Skype, and tons of browser tabs it does not miss a beat. You can prob pick this version up for $3-400 or a new one for $7-800 I beleive they all come installed with Windows but this model very *nix friendly.",1417144019
8669506,comment,8668750,8668750,0,0,gumby,,,"That&#x27;s funny to see this -- I just saw Marvin yesterday.  He&#x27;s getting frail but still has that devilish sense of humor and deadpan delivery.",1417143987
8669505,comment,8668750,8669476,0,0,psbp,,,"And youtube, which is finally an iTunesU replacement now that it has background listening.",1417143967
8669504,comment,8669394,8669394,0,0,mhoad,,,"Consider this a friendly reminder that if 50% of your business comes from Facebook, SEO or pretty much any source which you don&#x27;t control entirely you should be doing everything you possibly can to fix that problem ASAP and ensure that you aren&#x27;t setting yourself up for a very nasty surprise one morning.<p>&quot;Fairness&quot; aside, be thankful in this instance that you are getting advance notice. I wouldn&#x27;t assume that you will always be as lucky in the future.",1417143940
8669503,comment,8667932,8668444,0,0,zingplex,,,"The site looks good but it will never compare the masterfully crafted demonstrated by Geocities Bootstrap",1417143911
8669502,comment,8669394,8669454,0,0,girvo,,,"<i>> Are those Facebook&#x27;s customers or yours?</i><p>They&#x27;re Facebook&#x27;s customers. That&#x27;s a simple one. Does this situation suck? You betcha, my own mother is going to be hit hard by this, but on the other hand Facebook doesn&#x27;t owe you anything, it&#x27;s their platform (which I have a large dislike for).<p>The problem is that any platform that a business could use to reach their customers where they hang-out will basically require a social network, a utility for the regular user to give them a reason to be there. Businesses marketing to them costs money everywhere else, so it makes sense that that would be the way of earning revenue the utility would target.<p>Basically, they may have gathered the likes, but the reason they can is because Facebook exists and makes itself useful for non-marketing reasons, for regular users. If a business wants to market to the users on there, then it makes sense they have to pay for it, in my opinion.",1417143890
8669501,comment,8668537,8668977,0,0,scott_s,,,"I felt no such freedom in grad school. I was constantly aware that I needed to write a cohesive dissertation, and that I needed to &quot;own&quot; it. This encourages students to continue working on a project just because it&#x27;s &quot;far enough&quot; along, even though the student may have concluded its actual utility is lower than other projects.<p>It also discouraged true, equal collaboration because the student must own that work enough to claim it as their own. Personally, I feel I have much more freedom not having the dissertation hanging over me head.",1417143842
8669500,comment,8668537,8669262,0,0,anologwintermut,,,"After you have tenure and a couple of grad students who believe in &quot;A PhD is one of the few opportunities in academia to do true&quot; ...",1417143821
8669498,comment,8669394,8669475,0,0,vmarsy,,,">I think that this stunt will increase Facebook&#x27;s profits in the short term, mainly because of businesses that have already invested in building their pages. Longer term, however, we&#x27;ll definitely see a shift to direct email marketing.<p>That&#x27;s right, nothing prevents current small businesses to post a last one paid facebook post telling the followers : &quot;Subscribe to our mailing list here to get the exclusive offers&quot;<p>But the key problems could be :<p>1 - People prefer browsing on Facebook than on their email client<p>2 - As a small business owner, creating posts on Facebook is easy, whereas creating nice emails that looks good isn&#x27;t as easy. Getting feedback on these offers (Facebook Likes+Comments vs. nothing) is also a main problem for email marketing",1417143786
8669497,comment,8669441,8669441,0,0,jeffmould,,,"Why not hire someone to run the company for you or at least handle the majority of day-to-day operations? Possibly promoting one of your existing employees into a leadership role or &quot;co-founder&quot; role if this is something you would consider.<p>I would be upfront with your employees now. Maybe one of them has an option you have overlooked completely. Also, if you are honest with them now, it may help with any potential outcome down the road (for example, if you do end up having to shut down it is not a complete surprise to them). Also, by opening up about it, you might consider posting more details about the company here. Who knows maybe there is someone here who would consider making the purchase or taking it over for you.<p>Just a couple thoughts. Good luck!",1417143735
8669496,comment,8668680,8669064,0,0,kazinator,,,"Restrict is a big hammer. You can work around aliasing suspicions simply by imagining you are programming a load-store machine whereby local variables are registers. You have some algorithm that works with several different objects, such as structures and arrays. You can help the compiler (and the reader!) by writing code that isn&#x27;t repeatedly dereferencing pointers, but which loads values into local variables.<p>Concrete example, doubly-linked list deletion, bad:<p><pre><code>  victim->prev->next = victim->next;\n  victim->next->prev = victim->prev;\n</code></pre>\nHere, the compiler doesn&#x27;t know whether the assignment to victim->prev->next clobbers victim->next, which is evaluated again in the second line. If you write it like this, you eliminate that concern:<p><pre><code>   node *prev = victim->prev, *next = victim->next;\n\n   next->prev = prev;\n   prev->next = next;\n</code></pre>\nThe assignments here do not interfere; the first line assigns to a &quot;prev&quot; structure member, and the next line doesn&#x27;t access any such thing; it uses the &quot;prev&quot; local variable which isn&#x27;t a structure member.<p>Caching in local variables is preferrable to using some C99 &quot;restrict&quot; voodoo that introduces undefined behavior.<p>In the case of the above linked list, where are you even going to stick &quot;restrict&quot;? There is only one incoming pointer, victim. Making that &quot;restrict&quot; doesn&#x27;t help. You need it in the actual structure declaration on the next and prev pointers. Yuck, what?",1417143733
8669495,comment,8668680,8668680,0,0,blt,,,"C was built as a replacement for assembly programming.  It seems low-level today but it does a huge amount of work for you.  Call stack manipulation, computing offsets for nested struct members, converting arbitrarily complex conditionals into the right branching instructions, coalescing a sequence of expressively named intermediate values into the same machine register... these are the things C does for you.  I&#x27;ve never written a serious assembly program but I can imagine how annoying it is to do all that stuff manually.  It would be easy to screw up.<p>I think C has been so successful because it made really good decisions about what to do for you.  It eliminated a lot of those busy-work programming tasks without taking away your fundamental control of the machine.  Automatic array bounds checking, garbage collection, ... they would have been unthinkable for the original goals of C.  The stupid warts are annoying but I think C made fundamentally sound choices of what to do automatically and what to leave up to the programmer.<p>We all talk about modular, abstract code, but back in the day &quot;modular&quot; meant &quot;use the same calling convention for every int(int, int) function&quot;, not &quot;dependency injection&quot;.  From that perspective, C must have felt like a huge leap in modularity and abstraction from assembler.",1417143726
8669493,story,,,6,0,rahulvarshneya,"Before You Quit Your Job to Become an Entrepreneur, Read This",http://www.inc.com/rahul-varshneya/before-you-quit-your-job-to-become-an-entrepreneur-read-this.html,,1417143674
8669492,comment,8668843,8669406,0,0,playhard,,,"Thanks for sharing. The joke was really funny!",1417143674
8669491,comment,8669394,8669475,0,0,girvo,,,"<i>> It&#x27;s nothing short of a scam.</i><p>How&#x27;s that supposed to work? Frankly, Facebook is a business that doesn&#x27;t have your small business&#x27; interests at heart. Never has, never will. We&#x27;ve shouted from the roof-tops to never build solely on a third-party platform, and now non-tech businesses are going to learn that lesson. But, this is Facebook; they&#x27;re not a benevolent entity, and they don&#x27;t owe you or your business squat. Saying they&#x27;re &quot;double-dipping&quot; or are a &quot;scam&quot; is ludicrous.",1417143628
8669490,comment,8667087,8668672,0,0,jclarkcom,,,"> The simplest test I can think of (`docker run busybox true`) takes 0.38s wall clock, pretty far out from your statement even when allowing for it stopping as well.<p>Good to know.  The milliseconds claim is on their website, I took it for granted and never timed it.  I guess they consider anything under 1 second as &quot;milliseconds&quot; :)  But actually the stopping time could be a factor.<p>When the process executable path is located on a networked filesystem - cached data for that file must be thrown away by the OS once the file lock is released (which happens when the process exits).  So you will actually speed up subsequent launches of the process if you delay your shutdown a little bit such that the file lock is held and thus the system cache for that file is not thrown away.  They probably aren&#x27;t doing this though...",1417143623
